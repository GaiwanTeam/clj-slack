{"client_msg_id":"2335d78a-a3e0-4933-a4c4-c151647038c6","type":"message","text":"Like, the names of our packages aren't being rewritten- just the ones from minecraft's own package.","user":"U4U7PHRL7","ts":"1630281089.216000","team":"T03RZGPFR","edited":{"user":"U4U7PHRL7","ts":"1630281093.000000"},"blocks":[{"type":"rich_text","block_id":"RKPX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like, the names of our packages aren't being rewritten- just the ones from minecraft's own package."}]}]}]}
{"client_msg_id":"79d1c519-8157-4658-89ca-80116eb5fa6c","type":"message","text":"Because we can get it to work with AOT, and the high-level structure of the packages does seem to survive into the runtime. The trouble at this point really does just come down to how `:import` is implemented.","user":"U4U7PHRL7","ts":"1630281042.215600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"f93s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because we can get it to work with AOT, and the high-level structure of the packages does seem to survive into the runtime. The trouble at this point really does just come down to how "},{"type":"text","text":":import","style":{"code":true}},{"type":"text","text":" is implemented."}]}]}]}
{"client_msg_id":"8256a39a-8e27-43ff-b78b-5a784a54a0f5","type":"message","text":"Hmm... their comments about how the obfuscator works don't line up with the workflow we've been using.","user":"U4U7PHRL7","ts":"1630280833.214000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ftNe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm... their comments about how the obfuscator works don't line up with the workflow we've been using."}]}]}]}
{"client_msg_id":"ce4e9022-8c8b-4e06-8f9b-76fe416ef100","type":"message","text":"(I had forgotten about that post until you mentioned the obfuscator but I remember being fascinated by it at the time -- OMG nine years ago!)","user":"U04V70XH6","ts":"1630280727.213400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"jhja","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I had forgotten about that post until you mentioned the obfuscator but I remember being fascinated by it at the time -- OMG nine years ago!)"}]}]}]}
{"client_msg_id":"44a0e716-a8ac-4bd1-bc42-2a8859c61aa4","type":"message","text":"There are a handful of Clojure projects out there modding Minecraft. Don't know if they've all gone down the same path but I'm sure they've all had to deal with working around the obfuscator in \"entertaining\" ways :slightly_smiling_face:","user":"U04V70XH6","ts":"1630280682.212200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"j8=tj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are a handful of Clojure projects out there modding Minecraft. Don't know if they've all gone down the same path but I'm sure they've all had to deal with working around the obfuscator in \"entertaining\" ways "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]}
{"client_msg_id":"62bba51f-e1d0-48b2-a6ca-7d1a1a265478","type":"message","text":"We're actually at the point now where if we AOT then everything works as long as we use fully qualified class names everywhere.","user":"U4U7PHRL7","ts":"1630280626.211100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"JdH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We're actually at the point now where if we AOT then everything works as long as we use fully qualified class names everywhere."}]}]}]}
{"client_msg_id":"fb1b26c1-f1c8-4950-83f4-42a9b78d0ea1","type":"message","text":"Actually from that last bit what it sounds like is they used the name maps to generate a file that carries the translations into runtime.","user":"U4U7PHRL7","ts":"1630280553.210500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"VTr0a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually from that last bit what it sounds like is they used the name maps to generate a file that carries the translations into runtime."}]}]}]}
{"client_msg_id":"04404a59-dc0f-44f8-b3ee-a5093c79620c","type":"message","text":"(TL;DR: use a Java stub and have it call into Clojure directly via Clojure's Java API and avoid AOT)","user":"U04V70XH6","ts":"1630280500.209800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"TGWR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(TL;DR: use a Java stub and have it call into Clojure directly via Clojure's Java API and avoid AOT)"}]}]}]}
{"client_msg_id":"32e2cc86-e127-4795-9ce7-ed49d67d41a4","type":"message","text":"&gt; The point is that I used Clojure to generate Java source code, on compile time (the type of metaprogramming you always have the option to use, no matter the platform or base language you are based on).\n&gt; This is done by the <http:\/\/github.com\/danielribeiro\/conjcraft\/blob\/master\/create_constants.clj|create_constants.clj> script, which actually imports the de-obfuscated code and generates a Java file mapping all block, item and material names to their actual objects (the result cannot be published without breaking both Minecraft and MCP licenses, but reading the code you can get an idea of what the result looks like).\nOh dear god...","user":"U4U7PHRL7","ts":"1630280480.209500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"toYWr","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"The point is that I used Clojure to generate Java source code, on compile time (the type of metaprogramming you always have the option to use, no matter the platform or base language you are based on).\nThis is done by the "},{"type":"link","url":"http:\/\/github.com\/danielribeiro\/conjcraft\/blob\/master\/create_constants.clj","text":"create_constants.clj"},{"type":"text","text":" script, which actually imports the de-obfuscated code and generates a Java file mapping all block, item and material names to their actual objects (the result cannot be published without breaking both Minecraft and MCP licenses, but reading the code you can get an idea of what the result looks like)."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Oh dear god..."}]}]}]}
{"client_msg_id":"bf28ad4b-94ea-43ab-aed2-2a25bc25bf03","type":"message","text":"They talk about alternatives to trying to use AOT -- because of the obfuscator.","user":"U04V70XH6","ts":"1630280435.208600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"bONEL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They talk about alternatives to trying to use AOT -- because of the obfuscator."}]}]}]}
{"client_msg_id":"c63d9ac2-e8b0-43bd-87de-89394239348a","type":"message","text":"<https:\/\/metaphysicaldeveloper.wordpress.com\/2012\/04\/20\/conjcraft-a-minecraft-mod-implemented-in-clojure\/>","user":"U04V70XH6","ts":"1630280409.207900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"BrS","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/metaphysicaldeveloper.wordpress.com\/2012\/04\/20\/conjcraft-a-minecraft-mod-implemented-in-clojure\/"}]}]}]}
{"client_msg_id":"d65dd470-1ce8-481a-8a4e-010cb7b7bc75","type":"message","text":"So, if you want your code to link against stock minecraft you have to deal with its obfuscated names.","user":"U4U7PHRL7","ts":"1630280225.206600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"YisW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, if you want your code to link against stock minecraft you have to deal with its obfuscated names."}]}]}]}
{"client_msg_id":"13b823e5-3828-4d15-bb18-1029b66e7485","type":"message","text":"Minecraft is distributed as an obfuscated jar.","user":"U4U7PHRL7","ts":"1630280189.206000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"E1XVs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Minecraft is distributed as an obfuscated jar."}]}]}]}
{"client_msg_id":"97c2ccfe-082d-42c2-9811-1bd056771e8b","type":"message","text":"And that requires obfuscated class names why?","user":"U04V70XH6","ts":"1630280175.205600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"5EEfB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And that requires obfuscated class names why?"}]}]}]}
{"client_msg_id":"b74bd33a-60ad-4d8b-9e93-2bda6a0b4f18","type":"message","text":"We're dealing with minecraft","user":"U4U7PHRL7","ts":"1630280145.205300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"aQ+m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We're dealing with minecraft"}]}]}]}
{"client_msg_id":"ee10edd4-42dc-4b4b-aa6c-099ec8e21674","type":"message","text":"I think my suggestion would be \"Don't do that!\" -- _why_ are y'all using a tool to rewrite Java class names in the first place? What mad, paranoid world are your bosses living in?","user":"U04V70XH6","ts":"1630280029.205000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"6NNQ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think my suggestion would be \"Don't do that!\" -- "},{"type":"text","text":"why","style":{"italic":true}},{"type":"text","text":" are y'all using a tool to rewrite Java class names in the first place? What mad, paranoid world are your bosses living in?"}]}]}]}
{"client_msg_id":"2b7573e5-1896-43ca-b712-066bc3d2b50d","type":"message","text":"Nope","user":"U0NCTKEV8","ts":"1630276281.203300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"cejD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nope"}]}]}],"reactions":[{"name":"confused","users":["U012RPAAR0E","U4U7PHRL7"],"count":2}]}
{"client_msg_id":"993964b8-2f01-414e-8cad-d677c44563d0","type":"message","text":"So, we (myself and another dev) have got a bit of a conundrum. We're dealing with obfuscated java, and the tooling we're using to apply class name remappings seems to be tripping over how clojure `:import`s work. We're AOTing everything before we try to re-obfuscate, and the tool is picking up the actual references we're making to the obfuscated classes in the AOT'd code, but clojure's compiler is also emitting code which sets up the namespaces by passing strings to a class loader. Those strings, naturally, are being ignored by the tool and the final jar throws errors in production by trying to load the de-obfuscated names. Does anyone have suggestions for how we could deal with this? Is there a compiler flag, perhaps, that might help?","user":"U4U7PHRL7","ts":"1630274880.200700","team":"T03RZGPFR","edited":{"user":"U4U7PHRL7","ts":"1630274963.000000"},"blocks":[{"type":"rich_text","block_id":"pXoCX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, we (myself and another dev) have got a bit of a conundrum. We're dealing with obfuscated java, and the tooling we're using to apply class name remappings seems to be tripping over how clojure "},{"type":"text","text":":import","style":{"code":true}},{"type":"text","text":"s work. We're AOTing everything before we try to re-obfuscate, and the tool is picking up the actual references we're making to the obfuscated classes in the AOT'd code, but clojure's compiler is also emitting code which sets up the namespaces by passing strings to a class loader. Those strings, naturally, are being ignored by the tool and the final jar throws errors in production by trying to load the de-obfuscated names. Does anyone have suggestions for how we could deal with this? Is there a compiler flag, perhaps, that might help?"}]}]}]}
{"subscribed":false,"reply_users":["U2FRKM4TW","U0WL6FA77","U0ETXRFEW","U09LZR36F"],"attachments":[{"color":"24292f","fallback":"PEZ\/pirate-lang","fields":[{"title":"Language","value":"Clojure","short":true},{"title":"Last updated","value":"13 minutes ago","short":true}],"is_app_unfurl":true,"title":"PEZ\/pirate-lang","id":1,"app_unfurl_url":"https:\/\/github.com\/PEZ\/pirate-lang","text":"Zero Install Calva + Gitpod + VNC + deps.edn demo project","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630269511.190800","reply_users_count":4,"edited":{"user":"U0ETXRFEW","ts":"1630272330.000000"},"ts":"1630269511.190800","team":"T03RZGPFR","client_msg_id":"18684a9b-ca73-4529-8752-873efe882708","blocks":[{"type":"rich_text","block_id":"Z2=o6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I put together a silly example of a zero install desktop app dev environment with full Interactive Coding. Please give it a spin, anyone. It is pretty amazing what we can do in the browser these days. I think I\u2019ll add a "},{"type":"text","text":"cljfx","style":{"code":true}},{"type":"text","text":" example to it next. "},{"type":"link","url":"https:\/\/github.com\/PEZ\/pirate-lang"},{"type":"text","text":" Thanks, "},{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":", for unblocking me when I was stuck!  "},{"type":"emoji","name":"gratitude"},{"type":"text","text":" "},{"type":"emoji","name":"gratitude"},{"type":"text","text":" "},{"type":"emoji","name":"heart"},{"type":"text","text":" "},{"type":"emoji","name":"gratitude"},{"type":"text","text":" "},{"type":"emoji","name":"gratitude"},{"type":"text","text":"\nUPDATE: 1-minute video demo in the thread."}]}]}],"is_locked":false,"user":"U0ETXRFEW","reply_count":27,"reactions":[{"name":"+1","users":["U0WL6FA77"],"count":1}],"latest_reply":"1630276029.202400","text":"I put together a silly example of a zero install desktop app dev environment with full Interactive Coding. Please give it a spin, anyone. It is pretty amazing what we can do in the browser these days. I think I\u2019ll add a `cljfx` example to it next. <https:\/\/github.com\/PEZ\/pirate-lang> Thanks, <@U2FRKM4TW>, for unblocking me when I was stuck!  :gratitude: :gratitude: :heart: :gratitude: :gratitude:\nUPDATE: 1-minute video demo in the thread."}
{"subscribed":false,"reply_users":["U2FRKM4TW","U0WL6FA77","U0ETXRFEW","U09LZR36F"],"attachments":[{"color":"24292f","fallback":"PEZ\/pirate-lang","fields":[{"title":"Language","value":"Clojure","short":true},{"title":"Last updated","value":"13 minutes ago","short":true}],"is_app_unfurl":true,"title":"PEZ\/pirate-lang","id":1,"app_unfurl_url":"https:\/\/github.com\/PEZ\/pirate-lang","text":"Zero Install Calva + Gitpod + VNC + deps.edn demo project","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630269511.190800","reply_users_count":4,"edited":{"user":"U0ETXRFEW","ts":"1630272330.000000"},"ts":"1630269511.190800","team":"T03RZGPFR","client_msg_id":"18684a9b-ca73-4529-8752-873efe882708","blocks":[{"type":"rich_text","block_id":"Z2=o6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I put together a silly example of a zero install desktop app dev environment with full Interactive Coding. Please give it a spin, anyone. It is pretty amazing what we can do in the browser these days. I think I\u2019ll add a "},{"type":"text","text":"cljfx","style":{"code":true}},{"type":"text","text":" example to it next. "},{"type":"link","url":"https:\/\/github.com\/PEZ\/pirate-lang"},{"type":"text","text":" Thanks, "},{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":", for unblocking me when I was stuck!  "},{"type":"emoji","name":"gratitude"},{"type":"text","text":" "},{"type":"emoji","name":"gratitude"},{"type":"text","text":" "},{"type":"emoji","name":"heart"},{"type":"text","text":" "},{"type":"emoji","name":"gratitude"},{"type":"text","text":" "},{"type":"emoji","name":"gratitude"},{"type":"text","text":"\nUPDATE: 1-minute video demo in the thread."}]}]}],"is_locked":false,"user":"U0ETXRFEW","reply_count":27,"reactions":[{"name":"+1","users":["U0WL6FA77"],"count":1}],"latest_reply":"1630276029.202400","text":"I put together a silly example of a zero install desktop app dev environment with full Interactive Coding. Please give it a spin, anyone. It is pretty amazing what we can do in the browser these days. I think I\u2019ll add a `cljfx` example to it next. <https:\/\/github.com\/PEZ\/pirate-lang> Thanks, <@U2FRKM4TW>, for unblocking me when I was stuck!  :gratitude: :gratitude: :heart: :gratitude: :gratitude:\nUPDATE: 1-minute video demo in the thread."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630269617.191000","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"8c36b695-5842-4ab6-9e52-c5b5ec53a4b8","blocks":[{"type":"rich_text","block_id":"FvfF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Shared it with a friend. His response: \"Is this year 3000 already?\""}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"rocket","users":["U0ETXRFEW"],"count":1}],"text":"Shared it with a friend. His response: \"Is this year 3000 already?\""}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630269759.191200","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"2752d0a7-bf9d-467d-a3e1-07725bcc6c8a","blocks":[{"type":"rich_text","block_id":"oHI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you can add a link to already working file to edit it without write access, this could be great demo."}]}]}],"user":"U0WL6FA77","text":"If you can add a link to already working file to edit it without write access, this could be great demo."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630269798.191400","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"dd21df33-45bf-4767-8907-0f52010c14de","blocks":[{"type":"rich_text","block_id":"hFCs+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"PS I don\u2019t know how gitpod work"}]}]}],"user":"U0WL6FA77","text":"PS I don\u2019t know how gitpod work"}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630269947.191800","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"ff24015a-43ee-42c9-a920-6a2a31ac26ca","blocks":[{"type":"rich_text","block_id":"15T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can already do that! Just follow the link in the README, and it will allow you to edit anything."}]}]}],"user":"U2FRKM4TW","text":"You can already do that! Just follow the link in the README, and it will allow you to edit anything."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270024.192000","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"23298e92-c895-4e6c-abff-d6efe5b9190d","blocks":[{"type":"rich_text","block_id":"9yc","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0WL6FA77"},{"type":"text","text":", click the link at step 1 under "},{"type":"text","text":"Usage","style":{"bold":true}},{"type":"text","text":" and it will open in a workspace with write access. Yeah, like "},{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":" said."}]}]}],"user":"U0ETXRFEW","text":"<@U0WL6FA77>, click the link at step 1 under *Usage* and it will open in a workspace with write access. Yeah, like <@U2FRKM4TW> said."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270038.192200","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"5987a637-c67b-4305-86aa-e0c7ae982452","blocks":[{"type":"rich_text","block_id":"tD+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can\u2019t. I don\u2019t have account in gitpod."}]}]}],"user":"U0WL6FA77","text":"I can\u2019t. I don\u2019t have account in gitpod."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270070.192400","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"8f4df2ed-306e-4055-9008-f74b88be3ed6","blocks":[{"type":"rich_text","block_id":"+8So","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you have a Github account, you just log in with that option."}]}]}],"user":"U0ETXRFEW","text":"If you have a Github account, you just log in with that option."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270109.192600","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"c5aa01f7-cbed-48bc-8913-e57f93db8453","blocks":[{"type":"rich_text","block_id":"yDbe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I should probably update the README some. "},{"type":"emoji","name":"smiley"}]}]}],"user":"U0ETXRFEW","text":"I should probably update the README some. :smiley:"}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270159.192800","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"593bed1f-224b-47af-ad15-2cc3342125c8","blocks":[{"type":"rich_text","block_id":"+Hq1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you can make people to try this without making account in gitpod, then more people can be interested in. Just trying to help with uninvited advices "},{"type":"emoji","name":"wink"}]}]}],"user":"U0WL6FA77","text":"If you can make people to try this without making account in gitpod, then more people can be interested in. Just trying to help with uninvited advices :wink:"}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270241.193000","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"83b24fa8-93a9-4239-8d60-230a3b23d09e","blocks":[{"type":"rich_text","block_id":"qpi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For me it is blocker. I don\u2019t want to create account there to try what it is."}]}]}],"user":"U0WL6FA77","text":"For me it is blocker. I don\u2019t want to create account there to try what it is."}
{"type":"message","thread_ts":"1630269511.190800","edited":{"user":"U2FRKM4TW","ts":"1630270332.000000"},"ts":"1630270307.193200","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"417567a7-66a7-4d5d-857f-24ba358afc35","blocks":[{"type":"rich_text","block_id":"PfGw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You "},{"type":"text","text":"don't","style":{"italic":true}},{"type":"text","text":" create an account there - you allow it to access your email through GitHub's OAuth. Or GitLab, or something else that GitPod supports.\nI imagine not having "},{"type":"text","text":"any","style":{"italic":true}},{"type":"text","text":" form of authorization (what I think you mean) is a no-go for GitPod - imagine how bots could thrive otherwise."}]}]}],"user":"U2FRKM4TW","text":"You _don't_ create an account there - you allow it to access your email through GitHub's OAuth. Or GitLab, or something else that GitPod supports.\nI imagine not having _any_ form of authorization (what I think you mean) is a no-go for GitPod - imagine how bots could thrive otherwise."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270397.193600","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"d91ee0e9-c651-4846-a65c-d8abefc242a7","blocks":[{"type":"rich_text","block_id":"7TNS","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"You\u00a0don\u2019t\u00a0create an account there - you allow it to access your email through GitHub\u2019s OAuth. Or GitLab, or something else that GitPod supports."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThis is what I am calling \u201ccreate an account\u201d "},{"type":"emoji","name":"wink"},{"type":"text","text":"\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"I imagine not having\u00a0any\u00a0form of authorization (what I think you mean) is a no-go for GitPod - imagine how bots could thrive otherwise.\u00a0(edited)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nSorry then. I don\u2019t know how GitPod works."}]}]}],"user":"U0WL6FA77","text":"&gt; You\u00a0don\u2019t\u00a0create an account there - you allow it to access your email through GitHub\u2019s OAuth. Or GitLab, or something else that GitPod supports.\nThis is what I am calling \u201ccreate an account\u201d :wink:\n\n&gt; I imagine not having\u00a0any\u00a0form of authorization (what I think you mean) is a no-go for GitPod - imagine how bots could thrive otherwise.\u00a0(edited)\nSorry then. I don\u2019t know how GitPod works."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270517.193800","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"ef95e4dc-3c13-4db5-b517-89d203c2ad89","blocks":[{"type":"rich_text","block_id":"Mllhu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Basically, they run your code for you, on their own infrastructure. Your browser serves just as an editor and a way to input\/output data."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"+1","users":["U0WL6FA77"],"count":1}],"text":"Basically, they run your code for you, on their own infrastructure. Your browser serves just as an editor and a way to input\/output data."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270628.194100","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"53b4c7ff-25e1-4d50-9dcb-fec7acfb8c3f","blocks":[{"type":"rich_text","block_id":"V0T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh I see the issue now. I thought it is webrowser js script to edit files."}]}]}],"user":"U0WL6FA77","text":"Oh I see the issue now. I thought it is webrowser js script to edit files."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630270691.194400","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"54804f56-5636-46d5-8316-2c171574d99b","blocks":[{"type":"rich_text","block_id":"bFaf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The in-browser editing\/creating of an app is the whole point with the example repo."}]}]}],"user":"U0ETXRFEW","text":"The in-browser editing\/creating of an app is the whole point with the example repo."}
{"type":"message","display_as_bot":false,"thread_ts":"1630269511.190800","ts":"1630271813.194600","parent_user_id":"U0ETXRFEW","files":[{"thumb_video":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02CHSQ9ZL6-599a99f44a\/gitpod-vnc-clojure-swing_thumb_video.jpeg","editable":false,"is_external":false,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02CHSQ9ZL6\/download\/gitpod-vnc-clojure-swing.mp4","name":"gitpod-vnc-clojure-swing.mp4","permalink":"https:\/\/clojurians.slack.com\/files\/U0ETXRFEW\/F02CHSQ9ZL6\/gitpod-vnc-clojure-swing.mp4","username":"","mode":"hosted","thumb_video_h":1896,"created":1630271776,"display_as_bot":false,"mimetype":"video\/mp4","size":43664367,"title":"gitpod-vnc-clojure-swing.mp4","media_display_type":"video","thumb_video_w":2812,"is_public":true,"id":"F02CHSQ9ZL6","external_type":"","public_url_shared":false,"filetype":"mp4","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02CHSQ9ZL6\/gitpod-vnc-clojure-swing.mp4","pretty_type":"MPEG 4 Video","has_rich_preview":false,"timestamp":1630271776,"user":"U0ETXRFEW","permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02CHSQ9ZL6-ee5db9ccf3"}],"blocks":[{"type":"rich_text","block_id":"qWa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here\u2019s a screen recording for people who don\u2019t want to click the SIgn-up with Github button. "},{"type":"emoji","name":"smiley"}]}]}],"user":"U0ETXRFEW","upload":false,"text":"Here\u2019s a screen recording for people who don\u2019t want to click the SIgn-up with Github button. :smiley:"}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630272611.194900","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"244ed257-2540-4f43-96ae-fdb9cbd21fbe","blocks":[{"type":"rich_text","block_id":"e7bi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nice, it really looks like VSC"}]}]}],"user":"U0WL6FA77","text":"nice, it really looks like VSC"}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630272645.195100","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"51e2866e-a386-47f9-a744-ccf14ee56ffb","blocks":[{"type":"rich_text","block_id":"4E9d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because it is. :D But in the browser."}]}]}],"user":"U2FRKM4TW","text":"Because it is. :D But in the browser."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630273348.195300","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"6db496b1-f9f4-439e-b0d6-15c940d3abff","blocks":[{"type":"rich_text","block_id":"C+MC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The swing app to the right is displayed using VNC, The VS Code + Calva part to the left is really VS Code in the browser, with a cloud virtual Linux box with full root access  backing it. That\u2019s where the VNC server is running too."}]}]}],"user":"U0ETXRFEW","reactions":[{"name":"+1","users":["U0WL6FA77"],"count":1}],"text":"The swing app to the right is displayed using VNC, The VS Code + Calva part to the left is really VS Code in the browser, with a cloud virtual Linux box with full root access  backing it. That\u2019s where the VNC server is running too."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630274876.200500","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"9b014d36-b055-4b29-8a2b-1bcbff187e83","blocks":[{"type":"rich_text","block_id":"ieRVi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I know this is stupid, but, is there a way to gitpod without signing up\/in?"}]}]}],"user":"U09LZR36F","text":"I know this is stupid, but, is there a way to gitpod without signing up\/in?"}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630275084.201100","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"32a12811-f197-402b-b11d-8b05739b9a70","blocks":[{"type":"rich_text","block_id":"utbZZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's exactly what kwladyka and I discussed above in this thread. :) Doesn't seem like it, and IMO wouldn't make sense for such a way to exist."}]}]}],"user":"U2FRKM4TW","text":"That's exactly what kwladyka and I discussed above in this thread. :) Doesn't seem like it, and IMO wouldn't make sense for such a way to exist."}
{"attachments":[{"thumb_width":204,"thumb_height":240,"service_name":"Gitpod Community","title_link":"https:\/\/community.gitpod.io\/t\/request-trial-for-gitpod-without-github-login\/636","fallback":"Gitpod Community: Request:Trial for Gitpod without Github login","from_url":"https:\/\/community.gitpod.io\/t\/request-trial-for-gitpod-without-github-login\/636","title":"Request:Trial for Gitpod without Github login","ts":1565457105,"id":1,"thumb_url":"https:\/\/community.gitpod.io\/uploads\/default\/original\/2X\/4\/4cfe88cf2b5a748b624fca9f50b781c5cc018d29.png","service_icon":"https:\/\/community.gitpod.io\/uploads\/default\/optimized\/2X\/4\/4cfe88cf2b5a748b624fca9f50b781c5cc018d29_2_180x180.png","original_url":"https:\/\/community.gitpod.io\/t\/request-trial-for-gitpod-without-github-login\/636","text":"After making 10 Gitpod videos in a playlist <https:\/\/www.youtube.com\/playlist?list=PL57Dnr1H_egv6ieRrE_rKpDnsDNbFxhK9> I am kind of surprised that Gitpod isn\u2019t much better known (The videos are only getting a few hits). I think the entry screen Github login might be scaring people away. While looking for a Cloud9 replacement I shared my Github with about 10 apps and just went through and unshared most of them. I don\u2019t like sharing my Github. Would it be possible on the Gitpod login screen to giv..."}],"type":"message","thread_ts":"1630269511.190800","ts":"1630275184.201300","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"4a571fce-b354-4cca-bc70-103148867e5e","blocks":[{"type":"rich_text","block_id":"eq4","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/community.gitpod.io\/t\/request-trial-for-gitpod-without-github-login\/636"}]}]}],"user":"U2FRKM4TW","text":"<https:\/\/community.gitpod.io\/t\/request-trial-for-gitpod-without-github-login\/636>"}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630275228.201600","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"5c82a6e1-4aef-48af-92c6-41a2b3e8e469","blocks":[{"type":"rich_text","block_id":"mR\/\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, ha! "},{"type":"emoji","name":"smile"}]}]}],"user":"U09LZR36F","text":"Oh, ha! :smile:"}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630275233.201800","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"40a1b4f9-7204-4d4b-b88e-eb7287665998","blocks":[{"type":"rich_text","block_id":"plHCP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry, it's late and I am lazy "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U09LZR36F","text":"Sorry, it's late and I am lazy :slightly_smiling_face:"}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630275370.202000","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"c011660e-4384-48c8-a128-390de7769dc7","blocks":[{"type":"rich_text","block_id":"mP8bk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Personally","style":{"italic":true}},{"type":"text","text":" I think a solution to that is captcha."}]}]}],"user":"U09LZR36F","text":"_Personally_ I think a solution to that is captcha."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630275378.202200","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"e367ce0a-521e-4df2-a9ac-f0f5c6a9290e","blocks":[{"type":"rich_text","block_id":"g=at","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I hate captcha, but this is exactly what it is for."}]}]}],"user":"U09LZR36F","text":"I hate captcha, but this is exactly what it is for."}
{"type":"message","thread_ts":"1630269511.190800","ts":"1630276029.202400","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"1a1a6342-d992-4cc0-ad87-a4c9ce2f0832","blocks":[{"type":"rich_text","block_id":"m6rw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have never analyzed this, but there are services that let you pass captcha challenges at scale. As long as you can get more money out of something than you have to spend on captcha, it's not a viable solution. Unless you want to get into arms race with such services and people that use them."}]}]}],"user":"U2FRKM4TW","text":"I have never analyzed this, but there are services that let you pass captcha challenges at scale. As long as you can get more money out of something than you have to spend on captcha, it's not a viable solution. Unless you want to get into arms race with such services and people that use them."}
{"type":"message","thread_ts":"1630252788.172800","edited":{"user":"U01KQ9EGU79","ts":"1630261816.000000"},"ts":"1630260589.183500","root":{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"},"client_msg_id":"59d6a505-2771-491c-a999-165ecdb4d57b","blocks":[{"type":"rich_text","block_id":"OezN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aha! "},{"type":"text","text":"sudo postfix start","style":{"code":true}},{"type":"text","text":" was a pretty easy solution making use of built-in macOS cli tools.\nNow I just need it to actually send something instead of just queue it."}]}]}],"user":"U01KQ9EGU79","reactions":[{"name":"+1","users":["UDHE6D287"],"count":1}],"subtype":"thread_broadcast","text":"Aha! `sudo postfix start` was a pretty easy solution making use of built-in macOS cli tools.\nNow I just need it to actually send something instead of just queue it."}
{"type":"message","thread_ts":"1630252788.172800","edited":{"user":"U01KQ9EGU79","ts":"1630261816.000000"},"ts":"1630260589.183500","root":{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"},"client_msg_id":"59d6a505-2771-491c-a999-165ecdb4d57b","blocks":[{"type":"rich_text","block_id":"OezN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aha! "},{"type":"text","text":"sudo postfix start","style":{"code":true}},{"type":"text","text":" was a pretty easy solution making use of built-in macOS cli tools.\nNow I just need it to actually send something instead of just queue it."}]}]}],"user":"U01KQ9EGU79","reactions":[{"name":"+1","users":["UDHE6D287"],"count":1}],"subtype":"thread_broadcast","text":"Aha! `sudo postfix start` was a pretty easy solution making use of built-in macOS cli tools.\nNow I just need it to actually send something instead of just queue it."}
{"subscribed":false,"reply_users":["U09LZR36F","U07S8JGF7","U35G2V78U","U050KSS8M"],"type":"message","thread_ts":"1630258047.181500","reply_users_count":4,"ts":"1630258047.181500","team":"T03RZGPFR","client_msg_id":"e3b115b1-7208-485d-90b1-fccf57a94a90","blocks":[{"type":"rich_text","block_id":"2MJF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyone have an example of how to debounce a function in clojure (sans cljs). I can't seem to find anything that doesn't assume a javascript runtime. I see some core.async channel examples but they seem to assume that you are debouncing input is another channel. (use case I have a file watcher that calls a function on modifications and I would like to debounce that call)."}]}]}],"is_locked":false,"user":"U35G2V78U","reply_count":8,"latest_reply":"1630277656.203600","text":"Anyone have an example of how to debounce a function in clojure (sans cljs). I can't seem to find anything that doesn't assume a javascript runtime. I see some core.async channel examples but they seem to assume that you are debouncing input is another channel. (use case I have a file watcher that calls a function on modifications and I would like to debounce that call)."}
{"subscribed":false,"reply_users":["U09LZR36F","U07S8JGF7","U35G2V78U","U050KSS8M"],"type":"message","thread_ts":"1630258047.181500","reply_users_count":4,"ts":"1630258047.181500","team":"T03RZGPFR","client_msg_id":"e3b115b1-7208-485d-90b1-fccf57a94a90","blocks":[{"type":"rich_text","block_id":"2MJF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyone have an example of how to debounce a function in clojure (sans cljs). I can't seem to find anything that doesn't assume a javascript runtime. I see some core.async channel examples but they seem to assume that you are debouncing input is another channel. (use case I have a file watcher that calls a function on modifications and I would like to debounce that call)."}]}]}],"is_locked":false,"user":"U35G2V78U","reply_count":8,"latest_reply":"1630277656.203600","text":"Anyone have an example of how to debounce a function in clojure (sans cljs). I can't seem to find anything that doesn't assume a javascript runtime. I see some core.async channel examples but they seem to assume that you are debouncing input is another channel. (use case I have a file watcher that calls a function on modifications and I would like to debounce that call)."}
{"type":"message","thread_ts":"1630258047.181500","ts":"1630258510.181800","parent_user_id":"U35G2V78U","team":"T03RZGPFR","client_msg_id":"72549b4e-5473-4896-8302-cc6288d21002","blocks":[{"type":"rich_text","block_id":"0zb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe the figwheel-main source has an example of this "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U09LZR36F","text":"I believe the figwheel-main source has an example of this :slightly_smiling_face:"}
{"attachments":[{"thumb_width":316,"thumb_height":316,"service_name":"Stack Overflow","title_link":"https:\/\/stackoverflow.com\/a\/20978973\/836738","fallback":"Stack Overflow: implementing debounce in Java","from_url":"https:\/\/stackoverflow.com\/a\/20978973\/836738","title":"implementing debounce in Java","id":1,"thumb_url":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded","service_icon":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a","original_url":"https:\/\/stackoverflow.com\/a\/20978973\/836738","text":"For some code I'm writing I could use a nice general implementation of debounce in Java. public interface Callback { public void call(Object arg); } class Debouncer implements Callback { pu..."}],"type":"message","thread_ts":"1630258047.181500","ts":"1630260428.182800","parent_user_id":"U35G2V78U","team":"T03RZGPFR","client_msg_id":"d0b6a405-ab48-4fb3-b3cd-01bbab979b62","blocks":[{"type":"rich_text","block_id":"foHL1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This seems like a fairly legit approach: "},{"type":"link","url":"https:\/\/stackoverflow.com\/a\/20978973\/836738"}]}]}],"user":"U07S8JGF7","text":"This seems like a fairly legit approach: <https:\/\/stackoverflow.com\/a\/20978973\/836738>"}
{"type":"message","thread_ts":"1630258047.181500","ts":"1630260659.183800","parent_user_id":"U35G2V78U","team":"T03RZGPFR","client_msg_id":"d4a4cd3c-9215-4480-9981-a77f165b4d96","blocks":[{"type":"rich_text","block_id":"QMnZu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The alternative I can think of is to keep an atom with a map of "},{"type":"text","text":"{:state :running|idle, :next-scheduled? true}","style":{"code":true}},{"type":"text","text":".\n\nOn every invocation you check the atom. If it\u2019s running, set "},{"type":"text","text":":next-scheduled? true","style":{"code":true}},{"type":"text","text":". After the fn runs, it sets "},{"type":"text","text":":running :idle, :next-scheduled? false","style":{"code":true}},{"type":"text","text":" , if "},{"type":"text","text":":next-scheduled?","style":{"code":true}},{"type":"text","text":" was previously true it runs itself one more time."}]}]}],"user":"U07S8JGF7","text":"The alternative I can think of is to keep an atom with a map of `{:state :running|idle, :next-scheduled? true}`.\n\nOn every invocation you check the atom. If it\u2019s running, set `:next-scheduled? true`. After the fn runs, it sets `:running :idle, :next-scheduled? false` , if `:next-scheduled?` was previously true it runs itself one more time."}
{"type":"message","thread_ts":"1630258047.181500","ts":"1630260823.184000","parent_user_id":"U35G2V78U","team":"T03RZGPFR","client_msg_id":"079b9bc3-a003-4b19-85a0-e2f3f695ac2a","blocks":[{"type":"rich_text","block_id":"YXyN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmm\u2026 On second thought, using a go-loop and a "},{"type":"text","text":"(chan 1)","style":{"code":true}},{"type":"text","text":" makes the most sense. Then you\u2019re only allowed to queue 1 task while the fn is running."}]}]}],"user":"U07S8JGF7","text":"Hmmm\u2026 On second thought, using a go-loop and a `(chan 1)` makes the most sense. Then you\u2019re only allowed to queue 1 task while the fn is running."}
{"type":"message","thread_ts":"1630258047.181500","ts":"1630260845.184200","parent_user_id":"U35G2V78U","team":"T03RZGPFR","client_msg_id":"c8af18e2-1baa-447b-8125-b0359e91e91f","blocks":[{"type":"rich_text","block_id":"BvaT0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can ape that with atoms, but a bound queue makes a ton of sense."}]}]}],"user":"U07S8JGF7","text":"You can ape that with atoms, but a bound queue makes a ton of sense."}
{"type":"message","thread_ts":"1630258047.181500","ts":"1630267691.185000","parent_user_id":"U35G2V78U","team":"T03RZGPFR","client_msg_id":"c1258e6e-c52b-45a2-84b1-25a4649b4924","blocks":[{"type":"rich_text","block_id":"ZJVfE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alright, I figured it out. Took a while before core.async clicked in my mind. Took a debounce channel in\/out example and wrapped it to take in a function and return a function"}]}]}],"user":"U35G2V78U","text":"Alright, I figured it out. Took a while before core.async clicked in my mind. Took a debounce channel in\/out example and wrapped it to take in a function and return a function"}
{"type":"message","display_as_bot":false,"thread_ts":"1630258047.181500","ts":"1630267713.185200","parent_user_id":"U35G2V78U","client_msg_id":"0f9b6262-92ae-431f-9db4-c28dfdd1c80e","files":[{"edit_link":"https:\/\/clojurians.slack.com\/files\/U35G2V78U\/F02DE6SSL48\/debounce_clj.clj\/edit","editable":true,"is_external":false,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02DE6SSL48\/download\/debounce_clj.clj","name":"debounce_clj.clj","permalink":"https:\/\/clojurians.slack.com\/files\/U35G2V78U\/F02DE6SSL48\/debounce_clj.clj","username":"","mode":"snippet","lines":40,"created":1630267712,"display_as_bot":false,"mimetype":"text\/plain","size":1059,"title":"debounce.clj","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-bracket\">(<\/span><span class=\"cm-keyword\">defn<\/span> <span class=\"cm-variable\">debounce-fn<\/span> <span class=\"cm-bracket\">[<\/span><span class=\"cm-variable\">in-fn<\/span> <span class=\"cm-variable\">ms<\/span><span class=\"cm-bracket\">]<\/span><\/pre><\/div>\n<div><pre>  <span class=\"cm-bracket\">(<\/span><span class=\"cm-keyword\">let<\/span> <span class=\"cm-bracket\">[<\/span><span class=\"cm-variable\">out<\/span> <span class=\"cm-bracket\">(<\/span><span class=\"cm-builtin\">chan<\/span><span class=\"cm-bracket\">)<\/span><\/pre><\/div>\n<div><pre>        <span class=\"cm-variable\">in<\/span> <span class=\"cm-bracket\">(<\/span><span class=\"cm-builtin\">chan<\/span><span class=\"cm-bracket\">)<\/span><span class=\"cm-bracket\">]<\/span><\/pre><\/div>\n<div><pre>&#8203;<\/pre><\/div>\n<div><pre>    <span class=\"cm-comment\">; consumer<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n","preview":"(defn debounce-fn [in-fn ms]\n  (let [out (chan)\n        in (chan)]\n\n    ; consumer","is_public":true,"id":"F02DE6SSL48","lines_more":35,"external_type":"","public_url_shared":false,"filetype":"clojure","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02DE6SSL48\/debounce_clj.clj","pretty_type":"Clojure","has_rich_preview":false,"timestamp":1630267712,"user":"U35G2V78U","preview_is_truncated":true,"permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02DE6SSL48-2269e08218"}],"user":"U35G2V78U","upload":true,"text":""}
{"attachments":[{"color":"24292f","fallback":"brunoV\/throttler","fields":[{"title":"Stars","value":"264","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"brunoV\/throttler","id":1,"app_unfurl_url":"https:\/\/github.com\/brunoV\/throttler","text":"Control the throughput of function calls and core.async channels","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630258047.181500","ts":"1630277656.203600","parent_user_id":"U35G2V78U","team":"T03RZGPFR","client_msg_id":"64fc5912-c394-4e7f-8aa6-bb66026a78f6","blocks":[{"type":"rich_text","block_id":"wvoDO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps worth a look "},{"type":"link","url":"https:\/\/github.com\/brunoV\/throttler"}]}]}],"user":"U050KSS8M","text":"Perhaps worth a look <https:\/\/github.com\/brunoV\/throttler>"}
{"type":"message","thread_ts":"1630252788.172800","edited":{"user":"U01KQ9EGU79","ts":"1630256818.000000"},"ts":"1630256729.178200","root":{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"},"client_msg_id":"af008f8b-4ed7-4721-9dd6-95b7ee34885c","blocks":[{"type":"rich_text","block_id":"sIOy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can\u2019t seem to figure out why the example from the readme doesn\u2019t work:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(with-open [conn (tarayo\/connect {:host \"localhost\" :port 25})]\n  (tarayo\/send! conn {:from \"alice@example.com\"\n                      :to \"bob@example.com\"\n                      :subject \"hello\"\n                      :body \"world\"}))\n;; => {:result :success, :code 250, :message \"250 OK\\n\"}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I get the following errors:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"3. Unhandled clojure.lang.Compiler$CompilerException\n   Error compiling src\/notifier\/core.clj at (80:1)\n   #:clojure.error{:phase :compile-syntax-check,\n                   :line 80,\n                   :column 1,\n                   :source\n                   \"\/Users\/main\/Code\/clojure\/ts-daily-update-notification\/src\/notifier\/core.clj\"}\n\n2. Caused by com.sun.mail.util.MailConnectException\n   Couldn't connect to host, port: localhost, 25; timeout -1\n\n1. Caused by java.net.ConnectException\n   Connection refused"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure how to make sense of this. Do I need an SMTP server?\nI\u2019m pretty sure I was able to use localhost when "},{"type":"text","text":"postal","style":{"code":true}},{"type":"text","text":" was working (which strangely now isn\u2019t)."}]}]}],"user":"U01KQ9EGU79","subtype":"thread_broadcast","text":"I can\u2019t seem to figure out why the example from the readme doesn\u2019t work:\n```(with-open [conn (tarayo\/connect {:host \"localhost\" :port 25})]\n  (tarayo\/send! conn {:from \"<mailto:alice@example.com|alice@example.com>\"\n                      :to \"<mailto:bob@example.com|bob@example.com>\"\n                      :subject \"hello\"\n                      :body \"world\"}))\n;; =&gt; {:result :success, :code 250, :message \"250 OK\\n\"}```\nI get the following errors:\n```3. Unhandled clojure.lang.Compiler$CompilerException\n   Error compiling src\/notifier\/core.clj at (80:1)\n   #:clojure.error{:phase :compile-syntax-check,\n                   :line 80,\n                   :column 1,\n                   :source\n                   \"\/Users\/main\/Code\/clojure\/ts-daily-update-notification\/src\/notifier\/core.clj\"}\n\n2. Caused by com.sun.mail.util.MailConnectException\n   Couldn't connect to host, port: localhost, 25; timeout -1\n\n1. Caused by java.net.ConnectException\n   Connection refused```\nNot sure how to make sense of this. Do I need an SMTP server?\nI\u2019m pretty sure I was able to use localhost when `postal` was working (which strangely now isn\u2019t)."}
{"type":"message","thread_ts":"1630252788.172800","edited":{"user":"U01KQ9EGU79","ts":"1630256818.000000"},"ts":"1630256729.178200","root":{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"},"client_msg_id":"af008f8b-4ed7-4721-9dd6-95b7ee34885c","blocks":[{"type":"rich_text","block_id":"sIOy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can\u2019t seem to figure out why the example from the readme doesn\u2019t work:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(with-open [conn (tarayo\/connect {:host \"localhost\" :port 25})]\n  (tarayo\/send! conn {:from \"alice@example.com\"\n                      :to \"bob@example.com\"\n                      :subject \"hello\"\n                      :body \"world\"}))\n;; => {:result :success, :code 250, :message \"250 OK\\n\"}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I get the following errors:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"3. Unhandled clojure.lang.Compiler$CompilerException\n   Error compiling src\/notifier\/core.clj at (80:1)\n   #:clojure.error{:phase :compile-syntax-check,\n                   :line 80,\n                   :column 1,\n                   :source\n                   \"\/Users\/main\/Code\/clojure\/ts-daily-update-notification\/src\/notifier\/core.clj\"}\n\n2. Caused by com.sun.mail.util.MailConnectException\n   Couldn't connect to host, port: localhost, 25; timeout -1\n\n1. Caused by java.net.ConnectException\n   Connection refused"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure how to make sense of this. Do I need an SMTP server?\nI\u2019m pretty sure I was able to use localhost when "},{"type":"text","text":"postal","style":{"code":true}},{"type":"text","text":" was working (which strangely now isn\u2019t)."}]}]}],"user":"U01KQ9EGU79","subtype":"thread_broadcast","text":"I can\u2019t seem to figure out why the example from the readme doesn\u2019t work:\n```(with-open [conn (tarayo\/connect {:host \"localhost\" :port 25})]\n  (tarayo\/send! conn {:from \"<mailto:alice@example.com|alice@example.com>\"\n                      :to \"<mailto:bob@example.com|bob@example.com>\"\n                      :subject \"hello\"\n                      :body \"world\"}))\n;; =&gt; {:result :success, :code 250, :message \"250 OK\\n\"}```\nI get the following errors:\n```3. Unhandled clojure.lang.Compiler$CompilerException\n   Error compiling src\/notifier\/core.clj at (80:1)\n   #:clojure.error{:phase :compile-syntax-check,\n                   :line 80,\n                   :column 1,\n                   :source\n                   \"\/Users\/main\/Code\/clojure\/ts-daily-update-notification\/src\/notifier\/core.clj\"}\n\n2. Caused by com.sun.mail.util.MailConnectException\n   Couldn't connect to host, port: localhost, 25; timeout -1\n\n1. Caused by java.net.ConnectException\n   Connection refused```\nNot sure how to make sense of this. Do I need an SMTP server?\nI\u2019m pretty sure I was able to use localhost when `postal` was working (which strangely now isn\u2019t)."}
{"client_msg_id":"0d4f4a95-5978-45d3-a9b7-ec9e8ff529b5","type":"message","text":"I am curious to know if the sequence abstraction approach of Clojure can be viewed as \u2018monadic\u2019, in a way that it enables composition of functions (eg. 100 functions on 1 data structure VS 10 functions on 10 data structures).\nOr should it be viewed as just an interface abstraction that makes use of upcast method calls?","user":"U01TFN2113P","ts":"1630253919.177700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"zD5Dr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am curious to know if the sequence abstraction approach of Clojure can be viewed as \u2018monadic\u2019, in a way that it enables composition of functions (eg. 100 functions on 1 data structure VS 10 functions on 10 data structures).\nOr should it be viewed as just an interface abstraction that makes use of upcast method calls?"}]}]}]}
{"type":"message","thread_ts":"1630252788.172800","ts":"1630253806.176100","root":{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"},"client_msg_id":"32e99130-85c6-4282-a0ac-b921f853c21c","blocks":[{"type":"rich_text","block_id":"Lb=N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wait, I think deleting .cpcache might have fixed it."}]}]}],"user":"U01KQ9EGU79","subtype":"thread_broadcast","text":"Wait, I think deleting .cpcache might have fixed it."}
{"type":"message","thread_ts":"1630252788.172800","ts":"1630253806.176100","root":{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"},"client_msg_id":"32e99130-85c6-4282-a0ac-b921f853c21c","blocks":[{"type":"rich_text","block_id":"Lb=N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wait, I think deleting .cpcache might have fixed it."}]}]}],"user":"U01KQ9EGU79","subtype":"thread_broadcast","text":"Wait, I think deleting .cpcache might have fixed it."}
{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"}
{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"}
{"type":"message","thread_ts":"1630252788.172800","ts":"1630253261.173100","parent_user_id":"U01KQ9EGU79","team":"T03RZGPFR","client_msg_id":"e856f7c3-384a-4bbb-aa73-8acdf57bcfba","blocks":[{"type":"rich_text","block_id":"Yu0nt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pretty sure you need this dependency to get that class nowadays:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"  com.sun.mail\/javax.mail {:mvn\/version \"1.6.2\"}"}]},{"type":"rich_text_section","elements":[]}]}],"user":"U04V70XH6","text":"Pretty sure you need this dependency to get that class nowadays:\n```  com.sun.mail\/javax.mail {:mvn\/version \"1.6.2\"}```\n"}
{"type":"message","thread_ts":"1630252788.172800","ts":"1630253394.173500","parent_user_id":"U01KQ9EGU79","team":"T03RZGPFR","client_msg_id":"18957d97-7cd6-4c94-98fe-2cf9d8e418b8","blocks":[{"type":"rich_text","block_id":"LIS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, something bad must\u2019ve happened."}]}]}],"user":"U01KQ9EGU79","text":"Ok, something bad must\u2019ve happened."}
{"type":"message","thread_ts":"1630252788.172800","edited":{"user":"U01KQ9EGU79","ts":"1630253497.000000"},"ts":"1630253450.173700","parent_user_id":"U01KQ9EGU79","team":"T03RZGPFR","client_msg_id":"0ebf22fa-69c1-445b-bcca-f79b0e4f7110","blocks":[{"type":"rich_text","block_id":"X0tDT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So far I\u2019ve had to install these two dependencies:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"        com.sun.activation\/javax.activation {:mvn\/version \"1.2.0\"}\n        com.sun.mail\/javax.mail {:mvn\/version \"1.6.2\"}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure what I\u2019ve changed, but I keep getting errors when trying to use either tarayo or postal.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Unhandled java.util.ServiceConfigurationError\n   jakarta.mail.Provider: com.sun.mail.imap.IMAPProvider not a subtype"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could I have done to screw up my dependencies this badly?"}]}]}],"user":"U01KQ9EGU79","text":"So far I\u2019ve had to install these two dependencies:\n```        com.sun.activation\/javax.activation {:mvn\/version \"1.2.0\"}\n        com.sun.mail\/javax.mail {:mvn\/version \"1.6.2\"}```\nNot sure what I\u2019ve changed, but I keep getting errors when trying to use either tarayo or postal.\n```1. Unhandled java.util.ServiceConfigurationError\n   jakarta.mail.Provider: com.sun.mail.imap.IMAPProvider not a subtype```\nWhat could I have done to screw up my dependencies this badly?"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/toyokumo\/tarayo\/blob\/13052b207e0cf5edfab65bc4d3fc7ba838821761\/project.clj | project.clj>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/toyokumo\/tarayo|toyokumo\/tarayo>","title":"<https:\/\/github.com\/toyokumo\/tarayo\/blob\/13052b207e0cf5edfab65bc4d3fc7ba838821761\/project.clj | project.clj>","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo\/blob\/13052b207e0cf5edfab65bc4d3fc7ba838821761\/project.clj#L11","text":"```\n                 [jakarta.mail\/jakarta.mail-api \"2.0.0\"]\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","ts":"1630253633.174200","parent_user_id":"U01KQ9EGU79","team":"T03RZGPFR","client_msg_id":"0344f4bb-adfc-4603-8b25-651c5c192349","blocks":[{"type":"rich_text","block_id":"Ytcy1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The project seems to use "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo\/blob\/13052b207e0cf5edfab65bc4d3fc7ba838821761\/project.clj#L11"},{"type":"text","text":" the Jakarta mail APIs which changed their package names in their 2.x.x release from "},{"type":"text","text":"javax.mail","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"jakarta.mail","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"UDHE6D287","text":"The project seems to use <https:\/\/github.com\/toyokumo\/tarayo\/blob\/13052b207e0cf5edfab65bc4d3fc7ba838821761\/project.clj#L11> the Jakarta mail APIs which changed their package names in their 2.x.x release from `javax.mail` to `jakarta.mail`."}
{"type":"message","thread_ts":"1630252788.172800","ts":"1630253738.175000","parent_user_id":"U01KQ9EGU79","team":"T03RZGPFR","client_msg_id":"eb1bf2f2-418f-49e1-8762-63cdf1597950","blocks":[{"type":"rich_text","block_id":"bxA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The weird thing is that I was working with this library yesterday and I had no problems."}]}]}],"user":"U01KQ9EGU79","text":"The weird thing is that I was working with this library yesterday and I had no problems."}
{"type":"message","thread_ts":"1630252788.172800","ts":"1630253806.176100","root":{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"},"client_msg_id":"32e99130-85c6-4282-a0ac-b921f853c21c","blocks":[{"type":"rich_text","block_id":"Lb=N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wait, I think deleting .cpcache might have fixed it."}]}]}],"user":"U01KQ9EGU79","subtype":"thread_broadcast","text":"Wait, I think deleting .cpcache might have fixed it."}
{"type":"message","thread_ts":"1630252788.172800","ts":"1630253880.177100","parent_user_id":"U01KQ9EGU79","team":"T03RZGPFR","client_msg_id":"eb2d760d-84ff-43ad-a805-ccf754d0efdc","blocks":[{"type":"rich_text","block_id":"7y=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Now I just have to figure out how to get a minimal smtp server going so I can send email to myself."}]}]}],"user":"U01KQ9EGU79","text":"Now I just have to figure out how to get a minimal smtp server going so I can send email to myself."}
{"type":"message","thread_ts":"1630252788.172800","edited":{"user":"U01KQ9EGU79","ts":"1630256818.000000"},"ts":"1630256729.178200","root":{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"},"client_msg_id":"af008f8b-4ed7-4721-9dd6-95b7ee34885c","blocks":[{"type":"rich_text","block_id":"sIOy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can\u2019t seem to figure out why the example from the readme doesn\u2019t work:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(with-open [conn (tarayo\/connect {:host \"localhost\" :port 25})]\n  (tarayo\/send! conn {:from \"alice@example.com\"\n                      :to \"bob@example.com\"\n                      :subject \"hello\"\n                      :body \"world\"}))\n;; => {:result :success, :code 250, :message \"250 OK\\n\"}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I get the following errors:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"3. Unhandled clojure.lang.Compiler$CompilerException\n   Error compiling src\/notifier\/core.clj at (80:1)\n   #:clojure.error{:phase :compile-syntax-check,\n                   :line 80,\n                   :column 1,\n                   :source\n                   \"\/Users\/main\/Code\/clojure\/ts-daily-update-notification\/src\/notifier\/core.clj\"}\n\n2. Caused by com.sun.mail.util.MailConnectException\n   Couldn't connect to host, port: localhost, 25; timeout -1\n\n1. Caused by java.net.ConnectException\n   Connection refused"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure how to make sense of this. Do I need an SMTP server?\nI\u2019m pretty sure I was able to use localhost when "},{"type":"text","text":"postal","style":{"code":true}},{"type":"text","text":" was working (which strangely now isn\u2019t)."}]}]}],"user":"U01KQ9EGU79","subtype":"thread_broadcast","text":"I can\u2019t seem to figure out why the example from the readme doesn\u2019t work:\n```(with-open [conn (tarayo\/connect {:host \"localhost\" :port 25})]\n  (tarayo\/send! conn {:from \"<mailto:alice@example.com|alice@example.com>\"\n                      :to \"<mailto:bob@example.com|bob@example.com>\"\n                      :subject \"hello\"\n                      :body \"world\"}))\n;; =&gt; {:result :success, :code 250, :message \"250 OK\\n\"}```\nI get the following errors:\n```3. Unhandled clojure.lang.Compiler$CompilerException\n   Error compiling src\/notifier\/core.clj at (80:1)\n   #:clojure.error{:phase :compile-syntax-check,\n                   :line 80,\n                   :column 1,\n                   :source\n                   \"\/Users\/main\/Code\/clojure\/ts-daily-update-notification\/src\/notifier\/core.clj\"}\n\n2. Caused by com.sun.mail.util.MailConnectException\n   Couldn't connect to host, port: localhost, 25; timeout -1\n\n1. Caused by java.net.ConnectException\n   Connection refused```\nNot sure how to make sense of this. Do I need an SMTP server?\nI\u2019m pretty sure I was able to use localhost when `postal` was working (which strangely now isn\u2019t)."}
{"type":"message","thread_ts":"1630252788.172800","ts":"1630258675.182000","parent_user_id":"U01KQ9EGU79","team":"T03RZGPFR","client_msg_id":"77e3784c-3c1a-471d-99de-0e8e1f47ca99","blocks":[{"type":"rich_text","block_id":"=Pgj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there an SMTP server running on your machine and listening on port 25?"}]}]}],"user":"UDHE6D287","text":"Is there an SMTP server running on your machine and listening on port 25?"}
{"type":"message","thread_ts":"1630252788.172800","ts":"1630259497.182200","parent_user_id":"U01KQ9EGU79","team":"T03RZGPFR","client_msg_id":"e1725c5b-5356-41fe-9fed-1a0df7ce82b6","blocks":[{"type":"rich_text","block_id":"vcKh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Definitely not."}]}]}],"user":"U01KQ9EGU79","text":"Definitely not."}
{"type":"message","thread_ts":"1630252788.172800","edited":{"user":"U01KQ9EGU79","ts":"1630259771.000000"},"ts":"1630259515.182400","parent_user_id":"U01KQ9EGU79","team":"T03RZGPFR","client_msg_id":"89d050fa-53b2-49ff-b9b2-4ac2e8609deb","blocks":[{"type":"rich_text","block_id":"k1g5L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So that\u2019s the missing ingredient eh? Unless there was some built-in smtp server on my mac. Could that have been the case when it was working?\nI just found out about postfix and sendmail."}]}]}],"user":"U01KQ9EGU79","text":"So that\u2019s the missing ingredient eh? Unless there was some built-in smtp server on my mac. Could that have been the case when it was working?\nI just found out about postfix and sendmail."}
{"type":"message","thread_ts":"1630252788.172800","edited":{"user":"U01KQ9EGU79","ts":"1630261816.000000"},"ts":"1630260589.183500","root":{"subscribed":false,"reply_users":["U04V70XH6","U01KQ9EGU79","UDHE6D287"],"attachments":[{"color":"24292f","fallback":"toyokumo\/tarayo","fields":[{"title":"Stars","value":"41","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"toyokumo\/tarayo","id":1,"app_unfurl_url":"https:\/\/github.com\/toyokumo\/tarayo","text":":love_letter: SMTP client library for Clojure. That\u2019s it.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630252788.172800","reply_users_count":3,"edited":{"user":"U01KQ9EGU79","ts":"1630252842.000000"},"ts":"1630252788.172800","team":"T03RZGPFR","client_msg_id":"2a77c82f-8d47-48b5-a0c8-b0933cca17b8","blocks":[{"type":"rich_text","block_id":"1nG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, no idea why, but for some reason "},{"type":"text","text":"tarayo","style":{"code":true}},{"type":"text","text":" isn\u2019t working for me anymore. "},{"type":"link","url":"https:\/\/github.com\/toyokumo\/tarayo"},{"type":"text","text":"\nIt crashes right on "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" within my namespace.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)"}]}]}],"is_locked":false,"user":"U01KQ9EGU79","reply_count":12,"latest_reply":"1630260589.183500","text":"Ok, no idea why, but for some reason `tarayo` isn\u2019t working for me anymore. <https:\/\/github.com\/toyokumo\/tarayo>\nIt crashes right on `:require` within my namespace.\n```1. Caused by java.lang.ClassNotFoundException\n   javax.mail.Message```\nWhat could be causing this? I went looking around and it might be because this javax.mail.Message is a java EE class. Is this true?\n```~ \u276f java --version\nopenjdk 16.0.2 2021-07-20\nOpenJDK Runtime Environment Homebrew (build 16.0.2+0)\nOpenJDK 64-Bit Server VM Homebrew (build 16.0.2+0, mixed mode, sharing)```"},"client_msg_id":"59d6a505-2771-491c-a999-165ecdb4d57b","blocks":[{"type":"rich_text","block_id":"OezN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aha! "},{"type":"text","text":"sudo postfix start","style":{"code":true}},{"type":"text","text":" was a pretty easy solution making use of built-in macOS cli tools.\nNow I just need it to actually send something instead of just queue it."}]}]}],"user":"U01KQ9EGU79","reactions":[{"name":"+1","users":["UDHE6D287"],"count":1}],"subtype":"thread_broadcast","text":"Aha! `sudo postfix start` was a pretty easy solution making use of built-in macOS cli tools.\nNow I just need it to actually send something instead of just queue it."}
{"subscribed":false,"reply_users":["U0ETXRFEW","U2FRKM4TW"],"type":"message","thread_ts":"1630234552.166700","reply_users_count":2,"ts":"1630234552.166700","team":"T03RZGPFR","client_msg_id":"8e85ec4a-17b1-4715-84e6-2676acc17ee2","blocks":[{"type":"rich_text","block_id":"pNuI5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know something about particulars with running simple Swing apps on Linux? "},{"type":"text","text":"(clojure.inspector\/inspect (range 10))","style":{"code":true}},{"type":"text","text":" gives me a blank window\/frame. I can manipulate the returned JFrame with things like "},{"type":"text","text":"(.setSize w 300 200)","style":{"code":true}},{"type":"text","text":" for expected results."}]}]}],"is_locked":false,"user":"U0ETXRFEW","reply_count":27,"latest_reply":"1630276054.202900","text":"Does anyone know something about particulars with running simple Swing apps on Linux? `(clojure.inspector\/inspect (range 10))` gives me a blank window\/frame. I can manipulate the returned JFrame with things like `(.setSize w 300 200)` for expected results."}
{"subscribed":false,"reply_users":["U0ETXRFEW","U2FRKM4TW"],"type":"message","thread_ts":"1630234552.166700","reply_users_count":2,"ts":"1630234552.166700","team":"T03RZGPFR","client_msg_id":"8e85ec4a-17b1-4715-84e6-2676acc17ee2","blocks":[{"type":"rich_text","block_id":"pNuI5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know something about particulars with running simple Swing apps on Linux? "},{"type":"text","text":"(clojure.inspector\/inspect (range 10))","style":{"code":true}},{"type":"text","text":" gives me a blank window\/frame. I can manipulate the returned JFrame with things like "},{"type":"text","text":"(.setSize w 300 200)","style":{"code":true}},{"type":"text","text":" for expected results."}]}]}],"is_locked":false,"user":"U0ETXRFEW","reply_count":27,"latest_reply":"1630276054.202900","text":"Does anyone know something about particulars with running simple Swing apps on Linux? `(clojure.inspector\/inspect (range 10))` gives me a blank window\/frame. I can manipulate the returned JFrame with things like `(.setSize w 300 200)` for expected results."}
{"type":"message","display_as_bot":false,"thread_ts":"1630234552.166700","ts":"1630235927.167700","parent_user_id":"U0ETXRFEW","files":[{"thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ94M5W-6db320c5c1\/image_80.png","thumb_360_h":285,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ94M5W-6db320c5c1\/image_160.png","original_w":548,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02DDQ94M5W\/download\/image.png","name":"image.png","permalink":"https:\/\/clojurians.slack.com\/files\/U0ETXRFEW\/F02DDQ94M5W\/image.png","username":"","mode":"hosted","thumb_480_h":380,"created":1630235918,"display_as_bot":false,"thumb_480":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ94M5W-6db320c5c1\/image_480.png","mimetype":"image\/png","size":55671,"title":"image.png","media_display_type":"unknown","is_public":true,"id":"F02DDQ94M5W","original_h":434,"external_type":"","thumb_480_w":480,"thumb_360_w":360,"thumb_tiny":"AwAmADDMwauabGsk7B1DAL3HvVqwUG0XI7n+dWdq+gqeZDsILaD\/AJ5J+QoNtD2ij\/EUu1fSjavoKXOgsJ9mg\/55R\/lQLaA9Ik\/Kl2r6CnxgAnApqSYWKmn\/APHmn1P86s1W0\/8A480+p\/nVms3uMKKKKQBTJJfKx159KfUU0ZkwAwHHOaqO4nsZ8F8YYhGIwcd81ctLs3MjKUC4XPWsir2k\/wCvf\/c\/qK05UI1dnvRs96fRRyodxmz3oCe9PooshH\/\/2Q==","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ94M5W-6db320c5c1\/image_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02DDQ94M5W\/image.png","pretty_type":"PNG","has_rich_preview":false,"timestamp":1630235918,"user":"U0ETXRFEW","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ94M5W-6db320c5c1\/image_64.png","permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02DDQ94M5W-eab2d76fa4"}],"blocks":[{"type":"rich_text","block_id":"L0UUs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This also renders an empty window\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"clj\ua789user\ua789>\u00a0\n(def f (new javax.swing.JFrame \"My Frame\"))\n#'user\/f\nclj\ua789user\ua789>\u00a0\n(.setSize f 600 400)\nnil\nclj\ua789user\ua789>\u00a0\n(def p (new javax.swing.JPanel))\n#'user\/p\nclj\ua789user\ua789>\u00a0\n(.setLayout p (new java.awt.FlowLayout))\nnil\nclj\ua789user\ua789>\u00a0\n(def l (new javax.swing.JLabel \"Hello World\"))\n#'user\/l\nclj\ua789user\ua789>\u00a0\n(.add p l)\n#object[javax.swing.JLabel 0x74b15813 \"javax.swing.JLabel[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=8388608,maximumSize=,minimumSize=,preferredSize=,defaultIcon=,disabledIcon=,horizontalAlignment=LEADING,horizontalTextPosition=TRAILING,iconTextGap=4,labelFor=,text=Hello World,verticalAlignment=CENTER,verticalTextPosition=CENTER]\"]\nclj\ua789user\ua789>\u00a0\n(.add f p)\n#object[javax.swing.JPanel 0x3cface79 \"javax.swing.JPanel[,0,0,0x0,invalid,layout=java.awt.FlowLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]\"]\nclj\ua789user\ua789>\u00a0\n(.setVisible f true)\nnil"}]}]}],"user":"U0ETXRFEW","upload":false,"text":"This also renders an empty window\n```clj\ua789user\ua789&gt;\u00a0\n(def f (new javax.swing.JFrame \"My Frame\"))\n#'user\/f\nclj\ua789user\ua789&gt;\u00a0\n(.setSize f 600 400)\nnil\nclj\ua789user\ua789&gt;\u00a0\n(def p (new javax.swing.JPanel))\n#'user\/p\nclj\ua789user\ua789&gt;\u00a0\n(.setLayout p (new java.awt.FlowLayout))\nnil\nclj\ua789user\ua789&gt;\u00a0\n(def l (new javax.swing.JLabel \"Hello World\"))\n#'user\/l\nclj\ua789user\ua789&gt;\u00a0\n(.add p l)\n#object[javax.swing.JLabel 0x74b15813 \"javax.swing.JLabel[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=8388608,maximumSize=,minimumSize=,preferredSize=,defaultIcon=,disabledIcon=,horizontalAlignment=LEADING,horizontalTextPosition=TRAILING,iconTextGap=4,labelFor=,text=Hello World,verticalAlignment=CENTER,verticalTextPosition=CENTER]\"]\nclj\ua789user\ua789&gt;\u00a0\n(.add f p)\n#object[javax.swing.JPanel 0x3cface79 \"javax.swing.JPanel[,0,0,0x0,invalid,layout=java.awt.FlowLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]\"]\nclj\ua789user\ua789&gt;\u00a0\n(.setVisible f true)\nnil```"}
{"type":"message","display_as_bot":false,"thread_ts":"1630234552.166700","ts":"1630235988.167900","parent_user_id":"U0ETXRFEW","files":[{"thumb_1024_w":1024,"thumb_1024_h":736,"thumb_1024":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ9QU8G-c47fe83222\/image_1024.png","thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ9QU8G-c47fe83222\/image_80.png","thumb_360_h":259,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ9QU8G-c47fe83222\/image_160.png","thumb_960":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ9QU8G-c47fe83222\/image_960.png","thumb_960_w":960,"original_w":1424,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02DDQ9QU8G\/download\/image.png","name":"image.png","permalink":"https:\/\/clojurians.slack.com\/files\/U0ETXRFEW\/F02DDQ9QU8G\/image.png","username":"","mode":"hosted","thumb_480_h":345,"created":1630235981,"display_as_bot":false,"thumb_480":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ9QU8G-c47fe83222\/image_480.png","mimetype":"image\/png","size":274254,"title":"image.png","media_display_type":"unknown","thumb_800":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ9QU8G-c47fe83222\/image_800.png","is_public":true,"id":"F02DDQ9QU8G","original_h":1024,"external_type":"","thumb_480_w":480,"thumb_360_w":360,"thumb_720_h":518,"thumb_720_w":720,"thumb_tiny":"AwAiADCCwto7gOXz8uMYNXP7Ot\/Rv++qi0j7sv1FaNAFM6dBjgN\/31QNOgxyG\/76q5RQBT\/s639G\/wC+qqahbR24Qx55znJrXrO1f7sX1NABpH3ZfqK0ax7C6jtg4cMd2MYq3\/acH91\/yFAF2iqX9pwf3X\/IUf2nB\/df8hQBdrO1f7sX1NSf2nB\/df8AIVUv7qO5CBAw25zmgCnRRRQAUUUUAFFFFAH\/2Q==","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ9QU8G-c47fe83222\/image_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02DDQ9QU8G\/image.png","thumb_720":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ9QU8G-c47fe83222\/image_720.png","thumb_960_h":690,"pretty_type":"PNG","has_rich_preview":false,"timestamp":1630235981,"thumb_800_w":800,"user":"U0ETXRFEW","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02DDQ9QU8G-c47fe83222\/image_64.png","thumb_800_h":575,"permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02DDQ9QU8G-8dc82c9117"}],"blocks":[{"type":"rich_text","block_id":"\/NQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"While, if I do the same on my Mac, I get"}]}]}],"user":"U0ETXRFEW","upload":false,"text":"While, if I do the same on my Mac, I get"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630236041.168100","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"80547c04-55c4-4579-97f3-56652e438389","blocks":[{"type":"rich_text","block_id":"am2=I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW I get the expected result on Ubuntu 20.04 with OpenJDK 11.0.11."}]}]}],"user":"U2FRKM4TW","text":"FWIW I get the expected result on Ubuntu 20.04 with OpenJDK 11.0.11."}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630236230.168300","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"7876cd25-9d21-4440-b8fd-c4c8e7091caa","blocks":[{"type":"rich_text","block_id":"=e3y0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. I have:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"$ uname -a\nLinux ws-6b7740ce-c639-4431-8722-a09e2c8d242a 5.4.0-1046-gke #48-Ubuntu SMP Thu Jun 17 19:16:06 UTC 2021 x86_64 x86_64 x86_64 GNU\/Linux\n$ java -version\nPicked up JAVA_TOOL_OPTIONS: -Xmx1879m\nopenjdk version \"11.0.12\" 2021-07-20 LTS\nOpenJDK Runtime Environment Zulu11.50+19-CA (build 11.0.12+7-LTS)\nOpenJDK 64-Bit Server VM Zulu11.50+19-CA (build 11.0.12+7-LTS, mixed mode)"}]}]}],"user":"U0ETXRFEW","text":"Thanks. I have:\n```$ uname -a\nLinux ws-6b7740ce-c639-4431-8722-a09e2c8d242a 5.4.0-1046-gke #48-Ubuntu SMP Thu Jun 17 19:16:06 UTC 2021 x86_64 x86_64 x86_64 GNU\/Linux\n$ java -version\nPicked up JAVA_TOOL_OPTIONS: -Xmx1879m\nopenjdk version \"11.0.12\" 2021-07-20 LTS\nOpenJDK Runtime Environment Zulu11.50+19-CA (build 11.0.12+7-LTS)\nOpenJDK 64-Bit Server VM Zulu11.50+19-CA (build 11.0.12+7-LTS, mixed mode)```"}
{"attachments":[{"thumb_width":316,"thumb_height":316,"service_name":"Stack Overflow","title_link":"https:\/\/stackoverflow.com\/questions\/4740183\/java-ubuntu-linux-swing-blank-window","fallback":"Stack Overflow: Java Ubuntu Linux Swing Blank Window","from_url":"https:\/\/stackoverflow.com\/questions\/4740183\/java-ubuntu-linux-swing-blank-window","title":"Java Ubuntu Linux Swing Blank Window","id":1,"thumb_url":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded","service_icon":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a","original_url":"https:\/\/stackoverflow.com\/questions\/4740183\/java-ubuntu-linux-swing-blank-window","text":"I'm writing a Java desktop application, running Ubuntu 10.10. Everything works fine except that about 1 in 10 times, when I call JOptionPane.showMessageDialog(null, message), the dialog window appe..."}],"type":"message","thread_ts":"1630234552.166700","ts":"1630236259.168500","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"8cdfe9c2-44e0-4aab-8099-a9cfa4693d1e","blocks":[{"type":"rich_text","block_id":"\/fUd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A couple of potential causes are mentioned here: "},{"type":"link","url":"https:\/\/stackoverflow.com\/questions\/4740183\/java-ubuntu-linux-swing-blank-window"},{"type":"text","text":"\nAlso seems like using remote desktop can cause it - which could be fixed with altering its color depth.."}]}]}],"user":"U2FRKM4TW","text":"A couple of potential causes are mentioned here: <https:\/\/stackoverflow.com\/questions\/4740183\/java-ubuntu-linux-swing-blank-window>\nAlso seems like using remote desktop can cause it - which could be fixed with altering its color depth.."}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630236280.168700","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"ee69c7ad-94f1-462f-857c-e916008fdd62","blocks":[{"type":"rich_text","block_id":"BNV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, I am doing this via VNC\u2026"}]}]}],"user":"U0ETXRFEW","text":"Ah, I am doing this via VNC\u2026"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630236319.169000","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"01a5f548-0c0c-4e86-9917-fab58256349d","blocks":[{"type":"rich_text","block_id":"bnt9T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uname -a","style":{"code":true}},{"type":"text","text":" only tells the kernel version - "},{"type":"text","text":"lsb_release -a","style":{"code":true}},{"type":"text","text":" also has the distribution info. Just for future reference. :)"}]}]}],"user":"U2FRKM4TW","text":"`uname -a` only tells the kernel version - `lsb_release -a` also has the distribution info. Just for future reference. :)"}
{"attachments":[{"service_name":"Linux.org","title_link":"https:\/\/www.linux.org\/threads\/java-swing-gui-coming-up-empty-on-rh-gnome-windows-due-to-configuration-issues.29294\/","fallback":"Linux.org: Java Swing GUI coming up empty on RH\/Gnome windows due to configuration issues","from_url":"https:\/\/www.linux.org\/threads\/java-swing-gui-coming-up-empty-on-rh-gnome-windows-due-to-configuration-issues.29294\/","title":"Java Swing GUI coming up empty on RH\/Gnome windows due to configuration issues","id":1,"service_icon":"https:\/\/www.linux.org\/apple-touch-icon.png","original_url":"https:\/\/www.linux.org\/threads\/java-swing-gui-coming-up-empty-on-rh-gnome-windows-due-to-configuration-issues.29294\/","text":"I have a Java Swing program that displays fine on Windows and on another Linux instance I use, but on another Linux platform the main window comes up, but it is blank. It is NOT the Java code but the OS configuration that is the problem; I wrote a quick and simple test program and the same..."}],"type":"message","thread_ts":"1630234552.166700","ts":"1630236335.169200","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"14c1da68-3c9f-4466-baca-313f658b49ba","blocks":[{"type":"rich_text","block_id":"JEWe+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Regarding VNC: "},{"type":"link","url":"https:\/\/www.linux.org\/threads\/java-swing-gui-coming-up-empty-on-rh-gnome-windows-due-to-configuration-issues.29294\/"}]}]}],"user":"U2FRKM4TW","text":"Regarding VNC: <https:\/\/www.linux.org\/threads\/java-swing-gui-coming-up-empty-on-rh-gnome-windows-due-to-configuration-issues.29294\/>"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630236353.169400","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"90dfe186-c666-48c8-9e83-9b47bf378c98","blocks":[{"type":"rich_text","block_id":"A3b","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" The depth needs to be set to 24, but the place to do so will depend on the server app."}]}]}],"user":"U2FRKM4TW","text":"&gt;  The depth needs to be set to 24, but the place to do so will depend on the server app."}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630236397.169700","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"30a040f7-b5db-4ef2-b3db-d15982e4c1ee","blocks":[{"type":"rich_text","block_id":"mBPP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It was ages ago I used a Linux machine\u2026\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 20.04.2 LTS\nRelease:        20.04\nCodename:       focal"}]}]}],"user":"U0ETXRFEW","text":"It was ages ago I used a Linux machine\u2026\n```$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 20.04.2 LTS\nRelease:        20.04\nCodename:       focal```"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630236424.169900","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"0606cae0-d2b4-4601-8a1c-31d031a8fc9e","blocks":[{"type":"rich_text","block_id":"RaYt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am not using GCJ, am I?"}]}]}],"user":"U0ETXRFEW","text":"I am not using GCJ, am I?"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630236466.170100","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"80a78379-7581-4aa0-93f4-b13bd769f2f1","blocks":[{"type":"rich_text","block_id":"F2g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, you're using OpenJDK."}]}]}],"user":"U2FRKM4TW","text":"No, you're using OpenJDK."}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630236483.170300","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"6c5a5eb4-64a1-47a7-b1d0-70465bfb2add","blocks":[{"type":"rich_text","block_id":"v=g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haha, thanks. Checking the VNC config now."}]}]}],"user":"U0ETXRFEW","text":"Haha, thanks. Checking the VNC config now."}
{"attachments":[{"thumb_width":316,"thumb_height":316,"service_name":"Stack Overflow","title_link":"https:\/\/stackoverflow.com\/a\/37428300","fallback":"Stack Overflow: Java swing applications not rendering properly with VNC","from_url":"https:\/\/stackoverflow.com\/a\/37428300","title":"Java swing applications not rendering properly with VNC","id":1,"thumb_url":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded","service_icon":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a","original_url":"https:\/\/stackoverflow.com\/a\/37428300","text":"Swing applications show a blank window when launched on a VNC desktop with Java 8. I don't have this problem with JRE 7 and non-swing applications (eg. Eclipse) runs properly with the same settings..."}],"type":"message","thread_ts":"1630234552.166700","ts":"1630240726.170500","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"c6bba3eb-27dc-48ce-877d-4b6f6d82156a","blocks":[{"type":"rich_text","block_id":"FATgy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It might to have to do with color depth of both X and VNC, "},{"type":"link","url":"https:\/\/stackoverflow.com\/a\/37428300"},{"type":"text","text":" but I am not savvy enough to even check either\u2026"}]}]}],"user":"U0ETXRFEW","text":"It might to have to do with color depth of both X and VNC, <https:\/\/stackoverflow.com\/a\/37428300> but I am not savvy enough to even check either\u2026"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630240876.170800","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"df5bde86-aef6-4b14-a308-9a70d5691a42","blocks":[{"type":"rich_text","block_id":"2TGE4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What client and server do you use?"}]}]}],"user":"U2FRKM4TW","text":"What client and server do you use?"}
{"attachments":[{"color":"cb2431","image_bytes":100580,"footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"2340x1912px image","fields":[{"title":"Labels","value":"type: bug, language: java, meta: stale","short":true},{"title":"Comments","value":"11","short":true}],"mrkdwn_in":["text"],"is_app_unfurl":true,"image_width":2340,"footer":"<https:\/\/github.com\/gitpod-io\/gitpod|gitpod-io\/gitpod>","image_url":"https:\/\/user-images.githubusercontent.com\/1254039\/70852909-3b362f80-1ea7-11ea-88a9-6822f9f8e6fe.png","title":"<https:\/\/github.com\/gitpod-io\/gitpod\/issues\/1004|#1004 Java Swing GUI not showing up using VNC>","ts":1576348418,"id":1,"app_unfurl_url":"https:\/\/github.com\/gitpod-io\/gitpod\/issues\/1004","image_height":1912,"text":"*Describe the bug*  \nI would like to use Gitpod for a project, which includes a Java Swing GUI. Locally the Java Swing GUI works fine. On Gitpod, there is only the border of the window visible showing the elements of the window without the content. Please take a look at the following Screenshot:\n\n<https:\/\/user-images.githubusercontent.com\/1254039\/70852909-3b362f80-1ea7-11ea-88a9-6822f9f8e6fe.png|Gitpod Java GUI>\n\n*To Reproduce*\n\n1. <https:\/\/gitpod.io\/#https:\/\/github.com\/zdila\/gpx-animator|Open GPX Animator in Gitpod>\n2. Run `.\/mvnw exec:java`\n\n*Expected behavior*  \nThe window with the yellow background should look like the following screenshot, which I took on my Linux PC:\n\n<https:\/\/user-images.githubusercontent.com\/1254039\/70852933-b992d180-1ea7-11ea-8d0e-0825514bd955.png|GPX Animator locally on Linux>\n\n*Additional Information*  \nI am using an own `.gitpod.Dockerfile`:\n\n```\nFROM gitpod\/workspace-full-vnc\nUSER root\nRUN apt-get update \\\n    &amp;&amp; apt-get install -y openjfx libopenjfx-java matchbox \\\n    &amp;&amp; apt-get clean &amp;&amp; rm -rf \/var\/cache\/apt\/* &amp;&amp; rm -rf \/var\/lib\/apt\/lists\/* &amp;&amp; rm -rf \/tmp\/*\n\n```\n\nAnd my `.gitpod.yml` looks like this:\n\n```\nimage:\n  file: .gitpod.Dockerfile\n\ntasks:\n  - init: .\/mvnw clean package\n\nports:\n  - port: 6080\n    onOpen: open-preview\n  - port: 5900\n    onOpen: ignore\n  - port: 35900\n    onOpen: ignore\n\ngithub:\n  prebuilds:\n    # enable for the master\/default branch (defaults to true)\n    master: true\n    # enable for all branches in this repo (defaults to false)\n    branches: true\n    # enable for pull requests coming from this repo (defaults to true)\n    pullRequests: true\n    # enable for pull requests coming from forks (defaults to false)\n    pullRequestsFromForks: true\n    # add a check to pull requests (defaults to true)\n    addCheck: true\n    # add a \"Review in Gitpod\" button as a comment to pull requests (defaults to false)\n    addComment: true\n    # add a \"Review in Gitpod\" button to the pull request's description (defaults to false)\n    addBadge: false\n    # add a label once the prebuild is ready to pull requests (defaults to false)\n    addLabel: false\n\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630234552.166700","ts":"1630241253.171000","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"573534bc-8d05-43a8-89b2-5390e6b39a0e","blocks":[{"type":"rich_text","block_id":"Ltje","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure. It\u2019s a bit opaque to me. But I think I have found a thread where I will be able to find out how to solve this: "},{"type":"link","url":"https:\/\/github.com\/gitpod-io\/gitpod\/issues\/1004"},{"type":"text","text":" (Since this is on Gitpod)"}]}]}],"user":"U0ETXRFEW","reactions":[{"name":"+1","users":["U2FRKM4TW"],"count":1}],"text":"Not sure. It\u2019s a bit opaque to me. But I think I have found a thread where I will be able to find out how to solve this: <https:\/\/github.com\/gitpod-io\/gitpod\/issues\/1004> (Since this is on Gitpod)"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630246366.171400","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"71c9fe6f-e63e-4708-b6c1-d314c87f38d2","blocks":[{"type":"rich_text","block_id":"JvEg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Indeed. "},{"type":"text","text":"-Dsun.java2d.xrender=false","style":{"code":true}},{"type":"text","text":" does the trick."}]}]}],"user":"U0ETXRFEW","text":"Indeed. `-Dsun.java2d.xrender=false` does the trick."}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630246377.171600","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"2d04cc88-940b-42d8-981c-760c93d9c157","blocks":[{"type":"rich_text","block_id":"iGWN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It\u2019s novnc, btw."}]}]}],"user":"U0ETXRFEW","text":"It\u2019s novnc, btw."}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/gitpod-io\/gitpod\/issues\/1004#issuecomment-907860672|Comment on #1004 Java Swing GUI not showing up using VNC>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/gitpod-io\/gitpod|gitpod-io\/gitpod>","title":"<https:\/\/github.com\/gitpod-io\/gitpod\/issues\/1004#issuecomment-907860672|Comment on #1004 Java Swing GUI not showing up using VNC>","ts":1630267010,"id":1,"app_unfurl_url":"https:\/\/github.com\/gitpod-io\/gitpod\/issues\/1004#issuecomment-907860672","text":"I put this in the docker file to have it be part of the users environment before Code is started:\n\n```\nRUN echo export JAVA_TOOL_OPTIONS=\\\"\\$JAVA_TOOL_OPTIONS -Dsun.java2d.xrender=false\\\" &gt;&gt; \/home\/gitpod\/.bashrc\n```\n\nWould be really nice if it was part of the vnc image to start with.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630234552.166700","ts":"1630267109.184600","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"cef26275-9af4-43c0-a655-36b1e811bd12","blocks":[{"type":"rich_text","block_id":"w5DYE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Finally. Took me all too much time to figure this out: "},{"type":"link","url":"https:\/\/github.com\/gitpod-io\/gitpod\/issues\/1004#issuecomment-907860672"}]}]}],"user":"U0ETXRFEW","reactions":[{"name":"+1","users":["U2FRKM4TW"],"count":1}],"text":"Finally. Took me all too much time to figure this out: <https:\/\/github.com\/gitpod-io\/gitpod\/issues\/1004#issuecomment-907860672>"}
{"attachments":[{"color":"24292f","fallback":"PEZ\/pirate-lang","fields":[{"title":"Language","value":"Clojure","short":true},{"title":"Last updated","value":"a minute ago","short":true}],"is_app_unfurl":true,"title":"PEZ\/pirate-lang","id":1,"app_unfurl_url":"https:\/\/github.com\/PEZ\/pirate-lang","text":"Calva tools-deps demo project","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630234552.166700","ts":"1630267757.185400","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"69fda521-2637-4cb3-b6a4-b8af4b48514d","blocks":[{"type":"rich_text","block_id":"mmhhx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please give it a spin, if you like: "},{"type":"link","url":"https:\/\/github.com\/PEZ\/pirate-lang"}]}]}],"user":"U0ETXRFEW","text":"Please give it a spin, if you like: <https:\/\/github.com\/PEZ\/pirate-lang>"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630268304.185700","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"a3063bfd-e85a-4ea5-9ad4-7233834c0cb1","blocks":[{"type":"rich_text","block_id":"AqE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow, that's amazing!"}]}]}],"user":"U2FRKM4TW","text":"Wow, that's amazing!"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630268642.185900","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"d1b11d4e-4364-4f77-95df-4a428697730b","blocks":[{"type":"rich_text","block_id":"2mSo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haha, yeah, I still find it a bit hard to believe it is actually happening in the browser."}]}]}],"user":"U0ETXRFEW","text":"Haha, yeah, I still find it a bit hard to believe it is actually happening in the browser."}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630268925.186100","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"ab635e7c-2aab-4a79-b976-ae1c88ab09e7","blocks":[{"type":"rich_text","block_id":"LcRC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Although it's not the same, it still reminds me of a fun talk about WebAssembly where the speaker was speculating about running something like Firefox within Windows XP within Chrome Within Linux."}]}]}],"user":"U2FRKM4TW","text":"Although it's not the same, it still reminds me of a fun talk about WebAssembly where the speaker was speculating about running something like Firefox within Windows XP within Chrome Within Linux."}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630269129.186300","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"6cba26d3-b6cf-4149-9d49-abba8bc2a01b","blocks":[{"type":"rich_text","block_id":"=\/M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can realate. I installed VS Code in this Gitpod X11 thing just to get that kind of trip. Also Firefox. Didn\u2019t try to open the pirate-lang repo in that firefox instance. Maybe I should."}]}]}],"user":"U0ETXRFEW","text":"I can realate. I installed VS Code in this Gitpod X11 thing just to get that kind of trip. Also Firefox. Didn\u2019t try to open the pirate-lang repo in that firefox instance. Maybe I should."}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630269169.186500","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"8a829c20-c165-4fef-8adc-d4a6ec8212e9","blocks":[{"type":"rich_text","block_id":"8h7s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Web Assembly is pretty mind boggling actually. I wonder where that thing will go!"}]}]}],"user":"U0ETXRFEW","text":"Web Assembly is pretty mind boggling actually. I wonder where that thing will go!"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630269209.186700","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"cc472cec-9a13-425a-8773-d0dbae7a6773","blocks":[{"type":"rich_text","block_id":"Ul5Ou","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, found it, in case you have 30 minutes on programming-related humor: "},{"type":"link","url":"https:\/\/www.destroyallsoftware.com\/talks\/the-birth-and-death-of-javascript"}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"eyes","users":["U0ETXRFEW"],"count":1}],"text":"Ah, found it, in case you have 30 minutes on programming-related humor: <https:\/\/www.destroyallsoftware.com\/talks\/the-birth-and-death-of-javascript>"}
{"type":"message","thread_ts":"1630234552.166700","ts":"1630276054.202900","parent_user_id":"U0ETXRFEW","team":"T03RZGPFR","client_msg_id":"4FAD4F4D-A977-4FBB-ACCE-0D985CD133A8","blocks":[{"type":"rich_text","block_id":"EK8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haha, that was great!"}]}]}],"user":"U0ETXRFEW","reactions":[{"name":"slightly_smiling_face","users":["U2FRKM4TW"],"count":1}],"text":"Haha, that was great!"}
{"subscribed":false,"reply_users":["U1G869VNV","U0BBFDED7","U051GFP2V","U051SS2EU","U11BV7MTK","U01GXCWSRMW","U0CMVHBL2"],"type":"message","thread_ts":"1630188195.156600","reply_users_count":7,"edited":{"user":"U1G869VNV","ts":"1630188408.000000"},"ts":"1630188195.156600","team":"T03RZGPFR","client_msg_id":"4af7de62-a9ec-4bae-b173-322aa1383203","blocks":[{"type":"rich_text","block_id":"edd98","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's the expected result for "},{"type":"text","text":"(:k (sorted-map 'k 0))","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"is_locked":false,"user":"U1G869VNV","reply_count":24,"latest_reply":"1630290718.217200","text":"What's the expected result for `(:k (sorted-map 'k 0))` ?"}
{"subscribed":false,"reply_users":["U1G869VNV","U0BBFDED7","U051GFP2V","U051SS2EU","U11BV7MTK","U01GXCWSRMW","U0CMVHBL2"],"type":"message","thread_ts":"1630188195.156600","reply_users_count":7,"edited":{"user":"U1G869VNV","ts":"1630188408.000000"},"ts":"1630188195.156600","team":"T03RZGPFR","client_msg_id":"4af7de62-a9ec-4bae-b173-322aa1383203","blocks":[{"type":"rich_text","block_id":"edd98","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's the expected result for "},{"type":"text","text":"(:k (sorted-map 'k 0))","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"is_locked":false,"user":"U1G869VNV","reply_count":24,"latest_reply":"1630290718.217200","text":"What's the expected result for `(:k (sorted-map 'k 0))` ?"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630188221.156700","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"668a3ff1-e12d-4fc8-a61e-4d0aa4a8af9b","blocks":[{"type":"rich_text","block_id":"HcG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would expect nil as the map doesn't have the keyword "},{"type":"text","text":":k","style":{"code":true}}]}]}],"user":"U1G869VNV","text":"I would expect nil as the map doesn't have the keyword `:k`"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630188243.156900","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"fe950678-6f38-4865-a178-608621ec3c1b","blocks":[{"type":"rich_text","block_id":"JKNk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm getting "},{"type":"text","text":"clojure.lang.Symbol cannot be cast to clojure.lang.Keyword","style":{"code":true}}]}]}],"user":"U1G869VNV","text":"I'm getting `clojure.lang.Symbol cannot be cast to clojure.lang.Keyword`"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630188264.157100","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"2b60686c-4b74-4c66-9687-3d107b207afb","blocks":[{"type":"rich_text","block_id":"ta26r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wondering if this is intentional behavior that I wasn't aware of"}]}]}],"user":"U1G869VNV","text":"Wondering if this is intentional behavior that I wasn't aware of"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630188348.157300","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"1daded32-78ce-4157-977b-86ed15423f84","blocks":[{"type":"rich_text","block_id":"qfOM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cljs gives\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"cljs.user=> (:k (sorted-map 'k 0))\nExecution error (Error) at (<cljs repl>:1).\nCannot compare :k to k"}]}]}],"user":"U1G869VNV","text":"cljs gives\n```cljs.user=&gt; (:k (sorted-map 'k 0))\nExecution error (Error) at (&lt;cljs repl&gt;:1).\nCannot compare :k to k```"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630188810.158400","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"4b9c8cfe-0737-432e-b157-b02f9b261752","blocks":[{"type":"rich_text","block_id":"tSfp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I deleted answer because I answered a different question"}]}]}],"user":"U0BBFDED7","reactions":[{"name":"+1","users":["U1G869VNV"],"count":1}],"text":"I deleted answer because I answered a different question"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/PersistentTreeMap.java | PersistentTreeMap.java>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/clojure\/clojure|clojure\/clojure>","title":"<https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/PersistentTreeMap.java | PersistentTreeMap.java>","id":1,"app_unfurl_url":"https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/PersistentTreeMap.java#L313","text":"```\npublic Node entryAt(Object key){\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630188195.156600","ts":"1630189075.158700","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"aeb1ee51-83bb-49a2-ba2e-7fbeb545bd39","blocks":[{"type":"rich_text","block_id":"wfY","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/PersistentTreeMap.java#L313"}]}]}],"user":"U0BBFDED7","text":"<https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/PersistentTreeMap.java#L313>"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630189129.159000","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"1aa541f8-67d4-41fe-9db4-da71ac2aff64","blocks":[{"type":"rich_text","block_id":"vli4I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"however, I wrote correctly at the beginning"}]}]}],"user":"U0BBFDED7","text":"however, I wrote correctly at the beginning"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630189179.159400","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"fcc562c4-9d9a-4b00-a635-011b300c6b06","blocks":[{"type":"rich_text","block_id":"DYL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"compare is called on each key in the sorted-map during get"}]}]}],"user":"U0BBFDED7","reactions":[{"name":"point_up","users":["U1G869VNV"],"count":1}],"text":"compare is called on each key in the sorted-map during get"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630189230.159600","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"9533bb1d-7a0d-4b74-a48d-18d6e09627bb","blocks":[{"type":"rich_text","block_id":"E85tt","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01UYD2CL10"},{"type":"text","text":", that's not the point, the point is why there is an attempt to cast symbol to keyword at jvm"}]}]}],"user":"U0BBFDED7","reactions":[{"name":"+1","users":["U01UYD2CL10"],"count":1}],"text":"<@U01UYD2CL10>, that's not the point, the point is why there is an attempt to cast symbol to keyword at jvm"}
{"type":"message","thread_ts":"1630188195.156600","edited":{"user":"U1G869VNV","ts":"1630189314.000000"},"ts":"1630189280.159900","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"40d593c0-b136-4e9e-bc32-9cc09aa4b9d4","blocks":[{"type":"rich_text","block_id":"e1PJn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I've been spoiled too much by hash maps as my expectation would be nil not an exception, independently of the underlying implementation details."}]}]}],"user":"U1G869VNV","text":"I guess I've been spoiled too much by hash maps as my expectation would be nil not an exception, independently of the underlying implementation details."}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630189315.160300","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"e754fefa-0610-4436-a11a-3e37e1abced1","blocks":[{"type":"rich_text","block_id":"wrPv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I'd expect it too"}]}]}],"user":"U0BBFDED7","text":"but I'd expect it too"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630189352.160800","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"e9329389-2d98-460d-ad8f-09922ae2a4ff","blocks":[{"type":"rich_text","block_id":"JbkO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interestingly, it looks like sorted-map has a non-linear access time"}]}]}],"user":"U0BBFDED7","reactions":[{"name":"+1","users":["U1G869VNV"],"count":1}],"text":"Interestingly, it looks like sorted-map has a non-linear access time"}
{"type":"message","thread_ts":"1630188195.156600","edited":{"user":"U0BBFDED7","ts":"1630190446.000000"},"ts":"1630189375.161000","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"0ca38351-5937-4d3b-830e-3a9e3dde138b","blocks":[{"type":"rich_text","block_id":"\/DN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"O(1) vs O(log(n))"}]}]}],"user":"U0BBFDED7","text":"O(1) vs O(log(n))"}
{"type":"message","thread_ts":"1630188195.156600","edited":{"user":"U0BBFDED7","ts":"1630189522.000000"},"ts":"1630189512.161300","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"8f60016e-5bc2-4e5e-9557-7f353d0ceef2","blocks":[{"type":"rich_text","block_id":"ADiL","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [hm (into {} (map (fn [i] [i i])) (range 1e6))\n      sm (into (sorted-map) hm)]\n  (enc\/qb 1e6\n    (get hm 1e3)\n    (get sm 1e3)))\n;; => [64.86 296.07] ; ms"}]}]}],"user":"U0BBFDED7","text":"```(let [hm (into {} (map (fn [i] [i i])) (range 1e6))\n      sm (into (sorted-map) hm)]\n  (enc\/qb 1e6\n    (get hm 1e3)\n    (get sm 1e3)))\n;; =&gt; [64.86 296.07] ; ms```"}
{"type":"message","thread_ts":"1630188195.156600","edited":{"user":"U0BBFDED7","ts":"1630189618.000000"},"ts":"1630189559.161600","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"0452e348-491e-456d-ae14-1d71d89ed65d","blocks":[{"type":"rich_text","block_id":"aFoi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with a million pairs, taking values from sorted-map is 5x slower than hash-map"}]}]}],"user":"U0BBFDED7","text":"with a million pairs, taking values from sorted-map is 5x slower than hash-map"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630208921.162000","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"7ca6b235-8bee-4072-9a0b-0421ffc910c8","blocks":[{"type":"rich_text","block_id":"VWlL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Since you mention big oh, aren\u2019t map lookups (for maps larger than 4) themselves O(log_32(n))? aka O(log(n))"}]}]}],"user":"U051GFP2V","text":"Since you mention big oh, aren\u2019t map lookups (for maps larger than 4) themselves O(log_32(n))? aka O(log(n))"}
{"type":"message","thread_ts":"1630188195.156600","edited":{"user":"U051SS2EU","ts":"1630209125.000000"},"ts":"1630209095.162200","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"602a6b77-20eb-4c44-a9d5-5fa3fbd8d756","blocks":[{"type":"rich_text","block_id":"wpQ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0BBFDED7"},{"type":"text","text":" "},{"type":"text","text":"(range 1e6)","style":{"code":true}},{"type":"text","text":" returns a lazy-seq of Long, "},{"type":"text","text":"(get hm 1e3)","style":{"code":true}},{"type":"text","text":" is trying to look up a Double - that might work in cljs but in jvm clojure your just testing the failure to look up"}]}]}],"user":"U051SS2EU","text":"<@U0BBFDED7> `(range 1e6)` returns a lazy-seq of Long, `(get hm 1e3)` is trying to look up a Double - that might work in cljs but in jvm clojure your just testing the failure to look up"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630209171.162500","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"839ebf1f-b93b-4d94-97db-79dd641aedf7","blocks":[{"type":"rich_text","block_id":"ryR=H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which, with a sorted map, results in a pathological binary search for any value (as opposed to a single hash check and lookup for a hash map)"}]}]}],"user":"U051SS2EU","text":"which, with a sorted map, results in a pathological binary search for any value (as opposed to a single hash check and lookup for a hash map)"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630209226.162700","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"f36e3b6f-a11f-4684-9da1-920fd0032746","blocks":[{"type":"rich_text","block_id":"UiN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for maps that aren't 100k keys not containing the key you are looking up, sorted-maps should be faster"}]}]}],"user":"U051SS2EU","text":"for maps that aren't 100k keys not containing the key you are looking up, sorted-maps should be faster"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630220131.164600","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"DFC55A0C-B7CC-4E45-B5BD-70A56D1E4DEE","blocks":[{"type":"rich_text","block_id":"Gzubv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I did the math and basically anything that can fit in memory it was four lookups. So log(n) is true, but N can only get so large that it\u2019s effectively constant"}]}]}],"user":"U11BV7MTK","text":"I think I did the math and basically anything that can fit in memory it was four lookups. So log(n) is true, but N can only get so large that it\u2019s effectively constant"}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630254938.177800","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"3fefd09e-7288-4b25-90ae-fdc2a8f059ca","blocks":[{"type":"rich_text","block_id":"TQNV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ugh. Not a fan of that behavior "},{"type":"text","text":"at all","style":{"italic":true}},{"type":"text","text":". Even being explicit, and calling "},{"type":"text","text":"(get (sorted-map 'k 0) :k)","style":{"code":true}},{"type":"text","text":" will result in the exception, because even that calls "},{"type":"text","text":"compare","style":{"code":true}},{"type":"text","text":". I consider that an implementation bug."}]}]}],"user":"U01GXCWSRMW","text":"Ugh. Not a fan of that behavior _at all_. Even being explicit, and calling `(get (sorted-map 'k 0) :k)` will result in the exception, because even that calls `compare`. I consider that an implementation bug."}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630256168.178000","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"0da621ed-bf52-413a-ae2c-df1af53c14e7","blocks":[{"type":"rich_text","block_id":"MsK03","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Same behavior as in Java when working with a SortedMap impl (such as TreeMap), but expected as it's a strongly typed language. If you have control over the map, I think I'd write my own implementation that actually enforced some light typing requirements. Internally, your put and get implementations could check the provided keys to see if they are type-comparable to the defined keys of the map and if not, short-circuit and return a nil for "},{"type":"text","text":"get","style":{"code":true}},{"type":"text","text":" and, well probably still exception on a put\/putAll."}]}]}],"user":"U01GXCWSRMW","text":"Same behavior as in Java when working with a SortedMap impl (such as TreeMap), but expected as it's a strongly typed language. If you have control over the map, I think I'd write my own implementation that actually enforced some light typing requirements. Internally, your put and get implementations could check the provided keys to see if they are type-comparable to the defined keys of the map and if not, short-circuit and return a nil for `get` and, well probably still exception on a put\/putAll."}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630290697.217000","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"8af058d7-fd92-423c-82e4-84d06f11cc36","blocks":[{"type":"rich_text","block_id":"zw7k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sorted maps require that keys are comparable to each other, via a comparator method that takes 2 key values (or a key value already in the map, and one you are trying to look up or add).  If you can come up with a custom comparator function that suits your purposes that takes 2 arbitrary values and returns a reasonable one of 3 values (less than, equal to, greater than), you are welcome to write that comparator function yourself."}]}]}],"user":"U0CMVHBL2","text":"sorted maps require that keys are comparable to each other, via a comparator method that takes 2 key values (or a key value already in the map, and one you are trying to look up or add).  If you can come up with a custom comparator function that suits your purposes that takes 2 arbitrary values and returns a reasonable one of 3 values (less than, equal to, greater than), you are welcome to write that comparator function yourself."}
{"type":"message","thread_ts":"1630188195.156600","ts":"1630290718.217200","parent_user_id":"U1G869VNV","team":"T03RZGPFR","client_msg_id":"fb07a597-972c-41a1-b31b-a2f0961844a3","blocks":[{"type":"rich_text","block_id":"4AQo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It isn't exactly a trivial thing to do for arbitrary pairs of values of arbitrary types, though."}]}]}],"user":"U0CMVHBL2","text":"It isn't exactly a trivial thing to do for arbitrary pairs of values of arbitrary types, though."}
{"client_msg_id":"379176d0-d906-49e6-894f-475cbccea0da","type":"message","text":"with primitive arrays you (potentially) get both, but they're mutable so much greater care is required","user":"U064X3EF3","ts":"1630161655.155600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"s2r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with primitive arrays you (potentially) get both, but they're mutable so much greater care is required"}]}]}],"reactions":[{"name":"+1","users":["U45T93RA6"],"count":1}]}
{"client_msg_id":"db825724-7c90-458a-ac8b-f64fee8dd212","type":"message","text":"the caveat with the primitive vectors is that their APIs still require boxing to objects so you don't get  any benefit in computations on them, but you do get memory savings","user":"U064X3EF3","ts":"1630161550.154900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"kjfR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the caveat with the primitive vectors is that their APIs still require boxing to objects so you don't get  any benefit in computations on them, but you do get memory savings"}]}]}],"reactions":[{"name":"eyes","users":["U45T93RA6"],"count":1}]}
{"client_msg_id":"7df64a75-6ec4-4808-a069-82f351ccc250","type":"message","text":"thanks! &amp;&amp; TIL about `vector-of`","user":"U45T93RA6","ts":"1630161495.153900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"tlrRb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks! && TIL about "},{"type":"text","text":"vector-of","style":{"code":true}}]}]}]}
{"client_msg_id":"2c79743f-3479-4ff1-a8b7-f146f6574727","type":"message","text":"correct, Clojure collections always hold objects (other than the primitive vectors created via `vector-of`)","user":"U064X3EF3","ts":"1630161461.153500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Q50","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"correct, Clojure collections always hold objects (other than the primitive vectors created via "},{"type":"text","text":"vector-of","style":{"code":true}},{"type":"text","text":")"}]}]}]}
{"client_msg_id":"23deac1e-9872-491d-9839-6d87fe3b680a","type":"message","text":"I would say that one cannot put a primitive long into a vector, is that correct?\n\ni.e. `(vector (long 1))` produces a vector of one non-primitive Long","user":"U45T93RA6","ts":"1630161083.152700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"LM=F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would say that one cannot put a primitive long into a vector, is that correct?\n\ni.e. "},{"type":"text","text":"(vector (long 1))","style":{"code":true}},{"type":"text","text":" produces a vector of one non-primitive Long"}]}]}]}
{"subscribed":false,"reply_users":["U2FRKM4TW"],"type":"message","thread_ts":"1630155954.151000","reply_users_count":1,"ts":"1630155954.151000","team":"T03RZGPFR","client_msg_id":"e4f06210-fb9f-4cfe-b460-b1a115240fe9","blocks":[{"type":"rich_text","block_id":"RWa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! Sounds like the docstring could be made less ambiguous with that information.\nI see now that there's "},{"type":"link","url":"https:\/\/clojure.org\/guides\/equality#_summary"},{"type":"text","text":" but it's a resource that's external to the source."}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":1,"latest_reply":"1630156327.151100","text":"Thanks! Sounds like the docstring could be made less ambiguous with that information.\nI see now that there's <https:\/\/clojure.org\/guides\/equality#_summary> but it's a resource that's external to the source."}
{"subscribed":false,"reply_users":["U2FRKM4TW"],"type":"message","thread_ts":"1630155954.151000","reply_users_count":1,"ts":"1630155954.151000","team":"T03RZGPFR","client_msg_id":"e4f06210-fb9f-4cfe-b460-b1a115240fe9","blocks":[{"type":"rich_text","block_id":"RWa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! Sounds like the docstring could be made less ambiguous with that information.\nI see now that there's "},{"type":"link","url":"https:\/\/clojure.org\/guides\/equality#_summary"},{"type":"text","text":" but it's a resource that's external to the source."}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":1,"latest_reply":"1630156327.151100","text":"Thanks! Sounds like the docstring could be made less ambiguous with that information.\nI see now that there's <https:\/\/clojure.org\/guides\/equality#_summary> but it's a resource that's external to the source."}
{"attachments":[{"service_name":"ask.clojure.org","title_link":"https:\/\/ask.clojure.org\/index.php\/10992\/docstring-for-could-be-made-less-ambiguous-w-r-t-numbers","fallback":"Docstring for `=` could be made less ambiguous w.r.t. numbers - Clojure Q&amp;A","from_url":"https:\/\/ask.clojure.org\/index.php\/10992\/docstring-for-could-be-made-less-ambiguous-w-r-t-numbers","title":"Docstring for `=` could be made less ambiguous w.r.t. numbers - Clojure Q&amp;A","id":1,"service_icon":"https:\/\/ask.clojure.org\/clojure-logo-icon-32.png","original_url":"https:\/\/ask.clojure.org\/index.php\/10992\/docstring-for-could-be-made-less-ambiguous-w-r-t-numbers","text":"The current docstring of `=` says: &gt; compares numbers and collections in a type-independent ... have that information in the docstring as well."}],"type":"message","thread_ts":"1630155954.151000","ts":"1630156327.151100","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"f6fa4685-0f87-4048-a951-3d1de7c1254f","blocks":[{"type":"rich_text","block_id":"1u=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Asked "},{"type":"link","url":"https:\/\/ask.clojure.org\/index.php\/10992\/docstring-for-could-be-made-less-ambiguous-w-r-t-numbers"}]}]}],"user":"U2FRKM4TW","text":"Asked <https:\/\/ask.clojure.org\/index.php\/10992\/docstring-for-could-be-made-less-ambiguous-w-r-t-numbers>"}
{"client_msg_id":"628d0367-c6ae-4ea5-8ace-f91bc72d22ac","type":"message","text":"so it checks the \u201ccategory\u201d (int\/float\/ratio\/decimal) and then checks the value","user":"U07S8JGF7","ts":"1630155868.150200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Z+Fk1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so it checks the \u201ccategory\u201d (int\/float\/ratio\/decimal) and then checks the value"}]}]}]}
{"client_msg_id":"b3c1fb46-a866-4d7d-878b-b837df8f9b3b","type":"message","text":"```static public boolean equal(Number x, Number y){\n\treturn category(x) == category(y)\n\t\t\t&amp;&amp; ops(x).combine(ops(y)).equiv(x, y);\n}```","user":"U07S8JGF7","ts":"1630155837.149700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"JKv","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"static public boolean equal(Number x, Number y){\n\treturn category(x) == category(y)\n\t\t\t&& ops(x).combine(ops(y)).equiv(x, y);\n}"}]}]}]}
{"client_msg_id":"CAF504A5-E1B4-45C4-B70D-8C7AE7365735","type":"message","text":"It does content checking, not type coercion ","user":"UEENNMX0T","ts":"1630155746.148900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Dow","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It does content checking, not type coercion "}]}]}]}
{"client_msg_id":"a4b99005-dc7e-4cdb-9278-b45c5590a3f6","type":"message","text":"```=&gt; (identical? (long 1)\n               (int 1))\nfalse\n=&gt; (= (long 1)\n      (int 1))\ntrue```","user":"U07S8JGF7","ts":"1630155733.148600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"oqjk","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"=> (identical? (long 1)\n               (int 1))\nfalse\n=> (= (long 1)\n      (int 1))\ntrue"}]}]}]}
{"client_msg_id":"cc21fee0-4dfb-40f0-8326-5354bf43fd44","type":"message","text":"It appears to be talking about int\/long and float\/double conversions.","user":"U07S8JGF7","ts":"1630155682.147700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"aMh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It appears to be talking about int\/long and float\/double conversions."}]}]}]}
{"client_msg_id":"adb5accf-fa09-457c-91d6-291bde40a45d","type":"message","text":"The docstring of `=` says: \"compares numbers and collections in a type-independent manner.\"\nAnd yet:\n```user=&gt; (= 1. 1)\nfalse```\nDoes it mean the docstring is incorrect? Or how else one could interpret that part of the docstring?","user":"U2FRKM4TW","ts":"1630155313.146200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"EAGye","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The docstring of "},{"type":"text","text":"=","style":{"code":true}},{"type":"text","text":" says: \"compares numbers and collections in a type-independent manner.\"\nAnd yet:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"user=> (= 1. 1)\nfalse"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Does it mean the docstring is incorrect? Or how else one could interpret that part of the docstring?"}]}]}]}
{"client_msg_id":"b73288c4-9389-466b-9ec9-d09e4dceb9fe","type":"message","text":"Yeah, you can technically get things to work correctly if you use something like bound-fn (because clojure.test depends on bindings) but it is better to keep all your assertions on the main thread.","user":"U0NCTKEV8","ts":"1630121499.144100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"puT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, you can technically get things to work correctly if you use something like bound-fn (because clojure.test depends on bindings) but it is better to keep all your assertions on the main thread."}]}]}]}
{"client_msg_id":"e634fdf8-c023-41a3-a9b5-027159ef35ce","type":"message","text":"you were right, it was the thread situation. i forgot we are using hystrix, which is a thread jungle!\n\ncmiiw, the lesson is that the assert failures should happen on the same thread which runs the test?","user":"U4MT10C4W","ts":"1630121000.141000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"uqp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you were right, it was the thread situation. i forgot we are using hystrix, which is a thread jungle!\n\ncmiiw, the lesson is that the assert failures should happen on the same thread which runs the test?"}]}]}]}
{"client_msg_id":"eb841381-279e-4f3a-8b89-7af3b582332a","type":"message","text":"Double check, I assume the fixture is also stopping things, that is where I would expect the exception of that is what it is","user":"U0NCTKEV8","ts":"1630113073.139200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"jwNt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Double check, I assume the fixture is also stopping things, that is where I would expect the exception of that is what it is"}]}]}],"reactions":[{"name":"pray","users":["U4MT10C4W"],"count":1}]}
{"client_msg_id":"3559ae6b-9135-4f44-ae17-b87ced08a425","type":"message","text":"i am with-redefs `http\/get`, which might be running in a separate thread internally, let me try to poke around with it\u2026","user":"U4MT10C4W","ts":"1630113036.138000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"eAK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i am with-redefs "},{"type":"text","text":"http\/get","style":{"code":true}},{"type":"text","text":", which might be running in a separate thread internally, let me try to poke around with it\u2026"}]}]}]}
{"client_msg_id":"b8635a97-8f01-44b3-b633-a6fdf23b9e46","type":"message","text":"yes, but the fixtures is only to `mount\/start` things, no exceptions being thrown there\u2026","user":"U4MT10C4W","ts":"1630112992.136800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"tmI0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, but the fixtures is only to "},{"type":"text","text":"mount\/start","style":{"code":true}},{"type":"text","text":" things, no exceptions being thrown there\u2026"}]}]}]}
{"client_msg_id":"ac6437f7-61b7-4eec-aa4c-fb83a85b9779","type":"message","text":"Without","user":"U0NCTKEV8","ts":"1630112955.136400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"2wAHp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Without"}]}]}]}
{"client_msg_id":"7cbd2c7b-1c39-4cc4-89fc-0fac03cc3461","type":"message","text":"An exception bubbling out of a fixture with being caught can cause weird issues","user":"U0NCTKEV8","ts":"1630112925.136000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Bu3s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"An exception bubbling out of a fixture with being caught can cause weird issues"}]}]}]}
{"client_msg_id":"9d0f6b60-ec05-4887-af7a-6ea9a89a02a4","type":"message","text":"Are you using fixtures?","user":"U0NCTKEV8","ts":"1630112882.135200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"=NgMv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you using fixtures?"}]}]}]}
{"client_msg_id":"05ae6930-a1c9-4923-8056-f88fd5f0b50b","type":"message","text":"With redefs doesn't touch clojure test, so an interaction there is unlikely","user":"U0NCTKEV8","ts":"1630112869.134800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"yes","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With redefs doesn't touch clojure test, so an interaction there is unlikely"}]}]}]}
{"client_msg_id":"1ad7a941-f365-4edf-adfc-09c5532ddfce","type":"message","text":"oh i thought clj is running the multiple threads for with-redefs here and was really surprised for a second.\nnah, i\u2019m just doing normal func calls\u2026","user":"U4MT10C4W","ts":"1630112778.133700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"yVV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh i thought clj is running the multiple threads for with-redefs here and was really surprised for a second.\nnah, i\u2019m just doing normal func calls\u2026"}]}]}]}
{"client_msg_id":"27b4306c-f75c-4fbb-8887-01335165897a","type":"message","text":"It should be fairly obvious where are starting a new thread of execution","user":"U0NCTKEV8","ts":"1630112673.131500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"FJL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It should be fairly obvious where are starting a new thread of execution"}]}]}]}
{"client_msg_id":"8cf9d119-3e7d-4052-81a9-aca79a8c5bc1","type":"message","text":"That is just my first immediate guess as to why your assertions are failing, but the test is not","user":"U0NCTKEV8","ts":"1630112647.130800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"PIXSe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is just my first immediate guess as to why your assertions are failing, but the test is not"}]}]}]}
{"client_msg_id":"4b2aab78-c310-4e51-88f9-293a8468072b","type":"message","text":"oh didn\u2019t know that. how can i fix this?","user":"U4MT10C4W","ts":"1630112546.129500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"lbmb8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh didn\u2019t know that. how can i fix this?"}]}]}]}
{"client_msg_id":"0a36399c-3322-4d93-9d09-ffbdc77ccedc","type":"message","text":"You are running the test assertion on another thread","user":"U0NCTKEV8","ts":"1630112474.129000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"TYr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You are running the test assertion on another thread"}]}]}]}
{"client_msg_id":"97c69553-e0b0-40a6-9a29-629c9b86ec36","type":"message","text":"Async nonsense","user":"U0NCTKEV8","ts":"1630112456.128400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"\/DHZ9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Async nonsense"}]}]}],"reactions":[{"name":"point_up","users":["UEENNMX0T"],"count":1}]}
{"client_msg_id":"0b1427e2-61c0-40ef-999b-25201065d2e1","type":"message","text":"is it possible to use `clojure.test\/is` inside `with-redefs`? when running `lein test`, I am getting FAIL for assertion but the tests are not failing\u2026","user":"U4MT10C4W","ts":"1630112308.128100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"f=5o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is it possible to use "},{"type":"text","text":"clojure.test\/is","style":{"code":true}},{"type":"text","text":" inside "},{"type":"text","text":"with-redefs","style":{"code":true}},{"type":"text","text":"? when running "},{"type":"text","text":"lein test","style":{"code":true}},{"type":"text","text":", I am getting FAIL for assertion but the tests are not failing\u2026"}]}]}]}
{"client_msg_id":"d6c5f54a-ed58-4970-9e3b-64f5bf61f347","type":"message","text":"I guess it depends if you're trying to do some real kind of program equivalence? Or just want like your Code Diffs to reflect only code change and not any formatting. For the latter zprint is really good, for the former, I mean.... good luck :stuck_out_tongue:","user":"U0K064KQV","ts":"1630112250.126900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Z=IG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess it depends if you're trying to do some real kind of program equivalence? Or just want like your Code Diffs to reflect only code change and not any formatting. For the latter zprint is really good, for the former, I mean.... good luck "},{"type":"emoji","name":"stuck_out_tongue"}]}]}]}
{"client_msg_id":"d7c0e74e-7e3e-4145-8414-d7e5d3831093","type":"message","text":"You'll still run into equivalence issues with variable names, etc, and clojure isn't strongly normalize","user":"U0NCTKEV8","ts":"1630112152.125600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"XST","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You'll still run into equivalence issues with variable names, etc, and clojure isn't strongly normalize"}]}]}],"reactions":[{"name":"point_up","users":["UEENNMX0T"],"count":1}]}
{"client_msg_id":"E7D45FCC-FB7D-45FF-8AC1-F9553074A37A","type":"message","text":"Does lsp have the command line arg api yet? That could maybe solve this with no dependency inside the project","user":"U11BV7MTK","ts":"1630112127.125200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ZX+vx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does lsp have the command line arg api yet? That could maybe solve this with no dependency inside the project"}]}]}]}
{"client_msg_id":"3b0ab097-36f8-4dfd-81ad-20363e6a0cae","type":"message","text":"classic zprint -- ignores whitespace in function definitions and formats code with a variety of heuristics to look as good as hand-formatted code","user":"U0K064KQV","ts":"1630112026.123500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"m0y2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"classic zprint -- ignores whitespace in function definitions and formats code with a variety of heuristics to look as good as hand-formatted code"}]}]}]}
{"client_msg_id":"32de3462-89e4-4a95-a82b-00639598f954","type":"message","text":"and just save the source string as-is, that makes sense :see_no_evil:","user":"U051GFP2V","ts":"1630111877.123100","team":"T03RZGPFR","edited":{"user":"U051GFP2V","ts":"1630111896.000000"},"blocks":[{"type":"rich_text","block_id":"iuD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and just save the source string as-is, that makes sense "},{"type":"emoji","name":"see_no_evil"}]}]}]}
{"client_msg_id":"cdfcfb3c-c819-4521-890b-1e78bd61aee4","type":"message","text":"Then define a hash based on the data structure after reading, not based on the serialized format","user":"U0NCTKEV8","ts":"1630111844.122700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Kgw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Then define a hash based on the data structure after reading, not based on the serialized format"}]}]}]}
{"client_msg_id":"430653da-5927-45ad-9a48-45bcbcbc45f8","type":"message","text":"otherwise I\u2019d just do (pr-str (read-string source-string))","user":"U051GFP2V","ts":"1630111807.121500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"box","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"otherwise I\u2019d just do (pr-str (read-string source-string))"}]}]}]}
{"client_msg_id":"e0dd7ac8-4dd3-4e13-b849-6ae6f57d5ec5","type":"message","text":"Yeah I actually want to make sure identical programs collide even if they\u2019re whitespaces are indented differently, but I want to keep a (sorta) readable copy of the programs around too","user":"U051GFP2V","ts":"1630111776.121000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"uUzc4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah I actually want to make sure identical programs collide even if they\u2019re whitespaces are indented differently, but I want to keep a (sorta) readable copy of the programs around too"}]}]}]}
{"client_msg_id":"283e6a76-58db-4b23-a030-91aa2de98e06","type":"message","text":"Hum, well it seems they want a formatter, which you'd normally use as a tool in your build I'd assume. Not a pretty-printer (though it can do that too)","user":"U0K064KQV","ts":"1630111726.120200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Dh1o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum, well it seems they want a formatter, which you'd normally use as a tool in your build I'd assume. Not a pretty-printer (though it can do that too)"}]}]}]}
{"client_msg_id":"ce5821be-12c2-45b4-ad68-b7e82c237bc1","type":"message","text":"Anything you want except avoiding adding a new dependency :upside_down_face:","user":"U0NCTKEV8","ts":"1630111589.119200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"0rj9w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anything you want except avoiding adding a new dependency "},{"type":"emoji","name":"upside_down_face"}]}]}],"reactions":[{"name":"joy","users":["U3ES97LAC"],"count":1}]}
{"client_msg_id":"d3ebf61d-47fc-46e8-9089-a1862e7ba8b0","type":"message","text":"Its supposed to be a code re-writer, so it doesn't just re-format, it rewrites the code using the defined rules.","user":"U0K064KQV","ts":"1630111544.118500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Q+c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its supposed to be a code re-writer, so it doesn't just re-format, it rewrites the code using the defined rules."}]}]}]}
{"attachments":[{"color":"24292f","fallback":"kkinnear\/zprint","fields":[{"title":"Stars","value":"384","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"kkinnear\/zprint","id":1,"app_unfurl_url":"https:\/\/github.com\/kkinnear\/zprint","text":"Executables, uberjar, and library to beautifully format Clojure and Clojurescript source code and s-expressions.","bot_id":"B0213V66QKT"}],"type":"message","ts":"1630111486.117900","team":"T03RZGPFR","client_msg_id":"fd86ae26-3db7-494d-9d22-1a1c7b4c7688","blocks":[{"type":"rich_text","block_id":"7rnr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Zprint can probably do whatever you want: "},{"type":"link","url":"https:\/\/github.com\/kkinnear\/zprint"}]}]}],"user":"U0K064KQV","reactions":[{"name":"point_up","users":["UEENNMX0T"],"count":1}],"text":"Zprint can probably do whatever you want: <https:\/\/github.com\/kkinnear\/zprint>"}
{"client_msg_id":"d86fce03-0f22-409a-ba73-b601cd758351","type":"message","text":"I usually use the code format feature of clojure.pprint, it isn't entirely to my taste but 80\/20","user":"U0NCTKEV8","ts":"1630111371.117500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"6FXG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I usually use the code format feature of clojure.pprint, it isn't entirely to my taste but 80\/20"}]}]}]}
{"client_msg_id":"d4fb4b7d-8a66-499f-8bdb-8ed096f778f1","type":"message","text":"Yeah, I think cljfmt would work iff I remove newlines myself first. but if not, then anything with [[:block 0]] will not map the same way, since:\n```(foo bar                           (foo bar\nbaz            == formats to =&gt;         baz\nbang)                                   bang)```\nbut\n```(foo bar baz bang)   == formats to =&gt;   (foo bar baz bang)```\n","user":"U051GFP2V","ts":"1630110703.116400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"vfwf=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I think cljfmt would work iff I remove newlines myself first. but if not, then anything with [[:block 0]] will not map the same way, since:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(foo bar                           (foo bar\nbaz            == formats to =>         baz\nbang)                                   bang)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(foo bar baz bang)   == formats to =>   (foo bar baz bang)"}]},{"type":"rich_text_section","elements":[]}]}]}
{"client_msg_id":"75ae0b55-4895-48dd-bae3-c513a7424cbd","type":"message","text":"look at cljfmt","user":"U060FKQPN","ts":"1630110433.113800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Myw4I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"look at cljfmt"}]}]}]}
{"subscribed":false,"reply_users":["U45T93RA6"],"type":"message","thread_ts":"1630110415.113600","reply_users_count":1,"ts":"1630110415.113600","team":"T03RZGPFR","client_msg_id":"5281922d-0d84-4c62-b908-eb9edffb1fd3","blocks":[{"type":"rich_text","block_id":"kPnQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am looking to make:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn reverse-a-string [s] (apply str (reverse s)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn\n  reverse-a-string\n  [s]\n  (apply\n   str\n   (reverse\n    s))\n  )"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"map to the same semi-readable thing, or collide, as it were."}]}]}],"is_locked":false,"user":"U051GFP2V","reply_count":1,"latest_reply":"1630125214.144300","text":"I am looking to make:\n```(defn reverse-a-string [s] (apply str (reverse s)))```\nand\n```(defn\n  reverse-a-string\n  [s]\n  (apply\n   str\n   (reverse\n    s))\n  )```\nmap to the same semi-readable thing, or collide, as it were."}
{"subscribed":false,"reply_users":["U45T93RA6"],"type":"message","thread_ts":"1630110415.113600","reply_users_count":1,"ts":"1630110415.113600","team":"T03RZGPFR","client_msg_id":"5281922d-0d84-4c62-b908-eb9edffb1fd3","blocks":[{"type":"rich_text","block_id":"kPnQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am looking to make:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn reverse-a-string [s] (apply str (reverse s)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn\n  reverse-a-string\n  [s]\n  (apply\n   str\n   (reverse\n    s))\n  )"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"map to the same semi-readable thing, or collide, as it were."}]}]}],"is_locked":false,"user":"U051GFP2V","reply_count":1,"latest_reply":"1630125214.144300","text":"I am looking to make:\n```(defn reverse-a-string [s] (apply str (reverse s)))```\nand\n```(defn\n  reverse-a-string\n  [s]\n  (apply\n   str\n   (reverse\n    s))\n  )```\nmap to the same semi-readable thing, or collide, as it were."}
{"type":"message","thread_ts":"1630110415.113600","ts":"1630125214.144300","parent_user_id":"U051GFP2V","team":"T03RZGPFR","client_msg_id":"26d5f034-3df3-42cd-b519-ae4cf4346909","blocks":[{"type":"rich_text","block_id":"=qVAO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"zprint with its new `:style :rod` option get very close to this (if I understand you correctly)"}]}]}],"user":"U45T93RA6","text":"zprint with its new `:style :rod` option get very close to this (if I understand you correctly)"}
{"client_msg_id":"158a5632-f60d-493d-b81f-03708c833d69","type":"message","text":"What\u2019s a good way to deterministically and sort-of-sanely indent clojure code?","user":"U051GFP2V","ts":"1630110328.111900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"xuGs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What\u2019s a good way to deterministically and sort-of-sanely indent clojure code?"}]}]}]}
{"client_msg_id":"69d8c117-54b2-4885-9e9e-d94213d521a1","type":"message","text":"I've brought a lot of lisp-y idioms into it at least :)","user":"U060FKQPN","ts":"1630108990.110900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"D\/8HH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've brought a lot of lisp-y idioms into it at least :)"}]}]}]}
{"client_msg_id":"4ed92b07-3371-416c-9bbf-eb65d9c3352a","type":"message","text":"and back to ocaml he went :slightly_smiling_face:","user":"U11BV7MTK","ts":"1630108955.110500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"mWw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and back to ocaml he went "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]}
{"client_msg_id":"ab4bb424-bd45-497f-a9d1-a11e2892a6db","type":"message","text":"fun times","user":"U060FKQPN","ts":"1630108944.110300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Ivu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"fun times"}]}]}]}
{"client_msg_id":"3b9f8eb8-a888-459b-ae4a-1a6c2c2b69da","type":"message","text":"I remember not touching that code in a couple of months and then trying my demos on the last hour of the flight to baltimore, and nothing worked","user":"U060FKQPN","ts":"1630108943.110000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"dRfyM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I remember not touching that code in a couple of months and then trying my demos on the last hour of the flight to baltimore, and nothing worked"}]}]}]}
{"client_msg_id":"d5cfb158-d98a-48bf-95d4-19cfcfe904c9","type":"message","text":"i'll have to rewatch to remind myself :slightly_smiling_face:","user":"U11BV7MTK","ts":"1630108904.109300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"1zk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i'll have to rewatch to remind myself "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]}
{"client_msg_id":"4b9be4be-fd1d-4f40-aefc-91241abc0021","type":"message","text":"well, it was abusing core.match so mutch that the generated code hit some hotspot bugs, so I had to change how core.match compiled expressions to get around that :)","user":"U060FKQPN","ts":"1630108884.109100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"N\/IY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well, it was abusing core.match so mutch that the generated code hit some hotspot bugs, so I had to change how core.match compiled expressions to get around that :)"}]}]}]}
{"client_msg_id":"9d17d85b-4615-4083-bc78-ffce2786f283","type":"message","text":"i remember being astonished that he stated casually \" i had to create a new backend for clojure.match to match macro expansion back into the original macros\". that's the gist but i might be misremembering some bits of it. really incredible","user":"U11BV7MTK","ts":"1630108813.108200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"K7nq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i remember being astonished that he stated casually \" i had to create a new backend for clojure.match to match macro expansion back into the original macros\". that's the gist but i might be misremembering some bits of it. really incredible"}]}]}]}
{"client_msg_id":"ab897e31-7a50-4399-8554-efa35dbbcbe4","type":"message","text":"`<https:\/\/www.youtube.com\/watch?v=2SGFeegEt9E>` is the talk","user":"U11BV7MTK","ts":"1630108745.107000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"T3p","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/www.youtube.com\/watch?v=2SGFeegEt9E","style":{"code":true}},{"type":"text","text":" is the talk"}]}]}]}
{"client_msg_id":"19061915-8ffe-4a4d-9c1f-6f98345bc610","type":"message","text":"That's actually awesome!","user":"U0K064KQV","ts":"1630108669.106700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"l+CLE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's actually awesome!"}]}]}]}
{"client_msg_id":"30e72e4b-51ff-4453-a9fb-eaa6ff59547a","type":"message","text":"Is it this: <https:\/\/github.com\/Bronsa\/tools.decompiler> ?","user":"U0K064KQV","ts":"1630108547.106400","team":"T03RZGPFR","attachments":[{"color":"24292f","fallback":"Bronsa\/tools.decompiler","fields":[{"title":"Stars","value":"63","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"Bronsa\/tools.decompiler","id":1,"app_unfurl_url":"https:\/\/github.com\/Bronsa\/tools.decompiler","text":"A decompiler for clojure, in clojure","bot_id":"B0213V66QKT"}],"blocks":[{"type":"rich_text","block_id":"MtY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it this: "},{"type":"link","url":"https:\/\/github.com\/Bronsa\/tools.decompiler"},{"type":"text","text":" ?"}]}]}]}
{"client_msg_id":"5efc7b70-7680-4d8a-8280-7b66334562c2","type":"message","text":"bronsa made one and released the source a week after his talk with the fun challenge to decompile it if you were interested","user":"U11BV7MTK","ts":"1630108442.105800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"G9994","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"bronsa made one and released the source a week after his talk with the fun challenge to decompile it if you were interested"}]}]}],"reactions":[{"name":"simple_smile","users":["U060FKQPN"],"count":1}]}
{"client_msg_id":"b6d79cb6-4b89-4bc2-a41e-5b26b015f4e0","type":"message","text":"It be interesting to see a decompiler for Clojure. There are some for Java, but it be neat to go byte-code -&gt; Clojure code, or byte-code -&gt; java code -&gt; clojure code (mostly for educational purpose)","user":"U0K064KQV","ts":"1630108348.104800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"gfy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It be interesting to see a decompiler for Clojure. There are some for Java, but it be neat to go byte-code -> Clojure code, or byte-code -> java code -> clojure code (mostly for educational purpose)"}]}]}]}
{"client_msg_id":"5227D3A7-64A2-4E4D-9932-7D9CC1647697","type":"message","text":"The underlying source-fn might be more useful than the macro","user":"U064X3EF3","ts":"1630107463.101900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"D9sl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The underlying source-fn might be more useful than the macro"}]}]}],"reactions":[{"name":"+1","users":["U051GFP2V"],"count":1}]}
{"client_msg_id":"8c42eaaf-1e47-49a6-8018-762bdacca713","type":"message","text":"`source` had slipped my mind, I was going to roll my own `source` . But maybe I will simply use it directly","user":"U051GFP2V","ts":"1630107269.101300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"+n=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"source","style":{"code":true}},{"type":"text","text":" had slipped my mind, I was going to roll my own "},{"type":"text","text":"source","style":{"code":true}},{"type":"text","text":" . But maybe I will simply use it directly"}]}]}]}
{"client_msg_id":"b4a32268-2744-4655-a1de-145bd030961c","type":"message","text":"The source isn't retained in the compiled code so there's nothing else out of the box that you could do.","user":"U04V70XH6","ts":"1630106442.099200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Lsd5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The source isn't retained in the compiled code so there's nothing else out of the box that you could do."}]}]}]}
{"client_msg_id":"9beb7807-01d2-4266-8933-158c960cfd4e","type":"message","text":"Or are you asking for an alternative to the implementation of `source` which, yes, reads the source file and finds the var at that location?","user":"U04V70XH6","ts":"1630106351.098300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"fbT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or are you asking for an alternative to the implementation of "},{"type":"text","text":"source","style":{"code":true}},{"type":"text","text":" which, yes, reads the source file and finds the var at that location?"}]}]}]}
{"client_msg_id":"d1ed0618-ec14-49c4-8ddc-0f35c7b729a9","type":"message","text":"<@U051GFP2V> You mean when `(source fn-name)` doesn't work?","user":"U04V70XH6","ts":"1630106168.097200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"3eR","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U051GFP2V"},{"type":"text","text":" You mean when "},{"type":"text","text":"(source fn-name)","style":{"code":true}},{"type":"text","text":" doesn't work?"}]}]}]}
{"client_msg_id":"af29dcb8-a2a4-4a03-bd3e-9da3feed45c5","type":"message","text":"Is there a better way to get the source code for a function\u2019s var than slurping the file, line, and column number and read-stringing it?","user":"U051GFP2V","ts":"1630106115.096800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ZncJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a better way to get the source code for a function\u2019s var than slurping the file, line, and column number and read-stringing it?"}]}]}]}
{"client_msg_id":"4c0d6559-1173-4559-9c9f-e646d377897b","type":"message","text":"and there must be something else eliding the tools.logging `log*` function and going up to your own caller in the impl somewhere...","user":"U051SS2EU","ts":"1630100816.094700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"\/tf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and there must be something else eliding the tools.logging "},{"type":"text","text":"log*","style":{"code":true}},{"type":"text","text":" function and going up to your own caller in the impl somewhere..."}]}]}]}
{"client_msg_id":"b6be71a3-8b1b-4456-871a-cd6fb51f37e1","type":"message","text":"So that gets `*ns*` at compile time rather than runtime, where it's bound to the top-level calling ns or something?","user":"U04V70XH6","ts":"1630100792.094100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"lB4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So that gets "},{"type":"text","text":"*ns*","style":{"code":true}},{"type":"text","text":" at compile time rather than runtime, where it's bound to the top-level calling ns or something?"}]}]}]}
{"client_msg_id":"e53f98ab-f3f4-4459-9541-87f75107ab25","type":"message","text":"<https:\/\/github.com\/clojure\/tools.logging\/blob\/master\/src\/main\/clojure\/clojure\/tools\/logging.clj#L74>","user":"U04V70XH6","ts":"1630100757.093000","team":"T03RZGPFR","attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/clojure\/tools.logging\/blob\/master\/src\/main\/clojure\/clojure\/tools\/logging.clj | logging.clj>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/clojure\/tools.logging|clojure\/tools.logging>","title":"<https:\/\/github.com\/clojure\/tools.logging\/blob\/master\/src\/main\/clojure\/clojure\/tools\/logging.clj | logging.clj>","id":1,"app_unfurl_url":"https:\/\/github.com\/clojure\/tools.logging\/blob\/master\/src\/main\/clojure\/clojure\/tools\/logging.clj#L74","text":"```\n    `(log ~*ns* ~level ~throwable ~message))\n```","bot_id":"B0213V66QKT"}],"blocks":[{"type":"rich_text","block_id":"w\/E","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/clojure\/tools.logging\/blob\/master\/src\/main\/clojure\/clojure\/tools\/logging.clj#L74"}]}]}]}
{"client_msg_id":"2cc6a5ed-dbc3-4b42-8230-fb1d5901d6ec","type":"message","text":"Isn't the macro wrapper in `tools.logging` at least partly to get `*ns*` correct?","user":"U04V70XH6","ts":"1630100711.092800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"yZa9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Isn't the macro wrapper in "},{"type":"text","text":"tools.logging","style":{"code":true}},{"type":"text","text":" at least partly to get "},{"type":"text","text":"*ns*","style":{"code":true}},{"type":"text","text":" correct?"}]}]}]}
{"client_msg_id":"0d6222b1-a328-4064-b6ad-976758c06ee4","type":"message","text":"OK, that makes sense, and what I saw was every time I wrote a function to wrap a logging macro I'd end up seeing my function falsely reported as the location","user":"U051SS2EU","ts":"1630100709.092700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"sGM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, that makes sense, and what I saw was every time I wrote a function to wrap a logging macro I'd end up seeing my function falsely reported as the location"}]}]}]}
{"client_msg_id":"7aaf525d-e50f-4573-8fa6-d69d8941ae64","type":"message","text":"a lot of Java things use stack introspection for that I think","user":"U064X3EF3","ts":"1630100546.091600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"536","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a lot of Java things use stack introspection for that I think"}]}]}]}
{"client_msg_id":"7958a8d0-4520-4eaf-a278-1d1f74aaa76a","type":"message","text":"double checking, I see that tools.logging at least does use a function underlying the macro - there must be some other layer taking care of the call site reporting(?)","user":"U051SS2EU","ts":"1630100277.091300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"EZOo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"double checking, I see that tools.logging at least does use a function underlying the macro - there must be some other layer taking care of the call site reporting(?)"}]}]}]}
{"client_msg_id":"a057a2e3-289c-40df-a93a-73b0247e6201","type":"message","text":"Thank you both for input. Still laughing about the docstring of the `apply-macro`. Gotta love this community.","user":"UKRGQ3NCD","ts":"1630100229.090500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"hjZXW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you both for input. Still laughing about the docstring of the "},{"type":"text","text":"apply-macro","style":{"code":true}},{"type":"text","text":". Gotta love this community."}]}]}]}
{"client_msg_id":"8e8fd52d-6224-4273-be44-b266a29d229c","type":"message","text":"I could be misremembering though it's been a while","user":"U051SS2EU","ts":"1630100153.089200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"kL38","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I could be misremembering though it's been a while"}]}]}]}
{"client_msg_id":"d77e9e1a-a826-4102-a6ad-358bfc138653","type":"message","text":"That's the other option <@U064X3EF3>, but it would be stepping in beside the intended public boundary of the library. I think.","user":"UKRGQ3NCD","ts":"1630100150.088900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ZiFKa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's the other option "},{"type":"user","user_id":"U064X3EF3"},{"type":"text","text":", but it would be stepping in beside the intended public boundary of the library. I think."}]}]}]}
{"client_msg_id":"4c9dcd80-01af-4ab7-9956-cca58b163bf9","type":"message","text":"so you end up with a macro that generates an interop form","user":"U051SS2EU","ts":"1630100143.088700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"cj5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you end up with a macro that generates an interop form"}]}]}]}
{"client_msg_id":"a87ad30a-e485-4eb9-afba-c1e866302e7d","type":"message","text":"<@U064X3EF3> I thought that it usually doesn't because that pollutes the underlying log lib functionality of showing class \/ method","user":"U051SS2EU","ts":"1630100128.088200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"yS0","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U064X3EF3"},{"type":"text","text":" I thought that it usually doesn't because that pollutes the underlying log lib functionality of showing class \/ method"}]}]}]}
{"client_msg_id":"c9b73af1-bdeb-4639-bf93-75004979be7a","type":"message","text":"presumably that log macro calls some log function - can you just call that directly?","user":"U064X3EF3","ts":"1630100087.086700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"qrBf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"presumably that log macro calls some log function - can you just call that directly?"}]}]}]}
{"client_msg_id":"c2b00e8d-054a-47c8-8f9a-3c3dcc305b62","type":"message","text":"or if the access patterns are predictable, you write another macro that unwraps the data in the way you want and calls the logging macro on the result","user":"U051SS2EU","ts":"1630100074.086300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"N6AFY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or if the access patterns are predictable, you write another macro that unwraps the data in the way you want and calls the logging macro on the result"}]}]}]}
{"client_msg_id":"e8c8b45f-d276-4d71-b693-a7abec82edaf","type":"message","text":"I agree (if I understand you correctly) that the answer is a macro. But I've been deeply instilled with irrational macro-fear so I was hoping to avoid having to learn new things but it seems it has caught up with me.","user":"UKRGQ3NCD","ts":"1630100065.086000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"NwR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree (if I understand you correctly) that the answer is a macro. But I've been deeply instilled with irrational macro-fear so I was hoping to avoid having to learn new things but it seems it has caught up with me."}]}]}]}
{"client_msg_id":"e1ee0bca-9459-4c32-9f9b-5395def333c1","type":"message","text":"perhaps you'd be interested in the subject of structured logging - it's a whole thing and it's oriented to serializable data structures (usually via json) rather than strings","user":"U051SS2EU","ts":"1630100005.084600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"uSmie","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"perhaps you'd be interested in the subject of structured logging - it's a whole thing and it's oriented to serializable data structures (usually via json) rather than strings"}]}]}]}
{"client_msg_id":"b598e237-285c-4745-900a-67a7884a3a3e","type":"message","text":"then surely the solution is to use the accessing code for the data you want to log and call it in the macro invocation?","user":"U051SS2EU","ts":"1630099960.083500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"o\/kp8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then surely the solution is to use the accessing code for the data you want to log and call it in the macro invocation?"}]}]}]}
{"client_msg_id":"6b28e731-76fb-4af9-bb9b-4a1c806b63e7","type":"message","text":"```(defmacro apply-macro\n  \"This is evil.  Don't ever use it.  It makes a macro behave like a\n  function.  Seriously, how messed up is that?```","user":"UKRGQ3NCD","ts":"1630099933.083000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"5DQO","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmacro apply-macro\n  \"This is evil.  Don't ever use it.  It makes a macro behave like a\n  function.  Seriously, how messed up is that?"}]}]}]}
{"client_msg_id":"65b98d98-3ef8-4036-a6cd-23f7ca68eceb","type":"message","text":"<@U051SS2EU> found it in some dark corners of the deprecated contrib package. :slightly_smiling_face:","user":"UKRGQ3NCD","ts":"1630099919.082400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"LG43R","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U051SS2EU"},{"type":"text","text":" found it in some dark corners of the deprecated contrib package. "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]}
{"client_msg_id":"43083dd4-8974-4023-9441-0321719e0fb4","type":"message","text":"of course if the macro you wrap uses `&amp; args` you use `~@` to splice the args into the call in your macro","user":"U051SS2EU","ts":"1630099893.081800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"BHBiX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"of course if the macro you wrap uses "},{"type":"text","text":"& args","style":{"code":true}},{"type":"text","text":" you use "},{"type":"text","text":"~@","style":{"code":true}},{"type":"text","text":" to splice the args into the call in your macro"}]}]}]}
{"client_msg_id":"642eba0e-9971-41d7-ac79-fe767c69ad65","type":"message","text":"Because I have what I want logged in a neat collection, but the loggging macro always seem to want it destructed, unrolled, whatever it's called. \"listed without a surrounding collection\". Sorry for Friday-evening aphasia.","user":"UKRGQ3NCD","ts":"1630099881.081400","team":"T03RZGPFR","edited":{"user":"UKRGQ3NCD","ts":"1630099969.000000"},"blocks":[{"type":"rich_text","block_id":"dWWMd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because I have what I want logged in a neat collection, but the loggging macro always seem to want it destructed, unrolled, whatever it's called. \"listed without a surrounding collection\". Sorry for Friday-evening aphasia."}]}]}]}
{"client_msg_id":"8503f01f-9bff-4aaa-96d2-0c473ca3acef","type":"message","text":"<@UKRGQ3NCD> what do you mean by \"revive\" - did apply-macro exist somewhere? a macro only sees the literal form to expand so I fail to understand how apply would help","user":"U051SS2EU","ts":"1630099825.080200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"tNi","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UKRGQ3NCD"},{"type":"text","text":" what do you mean by \"revive\" - did apply-macro exist somewhere? a macro only sees the literal form to expand so I fail to understand how apply would help"}]}]}]}
{"client_msg_id":"1711c5c0-e841-4376-9898-fa13346ff5fb","type":"message","text":"so in practice when I use logging libs I usually end up writing macros to extend the logging macros","user":"U051SS2EU","ts":"1630099705.078800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"hDfy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so in practice when I use logging libs I usually end up writing macros to extend the logging macros"}]}]}]}
{"client_msg_id":"00f0ce2b-59ec-4d12-8b51-e2f5d59ecf19","type":"message","text":"they love macros because because java logging libs all tell you which method is logging the call, and if you called the logging lib from a function it would always report that function's `.invoke` method instead of your actual call site","user":"U051SS2EU","ts":"1630099670.078300","team":"T03RZGPFR","edited":{"user":"U051SS2EU","ts":"1630099751.000000"},"blocks":[{"type":"rich_text","block_id":"tsMBx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"they love macros because because java logging libs all tell you which method is logging the call, and if you called the logging lib from a function it would always report that function's "},{"type":"text","text":".invoke","style":{"code":true}},{"type":"text","text":" method instead of your actual call site"}]}]}]}
{"client_msg_id":"a2a2798d-cb96-40eb-9a76-4fd1666823a1","type":"message","text":"why do you want to apply them?","user":"U064X3EF3","ts":"1630099654.078000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"gS9t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why do you want to apply them?"}]}]}]}
{"client_msg_id":"d53dcdaf-6b9e-46de-9ea6-9d5fa611f38c","type":"message","text":"For some reason log libraries seem to love using macros. They also seem to rely on  `&amp; args` a lot. That makes me want to `apply` them. Am I an evil person? Do I dare revive `apply-macro`?","user":"UKRGQ3NCD","ts":"1630099576.076900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ipitj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For some reason log libraries seem to love using macros. They also seem to rely on  "},{"type":"text","text":"& args","style":{"code":true}},{"type":"text","text":" a lot. That makes me want to "},{"type":"text","text":"apply","style":{"code":true}},{"type":"text","text":" them. Am I an evil person? Do I dare revive "},{"type":"text","text":"apply-macro","style":{"code":true}},{"type":"text","text":"?"}]}]}]}
{"client_msg_id":"3816726f-7131-4dff-b47b-2ac564f01d8e","type":"message","text":"I had a component that depended on sente (as the sink \/ source of data) plus all the components needed to implement the handlers, and it used a router","user":"U051SS2EU","ts":"1630097297.072600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"+uX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I had a component that depended on sente (as the sink \/ source of data) plus all the components needed to implement the handlers, and it used a router"}]}]}]}
{"subscribed":false,"reply_users":["U2FRKM4TW","U051SS2EU","U064UGEUQ"],"type":"message","thread_ts":"1630097219.071300","reply_users_count":3,"ts":"1630097219.071300","team":"T03RZGPFR","client_msg_id":"0566651b-a05a-433b-a87c-feb749a48cd5","blocks":[{"type":"rich_text","block_id":"Qa9Tw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do people typically use sente in webapps with many components when the sente handlers need access to those other components (such as a db)? Do you just have a routing function that assoc's into the sente event message all the needed components?"}]}]}],"is_locked":false,"user":"U064UGEUQ","reply_count":9,"latest_reply":"1630097950.074500","text":"How do people typically use sente in webapps with many components when the sente handlers need access to those other components (such as a db)? Do you just have a routing function that assoc's into the sente event message all the needed components?"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U051SS2EU","U064UGEUQ"],"type":"message","thread_ts":"1630097219.071300","reply_users_count":3,"ts":"1630097219.071300","team":"T03RZGPFR","client_msg_id":"0566651b-a05a-433b-a87c-feb749a48cd5","blocks":[{"type":"rich_text","block_id":"Qa9Tw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do people typically use sente in webapps with many components when the sente handlers need access to those other components (such as a db)? Do you just have a routing function that assoc's into the sente event message all the needed components?"}]}]}],"is_locked":false,"user":"U064UGEUQ","reply_count":9,"latest_reply":"1630097950.074500","text":"How do people typically use sente in webapps with many components when the sente handlers need access to those other components (such as a db)? Do you just have a routing function that assoc's into the sente event message all the needed components?"}
{"type":"message","thread_ts":"1630097219.071300","ts":"1630097287.072200","parent_user_id":"U064UGEUQ","team":"T03RZGPFR","client_msg_id":"64d41e3e-33a4-46a8-aa77-bd3c2286e76d","blocks":[{"type":"rich_text","block_id":"OCY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Have something else know about both Sente and your DB connection."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"100","users":["U051SS2EU"],"count":1}],"text":"Have something else know about both Sente and your DB connection."}
{"type":"message","thread_ts":"1630097219.071300","ts":"1630097330.072800","parent_user_id":"U064UGEUQ","team":"T03RZGPFR","client_msg_id":"e145d048-c2c0-4672-812e-ac5ac75b469c","blocks":[{"type":"rich_text","block_id":"lvpxl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah - doing this right should look a lot like how ring does http"}]}]}],"user":"U051SS2EU","text":"yeah - doing this right should look a lot like how ring does http"}
{"type":"message","thread_ts":"1630097219.071300","edited":{"user":"U064UGEUQ","ts":"1630097419.000000"},"ts":"1630097407.073200","parent_user_id":"U064UGEUQ","team":"T03RZGPFR","client_msg_id":"9162ecda-b23f-4e02-af1f-dc13325a9955","blocks":[{"type":"rich_text","block_id":"TSHJZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But that other thing would have to use some of the internals of the sente message right? If you want to use the "},{"type":"text","text":":?reply-fn","style":{"code":true}},{"type":"text","text":" for example"}]}]}],"user":"U064UGEUQ","text":"But that other thing would have to use some of the internals of the sente message right? If you want to use the `:?reply-fn` for example"}
{"type":"message","thread_ts":"1630097219.071300","ts":"1630097439.073500","parent_user_id":"U064UGEUQ","team":"T03RZGPFR","client_msg_id":"74fe2c40-11bf-4339-bf58-182874be5609","blocks":[{"type":"rich_text","block_id":"uhO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":":?reply-fn","style":{"code":true}},{"type":"text","text":" is not an internal..? It's a part of its API."}]}]}],"user":"U2FRKM4TW","text":"`:?reply-fn` is not an internal..? It's a part of its API."}
{"type":"message","thread_ts":"1630097219.071300","ts":"1630097553.073700","parent_user_id":"U064UGEUQ","team":"T03RZGPFR","client_msg_id":"c4a578ef-3c20-4af5-9c5e-9edb1e34cec4","blocks":[{"type":"rich_text","block_id":"1wt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Good point, I guess what I meant was, so you are still just directly using the sente event map contents in your other thing without wrapping it, right?"}]}]}],"user":"U064UGEUQ","text":"Good point, I guess what I meant was, so you are still just directly using the sente event map contents in your other thing without wrapping it, right?"}
{"type":"message","thread_ts":"1630097219.071300","ts":"1630097706.073900","parent_user_id":"U064UGEUQ","team":"T03RZGPFR","client_msg_id":"a06ad042-57ab-4441-832b-270982ff1111","blocks":[{"type":"rich_text","block_id":"cYMf8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what I did was include the entire sente map under a key, alongside some other data added on"}]}]}],"user":"U051SS2EU","text":"what I did was include the entire sente map under a key, alongside some other data added on"}
{"type":"message","thread_ts":"1630097219.071300","ts":"1630097734.074100","parent_user_id":"U064UGEUQ","team":"T03RZGPFR","client_msg_id":"4e1d9198-3743-4e6c-95e2-b1382d50b997","blocks":[{"type":"rich_text","block_id":"mGDH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Gotcha, thanks!"}]}]}],"user":"U064UGEUQ","text":"Gotcha, thanks!"}
{"type":"message","thread_ts":"1630097219.071300","ts":"1630097833.074300","parent_user_id":"U064UGEUQ","team":"T03RZGPFR","client_msg_id":"8a390df6-34ee-46d4-8889-ffe29abbac7f","blocks":[{"type":"rich_text","block_id":"pSxw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have four components - Sente, DB, function registry (similar to multimethods but with more bells and whistles), and what I'll call the \"manager\" here.\nThe manager starts and monitors a Sente connection. Upon an incoming message, it finds the right function in the registry, performs some checks, and calls it with the DB connection details.\nThe functions that run business logic don't know about Sente - only about the DB. Which, of course, could also be extracted into some other layer - I just didn't bother to do that."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"+1","users":["U064UGEUQ"],"count":1}],"text":"I have four components - Sente, DB, function registry (similar to multimethods but with more bells and whistles), and what I'll call the \"manager\" here.\nThe manager starts and monitors a Sente connection. Upon an incoming message, it finds the right function in the registry, performs some checks, and calls it with the DB connection details.\nThe functions that run business logic don't know about Sente - only about the DB. Which, of course, could also be extracted into some other layer - I just didn't bother to do that."}
{"type":"message","thread_ts":"1630097219.071300","ts":"1630097950.074500","parent_user_id":"U064UGEUQ","team":"T03RZGPFR","client_msg_id":"abadb3b9-5134-4a9a-b2ba-081f7f319d38","blocks":[{"type":"rich_text","block_id":"Gzt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I emulated ring (since the entire team had already spent the work to internalize using that model), so we had middleware functions to provide stateful resources to handlers, a router to pick and invoke handlers, etc."}]}]}],"user":"U051SS2EU","reactions":[{"name":"+1","users":["U064UGEUQ"],"count":1}],"text":"I emulated ring (since the entire team had already spent the work to internalize using that model), so we had middleware functions to provide stateful resources to handlers, a router to pick and invoke handlers, etc."}
{"subscribed":false,"reply_users":["U2FRKM4TW","U026NQLSBLH","U051SS2EU"],"type":"message","thread_ts":"1630095532.067700","reply_users_count":3,"edited":{"user":"U026NQLSBLH","ts":"1630095569.000000"},"ts":"1630095532.067700","team":"T03RZGPFR","client_msg_id":"8e19d0e7-4ed4-4e24-a69a-8d85988e89a9","blocks":[{"type":"rich_text","block_id":"9T89","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":"scan-files-in-dir","style":{"code":true}},{"type":"text","text":" function does not use any atoms. It only iterates over the result of "},{"type":"text","text":"(.list (io\/file directory))","style":{"code":true}}]}]}],"is_locked":false,"user":"U026NQLSBLH","reply_count":12,"latest_reply":"1630097386.073000","text":"The `scan-files-in-dir` function does not use any atoms. It only iterates over the result of `(.list (io\/file directory))`"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U026NQLSBLH","U051SS2EU"],"type":"message","thread_ts":"1630095532.067700","reply_users_count":3,"edited":{"user":"U026NQLSBLH","ts":"1630095569.000000"},"ts":"1630095532.067700","team":"T03RZGPFR","client_msg_id":"8e19d0e7-4ed4-4e24-a69a-8d85988e89a9","blocks":[{"type":"rich_text","block_id":"9T89","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":"scan-files-in-dir","style":{"code":true}},{"type":"text","text":" function does not use any atoms. It only iterates over the result of "},{"type":"text","text":"(.list (io\/file directory))","style":{"code":true}}]}]}],"is_locked":false,"user":"U026NQLSBLH","reply_count":12,"latest_reply":"1630097386.073000","text":"The `scan-files-in-dir` function does not use any atoms. It only iterates over the result of `(.list (io\/file directory))`"}
{"type":"message","thread_ts":"1630095532.067700","ts":"1630095948.068100","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"540ceb82-fb4e-45fe-b691-cf3df42d879f","blocks":[{"type":"rich_text","block_id":"hkAL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please post the source code of "},{"type":"text","text":"scan-files-in-dir","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"Please post the source code of `scan-files-in-dir`."}
{"type":"message","thread_ts":"1630095532.067700","edited":{"user":"U026NQLSBLH","ts":"1630096178.000000"},"ts":"1630096044.068300","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"ffc08852-9e08-4b92-a7d9-28ae7a10fdb4","blocks":[{"type":"rich_text","block_id":"CF0y","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn- scan-files-in-dir\n  [directory]\n  (flatten\n    (for [file (.list (io\/file directory))]\n      (if (.isDirectory (io\/file file))\n        (scan-files-in-dir file)\n        file))))"}]}]}],"user":"U026NQLSBLH","text":"```(defn- scan-files-in-dir\n  [directory]\n  (flatten\n    (for [file (.list (io\/file directory))]\n      (if (.isDirectory (io\/file file))\n        (scan-files-in-dir file)\n        file))))```"}
{"type":"message","thread_ts":"1630095532.067700","ts":"1630096071.068600","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"0d0d58ea-0b1b-4370-b4ca-6f424496789c","blocks":[{"type":"rich_text","block_id":"pQ=bs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It recursively scans all files in directory"}]}]}],"user":"U026NQLSBLH","text":"It recursively scans all files in directory"}
{"type":"message","thread_ts":"1630095532.067700","ts":"1630096111.068800","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"28bf5375-da73-4168-8774-1051ffb2d16c","blocks":[{"type":"rich_text","block_id":"w5eS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And what does "},{"type":"text","text":"scan","style":{"code":true}},{"type":"text","text":" do?"}]}]}],"user":"U2FRKM4TW","text":"And what does `scan` do?"}
{"type":"message","thread_ts":"1630095532.067700","ts":"1630096172.069000","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"4b6cbe29-30f8-4f09-b0c0-1a70e41d8fc3","blocks":[{"type":"rich_text","block_id":"r1P=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oops, sorry, it's calling scan-files-in-dir, forgot to rename, it's a recursive function"}]}]}],"user":"U026NQLSBLH","text":"Oops, sorry, it's calling scan-files-in-dir, forgot to rename, it's a recursive function"}
{"type":"message","thread_ts":"1630095532.067700","ts":"1630096220.069300","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"ef30b93c-82e2-4d13-a802-d26cbaa28921","blocks":[{"type":"rich_text","block_id":"cLlG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you sure you haven't redefined some of the built-in functions?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Clojure 1.10.2\nuser=> (require '[clojure.java.io :as io])\nnil\n(defn- scan-files-in-dir\n  [directory]\n  (flatten\n    (for [file (.list (io\/file directory))]\n      (if (.isDirectory (io\/file file))\n        (scan-files-in-dir file)\n        file))))\n#'user\/scan-files-in-dir\n(repeatedly #(let [files-in-dir (scan-files-in-dir \".\/\")]\n                   (prn \"new iteration\")\n                   (Thread\/sleep 1000)))\n(\"new iteration\"\n\"new iteration\"\nnil \"new iteration\"\nnil \"new iteration\"\nnil \"new iteration\""}]}]}],"user":"U2FRKM4TW","text":"Are you sure you haven't redefined some of the built-in functions?\n```Clojure 1.10.2\nuser=&gt; (require '[<http:\/\/clojure.java.io|clojure.java.io> :as io])\nnil\n(defn- scan-files-in-dir\n  [directory]\n  (flatten\n    (for [file (.list (io\/file directory))]\n      (if (.isDirectory (io\/file file))\n        (scan-files-in-dir file)\n        file))))\n#'user\/scan-files-in-dir\n(repeatedly #(let [files-in-dir (scan-files-in-dir \".\/\")]\n                   (prn \"new iteration\")\n                   (Thread\/sleep 1000)))\n(\"new iteration\"\n\"new iteration\"\nnil \"new iteration\"\nnil \"new iteration\"\nnil \"new iteration\"```"}
{"type":"message","thread_ts":"1630095532.067700","edited":{"user":"U2FRKM4TW","ts":"1630096257.000000"},"ts":"1630096249.069500","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"fe41d85c-fbe8-4817-9117-953f833d2de7","blocks":[{"type":"rich_text","block_id":"rhp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might have something like "},{"type":"text","text":"(def flatten (atom nil))","style":{"code":true}},{"type":"text","text":" somewhere in the same namespace."}]}]}],"user":"U2FRKM4TW","text":"You might have something like `(def flatten (atom nil))` somewhere in the same namespace."}
{"type":"message","thread_ts":"1630095532.067700","ts":"1630096646.069800","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"a1b60c22-aa2a-4169-ae52-2da5e1545fb5","blocks":[{"type":"rich_text","block_id":"sHTY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay so in my "},{"type":"text","text":"scan","style":{"code":true}},{"type":"text","text":" for loop I also use a :when, I thought it wouldn't matter so I excluded that. So I removed the :when, which had no side effects, and it started working. So the "},{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":" :when uses atoms I guess?"}]}]}],"user":"U026NQLSBLH","text":"Okay so in my `scan` for loop I also use a :when, I thought it wouldn't matter so I excluded that. So I removed the :when, which had no side effects, and it started working. So the `for` :when uses atoms I guess?"}
{"type":"message","thread_ts":"1630095532.067700","ts":"1630096778.070000","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"4ee96dd1-b07c-4253-8f8e-7233ea9de2a7","blocks":[{"type":"rich_text","block_id":"DxFbt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"On each step, you're omitting crucial information. What did your "},{"type":"text","text":":when","style":{"code":true}},{"type":"text","text":" have in it? If it's a function, what's its definition? What are the definitions of all the functions it uses?"}]}]}],"user":"U2FRKM4TW","text":"On each step, you're omitting crucial information. What did your `:when` have in it? If it's a function, what's its definition? What are the definitions of all the functions it uses?"}
{"type":"message","thread_ts":"1630095532.067700","edited":{"user":"U051SS2EU","ts":"1630097058.000000"},"ts":"1630097036.070200","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"532079f5-585c-4ac0-8c4a-f5990c4e2f25","blocks":[{"type":"rich_text","block_id":"+o8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":" is not a loop"}]}]}],"user":"U051SS2EU","text":"`for` is not a loop"}
{"type":"message","thread_ts":"1630095532.067700","ts":"1630097245.071500","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"185e17d7-c412-4b65-98a5-3123ab6e954a","blocks":[{"type":"rich_text","block_id":"Mx0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, not sure what the goal is here but there's the built in "},{"type":"text","text":"file-seq","style":{"code":true}},{"type":"text","text":" for getting a list of recursive subdirectories and files"}]}]}],"user":"U051SS2EU","reactions":[{"name":"heavy_plus_sign","users":["U0P0TMEFJ"],"count":1}],"text":"also, not sure what the goal is here but there's the built in `file-seq` for getting a list of recursive subdirectories and files"}
{"type":"message","thread_ts":"1630095532.067700","ts":"1630097386.073000","parent_user_id":"U026NQLSBLH","team":"T03RZGPFR","client_msg_id":"255adc52-3929-44bb-8b2a-679e607cf00b","blocks":[{"type":"rich_text","block_id":"Rzt2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right. And also there are libraries out there that watch for file changes for you, much more efficiently than a busy loop with a delay (I assume later there will be a check for modification dates, given how the code looked originally)."}]}]}],"user":"U2FRKM4TW","text":"Right. And also there are libraries out there that watch for file changes for you, much more efficiently than a busy loop with a delay (I assume later there will be a check for modification dates, given how the code looked originally)."}
{"client_msg_id":"782dec38-c901-4bc2-b624-2d02728991a5","type":"message","text":"Why is it that this code works:\n```(repeatedly #(let [files-in-dir nil]\n                   (prn \"new iteration\")\n                   (Thread\/sleep 1000)))```\nWhereas if I actually try to read files in a directory like so:\n```(repeatedly #(let [files-in-dir (scan-files-in-dir \".\/\")]\n                   (prn \"new iteration\")\n                   (Thread\/sleep 1000)))```\nI get a error:\n\"class clojure.lang.Atom cannot be cast to class clojure.lang.IFn\"","user":"U026NQLSBLH","ts":"1630095498.067200","team":"T03RZGPFR","edited":{"user":"U026NQLSBLH","ts":"1630095912.000000"},"blocks":[{"type":"rich_text","block_id":"iQ5O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why is it that this code works:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(repeatedly #(let [files-in-dir nil]\n                   (prn \"new iteration\")\n                   (Thread\/sleep 1000)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Whereas if I actually try to read files in a directory like so:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(repeatedly #(let [files-in-dir (scan-files-in-dir \".\/\")]\n                   (prn \"new iteration\")\n                   (Thread\/sleep 1000)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I get a error:\n\"class clojure.lang.Atom cannot be cast to class clojure.lang.IFn\""}]}]}]}
{"subscribed":false,"reply_users":["UHD67JRL4","U04V4KLKC","U1V7K1YTZ"],"type":"message","thread_ts":"1630077957.061000","reply_users_count":3,"ts":"1630077957.061000","team":"T03RZGPFR","client_msg_id":"2af9a964-1c9a-4e87-9df1-fa48da9119b0","blocks":[{"type":"rich_text","block_id":"HA1Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi, please advice\n\nif I need to implement something like this in clojure:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"import java.sql.SQLData;\n\nclass Address implements SQLData {\n\n  public String street;\n  public String city;\n  public String state;\n  public String zip;\n\n  public String getSQLTypeName() { \n    return \"address\";\n  }\n\n  public void readSQL(SQLInput stream, String typeName) throws java.sql.SQLException { \n    street = stream.readString();\n    city = stream.readString();\n    state = stream.readString();\n    zip = stream.readString();\n  }\n\n  public void writeSQL (SQLOutput stream) throws SQLException { \n    stream.writeString(street);\n    stream.writeString(city);\n    stream.writeString(state);\n    stream.writeString(zip);\n  }\n\n}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\ni should look into the defrecord?\nnot sure tho how i can specify fields with types"}]}]}],"is_locked":false,"user":"U1V7K1YTZ","reply_count":5,"latest_reply":"1630078192.062000","text":"hi, please advice\n\nif I need to implement something like this in clojure:\n```import java.sql.SQLData;\n\nclass Address implements SQLData {\n\n  public String street;\n  public String city;\n  public String state;\n  public String zip;\n\n  public String getSQLTypeName() { \n    return \"address\";\n  }\n\n  public void readSQL(SQLInput stream, String typeName) throws java.sql.SQLException { \n    street = stream.readString();\n    city = stream.readString();\n    state = stream.readString();\n    zip = stream.readString();\n  }\n\n  public void writeSQL (SQLOutput stream) throws SQLException { \n    stream.writeString(street);\n    stream.writeString(city);\n    stream.writeString(state);\n    stream.writeString(zip);\n  }\n\n}```\ni should look into the defrecord?\nnot sure tho how i can specify fields with types"}
{"subscribed":false,"reply_users":["UHD67JRL4","U04V4KLKC","U1V7K1YTZ"],"type":"message","thread_ts":"1630077957.061000","reply_users_count":3,"ts":"1630077957.061000","team":"T03RZGPFR","client_msg_id":"2af9a964-1c9a-4e87-9df1-fa48da9119b0","blocks":[{"type":"rich_text","block_id":"HA1Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi, please advice\n\nif I need to implement something like this in clojure:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"import java.sql.SQLData;\n\nclass Address implements SQLData {\n\n  public String street;\n  public String city;\n  public String state;\n  public String zip;\n\n  public String getSQLTypeName() { \n    return \"address\";\n  }\n\n  public void readSQL(SQLInput stream, String typeName) throws java.sql.SQLException { \n    street = stream.readString();\n    city = stream.readString();\n    state = stream.readString();\n    zip = stream.readString();\n  }\n\n  public void writeSQL (SQLOutput stream) throws SQLException { \n    stream.writeString(street);\n    stream.writeString(city);\n    stream.writeString(state);\n    stream.writeString(zip);\n  }\n\n}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\ni should look into the defrecord?\nnot sure tho how i can specify fields with types"}]}]}],"is_locked":false,"user":"U1V7K1YTZ","reply_count":5,"latest_reply":"1630078192.062000","text":"hi, please advice\n\nif I need to implement something like this in clojure:\n```import java.sql.SQLData;\n\nclass Address implements SQLData {\n\n  public String street;\n  public String city;\n  public String state;\n  public String zip;\n\n  public String getSQLTypeName() { \n    return \"address\";\n  }\n\n  public void readSQL(SQLInput stream, String typeName) throws java.sql.SQLException { \n    street = stream.readString();\n    city = stream.readString();\n    state = stream.readString();\n    zip = stream.readString();\n  }\n\n  public void writeSQL (SQLOutput stream) throws SQLException { \n    stream.writeString(street);\n    stream.writeString(city);\n    stream.writeString(state);\n    stream.writeString(zip);\n  }\n\n}```\ni should look into the defrecord?\nnot sure tho how i can specify fields with types"}
{"attachments":[{"color":"24292f","fallback":"metabase\/toucan","fields":[{"title":"Stars","value":"477","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"metabase\/toucan","id":1,"app_unfurl_url":"https:\/\/github.com\/metabase\/toucan","text":"A classy high-level Clojure library for defining application models and retrieving them from a DB","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630077957.061000","ts":"1630078053.061100","parent_user_id":"U1V7K1YTZ","team":"T03RZGPFR","client_msg_id":"bf966c97-c1da-4f14-bfe3-f345b789691e","blocks":[{"type":"rich_text","block_id":"gJ9x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can use "},{"type":"channel","channel_id":"CLDK6MFMK"},{"type":"text","text":" for doing coercion of your data before saving it into the database. Also, check "},{"type":"link","url":"https:\/\/github.com\/metabase\/toucan"},{"type":"text","text":" it may solve your problem out of the box."}]}]}],"user":"UHD67JRL4","text":"You can use <#CLDK6MFMK|malli> for doing coercion of your data before saving it into the database. Also, check <https:\/\/github.com\/metabase\/toucan> it may solve your problem out of the box."}
{"type":"message","thread_ts":"1630077957.061000","ts":"1630078159.061400","parent_user_id":"U1V7K1YTZ","team":"T03RZGPFR","client_msg_id":"719bebad-81ff-432e-86d2-6120daca5080","blocks":[{"type":"rich_text","block_id":"6YY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"`reify` will be enough\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(reify SQLData\n  (getSQLTypeName [this] \"address\")\n  (readSQL [this stream type-name])\n  (writeSQL [this stream]))"}]},{"type":"rich_text_section","elements":[]}]}],"user":"U04V4KLKC","text":"`reify` will be enough\n```(reify SQLData\n  (getSQLTypeName [this] \"address\")\n  (readSQL [this stream type-name])\n  (writeSQL [this stream]))```\n"}
{"type":"message","thread_ts":"1630077957.061000","ts":"1630078161.061600","parent_user_id":"U1V7K1YTZ","team":"T03RZGPFR","client_msg_id":"45fb22fe-0ed0-44ca-82be-3969701c49a9","blocks":[{"type":"rich_text","block_id":"Z0T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you for the suggestion, but I\u2019d like to use SQLData"}]}]}],"user":"U1V7K1YTZ","text":"thank you for the suggestion, but I\u2019d like to use SQLData"}
{"type":"message","thread_ts":"1630077957.061000","ts":"1630078190.061800","parent_user_id":"U1V7K1YTZ","team":"T03RZGPFR","client_msg_id":"6a0e5dfa-aa86-4fa1-8dae-e1abb154a75c","blocks":[{"type":"rich_text","block_id":"\/lkg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"indeed, i dont need fields\u2026"}]}]}],"user":"U1V7K1YTZ","text":"indeed, i dont need fields\u2026"}
{"type":"message","thread_ts":"1630077957.061000","edited":{"user":"U1V7K1YTZ","ts":"1630078195.000000"},"ts":"1630078192.062000","parent_user_id":"U1V7K1YTZ","team":"T03RZGPFR","client_msg_id":"439570c5-3535-4da4-9dd9-bb9f07fb564d","blocks":[{"type":"rich_text","block_id":"7VPP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you!"}]}]}],"user":"U1V7K1YTZ","text":"thank you!"}
{"subscribed":false,"reply_users":["UE21H2HHD","U064X3EF3","U0K064KQV"],"type":"message","thread_ts":"1630077781.059300","reply_users_count":3,"ts":"1630077781.059300","team":"T03RZGPFR","client_msg_id":"a1842dff-7546-4ab0-aaf1-06edb7401809","blocks":[{"type":"rich_text","block_id":"E=Vg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, don't use import-vars"}]}]}],"is_locked":false,"user":"U064X3EF3","reply_count":4,"reactions":[{"name":"heavy_plus_sign","users":["U45T93RA6","U050ECB92","U883WCP5Z","U0AT6MBUL","U051SS2EU"],"count":5},{"name":"grimacing","users":["UEENNMX0T"],"count":1}],"latest_reply":"1630106935.099500","text":"also, don't use import-vars"}
{"subscribed":false,"reply_users":["UE21H2HHD","U064X3EF3","U0K064KQV"],"type":"message","thread_ts":"1630077781.059300","reply_users_count":3,"ts":"1630077781.059300","team":"T03RZGPFR","client_msg_id":"a1842dff-7546-4ab0-aaf1-06edb7401809","blocks":[{"type":"rich_text","block_id":"E=Vg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, don't use import-vars"}]}]}],"is_locked":false,"user":"U064X3EF3","reply_count":4,"reactions":[{"name":"heavy_plus_sign","users":["U45T93RA6","U050ECB92","U883WCP5Z","U0AT6MBUL","U051SS2EU"],"count":5},{"name":"grimacing","users":["UEENNMX0T"],"count":1}],"latest_reply":"1630106935.099500","text":"also, don't use import-vars"}
{"type":"message","thread_ts":"1630077781.059300","ts":"1630085107.063200","parent_user_id":"U064X3EF3","team":"T03RZGPFR","client_msg_id":"8e0ad778-a26e-40c7-992a-b7e90b786b68","blocks":[{"type":"rich_text","block_id":"sAM9=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW, "},{"type":"link","url":"https:\/\/github.com\/clj-commons\/rewrite-clj\/blob\/main\/doc\/design\/01-merging-rewrite-clj-and-rewrite-cljs.adoc#potemkin-import-vars","text":"my journey with import-vars in rewrite-clj v1"},{"type":"text","text":".  TLDR: continued with it from rewrite-clj v0, spent tons of of time on it (some of it very educational), found it too costly to deal with, now use code generation."}]}]}],"user":"UE21H2HHD","text":"FWIW, <https:\/\/github.com\/clj-commons\/rewrite-clj\/blob\/main\/doc\/design\/01-merging-rewrite-clj-and-rewrite-cljs.adoc#potemkin-import-vars|my journey with import-vars in rewrite-clj v1>.  TLDR: continued with it from rewrite-clj v0, spent tons of of time on it (some of it very educational), found it too costly to deal with, now use code generation."}
{"type":"message","thread_ts":"1630077781.059300","ts":"1630085177.063600","parent_user_id":"U064X3EF3","team":"T03RZGPFR","client_msg_id":"2851df0e-cd66-4f16-b5b1-8a90a8c0d694","blocks":[{"type":"rich_text","block_id":"C3QeQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the best solution is to just put vars where you want them to be, imho"}]}]}],"user":"U064X3EF3","reactions":[{"name":"slightly_smiling_face","users":["U45T93RA6","UE21H2HHD"],"count":2}],"text":"the best solution is to just put vars where you want them to be, imho"}
{"type":"message","thread_ts":"1630077781.059300","edited":{"user":"U0K064KQV","ts":"1630103965.000000"},"ts":"1630103947.095000","parent_user_id":"U064X3EF3","team":"T03RZGPFR","client_msg_id":"956b17fe-cdda-4a21-bccb-e71ec839377e","blocks":[{"type":"rich_text","block_id":"Mv+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It be neat to have a first class import-vars that is dependable. I feel it fits in the philosophy of Clojure of building open systems that can adapt to changes over time."}]}]}],"user":"U0K064KQV","text":"It be neat to have a first class import-vars that is dependable. I feel it fits in the philosophy of Clojure of building open systems that can adapt to changes over time."}
{"type":"message","thread_ts":"1630077781.059300","ts":"1630106935.099500","parent_user_id":"U064X3EF3","team":"T03RZGPFR","client_msg_id":"ca3beb24-394a-416c-807f-3136fe6451bb","blocks":[{"type":"rich_text","block_id":"xV6C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have no objection to the concept, but I've sensed a strong dislike for it in the community, so I don't think it'll ever come to be.\nAnd ya, just put vars where you want 'em is hard to argue with!"}]}]}],"user":"UE21H2HHD","text":"I have no objection to the concept, but I've sensed a strong dislike for it in the community, so I don't think it'll ever come to be.\nAnd ya, just put vars where you want 'em is hard to argue with!"}
{"client_msg_id":"f28f1bce-cefb-4390-8243-ff328eba10bc","type":"message","text":"that seems far more likely","user":"U064X3EF3","ts":"1630077778.059100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"F\/=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that seems far more likely"}]}]}]}
{"client_msg_id":"53cc7d72-6719-443e-8f1b-e3eebfd0d1b1","type":"message","text":"sadly, slamhound isn\u2019t actively maintained anymore and fails on my project","user":"UEENNMX0T","ts":"1630077624.058900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"IGbW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sadly, slamhound isn\u2019t actively maintained anymore and fails on my project"}]}]}]}
{"client_msg_id":"d547db8d-92b8-4f55-a474-e1768a793ce5","type":"message","text":"looking at it again, i think it\u2019s actually my use of `import-vars` being too big (61 namespaces, 570 vars)","user":"UEENNMX0T","ts":"1630077285.058100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"pxU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"looking at it again, i think it\u2019s actually my use of "},{"type":"text","text":"import-vars","style":{"code":true}},{"type":"text","text":" being too big (61 namespaces, 570 vars)"}]}]}]}
{"client_msg_id":"a239a9c5-ba84-425d-9679-967515cd1876","type":"message","text":"I don't get how :refer :all could cause that error","user":"U064X3EF3","ts":"1630077157.057400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"bS+y+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't get how :refer :all could cause that error"}]}]}]}
{"client_msg_id":"d4f92d44-318c-441b-939a-1a8b4d797b5b","type":"message","text":"and yes i agree with you. i consider `:refer :all` an antipattern apart from clojure.test","user":"U11BV7MTK","ts":"1630077080.056700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"tGNo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and yes i agree with you. i consider "},{"type":"text","text":":refer :all","style":{"code":true}},{"type":"text","text":" an antipattern apart from clojure.test"}]}]}],"reactions":[{"name":"+1","users":["UEENNMX0T","U051GFP2V"],"count":2}]}
{"client_msg_id":"36625483-392e-4f58-87eb-f20379252d16","type":"message","text":"can you start a new repl and do `(require 'game.core)` and see if you get the method too large error?","user":"U11BV7MTK","ts":"1630077058.056300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"LPD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can you start a new repl and do "},{"type":"text","text":"(require 'game.core)","style":{"code":true}},{"type":"text","text":" and see if you get the method too large error?"}]}]}]}
{"client_msg_id":"d449477d-28e9-436f-9f5f-62e9b3954da1","type":"message","text":"better for readability and clarity","user":"UEENNMX0T","ts":"1630076987.055800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"c96=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"better for readability and clarity"}]}]}]}
{"client_msg_id":"8b225140-34d7-467e-912b-e4bb568887f7","type":"message","text":"either way, seems like it\u2019s better to qualify all of these symbols than try to refer them without thought, you know?","user":"UEENNMX0T","ts":"1630076981.055600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"qYk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"either way, seems like it\u2019s better to qualify all of these symbols than try to refer them without thought, you know?"}]}]}]}
{"client_msg_id":"93e08992-7194-4584-b00a-25f7da445f50","type":"message","text":"no, but i\u2019m not sure how else this is happening","user":"UEENNMX0T","ts":"1630076794.054800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"PKFKS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, but i\u2019m not sure how else this is happening"}]}]}]}
{"client_msg_id":"d6c35395-d6f1-4cee-b38f-315b071ac39e","type":"message","text":"are you sure just requiring it is the cause of this?","user":"U11BV7MTK","ts":"1630076776.054500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"zHe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are you sure just requiring it is the cause of this?"}]}]}]}
{"client_msg_id":"c27a6d78-72bc-4b79-8af3-a79089223a33","type":"message","text":"i have a project that exports _a lot_ of symbols and it\u2019s now reached the point where `[game.core :refer :all]` throws a MethodTooLarge error when compiling lol","user":"UEENNMX0T","ts":"1630076673.053800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"aClc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i have a project that exports "},{"type":"text","text":"a lot","style":{"italic":true}},{"type":"text","text":" of symbols and it\u2019s now reached the point where "},{"type":"text","text":"[game.core :refer :all]","style":{"code":true}},{"type":"text","text":" throws a MethodTooLarge error when compiling lol"}]}]}],"reactions":[{"name":"scream_cat","users":["U8QBZBHGD"],"count":1},{"name":"upside_down_face","users":["U08JKUHA9"],"count":1}]}
{"client_msg_id":"83d40818-0b7f-41cc-983a-9db906622f96","type":"message","text":"that sounds really cool and I'm interested","user":"U8QBZBHGD","ts":"1630076634.053200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"rcA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that sounds really cool and I'm interested"}]}]}]}
{"subscribed":false,"reply_users":["U45T93RA6"],"type":"message","thread_ts":"1630076429.052200","reply_users_count":1,"ts":"1630076429.052200","team":"T03RZGPFR","client_msg_id":"3798200d-17c1-4f55-9af8-1ba13ff373a5","blocks":[{"type":"rich_text","block_id":"Kk7xx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a library or plugin that will change a "},{"type":"text","text":"[X.Y :refer :all]","style":{"code":true}},{"type":"text","text":" into a "},{"type":"text","text":"[X.Y :as xy]","style":{"code":true}},{"type":"text","text":" and then qualify all of the referred symbols to qualified symbols?"}]}]}],"is_locked":false,"user":"UEENNMX0T","reply_count":2,"reactions":[{"name":"thinking_face","users":["U8QBZBHGD"],"count":1}],"latest_reply":"1630077916.059900","text":"is there a library or plugin that will change a `[X.Y :refer :all]` into a `[X.Y :as xy]` and then qualify all of the referred symbols to qualified symbols?"}
{"subscribed":false,"reply_users":["U45T93RA6"],"type":"message","thread_ts":"1630076429.052200","reply_users_count":1,"ts":"1630076429.052200","team":"T03RZGPFR","client_msg_id":"3798200d-17c1-4f55-9af8-1ba13ff373a5","blocks":[{"type":"rich_text","block_id":"Kk7xx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a library or plugin that will change a "},{"type":"text","text":"[X.Y :refer :all]","style":{"code":true}},{"type":"text","text":" into a "},{"type":"text","text":"[X.Y :as xy]","style":{"code":true}},{"type":"text","text":" and then qualify all of the referred symbols to qualified symbols?"}]}]}],"is_locked":false,"user":"UEENNMX0T","reply_count":2,"reactions":[{"name":"thinking_face","users":["U8QBZBHGD"],"count":1}],"latest_reply":"1630077916.059900","text":"is there a library or plugin that will change a `[X.Y :refer :all]` into a `[X.Y :as xy]` and then qualify all of the referred symbols to qualified symbols?"}
{"type":"message","thread_ts":"1630076429.052200","ts":"1630077882.059600","parent_user_id":"UEENNMX0T","team":"T03RZGPFR","client_msg_id":"8662e02f-9905-400c-aadf-782cc64f25f8","blocks":[{"type":"rich_text","block_id":"m6ejh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"refactor-nrepl "},{"type":"text","text":"stop-referring","style":{"code":true}},{"type":"text","text":" should do this\n\nwe want to cut a new release these days, honestly I wouldn't bother trying it right now especially for large projects"}]}]}],"user":"U45T93RA6","text":"refactor-nrepl `stop-referring` should do this\n\nwe want to cut a new release these days, honestly I wouldn't bother trying it right now especially for large projects"}
{"type":"message","thread_ts":"1630076429.052200","ts":"1630077916.059900","parent_user_id":"UEENNMX0T","team":"T03RZGPFR","client_msg_id":"b1009efb-197d-437f-b866-9c71994c8f1e","blocks":[{"type":"rich_text","block_id":"HrnID","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also by linting with clj-kondo, it will normally suggest you an "},{"type":"text","text":":as","style":{"code":true}},{"type":"text","text":" vector which you can copy and paste"}]}]}],"user":"U45T93RA6","text":"also by linting with clj-kondo, it will normally suggest you an `:as` vector which you can copy and paste"}
{"client_msg_id":"12699ea7-0d45-4f0a-aa43-61b03142ac38","type":"message","text":"other than Clojure, are there JVM langs which .jar artifacts are primarily distributed as sources?\n\n(I mean for their ecosystems - .jars representing arbitrary libraries from their users. I'm less interested in .jars representing the compilers themselves)\n\ni.e. langs for which AOT distribution is less common, and a `:classifier \"sources\"` artifact will be quite redundant","user":"U45T93RA6","ts":"1630047635.049600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"kWvFv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"other than Clojure, are there JVM langs which .jar artifacts are primarily distributed as sources?\n\n(I mean for their ecosystems - .jars representing arbitrary libraries from their users. I'm less interested in .jars representing the compilers themselves)\n\ni.e. langs for which AOT distribution is less common, and a "},{"type":"text","text":":classifier \"sources\"","style":{"code":true}},{"type":"text","text":" artifact will be quite redundant"}]}]}]}
{"subscribed":false,"reply_users":["U2TLBUVRS","U02AY0CR9CM"],"type":"message","thread_ts":"1630028020.046000","reply_users_count":2,"ts":"1630028020.046000","team":"T03RZGPFR","client_msg_id":"3b6c5a4f-5f8e-4078-9617-95f45bd949b8","blocks":[{"type":"rich_text","block_id":"ERH1H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am looking for cron\/quartz like functionality that is idiomatic to the datomic cloud environment. Any suggestions? Thanks!"}]}]}],"is_locked":false,"user":"U02AY0CR9CM","reply_count":2,"latest_reply":"1630076074.050800","text":"I am looking for cron\/quartz like functionality that is idiomatic to the datomic cloud environment. Any suggestions? Thanks!"}
{"subscribed":false,"reply_users":["U2TLBUVRS","U02AY0CR9CM"],"type":"message","thread_ts":"1630028020.046000","reply_users_count":2,"ts":"1630028020.046000","team":"T03RZGPFR","client_msg_id":"3b6c5a4f-5f8e-4078-9617-95f45bd949b8","blocks":[{"type":"rich_text","block_id":"ERH1H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am looking for cron\/quartz like functionality that is idiomatic to the datomic cloud environment. Any suggestions? Thanks!"}]}]}],"is_locked":false,"user":"U02AY0CR9CM","reply_count":2,"latest_reply":"1630076074.050800","text":"I am looking for cron\/quartz like functionality that is idiomatic to the datomic cloud environment. Any suggestions? Thanks!"}
{"attachments":[{"color":"24292f","fallback":"jarohen\/chime","fields":[{"title":"Stars","value":"405","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"jarohen\/chime","id":1,"app_unfurl_url":"https:\/\/github.com\/jarohen\/chime","text":"A really lightweight Clojure scheduler","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1630028020.046000","ts":"1630038962.046200","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"8dac8388-7524-47f0-a93e-47476c626784","blocks":[{"type":"rich_text","block_id":"YQkd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Check out "},{"type":"link","url":"https:\/\/github.com\/jarohen\/chime"}]}]}],"user":"U2TLBUVRS","reactions":[{"name":"white_check_mark","users":["U08JKUHA9"],"count":1}],"text":"Check out <https:\/\/github.com\/jarohen\/chime>"}
{"type":"message","thread_ts":"1630028020.046000","ts":"1630076074.050800","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"5c27486f-1848-4615-bf68-e702b6e0b4c5","blocks":[{"type":"rich_text","block_id":"9Eo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting, thank you!"}]}]}],"user":"U02AY0CR9CM","text":"Interesting, thank you!"}
{"subscribed":false,"reply_users":["U07S8JGF7","U0NCTKEV8","U050ECB92","U9BTYPZCZ","U04V70XH6"],"type":"message","thread_ts":"1630009167.035600","reply_users_count":5,"ts":"1630009167.035600","team":"T03RZGPFR","client_msg_id":"199BCAEF-86B7-490E-9847-7DA87F8BA0A2","blocks":[{"type":"rich_text","block_id":"=vlK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any way to make an extend-protocol call thead local (or am I trying to do something truly ridiculous)?"}]}]}],"is_locked":false,"user":"U9BTYPZCZ","reply_count":15,"latest_reply":"1630015844.044800","text":"Is there any way to make an extend-protocol call thead local (or am I trying to do something truly ridiculous)?"}
{"subscribed":false,"reply_users":["U07S8JGF7","U0NCTKEV8","U050ECB92","U9BTYPZCZ","U04V70XH6"],"type":"message","thread_ts":"1630009167.035600","reply_users_count":5,"ts":"1630009167.035600","team":"T03RZGPFR","client_msg_id":"199BCAEF-86B7-490E-9847-7DA87F8BA0A2","blocks":[{"type":"rich_text","block_id":"=vlK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any way to make an extend-protocol call thead local (or am I trying to do something truly ridiculous)?"}]}]}],"is_locked":false,"user":"U9BTYPZCZ","reply_count":15,"latest_reply":"1630015844.044800","text":"Is there any way to make an extend-protocol call thead local (or am I trying to do something truly ridiculous)?"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630009787.036000","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"32b129c5-1063-4f28-a779-726fcaebbb7f","blocks":[{"type":"rich_text","block_id":"0yf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe an example?"}]}]}],"user":"U07S8JGF7","text":"Maybe an example?"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630009798.036200","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"62d70c52-12f3-4abc-a763-642a69b5ac4e","blocks":[{"type":"rich_text","block_id":"1Aq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or more description of what you\u2019re trying to do?"}]}]}],"user":"U07S8JGF7","text":"Or more description of what you\u2019re trying to do?"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630009821.036400","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"3afd055b-d22d-4afa-a573-b9e135f5a64f","blocks":[{"type":"rich_text","block_id":"hGg76","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ooooh you want to dispatch to a threadlocal-defined fn?"}]}]}],"user":"U07S8JGF7","text":"ooooh you want to dispatch to a threadlocal-defined fn?"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630009838.036600","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"6d8ae5a9-600e-426c-ab17-15513edf5688","blocks":[{"type":"rich_text","block_id":"CYi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No you can't, yes that is ridiculous"}]}]}],"user":"U0NCTKEV8","text":"No you can't, yes that is ridiculous"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630009844.036800","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"3bae37d1-d06c-4982-90ab-c73362cfbbe8","blocks":[{"type":"rich_text","block_id":"M7I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what the\u2026 you want "},{"type":"text","text":"every thread","style":{"italic":true}},{"type":"text","text":" to behave differently?"}]}]}],"user":"U07S8JGF7","text":"what the\u2026 you want _every thread_ to behave differently?"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630010029.037000","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"74bdd453-f854-4b85-83a6-1d1e563ab8a0","blocks":[{"type":"rich_text","block_id":"DOQku","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah if that\u2019s what you want, just define a different fn for every thread to run"}]}]}],"user":"U07S8JGF7","text":"yeah if that\u2019s what you want, just define a different fn for every thread to run"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630010111.037200","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"2316a2dc-4483-4261-92cb-f8cc06271e33","blocks":[{"type":"rich_text","block_id":"JY0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"..... walk back -- why are you wanting to do this in the first place?"}]}]}],"user":"U050ECB92","text":"..... walk back -- why are you wanting to do this in the first place?"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630010133.037500","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"2f078edc-7c27-40c9-98f9-d7921758dbcd","blocks":[{"type":"rich_text","block_id":"\/=I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"testing concern?"}]}]}],"user":"U050ECB92","text":"testing concern?"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630011293.040700","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"7CC3AF36-B1F7-4F12-9F83-AEF742A1767B","blocks":[{"type":"rich_text","block_id":"eN4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I\u2019ve got some legacy code that extends the clojure.java.jdbc\/IResultSetReadColumn in a way to handle ora timestamps but it doesn\u2019t handle timezones gracefully (assumes DB timestamp is in same tz as localhost)"}]}]}],"user":"U9BTYPZCZ","text":"I\u2019ve got some legacy code that extends the clojure.java.jdbc\/IResultSetReadColumn in a way to handle ora timestamps but it doesn\u2019t handle timezones gracefully (assumes DB timestamp is in same tz as localhost)"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630011437.043700","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"CF811712-79AF-4F5B-AFB3-29DF9EDF4BC3","blocks":[{"type":"rich_text","block_id":"Us9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this logic is used in a number of places so it\u2019s not easy to refactor safely at the moment. That\u2019s ok, thanks for comments all!"}]}]}],"user":"U9BTYPZCZ","text":"this logic is used in a number of places so it\u2019s not easy to refactor safely at the moment. That\u2019s ok, thanks for comments all!"}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630012230.043900","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"25a649d2-2439-4665-9201-5b4ff6616f20","blocks":[{"type":"rich_text","block_id":"yp8fX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your description is a "},{"type":"text","text":"little","style":{"italic":true}},{"type":"text","text":" vague, but if you need a shim via threadlocal, you could set a dynavar "},{"type":"text","text":"*use-special-timestamp-convert*","style":{"code":true}},{"type":"text","text":" via "},{"type":"text","text":"with-bindings","style":{"code":true}},{"type":"text","text":" and have your "},{"type":"text","text":"IResultSetReadColumn","style":{"code":true}},{"type":"text","text":" implementation check that var."}]}]}],"user":"U07S8JGF7","text":"Your description is a _little_ vague, but if you need a shim via threadlocal, you could set a dynavar `*use-special-timestamp-convert*` via `with-bindings` and have your `IResultSetReadColumn` implementation check that var."}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630012251.044100","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"aff26ba7-bc63-4605-961e-f44bcc2fbccd","blocks":[{"type":"rich_text","block_id":"YJC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cannot recommend that for normal usage, but it might get you out of a jam."}]}]}],"user":"U07S8JGF7","text":"Cannot recommend that for normal usage, but it might get you out of a jam."}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630015596.044400","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"557ba50d-aebf-4ba0-a2d1-dfb8fcd7c9c1","blocks":[{"type":"rich_text","block_id":"ON0a","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U9BTYPZCZ"},{"type":"text","text":" You could solve that by using "},{"type":"text","text":"next.jdbc","style":{"code":true}},{"type":"text","text":" for some queries, since it has a more adaptable API. You can create a adapter for a result set builder that can choose to process column values differently."}]}]}],"user":"U04V70XH6","text":"<@U9BTYPZCZ> You could solve that by using `next.jdbc` for some queries, since it has a more adaptable API. You can create a adapter for a result set builder that can choose to process column values differently."}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630015635.044600","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"ae69eb0f-865c-4a3e-a497-b766cf24afc0","blocks":[{"type":"rich_text","block_id":"lVa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"At work, we have both "},{"type":"text","text":"clojure.java.jdbc","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"next.jdbc","style":{"code":true}},{"type":"text","text":" in the same codebase. You have to be careful about transactions (see the migration guide) but it's eminently workable."}]}]}],"user":"U04V70XH6","text":"At work, we have both `clojure.java.jdbc` and `next.jdbc` in the same codebase. You have to be careful about transactions (see the migration guide) but it's eminently workable."}
{"type":"message","thread_ts":"1630009167.035600","ts":"1630015844.044800","parent_user_id":"U9BTYPZCZ","team":"T03RZGPFR","client_msg_id":"c6872dc3-3c44-42d4-81fb-437e4e1af4b3","blocks":[{"type":"rich_text","block_id":"Gx6\/O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and in "},{"type":"text","text":"next.jdbc","style":{"code":true}},{"type":"text","text":" the "},{"type":"text","text":"ReadableColumn","style":{"code":true}},{"type":"text","text":" protocol is extensible via metadata so a builder adapter's column reader can wrap\/annotate column values before "},{"type":"text","text":"read-column-by-index","style":{"code":true}},{"type":"text","text":" is called)"}]}]}],"user":"U04V70XH6","text":"(and in `next.jdbc` the `ReadableColumn` protocol is extensible via metadata so a builder adapter's column reader can wrap\/annotate column values before `read-column-by-index` is called)"}
{"subscribed":false,"reply_users":["U09LZR36F","U07FP7QJ0","U064X3EF3","U0K064KQV","U051B9FU1"],"type":"message","thread_ts":"1629984675.020400","reply_users_count":5,"ts":"1629984675.020400","team":"T03RZGPFR","client_msg_id":"c719fcd5-fffe-45a9-b727-7edbbabfb653","blocks":[{"type":"rich_text","block_id":"B6tK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"seems there is a discrepancy when using data_readers.clj(c) and "},{"type":"text","text":"read-string","style":{"code":true}},{"type":"text","text":"\nI have a tagged reader function which returns a quoted form, which if I'm not mistaken is the right way to go about making cross platform reader functions\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":";; data_readers.cljc\n{ordered\/map flatland.ordered.map\/ordered-map-reader}\n\n;; ordered\/map.clj\n(defn ordered-map-reader [args]\n  `(ordered-map ~(vec args)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"this works indeed in Clojure and ClojureScript, but when doing a "},{"type":"text","text":"(read-string \"#ordered\/map []\")","style":{"code":true}},{"type":"text","text":" I get the quoted form back unevaluated: "},{"type":"text","text":"(flatland.ordered.map\/ordered-map [])","style":{"code":true}}]}]}],"is_locked":false,"user":"U07FP7QJ0","reply_count":38,"latest_reply":"1630060580.050100","text":"seems there is a discrepancy when using data_readers.clj(c) and `read-string`\nI have a tagged reader function which returns a quoted form, which if I'm not mistaken is the right way to go about making cross platform reader functions\n```;; data_readers.cljc\n{ordered\/map flatland.ordered.map\/ordered-map-reader}\n\n;; ordered\/map.clj\n(defn ordered-map-reader [args]\n  `(ordered-map ~(vec args)))```\nthis works indeed in Clojure and ClojureScript, but when doing a `(read-string \"#ordered\/map []\")` I get the quoted form back unevaluated: `(flatland.ordered.map\/ordered-map [])`"}
{"subscribed":false,"reply_users":["U09LZR36F","U07FP7QJ0","U064X3EF3","U0K064KQV","U051B9FU1"],"type":"message","thread_ts":"1629984675.020400","reply_users_count":5,"ts":"1629984675.020400","team":"T03RZGPFR","client_msg_id":"c719fcd5-fffe-45a9-b727-7edbbabfb653","blocks":[{"type":"rich_text","block_id":"B6tK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"seems there is a discrepancy when using data_readers.clj(c) and "},{"type":"text","text":"read-string","style":{"code":true}},{"type":"text","text":"\nI have a tagged reader function which returns a quoted form, which if I'm not mistaken is the right way to go about making cross platform reader functions\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":";; data_readers.cljc\n{ordered\/map flatland.ordered.map\/ordered-map-reader}\n\n;; ordered\/map.clj\n(defn ordered-map-reader [args]\n  `(ordered-map ~(vec args)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"this works indeed in Clojure and ClojureScript, but when doing a "},{"type":"text","text":"(read-string \"#ordered\/map []\")","style":{"code":true}},{"type":"text","text":" I get the quoted form back unevaluated: "},{"type":"text","text":"(flatland.ordered.map\/ordered-map [])","style":{"code":true}}]}]}],"is_locked":false,"user":"U07FP7QJ0","reply_count":38,"latest_reply":"1630060580.050100","text":"seems there is a discrepancy when using data_readers.clj(c) and `read-string`\nI have a tagged reader function which returns a quoted form, which if I'm not mistaken is the right way to go about making cross platform reader functions\n```;; data_readers.cljc\n{ordered\/map flatland.ordered.map\/ordered-map-reader}\n\n;; ordered\/map.clj\n(defn ordered-map-reader [args]\n  `(ordered-map ~(vec args)))```\nthis works indeed in Clojure and ClojureScript, but when doing a `(read-string \"#ordered\/map []\")` I get the quoted form back unevaluated: `(flatland.ordered.map\/ordered-map [])`"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629984886.020700","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"3ee28dbb-7c69-42d0-afe2-3d3d8d11e068","blocks":[{"type":"rich_text","block_id":"mNDc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This only works in cljs, there's a JIRA about this for cljs to support #? so you can do different implementations as required."}]}]}],"user":"U09LZR36F","text":"This only works in cljs, there's a JIRA about this for cljs to support #? so you can do different implementations as required."}
{"type":"message","thread_ts":"1629984675.020400","edited":{"user":"U07FP7QJ0","ts":"1629985006.000000"},"ts":"1629984998.020900","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"c096dd66-0674-49e1-86ee-047d8f1a152a","blocks":[{"type":"rich_text","block_id":"5wZpf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have seen that ticket, but that seems to be a separate issue. I've done cross-platform readers without that multiple times, just never noticed the "},{"type":"text","text":"read-string","style":{"code":true}},{"type":"text","text":" behavior"}]}]}],"user":"U07FP7QJ0","text":"I have seen that ticket, but that seems to be a separate issue. I've done cross-platform readers without that multiple times, just never noticed the `read-string` behavior"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629985036.021200","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"40faee36-d7c4-4898-be50-38a0d320989e","blocks":[{"type":"rich_text","block_id":"LIKA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to be clear, a literal "},{"type":"text","text":"#ordered\/map []","style":{"code":true}},{"type":"text","text":" in the source code works this way in clj and cljs just fine"}]}]}],"user":"U07FP7QJ0","text":"to be clear, a literal `#ordered\/map []` in the source code works this way in clj and cljs just fine"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629985061.021400","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"21871850-65cc-42a3-bfac-2c29f4a1ef24","blocks":[{"type":"rich_text","block_id":"8AEbY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To be clear, Clojure doesn't really support returning a quoted for from a tagged reader in order to return an object."}]}]}],"user":"U09LZR36F","text":"To be clear, Clojure doesn't really support returning a quoted for from a tagged reader in order to return an object."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629985127.021600","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"da7b469c-39ba-496e-b825-bbaeb3f4e422","blocks":[{"type":"rich_text","block_id":"fw1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and yet it's behavior I rely on daily"}]}]}],"user":"U07FP7QJ0","text":"and yet it's behavior I rely on daily"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629985167.021800","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"07c5d939-8249-4138-883a-138c8674ffd7","blocks":[{"type":"rich_text","block_id":"PSS6W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Clojure does evaluate the quoted form when you return it from a reader literal"}]}]}],"user":"U07FP7QJ0","text":"Clojure does evaluate the quoted form when you return it from a reader literal"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629985371.022200","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"bdb220bc-e8b2-4f2e-9d72-45f9e0b6a9a1","blocks":[{"type":"rich_text","block_id":"Ytad6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, but that's not the intended usage afaik."}]}]}],"user":"U09LZR36F","text":"Right, but that's not the intended usage afaik."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629985663.022600","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"f9ec94b9-c3d0-455a-9681-2aa451f94717","blocks":[{"type":"rich_text","block_id":"Bq7A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting, this is news to me."}]}]}],"user":"U07FP7QJ0","text":"Interesting, this is news to me."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629985766.022800","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"64c72068-7568-4cdc-9e81-bdaa27196b2d","blocks":[{"type":"rich_text","block_id":"6Sm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"worked around it as such, which does break in some edge cases, but all in all works fairly well\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn ordered-map-reader [coll]\n  (if (some-> (resolve 'cljs.env\/*compiler*) deref)\n    `(ordered-map ~(vec coll))\n    (ordered-map coll)))"}]}]}],"user":"U07FP7QJ0","text":"worked around it as such, which does break in some edge cases, but all in all works fairly well\n```(defn ordered-map-reader [coll]\n  (if (some-&gt; (resolve 'cljs.env\/*compiler*) deref)\n    `(ordered-map ~(vec coll))\n    (ordered-map coll)))```"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629985948.023000","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"08f893b1-6c80-4ffe-bc8a-2c10009d6651","blocks":[{"type":"rich_text","block_id":"RI=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"heh, funky"}]}]}],"user":"U09LZR36F","text":"heh, funky"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629986581.023200","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"3c10ead9-dd64-4bc7-a32a-71c2582a093f","blocks":[{"type":"rich_text","block_id":"p=N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"data reader functions should return data, not code"}]}]}],"user":"U064X3EF3","text":"data reader functions should return data, not code"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629986585.023400","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"5fc4da2e-2d34-49a6-84e2-e1d4402a27b1","blocks":[{"type":"rich_text","block_id":"lY4=+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(in Clojure)"}]}]}],"user":"U064X3EF3","text":"(in Clojure)"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629986982.023600","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"c0d38d33-e4cf-4474-a6ff-c4d307ffc57e","blocks":[{"type":"rich_text","block_id":"cX8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"objects are a kind of data, right? "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":" (e.g. uuids)"}]}]}],"user":"U09LZR36F","text":"objects are a kind of data, right? :stuck_out_tongue: (e.g. uuids)"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629987057.023800","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"2547c9bb-d6df-40e3-a975-7f466a84a67a","blocks":[{"type":"rich_text","block_id":"Vtf2x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"user":"U064X3EF3","text":"yes"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629987074.024000","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"2ebcdd95-301b-4ffa-8d9d-e7be1cea1328","blocks":[{"type":"rich_text","block_id":"KVA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you are reading a value - return the value"}]}]}],"user":"U064X3EF3","text":"you are reading a value - return the value"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629987206.024200","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"e2348633-2687-4a03-bbcc-d889cb858d66","blocks":[{"type":"rich_text","block_id":"bqcpN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so cross platform reader conditionals are not officially supported?"}]}]}],"user":"U07FP7QJ0","text":"so cross platform reader conditionals are not officially supported?"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629987341.024600","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"ae58faba-6f84-4801-bd72-4d6c5f273a47","blocks":[{"type":"rich_text","block_id":"=EVSb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No.  ClojureScript has different considerations due to serialization."}]}]}],"user":"U09LZR36F","text":"No.  ClojureScript has different considerations due to serialization."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629987356.024800","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"e452c29a-0867-47c3-ac15-f3e92c184028","blocks":[{"type":"rich_text","block_id":"kljsb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I belive you can support cljs in this way by extending a multi-method in cljs.analyzer somewhere"}]}]}],"user":"U09LZR36F","text":"I belive you can support cljs in this way by extending a multi-method in cljs.analyzer somewhere"}
{"attachments":[{"color":"24292f","fallback":"henryw374\/time-literals","fields":[{"title":"Stars","value":"40","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"henryw374\/time-literals","id":1,"app_unfurl_url":"https:\/\/github.com\/henryw374\/time-literals","text":"Clojure(Script) tagged literals for jsr-310 ( java.time) entities","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629984675.020400","ts":"1629987600.025200","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"7dfd6bfc-400e-4645-bc52-87acc9481139","blocks":[{"type":"rich_text","block_id":"Z3Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"people are doing it in practice though, see for instance "},{"type":"link","url":"https:\/\/github.com\/henryw374\/time-literals"}]}]}],"user":"U07FP7QJ0","text":"people are doing it in practice though, see for instance <https:\/\/github.com\/henryw374\/time-literals>"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629987659.025500","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"aeea7db7-8ddf-4739-8e65-7a4b71eb71e9","blocks":[{"type":"rich_text","block_id":"40q1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, but in an effort to make that actually work Henry is pursuing the aforementioned cljs jira ticket."}]}]}],"user":"U09LZR36F","text":"Right, but in an effort to make that actually work Henry is pursuing the aforementioned cljs jira ticket."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629988392.025800","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"b2ee9632-5112-49d3-96f2-6e38fb24f6d1","blocks":[{"type":"rich_text","block_id":"nHtK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can't speak to the cljs concerns, I'm just telling you the Clojure expectations. I'm not sure anyone has actually intentionally considered the design constraints around portable data readers."}]}]}],"user":"U064X3EF3","text":"I can't speak to the cljs concerns, I'm just telling you the Clojure expectations. I'm not sure anyone has actually intentionally considered the design constraints around portable data readers."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629988540.026000","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"f13c89b9-38f9-4f66-8c19-a2694c4a3156","blocks":[{"type":"rich_text","block_id":"Iix","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in general, reading does not imply eval (particularly with edn, which is only about reading). the idea is that *during read*, you can pluggably read a data value that has a tagged literal representation"}]}]}],"user":"U064X3EF3","text":"in general, reading does not imply eval (particularly with edn, which is only about reading). the idea is that *during read*, you can pluggably read a data value that has a tagged literal representation"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629988623.026200","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"811cb0b7-403a-4a4f-a143-c3612076922d","blocks":[{"type":"rich_text","block_id":"5Bwx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"data readers in clojure are not macros, and don't have eval (even though you may eval the resulting read value later and this may thus incidentally result in some cases in a value after eval)"}]}]}],"user":"U064X3EF3","reactions":[{"name":"+1::skin-tone-2","users":["U07FP7QJ0"],"count":1}],"text":"data readers in clojure are not macros, and don't have eval (even though you may eval the resulting read value later and this may thus incidentally result in some cases in a value after eval)"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629988839.026500","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"8e3a908b-f3af-4735-9909-2de69ea07b87","blocks":[{"type":"rich_text","block_id":"JAoRh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks for clarifying, Alex. That makes sense."}]}]}],"user":"U07FP7QJ0","text":"thanks for clarifying, Alex. That makes sense."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629995593.028300","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"0599572f-fe08-4347-8b67-1ea4bf7e1b54","blocks":[{"type":"rich_text","block_id":"eoGQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel the conceptual model breaks down. I don't think it's that simple. You can execute code in a data_reader, like if you extend edn to parse tagged literal, it's your responsibility now to be sure it can't execute insecure code. And you're expected to execute code as well, since you need to return a in-memory structure from the read form."}]}]}],"user":"U0K064KQV","text":"I feel the conceptual model breaks down. I don't think it's that simple. You can execute code in a data_reader, like if you extend edn to parse tagged literal, it's your responsibility now to be sure it can't execute insecure code. And you're expected to execute code as well, since you need to return a in-memory structure from the read form."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629995714.028500","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"f1308f1e-7b0c-4724-9714-d9d26fac0ac2","blocks":[{"type":"rich_text","block_id":"j7JEq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the issue is just that what is available from the environment at that time is simply undefined it seems."}]}]}],"user":"U0K064KQV","text":"I think the issue is just that what is available from the environment at that time is simply undefined it seems."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629995766.028700","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"5d36ab07-3758-444d-95f4-4c8ae819871a","blocks":[{"type":"rich_text","block_id":"l+WH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the job of a data reader is to take a tagged literal and return a value"}]}]}],"user":"U064X3EF3","text":"the job of a data reader is to take a tagged literal and return a value"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1629995933.028900","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"2e2c0e96-dabe-40f0-a014-8fe89a771445","blocks":[{"type":"rich_text","block_id":"QM1E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know what is ambiguous about the \"environment\" and if you're doing anything that requires anything of the environment beyond the tagged form, you're probably doing something you shouldn't."}]}]}],"user":"U064X3EF3","text":"I don't know what is ambiguous about the \"environment\" and if you're doing anything that requires anything of the environment beyond the tagged form, you're probably doing something you shouldn't."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1630000437.029300","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"6e8828d2-8a58-4393-83d0-84922e956fec","blocks":[{"type":"rich_text","block_id":"62Xi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, I mean that taking a form and returning a value from it does involve code execution. What isn't well defined is what that code can expect to depend on.\n\nSo like in the example, can it depend on the current Clojure runtime? And switch on if Clojure or ClojureScript? Or is this considered out of reach for the code creating the value?"}]}]}],"user":"U0K064KQV","text":"Well, I mean that taking a form and returning a value from it does involve code execution. What isn't well defined is what that code can expect to depend on.\n\nSo like in the example, can it depend on the current Clojure runtime? And switch on if Clojure or ClojureScript? Or is this considered out of reach for the code creating the value?"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1630000623.029500","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"4b17b91b-bfab-4e9e-a6f6-ec14bf4591fe","blocks":[{"type":"rich_text","block_id":"9qgH7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well you're evaluating the function in the runtime so I would think you could depend on it"}]}]}],"user":"U064X3EF3","text":"well you're evaluating the function in the runtime so I would think you could depend on it"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1630000642.029700","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"1ce1b369-b0ce-47cb-ac41-1282290b8317","blocks":[{"type":"rich_text","block_id":"aR71D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how could it not depend on the runtime"}]}]}],"user":"U064X3EF3","text":"how could it not depend on the runtime"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1630000653.029900","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"becbbe98-2d7d-4304-8855-cb5cfbd4099d","blocks":[{"type":"rich_text","block_id":"rFaD4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe I just don't understand what you're asking"}]}]}],"user":"U064X3EF3","text":"maybe I just don't understand what you're asking"}
{"type":"message","thread_ts":"1629984675.020400","edited":{"user":"U0K064KQV","ts":"1630001478.000000"},"ts":"1630001379.031000","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"f28411b5-e54a-4961-b868-2a9a039cc9e6","blocks":[{"type":"rich_text","block_id":"Qvo7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think my question is, is there supposed to be a convention that dictates that a data_reader function should be a pure deterministic function?\n\nOr is it fine to say create a "},{"type":"text","text":"#time :now","style":{"code":true}},{"type":"text","text":" that would read from the system clock, or a "},{"type":"text","text":"#slurp \".\/file\"","style":{"code":true}},{"type":"text","text":"that would read from the file. Etc. And similarly say something that would check a global and return a different value based on it, like checking if the compiler is ClojureScript, if we're running under prod or devo, etc."}]}]}],"user":"U0K064KQV","text":"I think my question is, is there supposed to be a convention that dictates that a data_reader function should be a pure deterministic function?\n\nOr is it fine to say create a `#time :now` that would read from the system clock, or a `#slurp \".\/file\"`that would read from the file. Etc. And similarly say something that would check a global and return a different value based on it, like checking if the compiler is ClojureScript, if we're running under prod or devo, etc."}
{"type":"message","thread_ts":"1629984675.020400","ts":"1630001550.031500","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"576f9335-b243-4f4b-b5dd-099d5e19b07f","blocks":[{"type":"rich_text","block_id":"EBEm0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is \"now\" a value?"}]}]}],"user":"U064X3EF3","text":"is \"now\" a value?"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1630001638.031700","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"69462dd1-8d34-4eb5-89c9-faea82cb13fc","blocks":[{"type":"rich_text","block_id":"qed","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think most things you mention sound like bad ideas for tagged literals :)"}]}]}],"user":"U064X3EF3","text":"I think most things you mention sound like bad ideas for tagged literals :)"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1630001674.031900","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"72f400fc-1aa3-4e00-a335-32d05064cce8","blocks":[{"type":"rich_text","block_id":"KJs1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but Clojure assumes you can make your own decisions :)"}]}]}],"user":"U064X3EF3","text":"but Clojure assumes you can make your own decisions :)"}
{"type":"message","thread_ts":"1629984675.020400","ts":"1630002075.032300","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"970e79e5-c496-412f-a780-35f4f42c3ab3","blocks":[{"type":"rich_text","block_id":"Ndek","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haha, ya that last part is what I was wondering."}]}]}],"user":"U0K064KQV","text":"Haha, ya that last part is what I was wondering."}
{"attachments":[{"color":"36a64f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/clojure\/clojurescript-site\/issues\/371|#371 no docs for data_readers.cljc>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/clojure\/clojurescript-site|clojure\/clojurescript-site>","title":"<https:\/\/github.com\/clojure\/clojurescript-site\/issues\/371|#371 no docs for data_readers.cljc>","ts":1613555803,"id":1,"app_unfurl_url":"https:\/\/github.com\/clojure\/clojurescript-site\/issues\/371","text":"It might explain:\n\n\u2022 what tagged literals are - probably link to clojure site for this\n\u2022 how to write cljs reader functions - explain that they will need to run in clojure and clojurescript and they should return a form representing cljs source (afaict). also explain how this is different from clj reader functions, which should not return a form, but should eval the input string\n\nOnce <https:\/\/clojure.atlassian.net\/jira\/software\/c\/projects\/CLJS\/issues\/CLJS-3294|https:\/\/clojure.atlassian.net\/jira\/software\/c\/projects\/CLJS\/issues\/CLJS-3294> is fixed,\n\n\u2022 how to make your reader functions work for both clojure and cljs with reader conditionals in the file.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629984675.020400","ts":"1630060580.050100","parent_user_id":"U07FP7QJ0","team":"T03RZGPFR","client_msg_id":"7a9c83a6-7942-4203-abdc-0f60ce68555e","blocks":[{"type":"rich_text","block_id":"OOI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cool, it's not just me who would like data_readers.cljc documented then "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" "},{"type":"link","url":"https:\/\/github.com\/clojure\/clojurescript-site\/issues\/371"}]}]}],"user":"U051B9FU1","text":"cool, it's not just me who would like data_readers.cljc documented then :slightly_smiling_face: <https:\/\/github.com\/clojure\/clojurescript-site\/issues\/371>"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U01GXCWSRMW","UFPEDL1LY","U0VP19K6K","U0P0TMEFJ","U022LK3L4JJ"],"type":"message","thread_ts":"1629984117.017700","reply_users_count":6,"edited":{"user":"UFPEDL1LY","ts":"1629984190.000000"},"ts":"1629984117.017700","team":"T03RZGPFR","client_msg_id":"b66cabaf-010a-4f16-827b-5a859577021d","blocks":[{"type":"rich_text","block_id":"69s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Given a vector "},{"type":"text","text":"[\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"]","style":{"code":true}},{"type":"text","text":" how would you get the adjacent elements of any arbitrary element? example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"baz\") ;=> (\"meh\" \"goo\")\n(get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"foo\") ;=> (nil \"bar\") or (\"goo\" \"bar\")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I\u2019m thinking of using indices with\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(.indexOf v \"baz\")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and then getting the other indices. Is there a better\/more idiomatic way of doing this?\neffectively generalising into a window centered on an element with radius "},{"type":"text","text":"n","style":{"italic":true}}]}]}],"is_locked":false,"user":"UFPEDL1LY","reply_count":13,"latest_reply":"1630147103.144700","text":"Given a vector `[\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"]` how would you get the adjacent elements of any arbitrary element? example\n```(get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"baz\") ;=&gt; (\"meh\" \"goo\")\n(get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"foo\") ;=&gt; (nil \"bar\") or (\"goo\" \"bar\")```\nI\u2019m thinking of using indices with\n```(.indexOf v \"baz\")```\nand then getting the other indices. Is there a better\/more idiomatic way of doing this?\neffectively generalising into a window centered on an element with radius _n_"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U01GXCWSRMW","UFPEDL1LY","U0VP19K6K","U0P0TMEFJ","U022LK3L4JJ"],"type":"message","thread_ts":"1629984117.017700","reply_users_count":6,"edited":{"user":"UFPEDL1LY","ts":"1629984190.000000"},"ts":"1629984117.017700","team":"T03RZGPFR","client_msg_id":"b66cabaf-010a-4f16-827b-5a859577021d","blocks":[{"type":"rich_text","block_id":"69s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Given a vector "},{"type":"text","text":"[\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"]","style":{"code":true}},{"type":"text","text":" how would you get the adjacent elements of any arbitrary element? example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"baz\") ;=> (\"meh\" \"goo\")\n(get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"foo\") ;=> (nil \"bar\") or (\"goo\" \"bar\")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I\u2019m thinking of using indices with\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(.indexOf v \"baz\")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and then getting the other indices. Is there a better\/more idiomatic way of doing this?\neffectively generalising into a window centered on an element with radius "},{"type":"text","text":"n","style":{"italic":true}}]}]}],"is_locked":false,"user":"UFPEDL1LY","reply_count":13,"latest_reply":"1630147103.144700","text":"Given a vector `[\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"]` how would you get the adjacent elements of any arbitrary element? example\n```(get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"baz\") ;=&gt; (\"meh\" \"goo\")\n(get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"foo\") ;=&gt; (nil \"bar\") or (\"goo\" \"bar\")```\nI\u2019m thinking of using indices with\n```(.indexOf v \"baz\")```\nand then getting the other indices. Is there a better\/more idiomatic way of doing this?\neffectively generalising into a window centered on an element with radius _n_"}
{"type":"message","thread_ts":"1629984117.017700","ts":"1629984241.017900","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"39e3e8f9-9c5c-4f20-98eb-009676cc18ea","blocks":[{"type":"rich_text","block_id":"M8P\/0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd go with the same approach. The window approach will be both slower and less obvious in its implementation."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"heavy_plus_sign","users":["U4ZDX466T"],"count":1}],"text":"I'd go with the same approach. The window approach will be both slower and less obvious in its implementation."}
{"type":"message","thread_ts":"1629984117.017700","ts":"1629985282.022000","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"119f4d9b-56cc-44c3-9bb4-3f92b559107a","blocks":[{"type":"rich_text","block_id":"3GgS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Agreed. You could "},{"type":"text","text":"try","style":{"italic":true}},{"type":"text","text":" to do something like this, but it's awfully complex just to handle the degenerate case of a radius of 1 (the radius input is ignored) and returns the wrong answers for both the last element of the vector and an element that is not in the vector. Those can be resolved, but that's even more complexity.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn window [m ctr r]\n    (reduce (fn [a v]\n              (cond\n                (= v ctr) (vector a v)\n                (vector? a) (reduced (vector (first a) v))\n                :default v))\n            nil\n            m))"}]}]}],"user":"U01GXCWSRMW","text":"Agreed. You could _try_ to do something like this, but it's awfully complex just to handle the degenerate case of a radius of 1 (the radius input is ignored) and returns the wrong answers for both the last element of the vector and an element that is not in the vector. Those can be resolved, but that's even more complexity.\n\n```(defn window [m ctr r]\n    (reduce (fn [a v]\n              (cond\n                (= v ctr) (vector a v)\n                (vector? a) (reduced (vector (first a) v))\n                :default v))\n            nil\n            m))```"}
{"type":"message","thread_ts":"1629984117.017700","ts":"1629990941.027000","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"9e882408-f02e-4236-a6a2-28f5d295d6ad","blocks":[{"type":"rich_text","block_id":"rx1c6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cool, I went with\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn adjacent-elements\n  [v e]\n  (let [i (.indexOf v e)]\n    (if (< i 0)\n      [nil nil]\n      [(get v (dec i)) (get v (inc i))])))"}]},{"type":"rich_text_section","elements":[]}]}],"user":"UFPEDL1LY","text":"cool, I went with\n```(defn adjacent-elements\n  [v e]\n  (let [i (.indexOf v e)]\n    (if (&lt; i 0)\n      [nil nil]\n      [(get v (dec i)) (get v (inc i))])))```\n"}
{"type":"message","thread_ts":"1629984117.017700","ts":"1629992222.027700","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"7ad2ecdc-8efe-42ff-8c18-af6dd4b3fe88","blocks":[{"type":"rich_text","block_id":"Kr\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Eyeballing that, you probably want to check the end of vector case too"}]}]}],"user":"U0VP19K6K","text":"Eyeballing that, you probably want to check the end of vector case too"}
{"type":"message","thread_ts":"1629984117.017700","ts":"1629992302.027900","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"82a25681-9775-4716-b091-021bf195078c","blocks":[{"type":"rich_text","block_id":"E\/b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"get","style":{"code":true}},{"type":"text","text":" will return "},{"type":"text","text":"nil","style":{"code":true}},{"type":"text","text":" if the index is out of bounds."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"+1","users":["U0VP19K6K"],"count":1}],"text":"`get` will return `nil` if the index is out of bounds."}
{"type":"message","thread_ts":"1629984117.017700","ts":"1630004257.032600","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"b675c0fd-41b2-4540-bb07-fa69d97a41e9","blocks":[{"type":"rich_text","block_id":"Ewcdx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've a feeling that Christophe Grand's xforms library has some windowing functions."}]}]}],"user":"U0P0TMEFJ","text":"I've a feeling that Christophe Grand's xforms library has some windowing functions."}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc | xforms.cljc>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/cgrand\/xforms|cgrand\/xforms>","title":"<https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc | xforms.cljc>","id":1,"app_unfurl_url":"https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc#L518","text":"```\n(defn window\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629984117.017700","ts":"1630004521.032800","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"4d0e3cf7-bfc9-4f75-b573-2367db283a6a","blocks":[{"type":"rich_text","block_id":"o1YS","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc#L518","text":"https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc#L518"}]}]}],"user":"U0P0TMEFJ","text":"<https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc#L518|https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc#L518>"}
{"type":"message","thread_ts":"1629984117.017700","ts":"1630004573.033100","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"5d01e6bc-01de-4022-9f04-d0d2d0d5a569","blocks":[{"type":"rich_text","block_id":"3=Me2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe that's useful for a generalized window with a radius of n?"}]}]}],"user":"U0P0TMEFJ","text":"Maybe that's useful for a generalized window with a radius of n?"}
{"type":"message","thread_ts":"1629984117.017700","edited":{"user":"U022LK3L4JJ","ts":"1630082253.000000"},"ts":"1630082148.062600","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"ffa9af93-83d5-4abc-97cb-ea2a66b9c4ef","blocks":[{"type":"rich_text","block_id":"YKac","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"wow, this looks like interesting problem... I am a newbie and possibly complete numpty... here is my implementation\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn get-adjacent\n  [lst elem]\n  (when (> (count lst) 0)\n    (let [s (conj (vec (conj (seq lst) nil)) nil) ;; pad nils to the list\n          lstlen (count s)                        ;; get length of list\n          substrlen 3                             ;; count of sublist length\n          elemnnegbor (->> (if (<= substrlen lstlen)\n                             (vec (range (- substrlen 1) lstlen))\n                             [])                  \n                           (mapv #(take-last (+ % 1) s))\n                           (reverse)\n                           (mapv #(vec (take substrlen %)))\n                           (mapv #(if (= (% 1) elem)\n                                    %\n                                    nil))\n                           (filter #(some? %))\n                           (first))]\n      (vec [(elemnnegbor 0) (elemnnegbor 2)]))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Test runs:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"> (get-adjacent [] \"bar\")\nnil\n> (get-adjacent [\"bar\"] \"bar\")\n[nil nil]\n> (get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"bar\")\n[\"foo\" \"meh\"]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI am sure you wanted to make your life more complicated... "},{"type":"emoji","name":"grin"}]}]}],"user":"U022LK3L4JJ","text":"wow, this looks like interesting problem... I am a newbie and possibly complete numpty... here is my implementation\n```(defn get-adjacent\n  [lst elem]\n  (when (&gt; (count lst) 0)\n    (let [s (conj (vec (conj (seq lst) nil)) nil) ;; pad nils to the list\n          lstlen (count s)                        ;; get length of list\n          substrlen 3                             ;; count of sublist length\n          elemnnegbor (-&gt;&gt; (if (&lt;= substrlen lstlen)\n                             (vec (range (- substrlen 1) lstlen))\n                             [])                  \n                           (mapv #(take-last (+ % 1) s))\n                           (reverse)\n                           (mapv #(vec (take substrlen %)))\n                           (mapv #(if (= (% 1) elem)\n                                    %\n                                    nil))\n                           (filter #(some? %))\n                           (first))]\n      (vec [(elemnnegbor 0) (elemnnegbor 2)]))))```\nTest runs:\n```&gt; (get-adjacent [] \"bar\")\nnil\n&gt; (get-adjacent [\"bar\"] \"bar\")\n[nil nil]\n&gt; (get-adjacent [\"foo\" \"bar\" \"meh\" \"baz\" \"goo\"] \"bar\")\n[\"foo\" \"meh\"]```\nI am sure you wanted to make your life more complicated... :grin:"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc | xforms.cljc>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/cgrand\/xforms|cgrand\/xforms>","title":"<https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc | xforms.cljc>","id":1,"app_unfurl_url":"https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc#L518","text":"```\n(defn window\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629984117.017700","edited":{"user":"UFPEDL1LY","ts":"1630092453.000000"},"ts":"1630092432.065200","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"1786f1f0-8002-440c-969f-73a883f35e91","blocks":[{"type":"rich_text","block_id":"YTTiU","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0P0TMEFJ"},{"type":"text","text":" do you mean this? "},{"type":"link","url":"https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc#L518"},{"type":"text","text":"\n"},{"type":"user","user_id":"U022LK3L4JJ"},{"type":"text","text":"\nwow that\u2019s some serious increase in LOC "},{"type":"emoji","name":"smile"}]}]}],"user":"UFPEDL1LY","text":"<@U0P0TMEFJ> do you mean this? <https:\/\/github.com\/cgrand\/xforms\/blob\/62375212a8604daad631c9024e9dbe1db4ec276b\/src\/net\/cgrand\/xforms.cljc#L518>\n<@U022LK3L4JJ>\nwow that\u2019s some serious increase in LOC :smile:"}
{"type":"message","thread_ts":"1629984117.017700","ts":"1630093259.065700","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"ebcd9407-6fe9-441f-aa2f-398f5549bead","blocks":[{"type":"rich_text","block_id":"QdO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yup ... Sorry, on my phone and don't have a repl handy ... But thought it might be helpful to implement the sort of thing you were talking about"}]}]}],"user":"U0P0TMEFJ","text":"Yup ... Sorry, on my phone and don't have a repl handy ... But thought it might be helpful to implement the sort of thing you were talking about"}
{"type":"message","thread_ts":"1629984117.017700","ts":"1630140433.144500","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"74458f52-b0c9-400d-8e0a-4a8cb705031d","blocks":[{"type":"rich_text","block_id":"14zm=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, looks like a good start. I\u2019m studying the function and see how I can use it "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"UFPEDL1LY","text":"yes, looks like a good start. I\u2019m studying the function and see how I can use it :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629984117.017700","ts":"1630147103.144700","parent_user_id":"UFPEDL1LY","team":"T03RZGPFR","client_msg_id":"adadb78c-1496-4a3c-b700-498bd5c21252","blocks":[{"type":"rich_text","block_id":"I8P\/t","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UFPEDL1LY"},{"type":"text","text":" right? "},{"type":"emoji","name":"smile"},{"type":"text","text":" But atleast it is all in clojure native with no impurities.... totally proves my numpty status now!! I am a legend!! "},{"type":"emoji","name":"raised_hands"}]}]}],"user":"U022LK3L4JJ","reactions":[{"name":"tada","users":["U3ES97LAC"],"count":1}],"text":"<@UFPEDL1LY> right? :smile: But atleast it is all in clojure native with no impurities.... totally proves my numpty status now!! I am a legend!! :raised_hands:"}
{"client_msg_id":"bb3c5bd2-f96d-4eb4-93e2-26ab3532a76c","type":"message","text":"A great quote from The Joy of Clojure\n```By relieving the brain of all unnecessary work, a good notation sets it free to\nconcentrate on more advanced problems.\n-- Alfred North Whitehead```","user":"U3ES97LAC","ts":"1629982471.012000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"sX==\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A great quote from The Joy of Clojure\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"By relieving the brain of all unnecessary work, a good notation sets it free to\nconcentrate on more advanced problems.\n-- Alfred North Whitehead"}]}]}],"reactions":[{"name":"v","users":["U45T93RA6"],"count":1}]}
{"client_msg_id":"f6c1b1a9-5fb2-4c0b-ad2d-5f303e8c75b1","type":"message","text":"```(ns core\n  (:require [clj-http.client :as http]\n            [clj-http.cookies :as cookies]\n            [hickory.core :as hic]\n            [hickory.select :as s]))\n\n(defn get-csrf-key\n  [body]\n  (-&gt; (s\/select (s\/attr :name #(= % \"csrfKey\"))\n              (-&gt; body\n                  hic\/parse\n                  hic\/as-hickory))\n    first\n    :attrs\n    :value))\n\n(let [cs (cookies\/cookie-store)\n      csrf-key (get-csrf-key (:body (http\/get \"*****************\" {:cookie-store cs})))]\n  (http\/post \"*****************\"\n             {:cookie-store cs\n              :form-params {:csrfKey csrf-key\n                            :auth \"*********\"\n                            :password \"***********\"\n                            :remember_me \"1\"\n                            :_processLogin \"usernamepassword\"}}))```\nWoohooo!!! I\u2019m gettin it done!","user":"U01KQ9EGU79","ts":"1629965457.011000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Ipa","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns core\n  (:require [clj-http.client :as http]\n            [clj-http.cookies :as cookies]\n            [hickory.core :as hic]\n            [hickory.select :as s]))\n\n(defn get-csrf-key\n  [body]\n  (-> (s\/select (s\/attr :name #(= % \"csrfKey\"))\n              (-> body\n                  hic\/parse\n                  hic\/as-hickory))\n    first\n    :attrs\n    :value))\n\n(let [cs (cookies\/cookie-store)\n      csrf-key (get-csrf-key (:body (http\/get \"*****************\" {:cookie-store cs})))]\n  (http\/post \"*****************\"\n             {:cookie-store cs\n              :form-params {:csrfKey csrf-key\n                            :auth \"*********\"\n                            :password \"***********\"\n                            :remember_me \"1\"\n                            :_processLogin \"usernamepassword\"}}))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Woohooo!!! I\u2019m gettin it done!"}]}]}]}
{"client_msg_id":"8fb0ce7b-86fd-4033-be3b-daffcba869f4","type":"message","text":"At least for the site I\u2019m logging in to.","user":"U01KQ9EGU79","ts":"1629962726.009500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"BuF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"At least for the site I\u2019m logging in to."}]}]}]}
{"client_msg_id":"cc4ebe02-ed12-4d57-bd57-c282c1947302","type":"message","text":"It is in HTML.","user":"U01KQ9EGU79","ts":"1629962712.009200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"tOx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is in HTML."}]}]}]}
{"client_msg_id":"4389bfd2-4f66-4ff8-a133-8c7c89b2129b","type":"message","text":"Aha! I found the token!","user":"U01KQ9EGU79","ts":"1629962706.009000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Kl8\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aha! I found the token!"}]}]}]}
{"client_msg_id":"20e20237-37a1-41e0-98e0-4d143eea4db4","type":"message","text":"yeah depends on where they put the data. might just require some html parsing if added as a meta or hidden input. if they do it via JS it might get harder to get","user":"U05224H0W","ts":"1629962669.008700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"118g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah depends on where they put the data. might just require some html parsing if added as a meta or hidden input. if they do it via JS it might get harder to get"}]}]}]}
{"client_msg_id":"12d18ab3-04f4-4157-830f-89317bb1e167","type":"message","text":"I just don\u2019t want to have to use eatoin again.","user":"U01KQ9EGU79","ts":"1629962551.007900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"29yH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just don\u2019t want to have to use eatoin again."}]}]}]}
{"client_msg_id":"11cea79f-1b3e-4267-b1b3-2568c908f633","type":"message","text":"Hmmm, ok. Imma try to figure out how to do that.","user":"U01KQ9EGU79","ts":"1629962529.007400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"C8UF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmm, ok. Imma try to figure out how to do that."}]}]}]}
{"client_msg_id":"1a2c762e-c837-4e23-b713-e0d819d8c48b","type":"message","text":"I mean sure you can always just get the login page and get it out of there but \"forging\" it no","user":"U05224H0W","ts":"1629962449.006900","team":"T03RZGPFR","edited":{"user":"U05224H0W","ts":"1629962471.000000"},"blocks":[{"type":"rich_text","block_id":"LIMV2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean sure you can always just get the login page and get it out of there but \"forging\" it no"}]}]}]}
{"client_msg_id":"3765d55e-b363-421a-8950-0fbceed67386","type":"message","text":"if its done correctly no :stuck_out_tongue:","user":"U05224H0W","ts":"1629962424.006600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"LMhfj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if its done correctly no "},{"type":"emoji","name":"stuck_out_tongue"}]}]}]}
{"client_msg_id":"0c4b1812-a30f-48bc-a8cb-b0bc7e7fd569","type":"message","text":"Hmmmm, any way I can forge that?","user":"U01KQ9EGU79","ts":"1629962404.006300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Cdz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmmm, any way I can forge that?"}]}]}]}
{"client_msg_id":"3e274712-5d6e-4ed0-a2e9-7ae346034ea4","type":"message","text":"<@U01KQ9EGU79> commonly sites expects some kind of extra CSRF token for security purposes. you know like ensuring you are logging in from the actual login page not some background automated script :wink:","user":"U05224H0W","ts":"1629962362.005800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"SOnnU","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01KQ9EGU79"},{"type":"text","text":" commonly sites expects some kind of extra CSRF token for security purposes. you know like ensuring you are logging in from the actual login page not some background automated script "},{"type":"emoji","name":"wink"}]}]}]}
{"client_msg_id":"38228052-a2b2-44da-ac5e-4a9b05731bb0","type":"message","text":"So I\u2019m trying to programmatically log into a site, but unfortunately I get status 403, reason forbidden. Not sure how to begin to troubleshoot it. I\u2019ve been looking at the browser devtools to try to isolate the missing variable. I tried saving cookies and changing my user agent to a known browser, neither seems to work.\n```(ns core\n  (:require [clj-http.client :as http]))\n\n(let [cs (clj-http.cookies\/cookie-store)]\n  (http\/post \"***************************************************\"\n             {:cookie-store cs\n              :headers {\"User-Agent\" \"Mozilla\/5.0 (Windows NT 6.1;) Gecko\/20100101 Firefox\/13.0.1\"}\n              :form-params {:crsfKey \"b081f2098114e7fac1ed87d8a261f577\"\n:auth \"***************************\"\n                            :password \"**************************************\"\n                            :remember_me \"1\"\n                            :_processLogin \"usernamepassword\"}}))```\nEdit: tried adding a csrf-key","user":"U01KQ9EGU79","ts":"1629962219.004800","team":"T03RZGPFR","edited":{"user":"U01KQ9EGU79","ts":"1629962512.000000"},"blocks":[{"type":"rich_text","block_id":"wojE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I\u2019m trying to programmatically log into a site, but unfortunately I get status 403, reason forbidden. Not sure how to begin to troubleshoot it. I\u2019ve been looking at the browser devtools to try to isolate the missing variable. I tried saving cookies and changing my user agent to a known browser, neither seems to work.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns core\n  (:require [clj-http.client :as http]))\n\n(let [cs (clj-http.cookies\/cookie-store)]\n  (http\/post \"***************************************************\"\n             {:cookie-store cs\n              :headers {\"User-Agent\" \"Mozilla\/5.0 (Windows NT 6.1;) Gecko\/20100101 Firefox\/13.0.1\"}\n              :form-params {:crsfKey \"b081f2098114e7fac1ed87d8a261f577\"\n:auth \"***************************\"\n                            :password \"**************************************\"\n                            :remember_me \"1\"\n                            :_processLogin \"usernamepassword\"}}))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Edit: tried adding a csrf-key"}]}]}]}
{"subscribed":false,"reply_users":["U01L5R113AL","U051SS2EU","U050ECB92","U04V70XH6","U0K064KQV","UJY23QLS1","U11BV7MTK","U883WCP5Z"],"type":"message","thread_ts":"1629924688.380100","reply_users_count":8,"ts":"1629924688.380100","team":"T03RZGPFR","client_msg_id":"a93e5a79-d18d-4f82-88e0-851e01c066ff","blocks":[{"type":"rich_text","block_id":"5mx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"During a talk on transducers Rich joked that \u201cyou wouldn\u2019t try to do IO in a transducer\u201d. I can understand why doing IO on one of the threads realizing a transducer would be a bad idea. So the question then is, if one has a IReduce (jdbc reducible query) and one wants to process it with a function that will do IO, is transduce the wrong idea, but using reduce is the right idea?"}]}]}],"is_locked":false,"user":"U01L5R113AL","reply_count":50,"latest_reply":"1630107033.099800","text":"During a talk on transducers Rich joked that \u201cyou wouldn\u2019t try to do IO in a transducer\u201d. I can understand why doing IO on one of the threads realizing a transducer would be a bad idea. So the question then is, if one has a IReduce (jdbc reducible query) and one wants to process it with a function that will do IO, is transduce the wrong idea, but using reduce is the right idea?"}
{"subscribed":false,"reply_users":["U01L5R113AL","U051SS2EU","U050ECB92","U04V70XH6","U0K064KQV","UJY23QLS1","U11BV7MTK","U883WCP5Z"],"type":"message","thread_ts":"1629924688.380100","reply_users_count":8,"ts":"1629924688.380100","team":"T03RZGPFR","client_msg_id":"a93e5a79-d18d-4f82-88e0-851e01c066ff","blocks":[{"type":"rich_text","block_id":"5mx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"During a talk on transducers Rich joked that \u201cyou wouldn\u2019t try to do IO in a transducer\u201d. I can understand why doing IO on one of the threads realizing a transducer would be a bad idea. So the question then is, if one has a IReduce (jdbc reducible query) and one wants to process it with a function that will do IO, is transduce the wrong idea, but using reduce is the right idea?"}]}]}],"is_locked":false,"user":"U01L5R113AL","reply_count":50,"latest_reply":"1630107033.099800","text":"During a talk on transducers Rich joked that \u201cyou wouldn\u2019t try to do IO in a transducer\u201d. I can understand why doing IO on one of the threads realizing a transducer would be a bad idea. So the question then is, if one has a IReduce (jdbc reducible query) and one wants to process it with a function that will do IO, is transduce the wrong idea, but using reduce is the right idea?"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629924781.380200","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"3bf2c766-afe0-4a48-8000-f30a480eb3ff","blocks":[{"type":"rich_text","block_id":"W9WO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And does this mean using doseq would process it like a lazy sequence (retaining the head) instead of how transduce or reduce would?"}]}]}],"user":"U01L5R113AL","text":"And does this mean using doseq would process it like a lazy sequence (retaining the head) instead of how transduce or reduce would?"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925076.380400","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"2f5a676c-141b-4e57-8210-970aa74424e8","blocks":[{"type":"rich_text","block_id":"qsG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why would doseq ever retain the head of anything?"}]}]}],"user":"U051SS2EU","text":"why would doseq ever retain the head of anything?"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925135.380600","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"c9eefc5c-b3ff-4d1e-8078-f8c66d9fa247","blocks":[{"type":"rich_text","block_id":"MDaK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could still use transduce to do your IO, just do it in the reducing function, not the transducer"}]}]}],"user":"U051SS2EU","reactions":[{"name":"white_check_mark","users":["U01L5R113AL"],"count":1}],"text":"you could still use transduce to do your IO, just do it in the reducing function, not the transducer"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925170.380800","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"4450daaf-b8b3-4a39-bd8e-2e4b53d721f5","blocks":[{"type":"rich_text","block_id":"jxW0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the transducer is there to process your data (data in, data out) and isn't the right place for side effects"}]}]}],"user":"U051SS2EU","reactions":[{"name":"point_up","users":["U0NCTKEV8"],"count":1}],"text":"the transducer is there to process your data (data in, data out) and isn't the right place for side effects"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925295.381500","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"176efdbf-bd14-4ffb-a8d1-fa44fb217181","blocks":[{"type":"rich_text","block_id":"vog","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"...just a nit on terminology, transducers don't process data"}]}]}],"user":"U050ECB92","text":"...just a nit on terminology, transducers don't process data"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925308.381700","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"a37982d7-fe70-4c18-b94e-39c41984cfb6","blocks":[{"type":"rich_text","block_id":"mZC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"transducers transform reducing functions, which process data"}]}]}],"user":"U050ECB92","reactions":[{"name":"100","users":["U883WCP5Z"],"count":1}],"text":"transducers transform reducing functions, which process data"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925322.381900","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"71339537-cfc8-4a2a-853e-e39edf60af08","blocks":[{"type":"rich_text","block_id":"3m4P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, thanks"}]}]}],"user":"U051SS2EU","text":"right, thanks"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925331.382100","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"d6b38bca-1859-4d77-95ef-a5099666b6d2","blocks":[{"type":"rich_text","block_id":"B18mx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and as noisesmith said, IO is absolutely fine in a reducing function"}]}]}],"user":"U050ECB92","text":"and as noisesmith said, IO is absolutely fine in a reducing function"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925333.382300","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"766eb4f2-8279-4dda-aa1f-30e661f9a575","blocks":[{"type":"rich_text","block_id":"ghc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, you can't use "},{"type":"text","text":"doseq","style":{"code":true}},{"type":"text","text":" on an "},{"type":"text","text":"IReduceInit","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U04V70XH6","text":"Also, you can't use `doseq` on an `IReduceInit`."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925404.382500","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"5826cb57-566b-444e-94fa-c3f957a5d981","blocks":[{"type":"rich_text","block_id":"IS+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, yes, if you need to process a reducible query, either "},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"transduce","style":{"code":true}},{"type":"text","text":" are fine, even if your actual reducing function is doing I\/O."}]}]}],"user":"U04V70XH6","text":"So, yes, if you need to process a reducible query, either `reduce` or `transduce` are fine, even if your actual reducing function is doing I\/O."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629925424.382700","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"0f5b6065-aac9-480a-b620-6489c4ccef07","blocks":[{"type":"rich_text","block_id":"fEn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(or any other function that will eagerly process an "},{"type":"text","text":"IReduceInit","style":{"code":true}},{"type":"text","text":")"}]}]}],"user":"U04V70XH6","text":"(or any other function that will eagerly process an `IReduceInit`)"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629927943.382900","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"a0051d1a-d818-48b9-96c2-cafd850527c1","blocks":[{"type":"rich_text","block_id":"cOIL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are IReduceInit not seqable?"}]}]}],"user":"U0K064KQV","text":"Are IReduceInit not seqable?"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629927969.383100","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"afd23828-b658-490b-b949-e637272f5f11","blocks":[{"type":"rich_text","block_id":"ABjYs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, I guess not"}]}]}],"user":"U0K064KQV","text":"Ok, I guess not"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629928004.383300","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"7654f4a0-faa2-4237-8eac-cf9b43c60be7","blocks":[{"type":"rich_text","block_id":"w4Gsw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems it be possible to implement first, rest and next using reduce "},{"type":"emoji","name":"thinking_face"}]}]}],"user":"U0K064KQV","text":"Seems it be possible to implement first, rest and next using reduce :thinking_face:"}
{"type":"message","thread_ts":"1629924688.380100","edited":{"user":"U051SS2EU","ts":"1629928532.000000"},"ts":"1629928461.383600","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"d114d120-cc09-4f98-afaa-3aa53d759612","blocks":[{"type":"rich_text","block_id":"6dZS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"#(reduce conj [] %)","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"user":"U051SS2EU","text":"`#(reduce conj [] %)` ?"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629928489.383800","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"8cebdbe1-f165-4e0d-bb59-976f594bad61","blocks":[{"type":"rich_text","block_id":"wWTJ2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"eagerly consumes, gives you a seqable"}]}]}],"user":"U051SS2EU","text":"eagerly consumes, gives you a seqable"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629928555.384100","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"f96ba192-c401-4a7a-aed3-0a995dac6fb0","blocks":[{"type":"rich_text","block_id":"m7Gx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess that's just into"}]}]}],"user":"U051SS2EU","reactions":[{"name":"heavy_check_mark","users":["U883WCP5Z"],"count":1}],"text":"I guess that's just into"}
{"type":"message","thread_ts":"1629924688.380100","edited":{"user":"U01L5R113AL","ts":"1629928598.000000"},"ts":"1629928579.384300","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"c26408fb-71ec-463e-b590-0e811ffc0926","blocks":[{"type":"rich_text","block_id":"S4L+7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think with doseq I was suggesting what "},{"type":"user","user_id":"U04V70XH6"},{"type":"text","text":" said above, the doseq would avoid IReduceInit and instead just eagerly consume the whole result set. But then my thought there was that even though the doseq might be computing a reduction, it would keep all values of the sequence until it exited.\n\nThis thread has helped a lot. Thank you. The reduction function makes perfect sense. The transducer transforms, and the reducer sends the result to a sink with IO as one option."}]}]}],"user":"U01L5R113AL","text":"I think with doseq I was suggesting what <@U04V70XH6> said above, the doseq would avoid IReduceInit and instead just eagerly consume the whole result set. But then my thought there was that even though the doseq might be computing a reduction, it would keep all values of the sequence until it exited.\n\nThis thread has helped a lot. Thank you. The reduction function makes perfect sense. The transducer transforms, and the reducer sends the result to a sink with IO as one option."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629928791.384600","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"5b900b50-91cf-4677-b9d3-f567fa15dba0","blocks":[{"type":"rich_text","block_id":"8je","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wouldn't expect doseq to ever hold onto a value it is done processing, though if you used the dumb reduce conj I suggested above to get a seqable for doseq it would hold the head"}]}]}],"user":"U051SS2EU","text":"I wouldn't expect doseq to ever hold onto a value it is done processing, though if you used the dumb reduce conj I suggested above to get a seqable for doseq it would hold the head"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629932376.384800","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"d727bdc6-f5ba-4418-ab86-fa3a3893cbb0","blocks":[{"type":"rich_text","block_id":"TnTn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I quess then I wonder if "},{"type":"text","text":"sequence","style":{"code":true}},{"type":"text","text":" would produce a lazy version of the "},{"type":"text","text":"IReduceInit","style":{"code":true}},{"type":"text","text":"  useful if one were consuming it and say writing a textual representation to a socket or other channel that might be slower."}]}]}],"user":"U01L5R113AL","text":"I quess then I wonder if `sequence` would produce a lazy version of the `IReduceInit`  useful if one were consuming it and say writing a textual representation to a socket or other channel that might be slower."}
{"type":"message","thread_ts":"1629924688.380100","edited":{"user":"U0K064KQV","ts":"1629932565.000000"},"ts":"1629932498.385000","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"8678d60d-dab9-4cac-9b70-300d05599eb6","blocks":[{"type":"rich_text","block_id":"\/lL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sequence will, but it'll still be chunked, so you got to be careful with IO"}]}]}],"user":"U0K064KQV","text":"Sequence will, but it'll still be chunked, so you got to be careful with IO"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629932542.385200","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"06d43398-fb0f-4a89-ba47-d9cd83957102","blocks":[{"type":"rich_text","block_id":"1IT4z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Now I'm not sure about head retention with it "},{"type":"emoji","name":"thinking_face"}]}]}],"user":"U0K064KQV","text":"Now I'm not sure about head retention with it :thinking_face:"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629932595.385500","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"0fe8da77-61a2-4aa0-b4a6-965dc0f01307","blocks":[{"type":"rich_text","block_id":"YHOH5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can't call "},{"type":"text","text":"sequence","style":{"code":true}},{"type":"text","text":" on an "},{"type":"text","text":"IReduceInit","style":{"code":true}},{"type":"text","text":" either."}]}]}],"user":"U04V70XH6","text":"You can't call `sequence` on an `IReduceInit` either."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629932623.385700","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"42a6b121-8abf-4877-b626-6f0392b5d2ec","blocks":[{"type":"rich_text","block_id":"uI2+9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Easy way to check in the REPL:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"dev=> (def x (reify clojure.lang.IReduceInit (reduce [_ f init] [])))\n#'dev\/x\ndev=> (doseq [y x] (println \"Hi!\"))\nExecution error (IllegalArgumentException) at dev\/eval179328 (dev.clj:1).\nDon't know how to create ISeq from: dev$reify__179322\ndev=> (sequence x)\nExecution error (IllegalArgumentException) at dev\/eval184697 (dev.clj:1).\nDon't know how to create ISeq from: dev$reify__179322"}]}]}],"user":"U04V70XH6","reactions":[{"name":"eyes","users":["U01L5R113AL"],"count":1},{"name":"100","users":["U883WCP5Z"],"count":1}],"text":"Easy way to check in the REPL:\n```dev=&gt; (def x (reify clojure.lang.IReduceInit (reduce [_ f init] [])))\n#'dev\/x\ndev=&gt; (doseq [y x] (println \"Hi!\"))\nExecution error (IllegalArgumentException) at dev\/eval179328 (dev.clj:1).\nDon't know how to create ISeq from: dev$reify__179322\ndev=&gt; (sequence x)\nExecution error (IllegalArgumentException) at dev\/eval184697 (dev.clj:1).\nDon't know how to create ISeq from: dev$reify__179322```"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629932861.386000","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"55fd4e2d-2ea2-4bd6-a007-ff02e7559238","blocks":[{"type":"rich_text","block_id":"koo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum... can you even reduce over it?"}]}]}],"user":"U0K064KQV","text":"Hum... can you even reduce over it?"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629932875.386200","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"5f99b379-e10c-4d3c-84e2-261a03d3f4c4","blocks":[{"type":"rich_text","block_id":"m5RE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I get:\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"java.lang.ClassCastException: sandbox8122$reify__8761 cannot be cast to clojure.lang.IReduce"}]}]}],"user":"U0K064KQV","text":"I get:\n&gt; java.lang.ClassCastException: sandbox8122$reify__8761 cannot be cast to clojure.lang.IReduce"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629932997.386400","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"f18def88-5842-4851-9d3b-b8ae81afa87a","blocks":[{"type":"rich_text","block_id":"X8jB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, haha, ok you can only if you provide an init value to reduce "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"user":"U0K064KQV","text":"Oh, haha, ok you can only if you provide an init value to reduce :stuck_out_tongue:"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629933220.386800","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"0adcbb91-879b-423f-b37b-1bffc9d26a6f","blocks":[{"type":"rich_text","block_id":"4WkC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya, if something is exclusively an IReduceInit and nothing else, seems all you can do is use reduce (or transduce) with passing it an init value."}]}]}],"user":"U0K064KQV","text":"Ya, if something is exclusively an IReduceInit and nothing else, seems all you can do is use reduce (or transduce) with passing it an init value."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629933292.387100","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"801689e7-4a90-474b-8806-5e46e626fb81","blocks":[{"type":"rich_text","block_id":"8LcM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just so used to having collections implement so many more things, take it for granted"}]}]}],"user":"U0K064KQV","text":"Just so used to having collections implement so many more things, take it for granted"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629933538.387300","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"bdd7d112-2ab4-465c-88bd-82de21c1df9f","blocks":[{"type":"rich_text","block_id":"Ayn8+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From the peanut gallery: this was a very informative thread. Thanks all! "},{"type":"emoji","name":"raised_hands"}]}]}],"user":"UJY23QLS1","text":"From the peanut gallery: this was a very informative thread. Thanks all! :raised_hands:"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629934206.387500","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"c8d1ed9c-634c-42ea-af1a-56f67befb0ba","blocks":[{"type":"rich_text","block_id":"pj=","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0K064KQV"},{"type":"text","text":" Just to show with "},{"type":"text","text":"IReduce","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"dev=> (def x (reify clojure.lang.IReduce (reduce [_ f] 0) (reduce [_ f init] 1)))\n#'dev\/x\ndev=> (doseq [y x] (println \"Hi!\"))                      \nExecution error (IllegalArgumentException) at dev\/eval184916 (dev.clj:1).\nDon't know how to create ISeq from: dev$reify__184910\ndev=> (sequence x)                                                             \nExecution error (IllegalArgumentException) at dev\/eval184920 (dev.clj:1).\nDon't know how to create ISeq from: dev$reify__184910\ndev=> (reduce + x)\n0\ndev=> (reduce + 42 x)\n1"}]}]}],"user":"U04V70XH6","text":"<@U0K064KQV> Just to show with `IReduce`:\n```dev=&gt; (def x (reify clojure.lang.IReduce (reduce [_ f] 0) (reduce [_ f init] 1)))\n#'dev\/x\ndev=&gt; (doseq [y x] (println \"Hi!\"))                      \nExecution error (IllegalArgumentException) at dev\/eval184916 (dev.clj:1).\nDon't know how to create ISeq from: dev$reify__184910\ndev=&gt; (sequence x)                                                             \nExecution error (IllegalArgumentException) at dev\/eval184920 (dev.clj:1).\nDon't know how to create ISeq from: dev$reify__184910\ndev=&gt; (reduce + x)\n0\ndev=&gt; (reduce + 42 x)\n1```"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629934251.387700","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"846b542c-98ab-41a7-a389-5fb1a3cf2472","blocks":[{"type":"rich_text","block_id":"gXb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(but since Rich says "},{"type":"text","text":"IReduce","style":{"code":true}},{"type":"text","text":" was a mistake, I don't tend to use it)"}]}]}],"user":"U04V70XH6","text":"(but since Rich says `IReduce` was a mistake, I don't tend to use it)"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629946314.001100","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"32b3b764-6dae-4db3-a808-ad07047445f3","blocks":[{"type":"rich_text","block_id":"xmN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I looked into that actually, and I found an article about category theory lol. It seems that reduce with an init is a catamorphism, and that makes it it can handle reducing things that don't have a neutral element, or reducing into a different type than the type of the elements. And I guess from a programming standpoint, reduce without an init for those cases would error on an empty collection, and would be possibly unintuitive in the case of collection of length 1"}]}]}],"user":"U0K064KQV","text":"I looked into that actually, and I found an article about category theory lol. It seems that reduce with an init is a catamorphism, and that makes it it can handle reducing things that don't have a neutral element, or reducing into a different type than the type of the elements. And I guess from a programming standpoint, reduce without an init for those cases would error on an empty collection, and would be possibly unintuitive in the case of collection of length 1"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629947864.001300","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"f1fc0ac9-46ce-46f1-bb1f-8da5b11d1c6b","blocks":[{"type":"rich_text","block_id":"4nIbF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the last two might be why Rich thinks it's a mistake."}]}]}],"user":"U0K064KQV","text":"I think the last two might be why Rich thinks it's a mistake."}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/Datomic\/mbrainz-importer\/blob\/master\/src\/cognitect\/xform\/transducers.clj | transducers.clj>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/Datomic\/mbrainz-importer|Datomic\/mbrainz-importer>","title":"<https:\/\/github.com\/Datomic\/mbrainz-importer\/blob\/master\/src\/cognitect\/xform\/transducers.clj | transducers.clj>","id":1,"app_unfurl_url":"https:\/\/github.com\/Datomic\/mbrainz-importer\/blob\/master\/src\/cognitect\/xform\/transducers.clj#L29","text":"```\n(defn dot\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629924688.380100","ts":"1629951324.001800","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"9db9db9c-e354-40df-9630-a508b1955ba3","blocks":[{"type":"rich_text","block_id":"OhM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i always thought this transducer that did IO was kinda clever: "},{"type":"link","url":"https:\/\/github.com\/Datomic\/mbrainz-importer\/blob\/master\/src\/cognitect\/xform\/transducers.clj#L29"}]}]}],"user":"U11BV7MTK","reactions":[{"name":"100","users":["U883WCP5Z"],"count":1}],"text":"i always thought this transducer that did IO was kinda clever: <https:\/\/github.com\/Datomic\/mbrainz-importer\/blob\/master\/src\/cognitect\/xform\/transducers.clj#L29>"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629981476.011500","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"fa12e382-5542-4738-af16-601ae93530d2","blocks":[{"type":"rich_text","block_id":"bymg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For anyone interested, Rich talks about "},{"type":"text","text":"IReduce","style":{"code":true}},{"type":"text","text":" being a mistake, in his Inside Transducers talk, shortly after "},{"type":"link","url":"https:\/\/youtu.be\/4KqUvG8HPYo?t=1753","text":"talking about transduce"},{"type":"text","text":", where he says the semantics of reduce was one of the worst things he copied from Common Lisp "},{"type":"emoji","name":"smile"}]}]}],"user":"U883WCP5Z","reactions":[{"name":"eyes","users":["U0K064KQV"],"count":1}],"text":"For anyone interested, Rich talks about `IReduce` being a mistake, in his Inside Transducers talk, shortly after <https:\/\/youtu.be\/4KqUvG8HPYo?t=1753|talking about transduce>, where he says the semantics of reduce was one of the worst things he copied from Common Lisp :smile:"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629987318.024400","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"3a5ddff6-7e6c-494d-add4-32cdc4158eb4","blocks":[{"type":"rich_text","block_id":"syI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, actually in "},{"type":"user","user_id":"U11BV7MTK"},{"type":"text","text":"\u2019s link to those transducers, it is the transducer that is doing the IO (in the case of \u2018.\u2019 printing). This is specifically what has been (believably) pointed out to be a bad idea. Now I do not think this would actually cause a problem. But if one replaces print a dot with doing 1000's of records of IO on a shared resource, it looks like a big problem."}]}]}],"user":"U01L5R113AL","text":"Well, actually in <@U11BV7MTK>\u2019s link to those transducers, it is the transducer that is doing the IO (in the case of \u2018.\u2019 printing). This is specifically what has been (believably) pointed out to be a bad idea. Now I do not think this would actually cause a problem. But if one replaces print a dot with doing 1000's of records of IO on a shared resource, it looks like a big problem."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629987525.025000","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"3cdaea58-63e0-49a2-8ff2-bab76e5a04f1","blocks":[{"type":"rich_text","block_id":"Zx2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah context on this one is important. It is in an example repo, on a command line style problem (migrating data). I think its clever, and its IO is just spitting out to std out."}]}]}],"user":"U11BV7MTK","text":"yeah context on this one is important. It is in an example repo, on a command line style problem (migrating data). I think its clever, and its IO is just spitting out to std out."}
{"type":"message","thread_ts":"1629924688.380100","edited":{"user":"U01L5R113AL","ts":"1629991627.000000"},"ts":"1629991519.027200","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"8f1f3c9d-ce3c-4b2f-9ce0-8314ebc9b342","blocks":[{"type":"rich_text","block_id":"7XQK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To wrap up (maybe not, but let\u2019s see) this great thread (thank you all who participated). I over-reach with this, which is mostly intentional, in an effort to flush out any details that didn\u2019t organically surface in the conversation:\n\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Doing IO in a transducer is putting a suspendible, memory allocating, and long running operation on a background thread pool designed for the opposite. There is no contractural guarantee to service that IO with care (or even preserve the exceptions for you, I can say with some confidence "},{"type":"emoji","name":"wink"},{"type":"text","text":" ). Therefore do not do IO in transducers."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"But wait, there is more! The reducer argument to "},{"type":"text","text":"transduce","style":{"code":true}},{"type":"text","text":" is the same as good old "},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" , use it do IO after the transformation. To do IO before the transformation simply use "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" etc."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"There is still lots of machinery in sequences and "},{"type":"text","text":"core.async","style":{"code":true}},{"type":"text","text":" that will happily service IO requests. I find allocating a pool specifically for this is helpful ."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Libraries for things like Rx (I miss beicon for the JVM) have similar IO pool allocating strategies for operators that will do IO."}]}],"style":"ordered","indent":0,"border":0}]}],"user":"U01L5R113AL","text":"To wrap up (maybe not, but let\u2019s see) this great thread (thank you all who participated). I over-reach with this, which is mostly intentional, in an effort to flush out any details that didn\u2019t organically surface in the conversation:\n\n1. Doing IO in a transducer is putting a suspendible, memory allocating, and long running operation on a background thread pool designed for the opposite. There is no contractural guarantee to service that IO with care (or even preserve the exceptions for you, I can say with some confidence :wink: ). Therefore do not do IO in transducers.\n2. But wait, there is more! The reducer argument to `transduce` is the same as good old `reduce` , use it do IO after the transformation. To do IO before the transformation simply use `map` etc.\n3. There is still lots of machinery in sequences and `core.async` that will happily service IO requests. I find allocating a pool specifically for this is helpful .\n4. Libraries for things like Rx (I miss beicon for the JVM) have similar IO pool allocating strategies for operators that will do IO."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1629991794.027500","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"7b26470a-ffd7-48b9-8cd4-8bc73a587c84","blocks":[{"type":"rich_text","block_id":"lU3+C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Super big thanks "},{"type":"user","user_id":"U04V70XH6"},{"type":"text","text":" for the dive into the interfaces, outstanding! And more thanks for "},{"type":"user","user_id":"U0K064KQV"},{"type":"text","text":" for rounding out all the comments and filling in the gaps. I really appreciate the good help."}]}]}],"user":"U01L5R113AL","text":"Super big thanks <@U04V70XH6> for the dive into the interfaces, outstanding! And more thanks for <@U0K064KQV> for rounding out all the comments and filling in the gaps. I really appreciate the good help."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1630001870.032100","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"ca93c1ec-a81f-4b93-96dd-06465fd68bc7","blocks":[{"type":"rich_text","block_id":"pe77U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also I would add the lore associated with "},{"type":"text","text":"IReduce","style":{"code":true}},{"type":"text","text":" is very enjoyable. Totally new info (and useful background in understanding the design rationale, not always easy to reverse out of a design)."}]}]}],"user":"U01L5R113AL","text":"Also I would add the lore associated with `IReduce` is very enjoyable. Totally new info (and useful background in understanding the design rationale, not always easy to reverse out of a design)."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1630006921.033300","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"9a0900b7-0884-4465-b676-8127a99618d7","blocks":[{"type":"rich_text","block_id":"qnKS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The one thing that still bugs me a little, is the fact that "},{"type":"text","text":"IReduceInit","style":{"code":true}},{"type":"text","text":" eats reduced i.e, on early-termination, the implementation is supposed to return the final value, as opposed to the "},{"type":"text","text":"clojure.lang.Reduced","style":{"code":true}},{"type":"text","text":" wrapper object (Rich talks about this in the same talk). I dunno why "},{"type":"text","text":"IReduceInit","style":{"code":true}},{"type":"text","text":" was designed this way, as opposed to having the implementations return the wrapper, which would make more information available to callers."}]}]}],"user":"U883WCP5Z","text":"The one thing that still bugs me a little, is the fact that `IReduceInit` eats reduced i.e, on early-termination, the implementation is supposed to return the final value, as opposed to the `clojure.lang.Reduced` wrapper object (Rich talks about this in the same talk). I dunno why `IReduceInit` was designed this way, as opposed to having the implementations return the wrapper, which would make more information available to callers."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1630008308.033500","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"905aa5d1-5a69-4511-b046-ad9625b7d6b1","blocks":[{"type":"rich_text","block_id":"bql5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You'd return the reduced to the caller of reduce?"}]}]}],"user":"U0K064KQV","text":"You'd return the reduced to the caller of reduce?"}
{"type":"message","thread_ts":"1629924688.380100","edited":{"user":"U051SS2EU","ts":"1630014376.000000"},"ts":"1630008878.033700","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"55e0ccdf-5d5d-47f5-9815-7f0dd5bf780e","blocks":[{"type":"rich_text","block_id":"lxBgt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it seems odd to return a "},{"type":"text","text":"reduced","style":{"code":true}},{"type":"text","text":", but nothing prevents you from returning "},{"type":"text","text":"(reduced (reduced v))","style":{"code":true}}]}]}],"user":"U051SS2EU","text":"it seems odd to return a `reduced`, but nothing prevents you from returning `(reduced (reduced v))`"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1630052863.049800","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"cfc63234-ac9c-4217-a1bc-6c3dc01cd7cf","blocks":[{"type":"rich_text","block_id":"TS\/u2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe the way to implement "},{"type":"text","text":"IReduceInit","style":{"code":true}},{"type":"text","text":" is to respect "},{"type":"text","text":"reduced","style":{"code":true}},{"type":"text","text":" and terminate early, but when this happens, return the value in the reduced wrapper, and not the wrapper object itself.\n"},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" can remain this way (i.e, not return "},{"type":"text","text":"reduced","style":{"code":true}},{"type":"text","text":" wrapper) but the interface contract can be to return "},{"type":"text","text":"reduced","style":{"code":true}},{"type":"text","text":".\nAs noisesmith pointed out, we can of course double wrap and detect early-termination, perhaps yielding a spin on "},{"type":"text","text":"ensure-reduced","style":{"code":true}},{"type":"text","text":" that ensures something is "},{"type":"text","text":"reduced","style":{"code":true}},{"type":"text","text":" twice, or not at all.\nDoesn't seem as elegant TBH. Something tells me this way is more error prone."}]}]}],"user":"U883WCP5Z","text":"I believe the way to implement `IReduceInit` is to respect `reduced` and terminate early, but when this happens, return the value in the reduced wrapper, and not the wrapper object itself.\n`reduce` can remain this way (i.e, not return `reduced` wrapper) but the interface contract can be to return `reduced`.\nAs noisesmith pointed out, we can of course double wrap and detect early-termination, perhaps yielding a spin on `ensure-reduced` that ensures something is `reduced` twice, or not at all.\nDoesn't seem as elegant TBH. Something tells me this way is more error prone."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1630104447.095300","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"bedcdc6e-44cd-451d-b545-ac5471ffd3d8","blocks":[{"type":"rich_text","block_id":"KPCIn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It just feels like returning a wrapped reduced as the default on early termination would be super annoying most of the time, and only rarely useful? Like most of the time I'd just want the value inside it, and then I'd need to deref it to get it, but also, it would be confusing when I need to deref, because it if didn't early terminate then it would not be wrapped, so you'd need to check if it was reduced and deref if so, otherwise use the value as is. I don't know, seems annoying "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"user":"U0K064KQV","text":"It just feels like returning a wrapped reduced as the default on early termination would be super annoying most of the time, and only rarely useful? Like most of the time I'd just want the value inside it, and then I'd need to deref it to get it, but also, it would be confusing when I need to deref, because it if didn't early terminate then it would not be wrapped, so you'd need to check if it was reduced and deref if so, otherwise use the value as is. I don't know, seems annoying :stuck_out_tongue:"}
{"type":"message","thread_ts":"1629924688.380100","ts":"1630104503.095500","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"5dc9b388-9705-4b8c-ae24-7410150484f1","blocks":[{"type":"rich_text","block_id":"zoXLl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, as a user, when using reduce or transduce, you are always in control of the reducing function, so like if you care about details of early termination, you can just do whatever you need too in it."}]}]}],"user":"U0K064KQV","text":"Also, as a user, when using reduce or transduce, you are always in control of the reducing function, so like if you care about details of early termination, you can just do whatever you need too in it."}
{"type":"message","thread_ts":"1629924688.380100","edited":{"user":"U0K064KQV","ts":"1630104578.000000"},"ts":"1630104569.095700","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"a24336e4-46a3-434c-ae6f-1b283c7c6349","blocks":[{"type":"rich_text","block_id":"xkjgF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In a transduce case, you would be receiving the reduced directly, so your reducing function does know the transducer is asking for early termination."}]}]}],"user":"U0K064KQV","text":"In a transduce case, you would be receiving the reduced directly, so your reducing function does know the transducer is asking for early termination."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1630105539.096000","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"b3bbd73d-f0fd-400d-9c4e-3e36fadfdeca","blocks":[{"type":"rich_text","block_id":"R6L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, I only mentioned "},{"type":"text","text":"(reduced (reduced x))","style":{"code":true}},{"type":"text","text":" because someone was interested in getting a reduced as a return value, but that fundamentally seems odd to me - I've always treated reduced as an implementation detail a reducing function uses to signal termination."}]}]}],"user":"U051SS2EU","text":"right, I only mentioned `(reduced (reduced x))` because someone was interested in getting a reduced as a return value, but that fundamentally seems odd to me - I've always treated reduced as an implementation detail a reducing function uses to signal termination."}
{"type":"message","thread_ts":"1629924688.380100","ts":"1630107033.099800","parent_user_id":"U01L5R113AL","team":"T03RZGPFR","client_msg_id":"81679cd9-7fa0-4cb6-8f64-4e2c81c4ccd7","blocks":[{"type":"rich_text","block_id":"uSdX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The only use case I can think of is if you are interested in knowing somehow that it terminated early for some reason."}]}]}],"user":"U0K064KQV","text":"The only use case I can think of is if you are interested in knowing somehow that it terminated early for some reason."}
{"subscribed":false,"reply_users":["U4MT10C4W","U051SS2EU"],"type":"message","thread_ts":"1629911140.375300","reply_users_count":2,"ts":"1629911140.375300","team":"T03RZGPFR","client_msg_id":"cacab03e-d105-4b61-9ff6-8e1d5d3b32aa","blocks":[{"type":"rich_text","block_id":"MULs2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, what value is added by doing spec checking during coverage inspection? why not do these as separate tasks?"}]}]}],"is_locked":false,"user":"U051SS2EU","reply_count":6,"latest_reply":"1629951127.001500","text":"also, what value is added by doing spec checking during coverage inspection? why not do these as separate tasks?"}
{"subscribed":false,"reply_users":["U4MT10C4W","U051SS2EU"],"type":"message","thread_ts":"1629911140.375300","reply_users_count":2,"ts":"1629911140.375300","team":"T03RZGPFR","client_msg_id":"cacab03e-d105-4b61-9ff6-8e1d5d3b32aa","blocks":[{"type":"rich_text","block_id":"MULs2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, what value is added by doing spec checking during coverage inspection? why not do these as separate tasks?"}]}]}],"is_locked":false,"user":"U051SS2EU","reply_count":6,"latest_reply":"1629951127.001500","text":"also, what value is added by doing spec checking during coverage inspection? why not do these as separate tasks?"}
{"type":"message","thread_ts":"1629911140.375300","ts":"1629911175.375400","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"901b2c7d-7222-4f06-80e1-26e101f9e1d9","blocks":[{"type":"rich_text","block_id":"dws","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm, do you recommend doing "},{"type":"text","text":"lein test","style":{"code":true}},{"type":"text","text":" first and then "},{"type":"text","text":"lein cloverage","style":{"code":true}},{"type":"text","text":"?"}]}]}],"user":"U4MT10C4W","text":"hmm, do you recommend doing `lein test` first and then `lein cloverage`?"}
{"type":"message","thread_ts":"1629911140.375300","ts":"1629911305.375800","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"7a3c4afc-6de3-4619-af29-4ebd9d1544a8","blocks":[{"type":"rich_text","block_id":"Ook","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"even with\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":" lein with-profile +instrument test :only ..."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"i get the test failure as expected, but still see\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Ran 1 tests containing 2 assertions.\n0 failures, 1 errors.\nTests failed.\nError encountered performing task 'test' with profile(s): 'base,system,user,provided,dev,instrument'\nTests failed."}]},{"type":"rich_text_section","elements":[]}]}],"user":"U4MT10C4W","text":"even with\n``` lein with-profile +instrument test :only ...```\ni get the test failure as expected, but still see\n```Ran 1 tests containing 2 assertions.\n0 failures, 1 errors.\nTests failed.\nError encountered performing task 'test' with profile(s): 'base,system,user,provided,dev,instrument'\nTests failed.```\n"}
{"type":"message","thread_ts":"1629911140.375300","ts":"1629911370.376000","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"a82e1a0f-de7b-4f76-8282-4acc1a53ef4e","blocks":[{"type":"rich_text","block_id":"QqN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"depending on context yeah - you can make a custom alias using "},{"type":"text","text":"do","style":{"code":true}},{"type":"text","text":" that executes them in order of that's a common need - like the last one in the sample project.clj\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"  :aliases {\"launch\" [\"run\" \"-m\" \"myproject.main\"]\n            ;; Values from the project map can be spliced into the arguments\n            ;; using :project\/key keywords.\n            \"launch-version\" [\"run\" \"-m\" \"myproject.main\" :project\/version]\n            \"dumbrepl\" [\"trampoline\" \"run\" \"-m\" \"clojure.main\/main\"]\n            ;; :pass-through-help ensures `lein my-alias help` is not converted\n            ;; into `lein help my-alias`.\n            \"go\" ^:pass-through-help [\"run\" \"-m\"]\n            ;; For complex aliases, a docstring may be attached. The docstring\n            ;; will be printed instead of the expansion when running `lein help`\n.\n            \"deploy!\" ^{:doc \"Recompile sources, then deploy if tests succeed.\"}\n            ;; Nested vectors are supported for the \"do\" task\n            [\"do\" \"clean\" [\"test\" \":integration\"] [\"deploy\" \"clojars\"]]}"}]}]}],"user":"U051SS2EU","text":"depending on context yeah - you can make a custom alias using `do` that executes them in order of that's a common need - like the last one in the sample project.clj\n```  :aliases {\"launch\" [\"run\" \"-m\" \"myproject.main\"]\n            ;; Values from the project map can be spliced into the arguments\n            ;; using :project\/key keywords.\n            \"launch-version\" [\"run\" \"-m\" \"myproject.main\" :project\/version]\n            \"dumbrepl\" [\"trampoline\" \"run\" \"-m\" \"clojure.main\/main\"]\n            ;; :pass-through-help ensures `lein my-alias help` is not converted\n            ;; into `lein help my-alias`.\n            \"go\" ^:pass-through-help [\"run\" \"-m\"]\n            ;; For complex aliases, a docstring may be attached. The docstring\n            ;; will be printed instead of the expansion when running `lein help`\n.\n            \"deploy!\" ^{:doc \"Recompile sources, then deploy if tests succeed.\"}\n            ;; Nested vectors are supported for the \"do\" task\n            [\"do\" \"clean\" [\"test\" \":integration\"] [\"deploy\" \"clojars\"]]}```"}
{"type":"message","thread_ts":"1629911140.375300","ts":"1629911408.376200","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"6c503d12-14f9-4765-8a5d-9629e9415f73","blocks":[{"type":"rich_text","block_id":"CLCU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"try "},{"type":"text","text":"lein check","style":{"code":true}},{"type":"text","text":" - all that does is load up all "},{"type":"text","text":"clj","style":{"code":true}},{"type":"text","text":" files in source path, and then show any errors \/ reflection warnings that come up"}]}]}],"user":"U051SS2EU","text":"try `lein check` - all that does is load up all `clj` files in source path, and then show any errors \/ reflection warnings that come up"}
{"type":"message","thread_ts":"1629911140.375300","ts":"1629911475.376400","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"70f71285-15e8-41bb-b62f-8237a30a141a","blocks":[{"type":"rich_text","block_id":"JXXM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"at least with "},{"type":"text","text":"lein do ...","style":{"code":true}},{"type":"text","text":" you can execute your separate subtasks without spinning up lein again each time"}]}]}],"user":"U051SS2EU","text":"at least with `lein do ...` you can execute your separate subtasks without spinning up lein again each time"}
{"attachments":[{"color":"cb2431","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/cloverage\/cloverage\/issues\/296|#296 Error encountered performing task 'cloverage' with profile(s): 'base,system,user,provided,dev' Suppressed exit>","fields":[{"title":"Comments","value":"2","short":true}],"mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/cloverage\/cloverage|cloverage\/cloverage>","title":"<https:\/\/github.com\/cloverage\/cloverage\/issues\/296|#296 Error encountered performing task 'cloverage' with profile(s): 'base,system,user,provided,dev' Suppressed exit>","ts":1596024494,"id":1,"app_unfurl_url":"https:\/\/github.com\/cloverage\/cloverage\/issues\/296","text":"I'm able to run the coverage but getting this error while running -lein with-profile +test cloverage\n\nThe problem it creating for me is the exit code 1 because of the error.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629911140.375300","ts":"1629951127.001500","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"5a5e120b-f65d-482c-ab81-674c70daabfb","blocks":[{"type":"rich_text","block_id":"7YN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks. also i get the error thingy now, it\u2019s working as expected.\ncloverage is meant to give you the coverage, and it "},{"type":"link","url":"https:\/\/github.com\/cloverage\/cloverage\/issues\/296","text":"suppresses"},{"type":"text","text":" any test errors to not uglify its output"}]}]}],"user":"U4MT10C4W","text":"thanks. also i get the error thingy now, it\u2019s working as expected.\ncloverage is meant to give you the coverage, and it <https:\/\/github.com\/cloverage\/cloverage\/issues\/296|suppresses> any test errors to not uglify its output"}
{"subscribed":false,"reply_users":["U4MT10C4W"],"type":"message","thread_ts":"1629911093.374700","reply_users_count":1,"ts":"1629911093.374700","team":"T03RZGPFR","client_msg_id":"0ed55290-3f28-4174-ba98-7520c8ca1187","blocks":[{"type":"rich_text","block_id":"\/h1+o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so is the issue here that either lein or cloverage is hiding the error you expect to see rather than showing it?"}]}]}],"is_locked":false,"user":"U051SS2EU","reply_count":1,"latest_reply":"1629911252.375600","text":"so is the issue here that either lein or cloverage is hiding the error you expect to see rather than showing it?"}
{"subscribed":false,"reply_users":["U4MT10C4W"],"type":"message","thread_ts":"1629911093.374700","reply_users_count":1,"ts":"1629911093.374700","team":"T03RZGPFR","client_msg_id":"0ed55290-3f28-4174-ba98-7520c8ca1187","blocks":[{"type":"rich_text","block_id":"\/h1+o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so is the issue here that either lein or cloverage is hiding the error you expect to see rather than showing it?"}]}]}],"is_locked":false,"user":"U051SS2EU","reply_count":1,"latest_reply":"1629911252.375600","text":"so is the issue here that either lein or cloverage is hiding the error you expect to see rather than showing it?"}
{"type":"message","thread_ts":"1629911093.374700","ts":"1629911252.375600","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"979d0e69-e514-437e-a61d-5ab3584f9c78","blocks":[{"type":"rich_text","block_id":"FlQF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, i have a clojure test that should fail (if function args are being tested) since i\u2019m passing an invalid spec which should fail. when using cloverage, the failure doesn\u2019t happen\u2026"}]}]}],"user":"U4MT10C4W","text":"yeah, i have a clojure test that should fail (if function args are being tested) since i\u2019m passing an invalid spec which should fail. when using cloverage, the failure doesn\u2019t happen\u2026"}
{"client_msg_id":"4a4a5c77-b2c6-4cad-891d-8785860f9990","type":"message","text":"tried it, but I still don\u2019t get the spec failure I expected\n```Error encountered performing task 'cloverage' with profile(s): 'base,system,user,provided,dev,instrument'\nSuppressed exit```\nanyway to check the error mentioned above?","user":"U4MT10C4W","ts":"1629910650.374100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Ezl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"tried it, but I still don\u2019t get the spec failure I expected\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Error encountered performing task 'cloverage' with profile(s): 'base,system,user,provided,dev,instrument'\nSuppressed exit"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"anyway to check the error mentioned above?"}]}]}]}
{"client_msg_id":"fefe60f9-64d1-4198-a80e-680cf173638d","type":"message","text":"(the difference between foo \/ +foo is replacing config vs. merging configs)","user":"U051SS2EU","ts":"1629910324.373400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Un0Jh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(the difference between foo \/ +foo is replacing config vs. merging configs)"}]}]}]}
{"client_msg_id":"eceb14a6-162c-49ff-8b01-6f29d66ac8d9","type":"message","text":"<@U4MT10C4W> usually you want `with-profile +foo` instead of `with-profile foo` - the cloverage task might define important things in its profile that it won't get if you replace its profile","user":"U051SS2EU","ts":"1629910300.372900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"KrmZ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U4MT10C4W"},{"type":"text","text":" usually you want "},{"type":"text","text":"with-profile +foo","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"with-profile foo","style":{"code":true}},{"type":"text","text":" - the cloverage task might define important things in its profile that it won't get if you replace its profile"}]}]}]}
{"client_msg_id":"08815746-ca00-4fa8-bca7-73c4bb729d13","type":"message","text":"I see\n```Error encountered performing task 'cloverage' with profile(s): 'instrument'\nSuppressed exit```\nin lein output, how do I see what\u2019s wrong?","user":"U4MT10C4W","ts":"1629910208.372000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"y=G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Error encountered performing task 'cloverage' with profile(s): 'instrument'\nSuppressed exit"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"in lein output, how do I see what\u2019s wrong?"}]}]}]}
{"client_msg_id":"a2f76309-52ae-4257-b979-a29a303ca91e","type":"message","text":"hi :wave:\ni\u2019m trying to integration clojure.spec into my project and want the `spec\/nstrument` to be activated for all specs.\n\n```:instrument {:injections [(require 'myservice.main)\n                                       (require 'orchestra.spec.test)\n                                       (orchestra.spec.test\/instrument)\n                                       (println \"~~~~~~~~~~~~~~ ran\")]}```\nI have this :top: in my project.clj,  `lein with-profile instrument test :only myservice.foo-test` errors out with an invalid spec as expected\nbut this does not:\n```lein with-profile instrument cloverage```","user":"U4MT10C4W","ts":"1629910162.371500","team":"T03RZGPFR","edited":{"user":"U4MT10C4W","ts":"1629910179.000000"},"blocks":[{"type":"rich_text","block_id":"D+3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi "},{"type":"emoji","name":"wave"},{"type":"text","text":"\ni\u2019m trying to integration clojure.spec into my project and want the "},{"type":"text","text":"spec\/nstrument","style":{"code":true}},{"type":"text","text":" to be activated for all specs.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":":instrument {:injections [(require 'myservice.main)\n                                       (require 'orchestra.spec.test)\n                                       (orchestra.spec.test\/instrument)\n                                       (println \"~~~~~~~~~~~~~~ ran\")]}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I have this "},{"type":"emoji","name":"top"},{"type":"text","text":" in my project.clj,  "},{"type":"text","text":"lein with-profile instrument test :only myservice.foo-test","style":{"code":true}},{"type":"text","text":" errors out with an invalid spec as expected\nbut this does not:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"lein with-profile instrument cloverage"}]}]}]}
{"client_msg_id":"eb3f002d-b88c-469f-9b23-df92877b7789","type":"message","text":"Aaah, that's a good thought. Thanks alex!","user":"U5NCUG8NR","ts":"1629909818.369800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"pEQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aaah, that's a good thought. Thanks alex!"}]}]}]}
{"client_msg_id":"9156d509-f44c-453f-b1df-632bb7dc8da9","type":"message","text":"it resolves that protocol name at compile time. another way to go with this is to put the extension in a separate namespace and optionally decide to load it","user":"U064X3EF3","ts":"1629909801.369400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"YgI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it resolves that protocol name at compile time. another way to go with this is to put the extension in a separate namespace and optionally decide to load it"}]}]}]}
{"client_msg_id":"550aec60-c287-4d63-8bb6-9bf2870cf451","type":"message","text":"It seems to me like this should work, and it's similar to what I've seen elsewhere, but for whatever reason the compiler just doesn't like the reference to the protocol.","user":"U5NCUG8NR","ts":"1629909610.367500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Kn1CI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems to me like this should work, and it's similar to what I've seen elsewhere, but for whatever reason the compiler just doesn't like the reference to the protocol."}]}]}]}
{"client_msg_id":"c0ba3fa0-844c-4b75-a6cf-37066567cf9e","type":"message","text":"I'm trying to do the following to allow an optional dependency in my library, but whenever I require this namespace, it's telling me the fmnoise.flow namespace is not found. Is there something more I have to do here to make this work?\n```(try\n  (require 'fmnoise.flow)\n\n  (extend-protocol fmnoise.flow\/Catch\n    Signal\n    (caught [s] (throw s)))\n\n  (catch Exception _))```\n","user":"U5NCUG8NR","ts":"1629909553.366000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"rc2qt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm trying to do the following to allow an optional dependency in my library, but whenever I require this namespace, it's telling me the fmnoise.flow namespace is not found. Is there something more I have to do here to make this work?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(try\n  (require 'fmnoise.flow)\n\n  (extend-protocol fmnoise.flow\/Catch\n    Signal\n    (caught [s] (throw s)))\n\n  (catch Exception _))"}]},{"type":"rich_text_section","elements":[]}]}]}
{"subscribed":false,"reply_users":["U2FRKM4TW","U49U72C4V","U051SS2EU","U3JH98J4R"],"type":"message","thread_ts":"1629902818.359400","reply_users_count":4,"ts":"1629902818.359400","team":"T03RZGPFR","client_msg_id":"25c5b6f3-d24a-4ca0-a806-a6beb6f6075a","blocks":[{"type":"rich_text","block_id":"7dD4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm writing a Clojure implementation for a Python library that's a heavy user of inheritance, sometimes multiple, along with a plethora of "},{"type":"text","text":"isinstance","style":{"code":true}},{"type":"text","text":" checks.\nI want to avoid shuffling it "},{"type":"text","text":"too","style":{"italic":true}},{"type":"text","text":" much as I want to keep the Clojure version up to date with the Python one, so I'm trying to structure the code in at least somewhat similar way.\nSo far, my only idea about mimicking this multiple inheritance with "},{"type":"text","text":"isinstance","style":{"code":true}},{"type":"text","text":" checks is to add a keyword for each type, "},{"type":"text","text":"derive","style":{"code":true}},{"type":"text","text":" the types from them, "},{"type":"text","text":"derive","style":{"code":true}},{"type":"text","text":" keywords from each other, and implement a version of "},{"type":"text","text":"isinstance","style":{"code":true}},{"type":"text","text":" that would use "},{"type":"text","text":"isa?","style":{"code":true}},{"type":"text","text":".\nIs there a better approach?"}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":17,"latest_reply":"1629912804.377100","text":"I'm writing a Clojure implementation for a Python library that's a heavy user of inheritance, sometimes multiple, along with a plethora of `isinstance` checks.\nI want to avoid shuffling it _too_ much as I want to keep the Clojure version up to date with the Python one, so I'm trying to structure the code in at least somewhat similar way.\nSo far, my only idea about mimicking this multiple inheritance with `isinstance` checks is to add a keyword for each type, `derive` the types from them, `derive` keywords from each other, and implement a version of `isinstance` that would use `isa?`.\nIs there a better approach?"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U49U72C4V","U051SS2EU","U3JH98J4R"],"type":"message","thread_ts":"1629902818.359400","reply_users_count":4,"ts":"1629902818.359400","team":"T03RZGPFR","client_msg_id":"25c5b6f3-d24a-4ca0-a806-a6beb6f6075a","blocks":[{"type":"rich_text","block_id":"7dD4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm writing a Clojure implementation for a Python library that's a heavy user of inheritance, sometimes multiple, along with a plethora of "},{"type":"text","text":"isinstance","style":{"code":true}},{"type":"text","text":" checks.\nI want to avoid shuffling it "},{"type":"text","text":"too","style":{"italic":true}},{"type":"text","text":" much as I want to keep the Clojure version up to date with the Python one, so I'm trying to structure the code in at least somewhat similar way.\nSo far, my only idea about mimicking this multiple inheritance with "},{"type":"text","text":"isinstance","style":{"code":true}},{"type":"text","text":" checks is to add a keyword for each type, "},{"type":"text","text":"derive","style":{"code":true}},{"type":"text","text":" the types from them, "},{"type":"text","text":"derive","style":{"code":true}},{"type":"text","text":" keywords from each other, and implement a version of "},{"type":"text","text":"isinstance","style":{"code":true}},{"type":"text","text":" that would use "},{"type":"text","text":"isa?","style":{"code":true}},{"type":"text","text":".\nIs there a better approach?"}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":17,"latest_reply":"1629912804.377100","text":"I'm writing a Clojure implementation for a Python library that's a heavy user of inheritance, sometimes multiple, along with a plethora of `isinstance` checks.\nI want to avoid shuffling it _too_ much as I want to keep the Clojure version up to date with the Python one, so I'm trying to structure the code in at least somewhat similar way.\nSo far, my only idea about mimicking this multiple inheritance with `isinstance` checks is to add a keyword for each type, `derive` the types from them, `derive` keywords from each other, and implement a version of `isinstance` that would use `isa?`.\nIs there a better approach?"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629906326.360900","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"92532d0d-fbd9-4210-b3fd-c2c70cce67c3","blocks":[{"type":"rich_text","block_id":"gtb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess an alternative would be to make all predicate functions that check for "},{"type":"text","text":"isintance","style":{"code":true}},{"type":"text","text":" in the original code, like "},{"type":"text","text":"is-data-range?","style":{"code":true}},{"type":"text","text":" , multimethods, and define them as "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":" only for specific classes that were created by "},{"type":"text","text":"defrecord","style":{"code":true}},{"type":"text","text":" ."}]}]}],"user":"U2FRKM4TW","text":"I guess an alternative would be to make all predicate functions that check for `isintance` in the original code, like `is-data-range?` , multimethods, and define them as `true` only for specific classes that were created by `defrecord` ."}
{"type":"message","thread_ts":"1629902818.359400","edited":{"user":"U49U72C4V","ts":"1629906364.000000"},"ts":"1629906356.361100","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"bcd5858c-c302-4687-aa18-eb4f1c8590ec","blocks":[{"type":"rich_text","block_id":"yUoOv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is it not feasible to depart from the original design somewhat and just rely on multimethods on ordinary maps? that'd be my first instinct"}]}]}],"user":"U49U72C4V","text":"is it not feasible to depart from the original design somewhat and just rely on multimethods on ordinary maps? that'd be my first instinct"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629906445.361400","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"f1b34418-882d-408b-a911-9fa72995316e","blocks":[{"type":"rich_text","block_id":"muE+a","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" somewhat"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"This particular part is not feasible, I'm afraid. The "},{"type":"text","text":"isinstance","style":{"code":true}},{"type":"text","text":" checks are "},{"type":"text","text":"everywhere","style":{"italic":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"&gt;  somewhat\nThis particular part is not feasible, I'm afraid. The `isinstance` checks are _everywhere_."}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629906489.361600","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"40520d1b-2195-4b1d-a18d-d6267fd088ef","blocks":[{"type":"rich_text","block_id":"3R4b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yow, that's unfortunate. just curious, what's the python lib?"}]}]}],"user":"U49U72C4V","text":"yow, that's unfortunate. just curious, what's the python lib?"}
{"attachments":[{"image_bytes":127950,"service_name":"bokeh.org","title_link":"https:\/\/bokeh.org\/","fallback":"Bokeh","from_url":"https:\/\/bokeh.org\/","image_width":476,"image_url":"http:\/\/static.bokeh.org\/og\/logotype-on-hex.png","title":"Bokeh","id":1,"service_icon":"https:\/\/static.bokeh.org\/favicon\/apple-touch-icon.png","original_url":"https:\/\/bokeh.org\/","image_height":250,"text":"Bokeh is a Python-based visualization library, capable of building plots from simple charts to interactive dashboards."}],"type":"message","thread_ts":"1629902818.359400","ts":"1629906534.361800","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"f14f41d8-1d30-4cd9-b41a-1df2e44fc4ff","blocks":[{"type":"rich_text","block_id":"CgkB3","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/bokeh.org\/"}]}]}],"user":"U2FRKM4TW","text":"<https:\/\/bokeh.org\/>"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629906619.362100","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"ecf1ebb5-82fe-44d2-bb8a-0bd29801daed","blocks":[{"type":"rich_text","block_id":"\/VVA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It heavily relies on classes, hierarchies, metaclasses, property descriptors - few of the many reasons that made me stop using Python. :D\nBut the library itself is great, especially because it has a JS counterpart that just doesn't have alternatives IMO."}]}]}],"user":"U2FRKM4TW","text":"It heavily relies on classes, hierarchies, metaclasses, property descriptors - few of the many reasons that made me stop using Python. :D\nBut the library itself is great, especially because it has a JS counterpart that just doesn't have alternatives IMO."}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909014.362800","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"0d3b0db1-db09-4e50-80d9-6ea68eeb9f0f","blocks":[{"type":"rich_text","block_id":"f1og","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"mplement a version of isinstance that would use isa?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"yes, if you use "},{"type":"text","text":"derive","style":{"code":true}},{"type":"text","text":" to define the hierarchy, "},{"type":"text","text":"isa?","style":{"code":true}},{"type":"text","text":" should do exactly what isinstance did, alternatively you can use \"marker interfaces\" (interfaces with no methods), and implement the apropriate interfaces on each record based on what isinstance should return"}]}]}],"user":"U051SS2EU","text":"&gt; mplement a version of isinstance that would use isa?\nyes, if you use `derive` to define the hierarchy, `isa?` should do exactly what isinstance did, alternatively you can use \"marker interfaces\" (interfaces with no methods), and implement the apropriate interfaces on each record based on what isinstance should return"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909067.363600","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"a6f0c625-53f8-41cc-bbd3-b4164ba97c8d","blocks":[{"type":"rich_text","block_id":"P=G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"of course you can use protocols instead of interfaces, with no methods to define it comes out about the same I think"}]}]}],"user":"U051SS2EU","text":"of course you can use protocols instead of interfaces, with no methods to define it comes out about the same I think"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909124.363800","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"af5e1c32-aeb7-4bc2-a1d6-f6c1d2f3f96e","blocks":[{"type":"rich_text","block_id":"Seg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a somewhat cursed impl of python's classes in clojure - if you want to directly translate"}]}]}],"user":"U3JH98J4R","text":"I have a somewhat cursed impl of python's classes in clojure - if you want to directly translate"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909176.364000","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"c3bfe61a-0312-41d0-863b-3815d08ff29b","blocks":[{"type":"rich_text","block_id":"idpqU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you have any recommendation, along with the \"why\"?\nSo far:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Use keyword hierarchy with "},{"type":"text","text":"derive","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"isa?","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Make the predicates into multimethods that dispatch on the class of the record"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Create marker interfaces\/protocols"}]}],"style":"bullet","indent":0,"border":0}]}],"user":"U2FRKM4TW","text":"Do you have any recommendation, along with the \"why\"?\nSo far:\n\u2022 Use keyword hierarchy with `derive` and `isa?`\n\u2022 Make the predicates into multimethods that dispatch on the class of the record\n\u2022 Create marker interfaces\/protocols"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909238.364200","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"a43a3802-6fc8-485d-af09-17d07b38c4a6","blocks":[{"type":"rich_text","block_id":"ROM4","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U3JH98J4R"},{"type":"text","text":" I'm somewhat curious but at the same time 80% sure that won't work, unless it's more than somewhat cursed. :D The library heavily relies on metaclasses and property descriptors as well, so I have to adapt, I don't see how I could directly translate that."}]}]}],"user":"U2FRKM4TW","text":"<@U3JH98J4R> I'm somewhat curious but at the same time 80% sure that won't work, unless it's more than somewhat cursed. :D The library heavily relies on metaclasses and property descriptors as well, so I have to adapt, I don't see how I could directly translate that."}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909382.364600","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"a5f3bd05-7aa6-4fa9-8e66-8ea18318937e","blocks":[{"type":"rich_text","block_id":"r9XO","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(definterface IAnimal)\n\n(definterface ISilent)\n\n(definterface ILarge)\n\n(definterface IHarmless)\n\n(defrecord Panther [color]\n  IAnimal\n  ISilent\n  ILarge)\n\n(let [panther (->Panther \"black\")]\n  {:animal (instance? IAnimal panther)\n   :silent (instance? ISilent panther)\n   :large (instance? ILarge panther)\n   :harmless (instance? IHarmless panther)})"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"{:animal true, :silent true, :large true, :harmless false}"}]}]}],"user":"U051SS2EU","text":"```(definterface IAnimal)\n\n(definterface ISilent)\n\n(definterface ILarge)\n\n(definterface IHarmless)\n\n(defrecord Panther [color]\n  IAnimal\n  ISilent\n  ILarge)\n\n(let [panther (-&gt;Panther \"black\")]\n  {:animal (instance? IAnimal panther)\n   :silent (instance? ISilent panther)\n   :large (instance? ILarge panther)\n   :harmless (instance? IHarmless panther)})```\n```{:animal true, :silent true, :large true, :harmless false}```"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909569.366200","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"a5a2dee3-42d8-4ae0-8b95-be01053be4ae","blocks":[{"type":"rich_text","block_id":"NfYw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"multiple inheritance you could do. but not much more than that"}]}]}],"user":"U3JH98J4R","text":"multiple inheritance you could do. but not much more than that"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909608.367300","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"c8c1ff19-b8a4-43dd-aa52-54efd7d7e640","blocks":[{"type":"rich_text","block_id":"=fG2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also have you tried \"just\" using libpython-clj?"}]}]}],"user":"U3JH98J4R","text":"also have you tried \"just\" using libpython-clj?"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909612.367600","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"842bbc1e-1664-4e47-8178-690d84bfba00","blocks":[{"type":"rich_text","block_id":"TXqs1","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":" each of those three can accomplish what you want, I think the question to answer is which of them has lowest friction to translate from python and keep in sync - are the properties that isinstance checks defined when defining the class (marker interface), are they added later from some other procedure? (defmethod)"}]}]}],"user":"U051SS2EU","text":"<@U2FRKM4TW> each of those three can accomplish what you want, I think the question to answer is which of them has lowest friction to translate from python and keep in sync - are the properties that isinstance checks defined when defining the class (marker interface), are they added later from some other procedure? (defmethod)"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629909664.367900","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"39439906-394e-4b34-82b4-16cf093e9541","blocks":[{"type":"rich_text","block_id":"YpLOi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"using derive \/ hierarchy is probably the most flexible on the clojure side, but least likely to look like the python code"}]}]}],"user":"U051SS2EU","text":"using derive \/ hierarchy is probably the most flexible on the clojure side, but least likely to look like the python code"}
{"type":"message","thread_ts":"1629902818.359400","ts":"1629912804.377100","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"0ee55571-a6f4-4566-83a1-1c620a6bc87c","blocks":[{"type":"rich_text","block_id":"HJ=j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! Since the code isn't supposed to be "},{"type":"text","text":"that","style":{"italic":true}},{"type":"text","text":" flexible, marker interfaces should do. And now I recall that Clojure itself uses them.\n\n"},{"type":"user","user_id":"U3JH98J4R"},{"type":"text","text":" Nope, and I definitely won't. I don't like Bokeh's Python API at all. It's immensely overloaded IMO and has a lot of \"magic\", making it brittle and hard to debug."}]}]}],"user":"U2FRKM4TW","text":"Thanks! Since the code isn't supposed to be _that_ flexible, marker interfaces should do. And now I recall that Clojure itself uses them.\n\n<@U3JH98J4R> Nope, and I definitely won't. I don't like Bokeh's Python API at all. It's immensely overloaded IMO and has a lot of \"magic\", making it brittle and hard to debug."}
{"client_msg_id":"b59e125a-1fb7-4c28-a84d-7f3fed5c986a","type":"message","text":"clojure.tools.logging lets you set the logging implementation using the `clojure.tools.logging.factory` Java property, and includes some corresponding implementations out of the box (frex, `clojure.tools.logging.impl\/slf4j-factory`). There's also a `clojure.tools.logging.impl\/disabled-logger-factory`, which would be nice to use in this same way. However, `clojure.tools.logging.impl\/disabled-logger-factory` define the factory itself, while the others define a 0-arity function that returns the factory; the latter is the behavior expected by the value set for the `clojure.tools.logging.factory` property. This seems like an oversight in the tools.logging implementation. Is a 0-arg function that returns the disabled-logger-factory something that would be reasonable to  add clojure.tools.logging? I can add my own function to do this, but it seems like a better fit in the library itself.","user":"U0EHU1800","ts":"1629902045.354600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"80\/a9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"clojure.tools.logging lets you set the logging implementation using the "},{"type":"text","text":"clojure.tools.logging.factory","style":{"code":true}},{"type":"text","text":" Java property, and includes some corresponding implementations out of the box (frex, "},{"type":"text","text":"clojure.tools.logging.impl\/slf4j-factory","style":{"code":true}},{"type":"text","text":"). There's also a "},{"type":"text","text":"clojure.tools.logging.impl\/disabled-logger-factory","style":{"code":true}},{"type":"text","text":", which would be nice to use in this same way. However, "},{"type":"text","text":"clojure.tools.logging.impl\/disabled-logger-factory","style":{"code":true}},{"type":"text","text":" define the factory itself, while the others define a 0-arity function that returns the factory; the latter is the behavior expected by the value set for the "},{"type":"text","text":"clojure.tools.logging.factory","style":{"code":true}},{"type":"text","text":" property. This seems like an oversight in the tools.logging implementation. Is a 0-arg function that returns the disabled-logger-factory something that would be reasonable to  add clojure.tools.logging? I can add my own function to do this, but it seems like a better fit in the library itself."}]}]}]}
{"subscribed":false,"reply_users":["U0VP19K6K","U2FRKM4TW","U0PUGPSFR","U0P0TMEFJ","U050ECB92","U4YGF4NGM","U05224H0W","UDVJE9RE3"],"type":"message","thread_ts":"1629896337.345000","reply_users_count":8,"ts":"1629896337.345000","team":"T03RZGPFR","client_msg_id":"f72a18f7-a16d-4792-9aa5-cc3b523eb97d","blocks":[{"type":"rich_text","block_id":"c40","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure how much code I have to show for this one, but I sure have a lot if needed. "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" I just think this comes down to a simple question.\n\nI am writing a macro to define macros. I have done this before, so I think I have the syntax down, (Old Lisper here.) But in this case, I want the macro to expand into sth referencing a namespaced type, ReactNative to be specific:\n\n   (def-view-macro View rn\/View)\n\nie, I want a View macro that will expand into code referencing a React Native (rn) View (in a create-element, fwiw).\n\nThe problem:\n  Syntax error compiling at (src\/myapp\/mxrgen.clj:41:1).\n  No such namespace: rn\n\nNo doubt. The reader tries to read "},{"type":"text","text":"rn\/View","style":{"code":true}},{"type":"text","text":" before even looking at "},{"type":"text","text":"def-view-macro","style":{"code":true}},{"type":"text","text":". OK, in a CLJS I can require [\"react-native\" :as rn], but macros are authored in CLJ files, where that \"require\" will not hunt.\n\nI "},{"type":"text","text":"think","style":{"italic":true}},{"type":"text","text":" the solution would be to generate the \"rn\/View\" token in the expansion in a way that (a) is recognized as an rn type when invoked in a CLJS expansion, but which never asks CLJ to recognize the generated \"rn\/View\" as a namespaced token.\n\nie, I want "},{"type":"text","text":"rn\/View","style":{"code":true}},{"type":"text","text":" in the "},{"type":"text","text":"expansion","style":{"italic":true}},{"type":"text","text":" without letting CLJ see it.\n\nAm I doomed, or is there some "},{"type":"text","text":"'","style":{"strike":true}},{"type":"text","text":" magic that I am missing?"}]}]}],"is_locked":false,"user":"U0PUGPSFR","reply_count":25,"latest_reply":"1629962817.009600","text":"Not sure how much code I have to show for this one, but I sure have a lot if needed. :slightly_smiling_face: I just think this comes down to a simple question.\n\nI am writing a macro to define macros. I have done this before, so I think I have the syntax down, (Old Lisper here.) But in this case, I want the macro to expand into sth referencing a namespaced type, ReactNative to be specific:\n\n   (def-view-macro View rn\/View)\n\nie, I want a View macro that will expand into code referencing a React Native (rn) View (in a create-element, fwiw).\n\nThe problem:\n  Syntax error compiling at (src\/myapp\/mxrgen.clj:41:1).\n  No such namespace: rn\n\nNo doubt. The reader tries to read `rn\/View` before even looking at `def-view-macro`. OK, in a CLJS I can require [\"react-native\" :as rn], but macros are authored in CLJ files, where that \"require\" will not hunt.\n\nI _think_ the solution would be to generate the \"rn\/View\" token in the expansion in a way that (a) is recognized as an rn type when invoked in a CLJS expansion, but which never asks CLJ to recognize the generated \"rn\/View\" as a namespaced token.\n\nie, I want `rn\/View` in the _expansion_ without letting CLJ see it.\n\nAm I doomed, or is there some ~'~ magic that I am missing?"}
{"subscribed":false,"reply_users":["U0VP19K6K","U2FRKM4TW","U0PUGPSFR","U0P0TMEFJ","U050ECB92","U4YGF4NGM","U05224H0W","UDVJE9RE3"],"type":"message","thread_ts":"1629896337.345000","reply_users_count":8,"ts":"1629896337.345000","team":"T03RZGPFR","client_msg_id":"f72a18f7-a16d-4792-9aa5-cc3b523eb97d","blocks":[{"type":"rich_text","block_id":"c40","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure how much code I have to show for this one, but I sure have a lot if needed. "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" I just think this comes down to a simple question.\n\nI am writing a macro to define macros. I have done this before, so I think I have the syntax down, (Old Lisper here.) But in this case, I want the macro to expand into sth referencing a namespaced type, ReactNative to be specific:\n\n   (def-view-macro View rn\/View)\n\nie, I want a View macro that will expand into code referencing a React Native (rn) View (in a create-element, fwiw).\n\nThe problem:\n  Syntax error compiling at (src\/myapp\/mxrgen.clj:41:1).\n  No such namespace: rn\n\nNo doubt. The reader tries to read "},{"type":"text","text":"rn\/View","style":{"code":true}},{"type":"text","text":" before even looking at "},{"type":"text","text":"def-view-macro","style":{"code":true}},{"type":"text","text":". OK, in a CLJS I can require [\"react-native\" :as rn], but macros are authored in CLJ files, where that \"require\" will not hunt.\n\nI "},{"type":"text","text":"think","style":{"italic":true}},{"type":"text","text":" the solution would be to generate the \"rn\/View\" token in the expansion in a way that (a) is recognized as an rn type when invoked in a CLJS expansion, but which never asks CLJ to recognize the generated \"rn\/View\" as a namespaced token.\n\nie, I want "},{"type":"text","text":"rn\/View","style":{"code":true}},{"type":"text","text":" in the "},{"type":"text","text":"expansion","style":{"italic":true}},{"type":"text","text":" without letting CLJ see it.\n\nAm I doomed, or is there some "},{"type":"text","text":"'","style":{"strike":true}},{"type":"text","text":" magic that I am missing?"}]}]}],"is_locked":false,"user":"U0PUGPSFR","reply_count":25,"latest_reply":"1629962817.009600","text":"Not sure how much code I have to show for this one, but I sure have a lot if needed. :slightly_smiling_face: I just think this comes down to a simple question.\n\nI am writing a macro to define macros. I have done this before, so I think I have the syntax down, (Old Lisper here.) But in this case, I want the macro to expand into sth referencing a namespaced type, ReactNative to be specific:\n\n   (def-view-macro View rn\/View)\n\nie, I want a View macro that will expand into code referencing a React Native (rn) View (in a create-element, fwiw).\n\nThe problem:\n  Syntax error compiling at (src\/myapp\/mxrgen.clj:41:1).\n  No such namespace: rn\n\nNo doubt. The reader tries to read `rn\/View` before even looking at `def-view-macro`. OK, in a CLJS I can require [\"react-native\" :as rn], but macros are authored in CLJ files, where that \"require\" will not hunt.\n\nI _think_ the solution would be to generate the \"rn\/View\" token in the expansion in a way that (a) is recognized as an rn type when invoked in a CLJS expansion, but which never asks CLJ to recognize the generated \"rn\/View\" as a namespaced token.\n\nie, I want `rn\/View` in the _expansion_ without letting CLJ see it.\n\nAm I doomed, or is there some ~'~ magic that I am missing?"}
{"type":"message","thread_ts":"1629896337.345000","edited":{"user":"U0VP19K6K","ts":"1629898116.000000"},"ts":"1629898098.345100","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"39236848-5796-4524-b53c-41e5a53bfa2c","blocks":[{"type":"rich_text","block_id":"jCQ=0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can it possibly be done without aliasing the ns? so "},{"type":"text","text":"'full.react-ns\/View","style":{"code":true}},{"type":"text","text":" in the macro phase? I think that\u2019s how I\u2019ve done what I think you\u2019re trying to do before"}]}]}],"user":"U0VP19K6K","text":"Can it possibly be done without aliasing the ns? so `'full.react-ns\/View` in the macro phase? I think that\u2019s how I\u2019ve done what I think you\u2019re trying to do before"}
{"attachments":[{"title":"ClojureScript Macros","title_link":"https:\/\/code.thheller.com\/blog\/shadow-cljs\/2019\/10\/12\/clojurescript-macros.html#gotcha-1-namespace-aliases-and-dependencies","text":"ClojureScript Macros are a hurdle for most CLJS beginners and wrapping your head around how they work can be quite confusing. I\u2019ll try to cover the basics yo...","fallback":"ClojureScript Macros","from_url":"https:\/\/code.thheller.com\/blog\/shadow-cljs\/2019\/10\/12\/clojurescript-macros.html#gotcha-1-namespace-aliases-and-dependencies","service_name":"code.thheller.com","id":1,"original_url":"https:\/\/code.thheller.com\/blog\/shadow-cljs\/2019\/10\/12\/clojurescript-macros.html#gotcha-1-namespace-aliases-and-dependencies"}],"type":"message","thread_ts":"1629896337.345000","ts":"1629899006.345400","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"b1497933-8e1b-49da-bd66-c50fe4b9cf75","blocks":[{"type":"rich_text","block_id":"b9wI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A common way it to emit the CLJS code with FQN: "},{"type":"link","url":"https:\/\/code.thheller.com\/blog\/shadow-cljs\/2019\/10\/12\/clojurescript-macros.html#gotcha-1-namespace-aliases-and-dependencies"}]}]}],"user":"U2FRKM4TW","text":"A common way it to emit the CLJS code with FQN: <https:\/\/code.thheller.com\/blog\/shadow-cljs\/2019\/10\/12\/clojurescript-macros.html#gotcha-1-namespace-aliases-and-dependencies>"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629900136.345700","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"b664b40b-f058-4505-acd4-dd79dd16cae8","blocks":[{"type":"rich_text","block_id":"VPO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thx, "},{"type":"user","user_id":"U0VP19K6K"},{"type":"text","text":". I considered that, but did not know how to translate "},{"type":"text","text":"[\"react-native\" :as rn]","style":{"code":true}},{"type":"text","text":" to sth un-aliased. tbh, I am not familiar with that syntax, a string naming the required component. "},{"type":"emoji","name":"shrug"}]}]}],"user":"U0PUGPSFR","text":"Thx, <@U0VP19K6K>. I considered that, but did not know how to translate `[\"react-native\" :as rn]` to sth un-aliased. tbh, I am not familiar with that syntax, a string naming the required component. :shrug:"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629900323.345900","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"18ec2121-48b0-4413-abd0-a0a0451377dd","blocks":[{"type":"rich_text","block_id":"4pZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, that's an interesting problem then. "},{"type":"user","user_id":"U05224H0W"},{"type":"text","text":" Your article above doesn't mention such requires. Do you perhaps have any recommendations?"}]}]}],"user":"U2FRKM4TW","text":"Ah, that's an interesting problem then. <@U05224H0W> Your article above doesn't mention such requires. Do you perhaps have any recommendations?"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629901465.347400","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"43f63c2c-66f3-4d3f-893c-3291f9849322","blocks":[{"type":"rich_text","block_id":"gqdq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can you expand into cljs function calls that then call "},{"type":"text","text":"rn\/View","style":{"code":true}},{"type":"text","text":"??"}]}]}],"user":"U0P0TMEFJ","text":"can you expand into cljs function calls that then call `rn\/View`??"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629902017.354000","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"ee7ab0a5-8eca-493a-a1ea-5f99055d3f2c","blocks":[{"type":"rich_text","block_id":"PVsu","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0PUGPSFR"},{"type":"text","text":" Ah, that\u2019s a good point! I never did this with npm modules so I\u2019m not sure either I\u2019m afraid."}]}]}],"user":"U0VP19K6K","text":"<@U0PUGPSFR> Ah, that\u2019s a good point! I never did this with npm modules so I\u2019m not sure either I\u2019m afraid."}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629902158.354700","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"fd3f9c0c-44af-45d3-83c0-a8b54a5ec811","blocks":[{"type":"rich_text","block_id":"f+d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There may be a format that is not string based\u2026"}]}]}],"user":"U0VP19K6K","text":"There may be a format that is not string based\u2026"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629902331.354900","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"6f9a352a-2cc1-4d1f-904c-bbcc72897dfd","blocks":[{"type":"rich_text","block_id":"=g\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Great minds think alike! But then my code looks like, say, "},{"type":"text","text":"(mxn\/View rn\/SafeAreaView etc etc)","style":{"code":true}},{"type":"text","text":" and when I get to other widgets it would be "},{"type":"text","text":"(mxn\/Widget rn\/Switch ...)","style":{"code":true}},{"type":"text","text":". Hmmm, maybe I can go DRY differently.\n\nThis is for passing to the helix.core\/$ macro which "},{"type":"text","text":"does","style":{"italic":true}},{"type":"text","text":" accept strings and keywords for its own magic with \"div\". I have a question into "},{"type":"user","user_id":"U4YGF4NGM"},{"type":"text","text":" in the "},{"type":"channel","channel_id":"CRRJBCX7S"},{"type":"text","text":" channel as well."}]}]}],"user":"U0PUGPSFR","text":"Great minds think alike! But then my code looks like, say, `(mxn\/View rn\/SafeAreaView etc etc)` and when I get to other widgets it would be `(mxn\/Widget rn\/Switch ...)`. Hmmm, maybe I can go DRY differently.\n\nThis is for passing to the helix.core\/$ macro which _does_ accept strings and keywords for its own magic with \"div\". I have a question into <@U4YGF4NGM> in the <#CRRJBCX7S|helix> channel as well."}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629902331.355100","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"4a911c46-0384-4f28-992f-090f0a1f46a3","blocks":[{"type":"rich_text","block_id":"UbIj1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there is not enough information here.  Need to show definition of "},{"type":"text","text":"def-view-macro","style":{"code":true}}]}]}],"user":"U050ECB92","text":"there is not enough information here.  Need to show definition of `def-view-macro`"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629902364.355500","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"a0f04e9d-e965-4dc9-a6be-aff302f42884","blocks":[{"type":"rich_text","block_id":"BbjcQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there is no problem if the reader reads a symbol "},{"type":"text","text":"rn\/View","style":{"code":true}}]}]}],"user":"U050ECB92","text":"there is no problem if the reader reads a symbol `rn\/View`"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629902488.355800","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"b2b4b990-cfbc-4f35-825b-91effc1a6071","blocks":[{"type":"rich_text","block_id":"=ywK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wait, strike that, I was hacking at it ^^^"}]}]}],"user":"U0PUGPSFR","text":"Wait, strike that, I was hacking at it ^^^"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629903002.359500","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"0400e0e9-ab14-4899-a027-fb3c16a9ae53","blocks":[{"type":"rich_text","block_id":"zHH7\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, this is where I started:\n\n(defmacro def-view-macro [type rn-type]\n  `(defmacro ~type [mx-props# jsx-props# & children#]\n       `(tiltontec.model.core\/make :myapp.mxreact\/mxrn.elt\n          :sid (swap! myapp.mxreact\/sid-latest inc)\n          :kids (tiltontec.model.core\/cFkids ~@children#)\n          :rendering (tiltontec.cell.core\/cF\n                       (prn :creating ~'rn-type#)\n                       (helix.core\/$\n                         (mxfnc\n                           (apply helix.core\/$ ~~rn-type\n                             ~jsx-props#\n                             {}\n                             (doall (map #(tiltontec.model.core\/mget % :rendering)\n                                      (tiltontec.model.core\/mget ~'me :kids)))))))\n          ~@(apply concat\n              (into [] mx-props#)))))\n\nUsage "},{"type":"text","text":"(def-view-macro View rn\/View)","style":{"code":true}},{"type":"text","text":" fails on \"No such namespace: rn\""}]}]}],"user":"U0PUGPSFR","text":"Ok, this is where I started:\n\n(defmacro def-view-macro [type rn-type]\n  `(defmacro ~type [mx-props# jsx-props# &amp; children#]\n       `(tiltontec.model.core\/make :myapp.mxreact\/mxrn.elt\n          :sid (swap! myapp.mxreact\/sid-latest inc)\n          :kids (tiltontec.model.core\/cFkids ~@children#)\n          :rendering (tiltontec.cell.core\/cF\n                       (prn :creating ~'rn-type#)\n                       (helix.core\/$\n                         (mxfnc\n                           (apply helix.core\/$ ~~rn-type\n                             ~jsx-props#\n                             {}\n                             (doall (map #(tiltontec.model.core\/mget % :rendering)\n                                      (tiltontec.model.core\/mget ~'me :kids)))))))\n          ~@(apply concat\n              (into [] mx-props#)))))\n\nUsage `(def-view-macro View rn\/View)` fails on \"No such namespace: rn\""}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629903080.359700","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"11904d1c-c6dc-48aa-8bae-db2976fbf48b","blocks":[{"type":"rich_text","block_id":"eiA4e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not surprised the reader cannot resolve \"rn\", tbh, since the alias is not defined in this clojure file."}]}]}],"user":"U0PUGPSFR","text":"Not surprised the reader cannot resolve \"rn\", tbh, since the alias is not defined in this clojure file."}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629903248.359900","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"9278fe60-f9b1-40fc-8dde-453ab57bfdeb","blocks":[{"type":"rich_text","block_id":"q2wt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have tried to go down this route before and run into issues with macro-defining-macros"}]}]}],"user":"U4YGF4NGM","text":"I have tried to go down this route before and run into issues with macro-defining-macros"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629903333.360100","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"32faa444-9abe-470a-9849-1839395ce0d7","blocks":[{"type":"rich_text","block_id":"H1lgP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not saying it can't be done but I gave up, the interaction between the Clojure macro namespace and the CLJS namespace was too complicated and hard to resolve"}]}]}],"user":"U4YGF4NGM","text":"not saying it can't be done but I gave up, the interaction between the Clojure macro namespace and the CLJS namespace was too complicated and hard to resolve"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629903591.360300","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"91483463-8bdf-409b-8866-69a33915004c","blocks":[{"type":"rich_text","block_id":"EoA6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, macro-defining-macros are fun. I did OK in mxWeb because I never had to reference a type: I just needed strings to get to the DOM manipulation I was doing.\n\nThx for confirming I am doomed. Copy and paste here I come! :)"}]}]}],"user":"U0PUGPSFR","text":"Yeah, macro-defining-macros are fun. I did OK in mxWeb because I never had to reference a type: I just needed strings to get to the DOM manipulation I was doing.\n\nThx for confirming I am doomed. Copy and paste here I come! :)"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629903613.360500","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"57fa2f91-535a-474a-8a44-8104784ec2f0","blocks":[{"type":"rich_text","block_id":"pRwV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, the only way I could get it to work was to always keep CLJS NSs fully qualified as plain symbols but those were Clojure modules not NPM ones"}]}]}],"user":"U0VP19K6K","text":"Yeah, the only way I could get it to work was to always keep CLJS NSs fully qualified as plain symbols but those were Clojure modules not NPM ones"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629903670.360700","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"0ae58d12-2eab-46c8-918e-282e146d8b54","blocks":[{"type":"rich_text","block_id":"c=w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Probably worth asking on Clojurescript channel though"}]}]}],"user":"U0VP19K6K","text":"Probably worth asking on Clojurescript channel though"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629907133.362300","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"c7632592-cfe0-4418-b16f-f4b75ae17e84","blocks":[{"type":"rich_text","block_id":"21M+i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW if you develop the macros using the recommended companion CLJS namespace then you can put your "},{"type":"text","text":":require","style":{"code":true}},{"type":"text","text":" in that and setup whatever symbols you need there"}]}]}],"user":"U05224H0W","text":"FWIW if you develop the macros using the recommended companion CLJS namespace then you can put your `:require` in that and setup whatever symbols you need there"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629907194.362500","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"f2501871-1cf3-4b65-877a-49f544020a57","blocks":[{"type":"rich_text","block_id":"zpV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"getting the string aliases is also possible but a bit more involved"}]}]}],"user":"U05224H0W","text":"getting the string aliases is also possible but a bit more involved"}
{"type":"message","thread_ts":"1629896337.345000","edited":{"user":"UDVJE9RE3","ts":"1629919950.000000"},"ts":"1629919752.377500","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"aa7766c3-c49d-4be3-9809-e39808001e78","blocks":[{"type":"rich_text","block_id":"t1c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When using "},{"type":"text","text":"(:require [\"react-native\" :as rn])","style":{"code":true}},{"type":"text","text":"  you aren't really getting an alias that is resolving to something called \"react-native\" you are getting a javascript object, right?\n\nCould you pass in a function that returns whatever "},{"type":"text","text":"rn\/View","style":{"code":true}},{"type":"text","text":" is?\n\nlike a really simple "},{"type":"text","text":"#(.-View rn)","style":{"code":true}},{"type":"text","text":"\n\n And then use that in your macro instead? The idea would be to defer evaluation until it's executed in js land and not in clojure, which seems like what is happening now. I have never attempted to go this far with macros before so no idea if it would work."}]}]}],"user":"UDVJE9RE3","text":"When using `(:require [\"react-native\" :as rn])`  you aren't really getting an alias that is resolving to something called \"react-native\" you are getting a javascript object, right?\n\nCould you pass in a function that returns whatever `rn\/View` is?\n\nlike a really simple `#(.-View rn)`\n\n And then use that in your macro instead? The idea would be to defer evaluation until it's executed in js land and not in clojure, which seems like what is happening now. I have never attempted to go this far with macros before so no idea if it would work."}
{"attachments":[{"author_link":"https:\/\/clojurians.slack.com\/team\/U0PUGPSFR","author_id":"U0PUGPSFR","author_icon":"https:\/\/avatars.slack-edge.com\/2017-09-27\/248609629383_3773ae96e914f54d2245_48.png","fallback":"[August 25th, 2021 4:00 PM] hiskennyness: Ah, I found a reasonable compromise to get DRY and stay with the `helix.core\/$` macro:\n```(defmacro define-view-macro [gen-type]\n  `(defmacro ~gen-type [mx-props# jsx-props# &amp; kids#]\n     `(tiltontec.model.core\/make :myapp.mxreact\/mxrn.elt\n        :sid (swap! myapp.mxreact\/sid-latest inc)\n        :kids (tiltontec.model.core\/cFkids ~@kids#)\n        :rendering (tiltontec.cell.core\/cF\n                     (helix.core\/$ (myapp.mxrgen\/mxfnc\n                                     (apply helix.core\/$\n                                       (get {:View         rn\/View\n                                             :SafeAreaView rn\/SafeAreaView} ~~(keyword gen-type))\n                                       ~jsx-props#\n                                       {}\n                                       (doall\n                                         (map (fn [~'mapkid#]\n                                                (tiltontec.model.core\/mget ~'mapkid# :rendering))\n                                           (tiltontec.model.core\/mget ~'~'me :kids)))))))\n        ~@(apply concat\n            (into [] mx-props#)))))```\nI will have another one for atomic widgets (no children). I just have to type in an entry translating each keyword :View to the rn\/View etc.\n\nNow I can `(define-view-macro View)`.\n\nNext up will be yet another trivial macro so I can `(define-view-macros View SafeAreaView ScrollView)`.\n\nThx again for Helix. :pray:","mrkdwn_in":["text"],"from_url":"https:\/\/clojurians.slack.com\/archives\/CRRJBCX7S\/p1629932400134600","footer":"Posted in #helix","channel_id":"CRRJBCX7S","ts":"1629932400.134600","id":1,"channel_name":"helix","is_msg_unfurl":true,"author_name":"Kenneth Tilton","author_subname":"Kenneth Tilton","original_url":"https:\/\/clojurians.slack.com\/archives\/CRRJBCX7S\/p1629932400134600","text":"Ah, I found a reasonable compromise to get DRY and stay with the `helix.core\/$` macro:\n```(defmacro define-view-macro [gen-type]\n  `(defmacro ~gen-type [mx-props# jsx-props# &amp; kids#]\n     `(tiltontec.model.core\/make :myapp.mxreact\/mxrn.elt\n        :sid (swap! myapp.mxreact\/sid-latest inc)\n        :kids (tiltontec.model.core\/cFkids ~@kids#)\n        :rendering (tiltontec.cell.core\/cF\n                     (helix.core\/$ (myapp.mxrgen\/mxfnc\n                                     (apply helix.core\/$\n                                       (get {:View         rn\/View\n                                             :SafeAreaView rn\/SafeAreaView} ~~(keyword gen-type))\n                                       ~jsx-props#\n                                       {}\n                                       (doall\n                                         (map (fn [~'mapkid#]\n                                                (tiltontec.model.core\/mget ~'mapkid# :rendering))\n                                           (tiltontec.model.core\/mget ~'~'me :kids)))))))\n        ~@(apply concat\n            (into [] mx-props#)))))```\nI will have another one for atomic widgets (no children). I just have to type in an entry translating each keyword :View to the rn\/View etc.\n\nNow I can `(define-view-macro View)`.\n\nNext up will be yet another trivial macro so I can `(define-view-macros View SafeAreaView ScrollView)`.\n\nThx again for Helix. :pray:"}],"type":"message","thread_ts":"1629896337.345000","ts":"1629933200.386600","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"2c1ed6b5-daa0-4a9b-993a-149fe058d1e0","blocks":[{"type":"rich_text","block_id":"TBbp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, "},{"type":"user","user_id":"UDVJE9RE3"},{"type":"text","text":", the Clojure Gods did not suggest that, so... how would my macro generate the "},{"type":"text","text":".-View","style":{"code":true}},{"type":"text","text":"? This isn't Lisp, you know. "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\n\nGood compromise found, however: "},{"type":"link","url":"https:\/\/clojurians.slack.com\/archives\/CRRJBCX7S\/p1629932400134600"},{"type":"text","text":"\n\nIt does do what you suggest, reaching out for the "},{"type":"text","text":"rn\/View","style":{"code":true}},{"type":"text","text":" in the expanded code once in CLJS-land. Heading out for "},{"type":"emoji","name":"champagne"},{"type":"text","text":" ...."}]}]}],"user":"U0PUGPSFR","text":"Well, <@UDVJE9RE3>, the Clojure Gods did not suggest that, so... how would my macro generate the `.-View`? This isn't Lisp, you know. :slightly_smiling_face:\n\nGood compromise found, however: <https:\/\/clojurians.slack.com\/archives\/CRRJBCX7S\/p1629932400134600>\n\nIt does do what you suggest, reaching out for the `rn\/View` in the expanded code once in CLJS-land. Heading out for :champagne: ...."}
{"type":"message","thread_ts":"1629896337.345000","edited":{"user":"UDVJE9RE3","ts":"1629982437.000000"},"ts":"1629937960.000100","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"b0fe4018-ed07-43df-8938-d90e0f86db5d","blocks":[{"type":"rich_text","block_id":"DBdh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm glad you've found something that works!\n\nTo answer this\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":" how would my macro generate the\u00a0"},{"type":"text","text":".-View","style":{"code":true}},{"type":"text","text":" "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIf you know that you want to use some property called "},{"type":"text","text":"View","style":{"code":true}},{"type":"text","text":" on a javascript import, then you have a symbol to work with. You can build the "},{"type":"text","text":".-View","style":{"code":true}},{"type":"text","text":" symbol in clojure.\nConsider this macro, dumb example, but for illustration\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmacro field-extractor [obj field]\n  (let [get-field (symbol (str \".-\" field))]\n   `(~get-field ~obj)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIf I've imported a js library like so\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(:require [\"react-select\" :as react-select])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I can access any value on that imported "},{"type":"text","text":"react-select","style":{"code":true}},{"type":"text","text":" object by passing in the object and the property name separately\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(e\/field-extractor react-select Creatable) ;; => #object[CreatableSelect]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYou could consider something like that for your code. This seems like it would offer you some more flexibility, no need to have a map to translate "},{"type":"text","text":":View","style":{"code":true}},{"type":"text","text":" -> "},{"type":"text","text":"rn\/View","style":{"code":true}},{"type":"text","text":" , and you aren't locked into using "},{"type":"text","text":"rn","style":{"code":true}},{"type":"text","text":" as your alias for the "},{"type":"text","text":"\"react-native\"","style":{"code":true}},{"type":"text","text":" import in all the namespaces that use your macro."}]}]}],"user":"UDVJE9RE3","text":"I'm glad you've found something that works!\n\nTo answer this\n&gt;  how would my macro generate the\u00a0`.-View` \nIf you know that you want to use some property called `View` on a javascript import, then you have a symbol to work with. You can build the `.-View` symbol in clojure.\nConsider this macro, dumb example, but for illustration\n```(defmacro field-extractor [obj field]\n  (let [get-field (symbol (str \".-\" field))]\n   `(~get-field ~obj)))```\nIf I've imported a js library like so\n```(:require [\"react-select\" :as react-select])```\nI can access any value on that imported `react-select` object by passing in the object and the property name separately\n```(e\/field-extractor react-select Creatable) ;; =&gt; #object[CreatableSelect]```\nYou could consider something like that for your code. This seems like it would offer you some more flexibility, no need to have a map to translate `:View` -&gt; `rn\/View` , and you aren't locked into using `rn` as your alias for the `\"react-native\"` import in all the namespaces that use your macro."}
{"type":"message","thread_ts":"1629896337.345000","edited":{"user":"UDVJE9RE3","ts":"1629938521.000000"},"ts":"1629938423.000600","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"32554ff1-7b38-4b62-8ef3-d37a35d75922","blocks":[{"type":"rich_text","block_id":"Pxm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This might be more like your example\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmacro lift-js-fn-to-ns [obj field]\n  (let [get-field (symbol (str \".-\" field))]\n    `(defmacro ~field [x#] ;; could easily just be a `defn`\n      ((~get-field ~obj) x#))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nUsing "},{"type":"text","text":"(:require [\"moment-js\" :as moment])","style":{"code":true}},{"type":"text","text":" to work with a function on "},{"type":"text","text":"moment","style":{"code":true}},{"type":"text","text":" called "},{"type":"text","text":"utc","style":{"code":true}},{"type":"text","text":"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(macroexpand-1 '(lift-js-fn-to-ns moment utc))\n;; => (clojure.core\/defmacro utc [x__280962__auto__] ((.-utc moment) x__280962__auto__))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Then calling it defines the macro in my namespace\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(lift-js-fn-to-ns moment utc)\n;; => #'example\/utc"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"And then I can invoke it with\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(utc \"2020-01-02\") ;; => #object[Moment Thu Aug 26 2021 00:39:34 GMT+0000]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nPretty neat!"}]}]}],"user":"UDVJE9RE3","text":"This might be more like your example\n\n```(defmacro lift-js-fn-to-ns [obj field]\n  (let [get-field (symbol (str \".-\" field))]\n    `(defmacro ~field [x#] ;; could easily just be a `defn`\n      ((~get-field ~obj) x#))))```\nUsing `(:require [\"moment-js\" :as moment])` to work with a function on `moment` called `utc`\n\n```(macroexpand-1 '(lift-js-fn-to-ns moment utc))\n;; =&gt; (clojure.core\/defmacro utc [x__280962__auto__] ((.-utc moment) x__280962__auto__))```\nThen calling it defines the macro in my namespace\n```(lift-js-fn-to-ns moment utc)\n;; =&gt; #'example\/utc```\nAnd then I can invoke it with\n```(utc \"2020-01-02\") ;; =&gt; #object[Moment Thu Aug 26 2021 00:39:34 GMT+0000]```\nPretty neat!"}
{"type":"message","thread_ts":"1629896337.345000","ts":"1629962817.009600","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"02bde25c-592a-46df-b701-cc6c12bb3588","blocks":[{"type":"rich_text","block_id":"QOMeK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haha, that approach occurred to me but I thought, as I said ^^^, \"Ha, this is not Lisp!\".\n\nAnd I have played with Clojure symbols but was always disappointed, so I was even less incline to explore that path!\n\nI'll give it a try. Thx!"}]}]}],"user":"U0PUGPSFR","reactions":[{"name":"100","users":["UDVJE9RE3"],"count":1},{"name":"catjam","users":["UDVJE9RE3"],"count":1}],"text":"Haha, that approach occurred to me but I thought, as I said ^^^, \"Ha, this is not Lisp!\".\n\nAnd I have played with Clojure symbols but was always disappointed, so I was even less incline to explore that path!\n\nI'll give it a try. Thx!"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U96LS78UV","U6MHHF36J"],"type":"message","thread_ts":"1629886855.324000","reply_users_count":3,"ts":"1629886855.324000","team":"T03RZGPFR","client_msg_id":"10b156c6-17d5-4f0d-8457-7f71c775a03e","blocks":[{"type":"rich_text","block_id":"vSGB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to simplify this without eval?  (note: it's not about + function per se, can be any that takes several parameters)\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [vecc '[1 2 3]]\n (eval `(+ ~@vecc))\n  )"}]}]}],"is_locked":false,"user":"U96LS78UV","reply_count":34,"latest_reply":"1629892070.332200","text":"Is there a way to simplify this without eval?  (note: it's not about + function per se, can be any that takes several parameters)\n```(let [vecc '[1 2 3]]\n (eval `(+ ~@vecc))\n  )```"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U96LS78UV","U6MHHF36J"],"type":"message","thread_ts":"1629886855.324000","reply_users_count":3,"ts":"1629886855.324000","team":"T03RZGPFR","client_msg_id":"10b156c6-17d5-4f0d-8457-7f71c775a03e","blocks":[{"type":"rich_text","block_id":"vSGB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to simplify this without eval?  (note: it's not about + function per se, can be any that takes several parameters)\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [vecc '[1 2 3]]\n (eval `(+ ~@vecc))\n  )"}]}]}],"is_locked":false,"user":"U96LS78UV","reply_count":34,"latest_reply":"1629892070.332200","text":"Is there a way to simplify this without eval?  (note: it's not about + function per se, can be any that takes several parameters)\n```(let [vecc '[1 2 3]]\n (eval `(+ ~@vecc))\n  )```"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887029.324100","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"7db78bf6-93cb-4aa6-989b-e6420daed88d","blocks":[{"type":"rich_text","block_id":"gbQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So you want to be able to compute an arbitrary function at compile time, given a vector of arguments?"}]}]}],"user":"U2FRKM4TW","text":"So you want to be able to compute an arbitrary function at compile time, given a vector of arguments?"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887139.324300","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"af2a1ff5-330a-4bf4-86e6-50c0d04a0d79","blocks":[{"type":"rich_text","block_id":"wb7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If yes, then\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmacro compile-call [f args]\n  (apply (ns-resolve *ns* f) args))\n=> #'user\/compile-call\n(compile-call + [1 2 3])\n=> 6\n(macroexpand '(compile-call + [1 2 3]))\n=> 6"}]}]}],"user":"U2FRKM4TW","text":"If yes, then\n```(defmacro compile-call [f args]\n  (apply (ns-resolve *ns* f) args))\n=&gt; #'user\/compile-call\n(compile-call + [1 2 3])\n=&gt; 6\n(macroexpand '(compile-call + [1 2 3]))\n=&gt; 6```"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887141.324500","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"8c33df25-94e3-4d15-8fbf-360fede0d554","blocks":[{"type":"rich_text","block_id":"UczR+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The function is defined, but the arguments should be passed along, not in a []. Eg "},{"type":"text","text":"(corfunc \"command\" 1 2 4 etc).","style":{"code":true}}]}]}],"user":"U96LS78UV","text":"The function is defined, but the arguments should be passed along, not in a []. Eg `(corfunc \"command\" 1 2 4 etc).`"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887176.324700","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"3d327a35-cf27-43c8-acf1-802d9b94aaab","blocks":[{"type":"rich_text","block_id":"1G8I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the case when apply cannot be used"}]}]}],"user":"U96LS78UV","text":"In the case when apply cannot be used"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887178.324900","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"27edc9dd-1f94-42e9-a5f0-220faf6f49e7","blocks":[{"type":"rich_text","block_id":"45U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The arguments will have to be known at compile-time. So it cannot be e.g. "},{"type":"text","text":"[(inc 1) (inc 2)]","style":{"code":true}},{"type":"text","text":" since the vector will be quoted."}]}]}],"user":"U2FRKM4TW","text":"The arguments will have to be known at compile-time. So it cannot be e.g. `[(inc 1) (inc 2)]` since the vector will be quoted."}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887187.325100","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"2e15a598-0439-4c0f-a1be-1418e9f7aefb","blocks":[{"type":"rich_text","block_id":"rsHUD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And why can "},{"type":"text","text":"apply","style":{"code":true}},{"type":"text","text":" not be used?"}]}]}],"user":"U2FRKM4TW","text":"And why can `apply` not be used?"}
{"type":"message","thread_ts":"1629886855.324000","edited":{"user":"U96LS78UV","ts":"1629887296.000000"},"ts":"1629887268.325300","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"c8e44596-7a68-41e6-af0a-01ba18a97eb7","blocks":[{"type":"rich_text","block_id":"ikqzi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"apply will work with +, but will it work with \u00a0"},{"type":"text","text":"(corfunc \"command\" 1 2 4 etc)","style":{"code":true}},{"type":"text","text":" , when the arguments are of different type?"}]}]}],"user":"U96LS78UV","text":"apply will work with +, but will it work with \u00a0`(corfunc \"command\" 1 2 4 etc)` , when the arguments are of different type?"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887326.325700","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"626e90c0-3d04-44e2-8ac3-509497c67e61","blocks":[{"type":"rich_text","block_id":"lZw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Absolutely."}]}]}],"user":"U2FRKM4TW","text":"Absolutely."}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887429.325900","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"51bd8b06-69b4-4476-83ad-c46d3e62de5b","blocks":[{"type":"rich_text","block_id":"jNyYK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alright, will have to test. What about getting rid of eval in the original example, when the function is known?"}]}]}],"user":"U96LS78UV","text":"Alright, will have to test. What about getting rid of eval in the original example, when the function is known?"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887486.326100","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"83ed1363-4988-4b27-8704-57833a3b87c4","blocks":[{"type":"rich_text","block_id":"L8+Uf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just call "},{"type":"text","text":"apply","style":{"code":true}},{"type":"text","text":"?"}]}]}],"user":"U2FRKM4TW","text":"Just call `apply`?"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887492.326300","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"18daa29c-eaa0-487a-aa2c-427d38f97df8","blocks":[{"type":"rich_text","block_id":"Fx3wI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(apply + vecc)","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"`(apply + vecc)`."}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887511.326500","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"b9d9f3eb-ee49-4fd3-877e-ca1604e930b0","blocks":[{"type":"rich_text","block_id":"v8t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or "},{"type":"text","text":"(apply corfunc [\"command\" 1 2 4 etc])","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"Or `(apply corfunc [\"command\" 1 2 4 etc])`."}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629887607.326700","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"8ef34b02-6c83-40a0-a5c5-1c0ab0e5246a","blocks":[{"type":"rich_text","block_id":"ozU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, it does apply apply to all args. Thanks!"}]}]}],"user":"U96LS78UV","reactions":[{"name":"+1","users":["U2FRKM4TW","U6MHHF36J"],"count":2}],"text":"yes, it does apply apply to all args. Thanks!"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629888246.327300","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"766a3209-9cbc-4f22-9f03-1dc63246cf2e","blocks":[{"type":"rich_text","block_id":"D2E0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In general if you need to eval you probably made a mistake "},{"type":"emoji","name":"smile"}]}]}],"user":"U6MHHF36J","reactions":[{"name":"grin","users":["U96LS78UV"],"count":1}],"text":"In general if you need to eval you probably made a mistake :smile:"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629888982.327600","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"8384f397-666e-4272-972b-07a7187437ee","blocks":[{"type":"rich_text","block_id":"=YS9g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do you call your macro with this funtion, "},{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":". It appears to fail\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn corefunc [one & two]\n  {:one one\n  :two two})"}]}]}],"user":"U96LS78UV","text":"How do you call your macro with this funtion, <@U2FRKM4TW>. It appears to fail\n```(defn corefunc [one &amp; two]\n  {:one one\n  :two two})```"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629889412.327900","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"8fb6a677-e1da-43bd-9010-4970eec693ae","blocks":[{"type":"rich_text","block_id":"\/cCt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How did you try calling it?"}]}]}],"user":"U2FRKM4TW","text":"How did you try calling it?"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629889477.328100","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"baa8bbd2-42ac-4664-9e24-949a5fb68662","blocks":[{"type":"rich_text","block_id":"MrvWZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In all possible ways ) , eg "},{"type":"text","text":"(compile-call corefunc [1 2 3 ])","style":{"code":true}}]}]}],"user":"U96LS78UV","text":"In all possible ways ) , eg `(compile-call corefunc [1 2 3 ])`"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629889684.328400","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"7e97fa3d-e80d-4a9d-aa6b-1e3370941450","blocks":[{"type":"rich_text","block_id":"itH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which version of the macro did you use exactly?"}]}]}],"user":"U2FRKM4TW","text":"Which version of the macro did you use exactly?"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629889749.328600","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"4728bee6-80ae-41dc-a65d-a79e376689bb","blocks":[{"type":"rich_text","block_id":"+9q","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmacro compile-call [f args]\n  (apply (ns-resolve *ns* f) args))"}]}]}],"user":"U96LS78UV","text":"```(defmacro compile-call [f args]\n  (apply (ns-resolve *ns* f) args))```"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629889964.328800","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"dadce2ed-a1f5-41a9-a2b2-94beb3ab06a9","blocks":[{"type":"rich_text","block_id":"4Avz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Use "},{"type":"text","text":"(macroexpand '(compile-call corefunc [1 2 3])","style":{"code":true}},{"type":"text","text":" and see what it outputs. It should become obvious what's wrong. Keep in mind that macros don't always result in plain values - they output new forms to be evaluated."}]}]}],"user":"U2FRKM4TW","text":"Use `(macroexpand '(compile-call corefunc [1 2 3])` and see what it outputs. It should become obvious what's wrong. Keep in mind that macros don't always result in plain values - they output new forms to be evaluated."}
{"type":"message","thread_ts":"1629886855.324000","edited":{"user":"U96LS78UV","ts":"1629890442.000000"},"ts":"1629890417.329200","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"2205152d-9227-47f3-855d-d3e599a664e3","blocks":[{"type":"rich_text","block_id":"dN+VA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The error is\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(compile-call corefunc [\"one\" 1 2 3])\n; : Cannot call 1 as a function."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Macroexpand result looses "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"{:one \"one\", :two (2 3)}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I am fine with apply.  just wanted to understand macros a bit better, but it's ok for now, if it's so hard to debug"}]}]}],"user":"U96LS78UV","text":"The error is\n```(compile-call corefunc [\"one\" 1 2 3])\n; : Cannot call 1 as a function.```\nMacroexpand result looses `1`\n```{:one \"one\", :two (2 3)}```\nI am fine with apply.  just wanted to understand macros a bit better, but it's ok for now, if it's so hard to debug"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629890544.329600","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"5486e8c3-31ca-4de3-9647-0c05b25430a3","blocks":[{"type":"rich_text","block_id":"WpfCA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's not hard to debug at all in this case.\nIt doesn't lose "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" on my end:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(macroexpand '(compile-call corefunc [\"one\" 1 2 3]))\n=> {:one \"one\", :two (1 2 3)}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The error is in "},{"type":"text","text":"(1 2 3)","style":{"code":true}},{"type":"text","text":" - this form means \"call 1 as a function and supply 2 and 3 as its arguments\". And longs are not callable values in Clojure."}]}]}],"user":"U2FRKM4TW","text":"It's not hard to debug at all in this case.\nIt doesn't lose `1` on my end:\n```(macroexpand '(compile-call corefunc [\"one\" 1 2 3]))\n=&gt; {:one \"one\", :two (1 2 3)}```\nThe error is in `(1 2 3)` - this form means \"call 1 as a function and supply 2 and 3 as its arguments\". And longs are not callable values in Clojure."}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629890610.329800","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"f8a77cda-3795-4023-a7d0-c537d0f36e17","blocks":[{"type":"rich_text","block_id":"G20l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One way to fix it would be to wrap the usage of "},{"type":"text","text":"two","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"vec","style":{"code":true}},{"type":"text","text":" - then "},{"type":"text","text":"(1 2 3)","style":{"code":true}},{"type":"text","text":" will become "},{"type":"text","text":"[1 2 3]","style":{"code":true}},{"type":"text","text":", which won't cause any troubles."}]}]}],"user":"U2FRKM4TW","text":"One way to fix it would be to wrap the usage of `two` in `vec` - then `(1 2 3)` will become `[1 2 3]`, which won't cause any troubles."}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629890717.330000","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"f5ecf9ba-7a32-4d50-bec6-0ba970f59623","blocks":[{"type":"rich_text","block_id":"DhTy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And if you need specifically a list in "},{"type":"text","text":":two","style":{"code":true}},{"type":"text","text":" and not a vector, you can use "},{"type":"text","text":"(cons list two)","style":{"code":true}},{"type":"text","text":".\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn corefunc [one & two]\n  {:one one\n   :two (cons list two)}\n\n(compile-call corefunc [\"one\" 1 2 3])\n=> {:one \"one\", :two (1 2 3)}"}]}]}],"user":"U2FRKM4TW","text":"And if you need specifically a list in `:two` and not a vector, you can use `(cons list two)`.\n```(defn corefunc [one &amp; two]\n  {:one one\n   :two (cons list two)}\n\n(compile-call corefunc [\"one\" 1 2 3])\n=&gt; {:one \"one\", :two (1 2 3)}```"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629890769.330200","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"6dd980f9-de0b-422f-a844-ddb79ea8e34b","blocks":[{"type":"rich_text","block_id":"7oJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But if you don't have a very good reason to compute such things in compile time (negligible performance improvement is not a good reason), I'd stick to regular functions instead of macros."}]}]}],"user":"U2FRKM4TW","text":"But if you don't have a very good reason to compute such things in compile time (negligible performance improvement is not a good reason), I'd stick to regular functions instead of macros."}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629890773.330400","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"4c16ad88-43a5-4406-8b6b-c616594bc55a","blocks":[{"type":"rich_text","block_id":"LC+iq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"at what point [\"one\" 1 2 3])) becomes (1 2 3)?"}]}]}],"user":"U96LS78UV","text":"at what point [\"one\" 1 2 3])) becomes (1 2 3)?"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629890830.330600","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"87be66c0-6bb4-4fde-9e1c-a9706a3e6932","blocks":[{"type":"rich_text","block_id":"0m\/+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You supply "},{"type":"text","text":"\"one\" 1 2 3","style":{"code":true}},{"type":"text","text":" to a function with an args vector of "},{"type":"text","text":"[one & two]","style":{"code":true}},{"type":"text","text":". Upon calling that function, "},{"type":"text","text":"one","style":{"code":true}},{"type":"text","text":" is assigned the value of "},{"type":"text","text":"\"one\"","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"two","style":{"code":true}},{"type":"text","text":" is assigned the value of "},{"type":"text","text":"(1 2 3)","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"You supply `\"one\" 1 2 3` to a function with an args vector of `[one &amp; two]`. Upon calling that function, `one` is assigned the value of `\"one\"` and `two` is assigned the value of `(1 2 3)`."}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629890877.330800","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"431ddef4-2561-4ccd-91dd-b4d4ba43b400","blocks":[{"type":"rich_text","block_id":"G+M","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/clojure.org\/guides\/learn\/functions#_variadic_functions"},{"type":"text","text":"\n\nSuch questions about fundamentals are better suited for "},{"type":"channel","channel_id":"C053AK3F9"}]}]}],"user":"U2FRKM4TW","text":"<https:\/\/clojure.org\/guides\/learn\/functions#_variadic_functions>\n\nSuch questions about fundamentals are better suited for <#C053AK3F9|beginners>"}
{"type":"message","thread_ts":"1629886855.324000","edited":{"user":"U96LS78UV","ts":"1629890946.000000"},"ts":"1629890918.331000","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"4464a273-1fda-427a-b220-8921a38fc4c6","blocks":[{"type":"rich_text","block_id":"2Fvz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was sure that 1 2 3 becomes a vector, for some reason )"}]}]}],"user":"U96LS78UV","text":"I was sure that 1 2 3 becomes a vector, for some reason )"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629891301.331300","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"bbe96c1a-3e7a-43f1-be9e-c29d929d360b","blocks":[{"type":"rich_text","block_id":"qBpqG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And it's actually clojure.lang.ArraySeq"}]}]}],"user":"U96LS78UV","text":"And it's actually clojure.lang.ArraySeq"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629891536.331500","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"031fa15f-216a-489b-8f61-4692e2841b42","blocks":[{"type":"rich_text","block_id":"6TuRi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why\u00a0is it trying to evaluate the clojure.lang.ArraySeq as a function, when assigning it to "},{"type":"text","text":"two?","style":{"code":true}}]}]}],"user":"U96LS78UV","text":"Why\u00a0is it trying to evaluate the clojure.lang.ArraySeq as a function, when assigning it to `two?`"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629891700.331800","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"3d2ad45d-4adb-439e-9811-665861e7f752","blocks":[{"type":"rich_text","block_id":"IRo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Macros produce "},{"type":"text","text":"code","style":{"italic":true}},{"type":"text","text":", not data.\nWhat happens when you write "},{"type":"text","text":"(1 2 3)","style":{"code":true}},{"type":"text","text":" in Clojure? Just in the REPL or as a line of code on its own. It blows up with the same exception because "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" is not callable."}]}]}],"user":"U2FRKM4TW","text":"Macros produce _code_, not data.\nWhat happens when you write `(1 2 3)` in Clojure? Just in the REPL or as a line of code on its own. It blows up with the same exception because `1` is not callable."}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629891994.332000","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"160a7c36-2ca6-40f3-8411-34686c5126bc","blocks":[{"type":"rich_text","block_id":"asD5e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is the macro's behaviour then, alright"}]}]}],"user":"U96LS78UV","text":"This is the macro's behaviour then, alright"}
{"type":"message","thread_ts":"1629886855.324000","ts":"1629892070.332200","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"bc3c1c12-75b1-4d83-ac1c-b1bf7f899ac5","blocks":[{"type":"rich_text","block_id":"E7Tg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Of all macros, not just that macro."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"+1","users":["U96LS78UV"],"count":1}],"text":"Of all macros, not just that macro."}
{"subscribed":false,"reply_users":["U04V4KLKC","U96LS78UV"],"type":"message","thread_ts":"1629882394.319000","reply_users_count":2,"ts":"1629882394.319000","team":"T03RZGPFR","client_msg_id":"c89d5226-0fde-4b3f-b944-2a99dab1ffca","blocks":[{"type":"rich_text","block_id":"fB6Pd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi. I am parsing a json string with [cheshire.core :as json], json\/parse-string. It converts the high level json into a Clojure map, but the internal json is not parsed. I have to destruct it and parse it manually again. Am I missing smth?"}]}]}],"is_locked":false,"user":"U96LS78UV","reply_count":7,"latest_reply":"1629884032.320700","text":"Hi. I am parsing a json string with [cheshire.core :as json], json\/parse-string. It converts the high level json into a Clojure map, but the internal json is not parsed. I have to destruct it and parse it manually again. Am I missing smth?"}
{"subscribed":false,"reply_users":["U04V4KLKC","U96LS78UV"],"type":"message","thread_ts":"1629882394.319000","reply_users_count":2,"ts":"1629882394.319000","team":"T03RZGPFR","client_msg_id":"c89d5226-0fde-4b3f-b944-2a99dab1ffca","blocks":[{"type":"rich_text","block_id":"fB6Pd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi. I am parsing a json string with [cheshire.core :as json], json\/parse-string. It converts the high level json into a Clojure map, but the internal json is not parsed. I have to destruct it and parse it manually again. Am I missing smth?"}]}]}],"is_locked":false,"user":"U96LS78UV","reply_count":7,"latest_reply":"1629884032.320700","text":"Hi. I am parsing a json string with [cheshire.core :as json], json\/parse-string. It converts the high level json into a Clojure map, but the internal json is not parsed. I have to destruct it and parse it manually again. Am I missing smth?"}
{"type":"message","thread_ts":"1629882394.319000","ts":"1629882883.319500","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"084fd233-f80d-44c1-a80e-aecfcb73d628","blocks":[{"type":"rich_text","block_id":"f1Mo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you have to do that in case your json data contains some string representing encoded json\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\"{\\\"key\\\":\\\"{\\\\\\\"netsed-key\\\\\\\":42}\\\"}\""}]},{"type":"rich_text_section","elements":[{"type":"text","text":"is that your case?\notherwise cheshire should parse entire json as long it is valid json"}]}]}],"user":"U04V4KLKC","text":"you have to do that in case your json data contains some string representing encoded json\n```\"{\\\"key\\\":\\\"{\\\\\\\"netsed-key\\\\\\\":42}\\\"}\"```\nis that your case?\notherwise cheshire should parse entire json as long it is valid json"}
{"type":"message","thread_ts":"1629882394.319000","ts":"1629883018.319700","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"1760d721-0cda-49fe-9a8a-793c53123664","blocks":[{"type":"rich_text","block_id":"8rtq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"almost"}]}]}],"user":"U96LS78UV","text":"almost"}
{"type":"message","thread_ts":"1629882394.319000","ts":"1629883134.319900","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"7336545b-4a0d-43c4-9d34-85131b3c9fb0","blocks":[{"type":"rich_text","block_id":"coX9b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am getting, this one below. It parses policy and content correctly. why not the content of :Content (no pun intended:)\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"{:Policy\n   {:Content\n      \"{\\n  \\\"Version\\\": \\\"2012-10-17\\\",\\n  \\\"Statement\\\": [\\n    {\\n      \\\"Sid\\\": \\\"RestrictAMIs\\\",\\n      \\\"Effect\\\": \\\"Deny\\\",\\n      \\\"Action\\\": [\\n        \\\"ec2:RunScheduledInstances\\\",\\n        \\\"ec2:RunInstances\\\"\\n      ],\\n      \\\"Resource\\\": \\\"arn:aws:ec2:*::image\/ami-*\\\",\\n      \\\"Condition\\\": {\\n        \\\"StringNotEquals\\\": {\\n     \n...etc"}]}]}],"user":"U96LS78UV","text":"I am getting, this one below. It parses policy and content correctly. why not the content of :Content (no pun intended:)\n```{:Policy\n   {:Content\n      \"{\\n  \\\"Version\\\": \\\"2012-10-17\\\",\\n  \\\"Statement\\\": [\\n    {\\n      \\\"Sid\\\": \\\"RestrictAMIs\\\",\\n      \\\"Effect\\\": \\\"Deny\\\",\\n      \\\"Action\\\": [\\n        \\\"ec2:RunScheduledInstances\\\",\\n        \\\"ec2:RunInstances\\\"\\n      ],\\n      \\\"Resource\\\": \\\"arn:aws:ec2:*::image\/ami-*\\\",\\n      \\\"Condition\\\": {\\n        \\\"StringNotEquals\\\": {\\n     \n...etc```"}
{"type":"message","thread_ts":"1629882394.319000","ts":"1629883285.320100","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"1baed202-21f2-4020-b02e-797678c6de3d","blocks":[{"type":"rich_text","block_id":"9rq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so yes, that looks like the case I just describe."}]}]}],"user":"U04V4KLKC","text":"so yes, that looks like the case I just describe."}
{"type":"message","thread_ts":"1629882394.319000","ts":"1629883334.320300","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"08b2313a-1e23-4ee6-9593-f8612130bec9","blocks":[{"type":"rich_text","block_id":"w8XTN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It there a way to render it into the map in one go?"}]}]}],"user":"U96LS78UV","text":"It there a way to render it into the map in one go?"}
{"type":"message","thread_ts":"1629882394.319000","ts":"1629883702.320500","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"20ba71ff-d0ce-414a-a013-8d88414bc80f","blocks":[{"type":"rich_text","block_id":"0hX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don\u2019t think so. from json specification that is completely valid structure."}]}]}],"user":"U04V4KLKC","text":"I don\u2019t think so. from json specification that is completely valid structure."}
{"type":"message","thread_ts":"1629882394.319000","edited":{"user":"U96LS78UV","ts":"1629884376.000000"},"ts":"1629884032.320700","parent_user_id":"U96LS78UV","team":"T03RZGPFR","client_msg_id":"bc151d92-dd1a-42e4-9fcb-5727d51c5d5f","blocks":[{"type":"rich_text","block_id":"Yvp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yep, that's what I thought, thank you"}]}]}],"user":"U96LS78UV","text":"yep, that's what I thought, thank you"}
{"subscribed":false,"reply_users":["U0N9SJHCH","U01GW6NKHP1"],"type":"message","thread_ts":"1629881360.317100","reply_users_count":2,"ts":"1629881360.317100","team":"T03RZGPFR","client_msg_id":"13c14af7-de81-49ed-972d-421c3acdc506","blocks":[{"type":"rich_text","block_id":"8aV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi. I'm using test-ns-hook to control my test suite. I'm trying to use deftest to run tests against some docker containers. There is one (deftest all-sites-available,,,) which polls some http endpoints to verify that the application is up. Now I'd like to return from test-ns-hook if (all-sites-available) \"fails\". Is there a way to detect this failure? At the moment I'm using (def\u00a0sites-are-up\u00a0(atom\u00a0false)) and reset! that on success but that's ugly."}]}]}],"is_locked":false,"user":"U01GW6NKHP1","reply_count":3,"latest_reply":"1629888110.327000","text":"Hi. I'm using test-ns-hook to control my test suite. I'm trying to use deftest to run tests against some docker containers. There is one (deftest all-sites-available,,,) which polls some http endpoints to verify that the application is up. Now I'd like to return from test-ns-hook if (all-sites-available) \"fails\". Is there a way to detect this failure? At the moment I'm using (def\u00a0sites-are-up\u00a0(atom\u00a0false)) and reset! that on success but that's ugly."}
{"subscribed":false,"reply_users":["U0N9SJHCH","U01GW6NKHP1"],"type":"message","thread_ts":"1629881360.317100","reply_users_count":2,"ts":"1629881360.317100","team":"T03RZGPFR","client_msg_id":"13c14af7-de81-49ed-972d-421c3acdc506","blocks":[{"type":"rich_text","block_id":"8aV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi. I'm using test-ns-hook to control my test suite. I'm trying to use deftest to run tests against some docker containers. There is one (deftest all-sites-available,,,) which polls some http endpoints to verify that the application is up. Now I'd like to return from test-ns-hook if (all-sites-available) \"fails\". Is there a way to detect this failure? At the moment I'm using (def\u00a0sites-are-up\u00a0(atom\u00a0false)) and reset! that on success but that's ugly."}]}]}],"is_locked":false,"user":"U01GW6NKHP1","reply_count":3,"latest_reply":"1629888110.327000","text":"Hi. I'm using test-ns-hook to control my test suite. I'm trying to use deftest to run tests against some docker containers. There is one (deftest all-sites-available,,,) which polls some http endpoints to verify that the application is up. Now I'd like to return from test-ns-hook if (all-sites-available) \"fails\". Is there a way to detect this failure? At the moment I'm using (def\u00a0sites-are-up\u00a0(atom\u00a0false)) and reset! that on success but that's ugly."}
{"type":"message","thread_ts":"1629881360.317100","ts":"1629882375.318500","parent_user_id":"U01GW6NKHP1","team":"T03RZGPFR","client_msg_id":"8a2cf024-78d8-4fe3-b841-96ac8a0db62d","blocks":[{"type":"rich_text","block_id":"GGUE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it possible to see some more code? I am not quite getting the constellation, yet"}]}]}],"user":"U0N9SJHCH","text":"Is it possible to see some more code? I am not quite getting the constellation, yet"}
{"type":"message","thread_ts":"1629881360.317100","ts":"1629885479.321100","parent_user_id":"U01GW6NKHP1","team":"T03RZGPFR","client_msg_id":"70660cf2-f865-4009-9356-e935457abfb6","blocks":[{"type":"rich_text","block_id":"gHYrp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe you could consider "},{"type":"text","text":"all-sites-available","style":{"code":true}},{"type":"text","text":" as a precondition for all tests in that ns, not as a test itself. In that case you could run this check with "},{"type":"text","text":"(use-fixtures :once ...)","style":{"code":true}},{"type":"text","text":" and skip all dependent tests afterwards if it returns false?"}]}]}],"user":"U0N9SJHCH","text":"Maybe you could consider `all-sites-available` as a precondition for all tests in that ns, not as a test itself. In that case you could run this check with `(use-fixtures :once ...)` and skip all dependent tests afterwards if it returns false?"}
{"type":"message","thread_ts":"1629881360.317100","ts":"1629888110.327000","parent_user_id":"U01GW6NKHP1","team":"T03RZGPFR","client_msg_id":"08f00721-1562-417b-94fe-d3d92a0cd87e","blocks":[{"type":"rich_text","block_id":"MhU2T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's the code\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn\u00a0wait-for-url-available\u00a0[url],,,)\n\n(def\u00a0sites-are-up\u00a0(atom\u00a0false))\u00a0\n(deftest\u00a0all-sites-available\n\u00a0\u00a0(reset!\u00a0sites-are-up\u00a0false)\n\u00a0\u00a0(and\n\u00a0\u00a0\u00a0(is\u00a0(true?\u00a0(wait-for-url-available\u00a0url-1)))\n\u00a0\u00a0\u00a0(is\u00a0(true?\u00a0(wait-for-url-available\u00a0url-2)))\n\u00a0\u00a0\u00a0(reset!\u00a0sites-are-up\u00a0true)))\n\n(defn\u00a0test-ns-hook\u00a0[]\n\u00a0\u00a0(all-sites-available)\n\u00a0\u00a0(when\u00a0@sites-are-up\n\u00a0\u00a0\u00a0\u00a0(,,,more-tests-here,,,)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I understand that (is) can be used like a function call that's why I'm using it with (and). (deftest fun) does define a function but I cannot return a value, no? I could just do the whole thing with functions but I wanted to try how it would work out with deftest."}]}]}],"user":"U01GW6NKHP1","text":"Here's the code\n```(defn\u00a0wait-for-url-available\u00a0[url],,,)\n\n(def\u00a0sites-are-up\u00a0(atom\u00a0false))\u00a0\n(deftest\u00a0all-sites-available\n\u00a0\u00a0(reset!\u00a0sites-are-up\u00a0false)\n\u00a0\u00a0(and\n\u00a0\u00a0\u00a0(is\u00a0(true?\u00a0(wait-for-url-available\u00a0url-1)))\n\u00a0\u00a0\u00a0(is\u00a0(true?\u00a0(wait-for-url-available\u00a0url-2)))\n\u00a0\u00a0\u00a0(reset!\u00a0sites-are-up\u00a0true)))\n\n(defn\u00a0test-ns-hook\u00a0[]\n\u00a0\u00a0(all-sites-available)\n\u00a0\u00a0(when\u00a0@sites-are-up\n\u00a0\u00a0\u00a0\u00a0(,,,more-tests-here,,,)))```\nI understand that (is) can be used like a function call that's why I'm using it with (and). (deftest fun) does define a function but I cannot return a value, no? I could just do the whole thing with functions but I wanted to try how it would work out with deftest."}
{"subscribed":false,"reply_users":["U0181TF85NK","U2FRKM4TW","U8LB00QMD","U04V70XH6"],"type":"message","thread_ts":"1629875116.308700","reply_users_count":4,"ts":"1629875116.308700","team":"T03RZGPFR","client_msg_id":"22924a8c-f8c9-4ecd-8a73-cfb28b2e533f","blocks":[{"type":"rich_text","block_id":"7Zj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this the right channel to ask for library suggestions?"}]}]}],"is_locked":false,"user":"U0181TF85NK","reply_count":15,"latest_reply":"1629985585.022400","text":"Is this the right channel to ask for library suggestions?"}
{"subscribed":false,"reply_users":["U0181TF85NK","U2FRKM4TW","U8LB00QMD","U04V70XH6"],"type":"message","thread_ts":"1629875116.308700","reply_users_count":4,"ts":"1629875116.308700","team":"T03RZGPFR","client_msg_id":"22924a8c-f8c9-4ecd-8a73-cfb28b2e533f","blocks":[{"type":"rich_text","block_id":"7Zj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this the right channel to ask for library suggestions?"}]}]}],"is_locked":false,"user":"U0181TF85NK","reply_count":15,"latest_reply":"1629985585.022400","text":"Is this the right channel to ask for library suggestions?"}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629875147.308800","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"984e710d-4289-44f0-8518-be2e42785818","blocks":[{"type":"rich_text","block_id":"rqp=o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am looking for an implementation of state charts (hierarchical state machines)"}]}]}],"user":"U0181TF85NK","text":"I am looking for an implementation of state charts (hierarchical state machines)"}
{"type":"message","thread_ts":"1629875116.308700","edited":{"user":"U0181TF85NK","ts":"1629900413.000000"},"ts":"1629875186.309000","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"b4bea486-72e1-4f99-9535-08b28d177670","blocks":[{"type":"rich_text","block_id":"tPA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i am planning to use this in a hobby project"}]}]}],"user":"U0181TF85NK","text":"i am planning to use this in a hobby project"}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629875424.309200","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"7cb16798-7f63-4b02-8fd0-be71c9e5975f","blocks":[{"type":"rich_text","block_id":"pOs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps this could be used: "},{"type":"link","url":"http:\/\/commons.apache.org\/proper\/commons-scxml\/"}]}]}],"user":"U2FRKM4TW","text":"Perhaps this could be used: <http:\/\/commons.apache.org\/proper\/commons-scxml\/>"}
{"attachments":[{"color":"24292f","fallback":"klangfarbe\/UML-Statechart-Framework-for-Java","fields":[{"title":"Stars","value":"37","short":true},{"title":"Language","value":"Java","short":true}],"is_app_unfurl":true,"title":"klangfarbe\/UML-Statechart-Framework-for-Java","id":1,"app_unfurl_url":"https:\/\/github.com\/klangfarbe\/UML-Statechart-Framework-for-Java","text":"The framework implements UML statecharts in Java. Next to the standard elements of FSMs, hierarchical and concurrent states are as well supported as pseudostates, segmented transitions, timed events and an eventqueue for dispatching events asynchronously.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629875116.308700","ts":"1629875467.309400","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"744d9da4-64d5-4c7c-977f-b9e99701c0eb","blocks":[{"type":"rich_text","block_id":"RRi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also stumbled upon this: "},{"type":"link","url":"https:\/\/github.com\/klangfarbe\/UML-Statechart-Framework-for-Java"}]}]}],"user":"U2FRKM4TW","text":"Also stumbled upon this: <https:\/\/github.com\/klangfarbe\/UML-Statechart-Framework-for-Java>"}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629875500.309700","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"75201efa-9b3c-453d-9ebf-2ec17242fded","blocks":[{"type":"rich_text","block_id":"HU5n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you for the suggestions "},{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":"!"}]}]}],"user":"U0181TF85NK","text":"thank you for the suggestions <@U2FRKM4TW>!"}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629875525.309900","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"e1d37b8d-3eb5-4d53-8931-bd7742857aba","blocks":[{"type":"rich_text","block_id":"Z3n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i'm new to the Java world, so didn't think to look in that ecosystem"}]}]}],"user":"U0181TF85NK","text":"i'm new to the Java world, so didn't think to look in that ecosystem"}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629875552.310100","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"b674ad1d-e4a1-472b-8df6-acd3ce171c9f","blocks":[{"type":"rich_text","block_id":"OMGn9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"will read through the above. thank you!"}]}]}],"user":"U0181TF85NK","text":"will read through the above. thank you!"}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629875583.310300","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"781ddc9c-89b9-41f4-9df2-b4638aacd09d","blocks":[{"type":"rich_text","block_id":"atiDJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It very well might be that there are Clojure libraries - I just didn't find them, so tried looking for Java ones."}]}]}],"user":"U2FRKM4TW","text":"It very well might be that there are Clojure libraries - I just didn't find them, so tried looking for Java ones."}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629875620.310500","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"96dadc15-03fb-4aa4-8b2b-c97aba4aafc7","blocks":[{"type":"rich_text","block_id":"g7j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"got it"}]}]}],"user":"U0181TF85NK","text":"got it"}
{"attachments":[{"color":"24292f","fallback":"lucywang000\/clj-statecharts","fields":[{"title":"Website","value":"<https:\/\/lucywang000.github.io\/clj-statecharts\/>","short":true},{"title":"Stars","value":"146","short":true}],"is_app_unfurl":true,"title":"lucywang000\/clj-statecharts","id":1,"app_unfurl_url":"https:\/\/github.com\/lucywang000\/clj-statecharts","text":"State Machine and StateCharts for Clojure(Script)","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629875116.308700","ts":"1629876302.310700","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"8822c038-b697-472d-943c-973e109b954a","blocks":[{"type":"rich_text","block_id":"VHo","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/lucywang000\/clj-statecharts"}]}]}],"user":"U8LB00QMD","reactions":[{"name":"+1","users":["U2FRKM4TW","U0181TF85NK"],"count":2}],"text":"<https:\/\/github.com\/lucywang000\/clj-statecharts>"}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629876808.311200","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"8e596a0a-2de0-4d6b-a387-adb72075823f","blocks":[{"type":"rich_text","block_id":"FJq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"looks very promising - thank you "},{"type":"user","user_id":"U8LB00QMD"},{"type":"text","text":"!"}]}]}],"user":"U0181TF85NK","text":"looks very promising - thank you <@U8LB00QMD>!"}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629876880.311400","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"af33daeb-4783-46be-ac4f-c67ee29ddde0","blocks":[{"type":"rich_text","block_id":"C+hx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you don't mind "},{"type":"user","user_id":"U8LB00QMD"},{"type":"text","text":" - may I ask how you came to be aware of this?"}]}]}],"user":"U0181TF85NK","text":"if you don't mind <@U8LB00QMD> - may I ask how you came to be aware of this?"}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629877077.311600","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"1418ded2-402d-4496-8b77-3170215ac041","blocks":[{"type":"rich_text","block_id":"yr=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It was posted in "},{"type":"channel","channel_id":"C06MAR553"},{"type":"text","text":" a couple of months ago and I gave it a star. Haven't had a chance try it out though."}]}]}],"user":"U8LB00QMD","reactions":[{"name":"+1","users":["U0181TF85NK"],"count":1}],"text":"It was posted in <#C06MAR553|announcements> a couple of months ago and I gave it a star. Haven't had a chance try it out though."}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629909280.364400","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"bd036459-bea6-4671-9d1c-ec1b96bd3a4a","blocks":[{"type":"rich_text","block_id":"wP4EU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sometimes the "},{"type":"channel","channel_id":"CQT1NFF4L"},{"type":"text","text":" channel can be helpful for questions like this (but it isn't as populated as this channel)."}]}]}],"user":"U04V70XH6","text":"Sometimes the <#CQT1NFF4L|find-my-lib> channel can be helpful for questions like this (but it isn't as populated as this channel)."}
{"type":"message","thread_ts":"1629875116.308700","ts":"1629985585.022400","parent_user_id":"U0181TF85NK","team":"T03RZGPFR","client_msg_id":"b7005901-898b-42cc-b952-153600ebe4b7","blocks":[{"type":"rich_text","block_id":"KD0F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you "},{"type":"user","user_id":"U04V70XH6"},{"type":"text","text":"!"}]}]}],"user":"U0181TF85NK","text":"thank you <@U04V70XH6>!"}
{"subscribed":false,"reply_users":["U7RJTCH6J","U064X3EF3","U2FRKM4TW"],"type":"message","thread_ts":"1629838514.305700","reply_users_count":3,"ts":"1629838514.305700","team":"T03RZGPFR","client_msg_id":"77004e22-644b-40a1-ba11-57d687067091","blocks":[{"type":"rich_text","block_id":"NjvT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is impossible to "},{"type":"text","text":"defrecord","style":{"code":true}},{"type":"text","text":" with the same name as a class in "},{"type":"text","text":"java.lang","style":{"code":true}},{"type":"text","text":", right?\nE.g. "},{"type":"text","text":"(defrecord Enum [])","style":{"code":true}},{"type":"text","text":" fails with "},{"type":"text","text":"Enum already refers to: class java.lang.Enum","style":{"code":true}},{"type":"text","text":"."}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":4,"latest_reply":"1629867366.307900","text":"It is impossible to `defrecord` with the same name as a class in `java.lang`, right?\nE.g. `(defrecord Enum [])` fails with `Enum already refers to: class java.lang.Enum`."}
{"subscribed":false,"reply_users":["U7RJTCH6J","U064X3EF3","U2FRKM4TW"],"type":"message","thread_ts":"1629838514.305700","reply_users_count":3,"ts":"1629838514.305700","team":"T03RZGPFR","client_msg_id":"77004e22-644b-40a1-ba11-57d687067091","blocks":[{"type":"rich_text","block_id":"NjvT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is impossible to "},{"type":"text","text":"defrecord","style":{"code":true}},{"type":"text","text":" with the same name as a class in "},{"type":"text","text":"java.lang","style":{"code":true}},{"type":"text","text":", right?\nE.g. "},{"type":"text","text":"(defrecord Enum [])","style":{"code":true}},{"type":"text","text":" fails with "},{"type":"text","text":"Enum already refers to: class java.lang.Enum","style":{"code":true}},{"type":"text","text":"."}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":4,"latest_reply":"1629867366.307900","text":"It is impossible to `defrecord` with the same name as a class in `java.lang`, right?\nE.g. `(defrecord Enum [])` fails with `Enum already refers to: class java.lang.Enum`."}
{"type":"message","thread_ts":"1629838514.305700","ts":"1629839066.305800","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"483ea2c0-2629-450a-a75d-fb50121a19fc","blocks":[{"type":"rich_text","block_id":"uJj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This seems to work:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns-unmap *ns* 'Enum)\n(defrecord Enum [])"}]}]}],"user":"U7RJTCH6J","reactions":[{"name":"heavy_plus_sign","users":["U45T93RA6"],"count":1}],"text":"This seems to work:\n```(ns-unmap *ns* 'Enum)\n(defrecord Enum [])```"}
{"type":"message","thread_ts":"1629838514.305700","ts":"1629839087.306000","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"822805d9-9f2f-4a6c-8f57-e4283292f03c","blocks":[{"type":"rich_text","block_id":"DX6i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not sure if there's a cleaner way"}]}]}],"user":"U7RJTCH6J","text":"not sure if there's a cleaner way"}
{"type":"message","thread_ts":"1629838514.305700","ts":"1629844529.307200","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"7CB4258E-A76B-4967-B43F-7DE0CF0A6294","blocks":[{"type":"rich_text","block_id":"q9l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems like the best idea I can think of"}]}]}],"user":"U064X3EF3","text":"Seems like the best idea I can think of"}
{"type":"message","thread_ts":"1629838514.305700","ts":"1629867366.307900","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"ab9013f5-d5f5-4f10-ba9f-e8946ece42d2","blocks":[{"type":"rich_text","block_id":"dD9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks!"}]}]}],"user":"U2FRKM4TW","text":"Thanks!"}
{"subscribed":false,"reply_users":["U01CNN12HNY","U45T93RA6","U3JH98J4R","U04V70XH6","U0WL6FA77"],"type":"message","thread_ts":"1629794828.299000","reply_users_count":5,"ts":"1629794828.299000","team":"T03RZGPFR","client_msg_id":"5283129d-22a1-4664-bfa8-f63657f87b96","blocks":[{"type":"rich_text","block_id":"aPCtn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, Clojurians.\nI\u2019m Younghwan Nam.\nI\u2019d love to ask about AWS lambda layer where I am stuck in.\n\nin "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" , I\u2019d like to know how to add sth like "},{"type":"text","text":"scope : provided","style":{"code":true}},{"type":"text","text":" .\n\nI\u2019m considering Lambda Layer to separate dependencies. after making layer, I was trying to make "},{"type":"text","text":"uberjar","style":{"code":true}},{"type":"text","text":" to deploy lambda. but because of "},{"type":"text","text":"aot: true","style":{"code":true}},{"type":"text","text":" dependencies are necessary. I have no idea how to deal with it.\n\nThanks a lot."}]}]}],"is_locked":false,"user":"U01CNN12HNY","reply_count":13,"latest_reply":"1629892639.332700","text":"Hi, Clojurians.\nI\u2019m Younghwan Nam.\nI\u2019d love to ask about AWS lambda layer where I am stuck in.\n\nin `deps.edn` , I\u2019d like to know how to add sth like `scope : provided` .\n\nI\u2019m considering Lambda Layer to separate dependencies. after making layer, I was trying to make `uberjar` to deploy lambda. but because of `aot: true` dependencies are necessary. I have no idea how to deal with it.\n\nThanks a lot."}
{"subscribed":false,"reply_users":["U01CNN12HNY","U45T93RA6","U3JH98J4R","U04V70XH6","U0WL6FA77"],"type":"message","thread_ts":"1629794828.299000","reply_users_count":5,"ts":"1629794828.299000","team":"T03RZGPFR","client_msg_id":"5283129d-22a1-4664-bfa8-f63657f87b96","blocks":[{"type":"rich_text","block_id":"aPCtn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, Clojurians.\nI\u2019m Younghwan Nam.\nI\u2019d love to ask about AWS lambda layer where I am stuck in.\n\nin "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" , I\u2019d like to know how to add sth like "},{"type":"text","text":"scope : provided","style":{"code":true}},{"type":"text","text":" .\n\nI\u2019m considering Lambda Layer to separate dependencies. after making layer, I was trying to make "},{"type":"text","text":"uberjar","style":{"code":true}},{"type":"text","text":" to deploy lambda. but because of "},{"type":"text","text":"aot: true","style":{"code":true}},{"type":"text","text":" dependencies are necessary. I have no idea how to deal with it.\n\nThanks a lot."}]}]}],"is_locked":false,"user":"U01CNN12HNY","reply_count":13,"latest_reply":"1629892639.332700","text":"Hi, Clojurians.\nI\u2019m Younghwan Nam.\nI\u2019d love to ask about AWS lambda layer where I am stuck in.\n\nin `deps.edn` , I\u2019d like to know how to add sth like `scope : provided` .\n\nI\u2019m considering Lambda Layer to separate dependencies. after making layer, I was trying to make `uberjar` to deploy lambda. but because of `aot: true` dependencies are necessary. I have no idea how to deal with it.\n\nThanks a lot."}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629794889.299400","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"88ac46b1-d90d-4c64-ab6f-4bed1c5fcb53","blocks":[{"type":"rich_text","block_id":"4qg+n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here is my "},{"type":"text","text":"dep.edn","style":{"code":true}},{"type":"text","text":" for application.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"{:paths [\"src\" \"resources\"]\n :deps {org.clojure\/clojure {:mvn\/version \"1.10.3\"}\n        com.amazonaws\/aws-lambda-java-core   {:mvn\/version \"1.0.0\"}\n        com.amazonaws\/aws-lambda-java-events {:mvn\/version \"1.0.0\"}}\n :aliases\n {:dev  {:extra-deps {clojure.java-time\/clojure.java-time {:mvn\/version \"0.3.2\"}}}\n  :uberjar {:replace-deps {com.github.seancorfield\/depstar {:mvn\/version \"2.0.211\"}}\n            :exec-fn hf.depstar\/uberjar\n            :exec-args {:aot true\n                        :jar \"lambda-demo.jar\"\n                        :main-class \"yhnam.lambda-demo\"\n                        :sync-pom true}}}}"}]}]}],"user":"U01CNN12HNY","text":"Here is my `dep.edn` for application.\n```{:paths [\"src\" \"resources\"]\n :deps {org.clojure\/clojure {:mvn\/version \"1.10.3\"}\n        com.amazonaws\/aws-lambda-java-core   {:mvn\/version \"1.0.0\"}\n        com.amazonaws\/aws-lambda-java-events {:mvn\/version \"1.0.0\"}}\n :aliases\n {:dev  {:extra-deps {clojure.java-time\/clojure.java-time {:mvn\/version \"0.3.2\"}}}\n  :uberjar {:replace-deps {com.github.seancorfield\/depstar {:mvn\/version \"2.0.211\"}}\n            :exec-fn hf.depstar\/uberjar\n            :exec-args {:aot true\n                        :jar \"lambda-demo.jar\"\n                        :main-class \"yhnam.lambda-demo\"\n                        :sync-pom true}}}}```"}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629794922.299600","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"2619bc86-3217-4bcc-b595-0278939b9c56","blocks":[{"type":"rich_text","block_id":"kApA9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Test for "},{"type":"text","text":"separate java-time dependency","style":{"code":true}}]}]}],"user":"U01CNN12HNY","text":"Test for `separate java-time dependency`"}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629815143.302500","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"5746f670-6542-4837-a9a8-4f5cd295c075","blocks":[{"type":"rich_text","block_id":"geJa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd say that "},{"type":"text","text":"scope provided","style":{"code":true}},{"type":"text","text":" is something for libs to use, not applications\n\nIf you need to make a dependency optional, you can simply isolate it via the :aliases mechanism\n\ne.g. it can be present under the :dev alias but otherwise absent by default.\n\nAnyway I'd recommend taking a step back and describing your problem more precisely, before considering any specific solution"}]}]}],"user":"U45T93RA6","text":"I'd say that `scope provided` is something for libs to use, not applications\n\nIf you need to make a dependency optional, you can simply isolate it via the :aliases mechanism\n\ne.g. it can be present under the :dev alias but otherwise absent by default.\n\nAnyway I'd recommend taking a step back and describing your problem more precisely, before considering any specific solution"}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629817921.302700","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"721c513d-db6a-4630-9f7f-d3479c4e3cb1","blocks":[{"type":"rich_text","block_id":"2bAE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So basically you want to compile your AOT code with some dependency on the classpath and then make an uberjar with that dependency not on the classpath"}]}]}],"user":"U3JH98J4R","text":"So basically you want to compile your AOT code with some dependency on the classpath and then make an uberjar with that dependency not on the classpath"}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629817947.302900","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"5baca34a-3ea9-4f76-a2d8-7f4998d6a4aa","blocks":[{"type":"rich_text","block_id":"DprRL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or otherwise not included in the uberjar"}]}]}],"user":"U3JH98J4R","text":"or otherwise not included in the uberjar"}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629818896.303100","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"d34320dc-b86a-4d0a-b5bd-8697b7aaf94a","blocks":[{"type":"rich_text","block_id":"wWOR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"depstar","style":{"code":true}},{"type":"text","text":" supports different sets of aliases for compilation and for JAR-building, which was added specifically for this use case."}]}]}],"user":"U04V70XH6","text":"`depstar` supports different sets of aliases for compilation and for JAR-building, which was added specifically for this use case."}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629819006.303300","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"190090d1-8628-41f3-a650-2a29dec97d1b","blocks":[{"type":"rich_text","block_id":"PoXbz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":":aliases","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":":compile-aliases","style":{"code":true}},{"type":"text","text":" are the exec arguments you need but you'll need to ensure that what you need for compilation is added via an alias, so that you can tell "},{"type":"text","text":"depstar","style":{"code":true}},{"type":"text","text":" \"compile it with these dependencies\" and then \"build it with these different dependencies\"."}]}]}],"user":"U04V70XH6","reactions":[{"name":"heart","users":["U01CNN12HNY"],"count":1}],"text":"`:aliases` and `:compile-aliases` are the exec arguments you need but you'll need to ensure that what you need for compilation is added via an alias, so that you can tell `depstar` \"compile it with these dependencies\" and then \"build it with these different dependencies\"."}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/kwladyka\/consistency-clj\/blob\/master\/deps.edn | deps.edn>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/kwladyka\/consistency-clj|kwladyka\/consistency-clj>","title":"<https:\/\/github.com\/kwladyka\/consistency-clj\/blob\/master\/deps.edn | deps.edn>","id":1,"app_unfurl_url":"https:\/\/github.com\/kwladyka\/consistency-clj\/blob\/master\/deps.edn","text":"```\n{:paths [\"src\" \"resources\"]\n :deps {org.clojure\/clojure {:mvn\/version \"1.10.3\"}\n        integrant\/integrant {:mvn\/version \"0.8.0\"}\n        org.clojure\/tools.logging {:mvn\/version \"1.1.0\"}\n        metosin\/jsonista {:mvn\/version \"0.2.7\"}}\n :aliases\n {:dev {:extra-paths [\"dev\"]\n        :jvm-opts [\"-Dclojure.tools.logging.factory=clojure.tools.logging.impl\/jul-factory\"]}\n  :run-tests {:extra-paths [\"test\"]\n              :extra-deps {org.clojure\/test.check {:mvn\/version \"1.1.0\"}\n                           ring\/ring-core {:mvn\/version \"1.9.3\"}\n                           peridot\/peridot {:mvn\/version \"0.5.3\"}\n                           com.cognitect\/test-runner {:git\/url \"<https:\/\/github.com\/cognitect-labs\/test-runner>\"\n                                                      :sha \"8c3f22363d63715de4087b038d79ae0de36a3263\"}}\n              :exec-fn cognitect.test-runner.api\/test}\n  :check-syntax-and-reflections {:extra-deps {athos\/clj-check {:git\/url \"<https:\/\/github.com\/athos\/clj-check.git>\"\n                                                               :sha \"0ca84df1357d71429243b99908303f45a934654c\"}}\n                                 :main-opts [\"-m\" \"clj-check.check\"]}\n  :uberjar {:replace-deps {com.github.seancorfield\/depstar {:mvn\/version \"2.1.250\"}}\n            :exec-fn hf.depstar\/uberjar\n            :exec-args {:jar \"consistency.jar\"\n                        :aot true\n                        :debug-clash true}}\n  :clojars-deploy {:extra-deps {slipset\/deps-deploy {:mvn\/version \"0.1.5\"}}\n                   :exec-fn deps-deploy.deps-deploy\/deploy\n                   :exec-args {:installer :remote\n                               :sign-releases? false\n                               :artifact \"consistency.jar\"}}}}\n\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629794828.299000","ts":"1629832291.304300","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"a6ca392a-41ea-4533-8194-b4d97cd83bff","blocks":[{"type":"rich_text","block_id":"xZW","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/kwladyka\/consistency-clj\/blob\/master\/deps.edn"},{"type":"text","text":" here is example of real code for compile to uberjar and publish to clojars\n\nconsider just use\n"},{"type":"link","url":"https:\/\/clojure.org\/guides\/tools_build#_parameterized_build"},{"type":"text","text":" . I didn\u2019t have a chance to try, but looks like it can be new standard."}]}]}],"user":"U0WL6FA77","text":"<https:\/\/github.com\/kwladyka\/consistency-clj\/blob\/master\/deps.edn> here is example of real code for compile to uberjar and publish to clojars\n\nconsider just use\n<https:\/\/clojure.org\/guides\/tools_build#_parameterized_build> . I didn\u2019t have a chance to try, but looks like it can be new standard."}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629833015.304600","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"1df025a0-da35-4f90-be37-10a2be9de3e7","blocks":[{"type":"rich_text","block_id":"P1nh+","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0WL6FA77"},{"type":"text","text":" That is not a useful example: it does not involve "},{"type":"text","text":":aliases","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":":compile-aliases","style":{"code":true}},{"type":"text","text":" for "},{"type":"text","text":"depstar","style":{"code":true}},{"type":"text","text":" which is what the OP needs."}]}]}],"user":"U04V70XH6","text":"<@U0WL6FA77> That is not a useful example: it does not involve `:aliases` or `:compile-aliases` for `depstar` which is what the OP needs."}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629833070.304800","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"111c493b-a7cc-459e-8390-abdd39c94b0a","blocks":[{"type":"rich_text","block_id":"S8f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok sorry, I didn\u2019t quite understand the question."}]}]}],"user":"U0WL6FA77","text":"ok sorry, I didn\u2019t quite understand the question."}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629870627.308100","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"c6356c22-d14d-4801-836d-359356233680","blocks":[{"type":"rich_text","block_id":"0QGa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks a lot! it\u2019s really helpful."}]}]}],"user":"U01CNN12HNY","text":"Thanks a lot! it\u2019s really helpful."}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629892600.332500","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"4667ff20-1bbe-4bb2-9d4f-35c1a0a9aad5","blocks":[{"type":"rich_text","block_id":"bo1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"confirmed, it was the issue"}]}]}],"user":"U0WL6FA77","text":"confirmed, it was the issue"}
{"type":"message","thread_ts":"1629794828.299000","ts":"1629892639.332700","parent_user_id":"U01CNN12HNY","team":"T03RZGPFR","client_msg_id":"e6d176cd-5c4d-4bd1-a9dc-ac3ef09353cb","blocks":[{"type":"rich_text","block_id":"Yw\/=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it is worth to look on number of threads in the process. if it is growing in time it can means something not close properly."}]}]}],"user":"U0WL6FA77","text":"it is worth to look on number of threads in the process. if it is growing in time it can means something not close properly."}
{"subscribed":false,"reply_users":["U04V4KLKC","U02C51922G3"],"type":"message","thread_ts":"1629794226.294000","reply_users_count":2,"ts":"1629794226.294000","team":"T03RZGPFR","client_msg_id":"fd5242ea-db7e-4932-8a78-848c645923c7","blocks":[{"type":"rich_text","block_id":"z\/a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My expectation would be that the "},{"type":"text","text":"\"this is the ex\"","style":{"code":true}},{"type":"text","text":" expection is caught, but it isn\u2019t. Maybe someone can help me out here?"}]}]}],"is_locked":false,"user":"U02C51922G3","reply_count":4,"latest_reply":"1629798041.301400","text":"My expectation would be that the `\"this is the ex\"` expection is caught, but it isn\u2019t. Maybe someone can help me out here?"}
{"subscribed":false,"reply_users":["U04V4KLKC","U02C51922G3"],"type":"message","thread_ts":"1629794226.294000","reply_users_count":2,"ts":"1629794226.294000","team":"T03RZGPFR","client_msg_id":"fd5242ea-db7e-4932-8a78-848c645923c7","blocks":[{"type":"rich_text","block_id":"z\/a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My expectation would be that the "},{"type":"text","text":"\"this is the ex\"","style":{"code":true}},{"type":"text","text":" expection is caught, but it isn\u2019t. Maybe someone can help me out here?"}]}]}],"is_locked":false,"user":"U02C51922G3","reply_count":4,"latest_reply":"1629798041.301400","text":"My expectation would be that the `\"this is the ex\"` expection is caught, but it isn\u2019t. Maybe someone can help me out here?"}
{"type":"message","thread_ts":"1629794226.294000","ts":"1629795345.300300","parent_user_id":"U02C51922G3","team":"T03RZGPFR","client_msg_id":"7832aa36-f740-410f-abe0-9085b77147ca","blocks":[{"type":"rich_text","block_id":"xEL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are you testing your "},{"type":"text","text":"main","style":{"code":true}},{"type":"text","text":" function in REPL?"}]}]}],"user":"U04V4KLKC","text":"are you testing your `main` function in REPL?"}
{"type":"message","thread_ts":"1629794226.294000","ts":"1629795511.300500","parent_user_id":"U02C51922G3","team":"T03RZGPFR","client_msg_id":"58577f97-e50b-4a57-a934-ca6798d8e335","blocks":[{"type":"rich_text","block_id":"jbPS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, I\u2019m calling it from the shell via "},{"type":"text","text":"clojure -M -m exception-test.core","style":{"code":true}}]}]}],"user":"U02C51922G3","text":"No, I\u2019m calling it from the shell via `clojure -M -m exception-test.core`"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/main.clj | main.clj>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/clojure\/clojure|clojure\/clojure>","title":"<https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/main.clj | main.clj>","id":1,"app_unfurl_url":"https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/main.clj#L650-L672","text":"```\n  (try\n   (if args\n     (loop [[opt arg &amp; more :as args] args, inits [], flags nil]\n       (cond\n         ;; flag\n         (contains? #{\"--report\"} opt)\n         (recur more inits (merge flags {(subs opt 2) arg}))\n\n         ;; init opt\n         (init-dispatch opt)\n         (recur more (conj inits [opt arg]) flags)\n\n         :main-opt\n         (try\n           ((main-dispatch opt) args inits)\n           (catch Throwable t\n             (report-error t :target (get flags \"report\" (System\/getProperty \"clojure.main.report\" \"file\")))\n             (System\/exit 1)))))\n     (try\n       (repl-opt nil nil)\n       (catch Throwable t\n         (report-error t :target \"file\")\n         (System\/exit 1))))\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629794226.294000","ts":"1629796323.300700","parent_user_id":"U02C51922G3","team":"T03RZGPFR","client_msg_id":"ca04f601-6cca-4d91-a98e-ed44e3d2367e","blocks":[{"type":"rich_text","block_id":"y8LO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, that isn\u2019t working because of "},{"type":"link","url":"https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/main.clj#L650-L672"},{"type":"text","text":"\nexception thrown by your code will be catched by clojure\u2019s main function"}]}]}],"user":"U04V4KLKC","text":"ok, that isn\u2019t working because of <https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/main.clj#L650-L672>\nexception thrown by your code will be catched by clojure\u2019s main function"}
{"type":"message","thread_ts":"1629794226.294000","ts":"1629798041.301400","parent_user_id":"U02C51922G3","team":"T03RZGPFR","client_msg_id":"4488ba27-0216-4a9f-88d3-794fcdd7401c","blocks":[{"type":"rich_text","block_id":"b54","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks a lot. I just figured out the same thing."}]}]}],"user":"U02C51922G3","text":"Thanks a lot. I just figured out the same thing."}
{"client_msg_id":"c0d6fa71-e2cd-4e11-9842-e540a2cb9702","type":"message","text":"Hey everyone. I\u2019ve got a seemingly very basic question: I want to attach a `Thread$UncaughtExceptionHandler` to the current thread (my main thread). I do this via\n```(ns exception-test.core)\n\n(defn -main\n  [&amp; args]\n  (Thread\/setDefaultUncaughtExceptionHandler\n   (reify Thread$UncaughtExceptionHandler\n               (^void uncaughtException\n                [^Thread$UncaughtExceptionHandler this ^Thread t ^Throwable e] ; -&gt; void\n                (println \"caught:\" (.getMessage e)))))\n  (throw (Exception. \"this is the ex\"))\n  (println \"after ex\"))```","user":"U02C51922G3","ts":"1629794199.293200","team":"T03RZGPFR","edited":{"user":"U02C51922G3","ts":"1629794264.000000"},"blocks":[{"type":"rich_text","block_id":"PDDlv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey everyone. I\u2019ve got a seemingly very basic question: I want to attach a "},{"type":"text","text":"Thread$UncaughtExceptionHandler","style":{"code":true}},{"type":"text","text":" to the current thread (my main thread). I do this via\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns exception-test.core)\n\n(defn -main\n  [& args]\n  (Thread\/setDefaultUncaughtExceptionHandler\n   (reify Thread$UncaughtExceptionHandler\n               (^void uncaughtException\n                [^Thread$UncaughtExceptionHandler this ^Thread t ^Throwable e] ; -> void\n                (println \"caught:\" (.getMessage e)))))\n  (throw (Exception. \"this is the ex\"))\n  (println \"after ex\"))"}]}]}]}
{"subscribed":false,"reply_users":["U8SFC8HLP","U0232JK38BZ"],"type":"message","thread_ts":"1629785612.287600","reply_users_count":2,"edited":{"user":"U0232JK38BZ","ts":"1629787704.000000"},"ts":"1629785612.287600","team":"T03RZGPFR","client_msg_id":"274bda9b-a6ef-47b8-89d7-cba1f2747435","blocks":[{"type":"rich_text","block_id":"l1Sj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's say I have an atom like above with\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"{:jobid->state {:jobid1 :ready :jobid2 :in-progress ...}\n :state->jobids {:ready #sorted-set{:jobid3 ...}}\n                 :in-progress #sorted-set{:jobid4...}\n                 :done #sorted-set{:jobid5 ...}}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIs there any advantage in making it a defrecord? Or is that only advantageous if I want polymorphism? I do Scala at work so there I'd make it an object. But I guess there is no advantage to it here. I could just have it in a namespace with the getter\/setter\/lookup-functions."}]}]}],"is_locked":false,"user":"U0232JK38BZ","reply_count":2,"latest_reply":"1629793527.290900","text":"Let's say I have an atom like above with\n\n```{:jobid-&gt;state {:jobid1 :ready :jobid2 :in-progress ...}\n :state-&gt;jobids {:ready #sorted-set{:jobid3 ...}}\n                 :in-progress #sorted-set{:jobid4...}\n                 :done #sorted-set{:jobid5 ...}}```\nIs there any advantage in making it a defrecord? Or is that only advantageous if I want polymorphism? I do Scala at work so there I'd make it an object. But I guess there is no advantage to it here. I could just have it in a namespace with the getter\/setter\/lookup-functions."}
{"subscribed":false,"reply_users":["U8SFC8HLP","U0232JK38BZ"],"type":"message","thread_ts":"1629785612.287600","reply_users_count":2,"edited":{"user":"U0232JK38BZ","ts":"1629787704.000000"},"ts":"1629785612.287600","team":"T03RZGPFR","client_msg_id":"274bda9b-a6ef-47b8-89d7-cba1f2747435","blocks":[{"type":"rich_text","block_id":"l1Sj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's say I have an atom like above with\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"{:jobid->state {:jobid1 :ready :jobid2 :in-progress ...}\n :state->jobids {:ready #sorted-set{:jobid3 ...}}\n                 :in-progress #sorted-set{:jobid4...}\n                 :done #sorted-set{:jobid5 ...}}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIs there any advantage in making it a defrecord? Or is that only advantageous if I want polymorphism? I do Scala at work so there I'd make it an object. But I guess there is no advantage to it here. I could just have it in a namespace with the getter\/setter\/lookup-functions."}]}]}],"is_locked":false,"user":"U0232JK38BZ","reply_count":2,"latest_reply":"1629793527.290900","text":"Let's say I have an atom like above with\n\n```{:jobid-&gt;state {:jobid1 :ready :jobid2 :in-progress ...}\n :state-&gt;jobids {:ready #sorted-set{:jobid3 ...}}\n                 :in-progress #sorted-set{:jobid4...}\n                 :done #sorted-set{:jobid5 ...}}```\nIs there any advantage in making it a defrecord? Or is that only advantageous if I want polymorphism? I do Scala at work so there I'd make it an object. But I guess there is no advantage to it here. I could just have it in a namespace with the getter\/setter\/lookup-functions."}
{"type":"message","thread_ts":"1629785612.287600","ts":"1629791238.290200","parent_user_id":"U0232JK38BZ","team":"T03RZGPFR","client_msg_id":"a9b92f3f-5dc0-48e1-a5b0-c62329e07a2f","blocks":[{"type":"rich_text","block_id":"oyp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don\u2019t really see any benefit in turning this into a record. You already have it properly structured with nice names and all that and Clojure\u2019s APIs work best with this kind of data "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" If you need Java interop then maybe, but as is, nah."}]}]}],"user":"U8SFC8HLP","text":"I don\u2019t really see any benefit in turning this into a record. You already have it properly structured with nice names and all that and Clojure\u2019s APIs work best with this kind of data :slightly_smiling_face: If you need Java interop then maybe, but as is, nah."}
{"type":"message","thread_ts":"1629785612.287600","ts":"1629793527.290900","parent_user_id":"U0232JK38BZ","team":"T03RZGPFR","client_msg_id":"cd8409c2-28f3-4807-8d13-1dde7b8717a8","blocks":[{"type":"rich_text","block_id":"JCkl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is what I thought. Thanks! "},{"type":"emoji","name":"pray"}]}]}],"user":"U0232JK38BZ","text":"That is what I thought. Thanks! :pray:"}
{"client_msg_id":"958923ec-27f0-40f7-8198-122d0a14e588","type":"message","text":"To keep two maps in sync I guess the easiest thing to do is to create an atom with two fields that contain the maps like `:state-&gt;jobids` and `:jobid-&gt;state`, right? And then ensure that all operations keep them in sync","user":"U0232JK38BZ","ts":"1629785060.282800","team":"T03RZGPFR","edited":{"user":"U0232JK38BZ","ts":"1629787648.000000"},"blocks":[{"type":"rich_text","block_id":"Cu\/qH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To keep two maps in sync I guess the easiest thing to do is to create an atom with two fields that contain the maps like "},{"type":"text","text":":state->jobids","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":":jobid->state","style":{"code":true}},{"type":"text","text":", right? And then ensure that all operations keep them in sync"}]}]}]}
{"subscribed":false,"reply_users":["U7RJTCH6J","U1QQJJK89","UGSM2S2CS"],"type":"message","thread_ts":"1629780597.271800","reply_users_count":3,"ts":"1629780597.271800","team":"T03RZGPFR","client_msg_id":"1460516e-1197-47ea-a269-775da2d5e715","blocks":[{"type":"rich_text","block_id":"v7Yj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what happens to unclaimed future results? If I spawn a future and abandon it (say the future stores its result somewhere), and the future creator never derefs the future, what happens to the result? Does it just consume memory in the JVM forever more? Is it gabage collected somehow when the creator returns without the future?"}]}]}],"is_locked":false,"user":"U1QQJJK89","reply_count":11,"latest_reply":"1629785581.286900","text":"what happens to unclaimed future results? If I spawn a future and abandon it (say the future stores its result somewhere), and the future creator never derefs the future, what happens to the result? Does it just consume memory in the JVM forever more? Is it gabage collected somehow when the creator returns without the future?"}
{"subscribed":false,"reply_users":["U7RJTCH6J","U1QQJJK89","UGSM2S2CS"],"type":"message","thread_ts":"1629780597.271800","reply_users_count":3,"ts":"1629780597.271800","team":"T03RZGPFR","client_msg_id":"1460516e-1197-47ea-a269-775da2d5e715","blocks":[{"type":"rich_text","block_id":"v7Yj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what happens to unclaimed future results? If I spawn a future and abandon it (say the future stores its result somewhere), and the future creator never derefs the future, what happens to the result? Does it just consume memory in the JVM forever more? Is it gabage collected somehow when the creator returns without the future?"}]}]}],"is_locked":false,"user":"U1QQJJK89","reply_count":11,"latest_reply":"1629785581.286900","text":"what happens to unclaimed future results? If I spawn a future and abandon it (say the future stores its result somewhere), and the future creator never derefs the future, what happens to the result? Does it just consume memory in the JVM forever more? Is it gabage collected somehow when the creator returns without the future?"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629780841.271900","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"3126c58d-bb6f-4005-a7f1-159904ad9554","blocks":[{"type":"rich_text","block_id":"mdw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It will be available for garbage collection:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"> (future\n    (reify\n      Object\n      (finalize [_]\n        (println \"goodbye\"))))\n#<Future@18bd51a8: \n  #object[$eva...66\"]>\n> (System\/gc)\ngoodbye"}]}]}],"user":"U7RJTCH6J","text":"It will be available for garbage collection:\n```&gt; (future\n    (reify\n      Object\n      (finalize [_]\n        (println \"goodbye\"))))\n#&lt;Future@18bd51a8: \n  #object[$eva...66\"]&gt;\n&gt; (System\/gc)\ngoodbye```"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629780968.272100","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"9a9316d5-cc84-4ccd-a06c-a3d9a144f97e","blocks":[{"type":"rich_text","block_id":"zi0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thankyou. Great little bit of example code."}]}]}],"user":"U1QQJJK89","text":"Thankyou. Great little bit of example code."}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629781275.272300","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"b86f56ba-d9f5-4eb3-a260-0b4291b060f7","blocks":[{"type":"rich_text","block_id":"q9L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does this actually garbage collect though?"}]}]}],"user":"U1QQJJK89","text":"does this actually garbage collect though?"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629781290.272500","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"11aeb7de-1c98-4fb1-afed-3b4f282421f1","blocks":[{"type":"rich_text","block_id":"rGqjP","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"user=> (def fut\n  #_=> (future\n  #_=>     (reify\n  #_=>       Object\n  #_=>       (finalize [_]\n  #_=>         (println \"goodbye\")))))\n#'user\/fut\nuser=> fut\n#object[clojure.core$future_call$reify__8439 0x68d96261 {:status :ready, :val #object[user$fn$reify__2006 0x35c59975 \"user$fn$reify__2006@35c59975\"]}]\nuser=> (System\/gc)\ngoodbye\nnil\nuser=> fut\n#object[clojure.core$future_call$reify__8439 0x68d96261 {:status :ready, :val #object[user$fn$reify__2006 0x35c59975 \"user$fn$reify__2006@35c59975\"]}]\nuser=> @fut\n#object[user$fn$reify__2006 0x35c59975 \"user$fn$reify__2006@35c59975\"]"}]}]}],"user":"U1QQJJK89","text":"```user=&gt; (def fut\n  #_=&gt; (future\n  #_=&gt;     (reify\n  #_=&gt;       Object\n  #_=&gt;       (finalize [_]\n  #_=&gt;         (println \"goodbye\")))))\n#'user\/fut\nuser=&gt; fut\n#object[clojure.core$future_call$reify__8439 0x68d96261 {:status :ready, :val #object[user$fn$reify__2006 0x35c59975 \"user$fn$reify__2006@35c59975\"]}]\nuser=&gt; (System\/gc)\ngoodbye\nnil\nuser=&gt; fut\n#object[clojure.core$future_call$reify__8439 0x68d96261 {:status :ready, :val #object[user$fn$reify__2006 0x35c59975 \"user$fn$reify__2006@35c59975\"]}]\nuser=&gt; @fut\n#object[user$fn$reify__2006 0x35c59975 \"user$fn$reify__2006@35c59975\"]```"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629781318.272700","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"20ec44cb-c14b-4d57-b42e-a268cb60e6a6","blocks":[{"type":"rich_text","block_id":"o+PFa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or will it gc when fut is gced?"}]}]}],"user":"U1QQJJK89","text":"or will it gc when fut is gced?"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629781325.272900","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"62802405-38e9-4f05-b65f-1f4cd5f6d38c","blocks":[{"type":"rich_text","block_id":"1pxBs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"will fut be gced when finished?"}]}]}],"user":"U1QQJJK89","text":"will fut be gced when finished?"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629781887.273100","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"0666a647-1a8a-4005-8bc1-306a5d55438c","blocks":[{"type":"rich_text","block_id":"gNi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It will be available for garbage collection when there aren't any references pointing towards it"}]}]}],"user":"U7RJTCH6J","text":"It will be available for garbage collection when there aren't any references pointing towards it"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629782131.273300","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"09e9542a-1b42-402e-90b8-f064a016dc7b","blocks":[{"type":"rich_text","block_id":"igvV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yep great thanks"}]}]}],"user":"U1QQJJK89","text":"yep great thanks"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629784081.277000","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"318caa10-c4ec-49b8-9de3-df8337ab1b99","blocks":[{"type":"rich_text","block_id":"OIyiu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but printing \u201cgoodbye\u201d means something have been gc\u2019d right when "},{"type":"text","text":"fut","style":{"code":true}},{"type":"text","text":" was live?\ni see an other \u201cgoodbye\u201d after\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(def fut nil)\n(System\/gc)"}]},{"type":"rich_text_section","elements":[]}]}],"user":"UGSM2S2CS","text":"but printing \u201cgoodbye\u201d means something have been gc\u2019d right when `fut` was live?\ni see an other \u201cgoodbye\u201d after\n```(def fut nil)\n(System\/gc)```\n"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629784141.277500","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"fe4f7190-a3c1-4b8b-b7d8-377eaa93e566","blocks":[{"type":"rich_text","block_id":"PDDIt","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(def fut\n  (future\n    (reify\n      Object\n      (finalize [this]\n        (println (.hashCode this))))))\n=> #'finaliz\/fut\n(System\/gc)\n1723828443\n=> nil\n(.hashCode @fut)\n=> 822250702\n(def fut nil)\n=> #'finaliz\/fut\n(System\/gc)\n822250702\n=> nil"}]}]}],"user":"UGSM2S2CS","text":"```(def fut\n  (future\n    (reify\n      Object\n      (finalize [this]\n        (println (.hashCode this))))))\n=&gt; #'finaliz\/fut\n(System\/gc)\n1723828443\n=&gt; nil\n(.hashCode @fut)\n=&gt; 822250702\n(def fut nil)\n=&gt; #'finaliz\/fut\n(System\/gc)\n822250702\n=&gt; nil```"}
{"type":"message","thread_ts":"1629780597.271800","ts":"1629785581.286900","parent_user_id":"U1QQJJK89","team":"T03RZGPFR","client_msg_id":"8b777b82-3fb1-43b7-9e24-49f75b6c1fbb","blocks":[{"type":"rich_text","block_id":"PLCx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting"}]}]}],"user":"U1QQJJK89","text":"interesting"}
{"subscribed":false,"reply_users":["U0K064KQV","U04V70XH6","U0P0TMEFJ","U062Z6YMT","U2C6SPLDS"],"attachments":[{"color":"24292f","fallback":"yogthos\/migratus","fields":[{"title":"Stars","value":"498","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"yogthos\/migratus","id":1,"app_unfurl_url":"https:\/\/github.com\/yogthos\/migratus","text":"MIGRATE ALL THE THINGS!","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629757500.268500","reply_users_count":5,"ts":"1629757500.268500","team":"T03RZGPFR","client_msg_id":"4da42e65-247a-477c-8c59-18664e83b0af","blocks":[{"type":"rich_text","block_id":"gn4lR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, "},{"type":"link","url":"https:\/\/github.com\/yogthos\/migratus"},{"type":"text","text":" is still the most common way to manage DB migrations ? (like Rails migrations or similar)? thanks"}]}]}],"is_locked":false,"user":"U062Z6YMT","reply_count":12,"latest_reply":"1629924275.377900","text":"Hi, <https:\/\/github.com\/yogthos\/migratus> is still the most common way to manage DB migrations ? (like Rails migrations or similar)? thanks"}
{"subscribed":false,"reply_users":["U0K064KQV","U04V70XH6","U0P0TMEFJ","U062Z6YMT","U2C6SPLDS"],"attachments":[{"color":"24292f","fallback":"yogthos\/migratus","fields":[{"title":"Stars","value":"498","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"yogthos\/migratus","id":1,"app_unfurl_url":"https:\/\/github.com\/yogthos\/migratus","text":"MIGRATE ALL THE THINGS!","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629757500.268500","reply_users_count":5,"ts":"1629757500.268500","team":"T03RZGPFR","client_msg_id":"4da42e65-247a-477c-8c59-18664e83b0af","blocks":[{"type":"rich_text","block_id":"gn4lR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, "},{"type":"link","url":"https:\/\/github.com\/yogthos\/migratus"},{"type":"text","text":" is still the most common way to manage DB migrations ? (like Rails migrations or similar)? thanks"}]}]}],"is_locked":false,"user":"U062Z6YMT","reply_count":12,"latest_reply":"1629924275.377900","text":"Hi, <https:\/\/github.com\/yogthos\/migratus> is still the most common way to manage DB migrations ? (like Rails migrations or similar)? thanks"}
{"type":"message","thread_ts":"1629757500.268500","edited":{"user":"U0K064KQV","ts":"1629758507.000000"},"ts":"1629758490.268800","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"ea331739-ccad-494d-ba59-2b6009fa91cf","blocks":[{"type":"rich_text","block_id":"d\/M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd say its definitely one of the most popular."}]}]}],"user":"U0K064KQV","text":"I'd say its definitely one of the most popular."}
{"attachments":[{"color":"24292f","fallback":"weavejester\/ragtime","fields":[{"title":"Stars","value":"531","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"weavejester\/ragtime","id":1,"app_unfurl_url":"https:\/\/github.com\/weavejester\/ragtime","text":"Database-independent migration library","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629757500.268500","ts":"1629758492.269000","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"812d266d-d5dc-4342-baec-cf88d120ab60","blocks":[{"type":"rich_text","block_id":"vdp","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/weavejester\/ragtime"},{"type":"text","text":" is the other common one. If I was starting over, I'd probably use Migratus instead of a custom in-house solution (ours dates back a decade and has slowly evolved)."}]}]}],"user":"U04V70XH6","text":"<https:\/\/github.com\/weavejester\/ragtime> is the other common one. If I was starting over, I'd probably use Migratus instead of a custom in-house solution (ours dates back a decade and has slowly evolved)."}
{"type":"message","thread_ts":"1629757500.268500","ts":"1629758899.269400","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"7e9471cf-089d-4305-9736-d94f12c55911","blocks":[{"type":"rich_text","block_id":"5cM2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We use semi-structured data-stores, and manage document versions in application code with Spec. So we write our code so it works will all prior versions of the document spec, and knows how to update it to the latest. Which may or may not be more complicated than a migration strategy "},{"type":"emoji","name":"man-shrugging"},{"type":"text","text":" , but at least it lets us have zero downtime, since we never need to do a big bang migration on the data-store"}]}]}],"user":"U0K064KQV","text":"We use semi-structured data-stores, and manage document versions in application code with Spec. So we write our code so it works will all prior versions of the document spec, and knows how to update it to the latest. Which may or may not be more complicated than a migration strategy :man-shrugging: , but at least it lets us have zero downtime, since we never need to do a big bang migration on the data-store"}
{"type":"message","thread_ts":"1629757500.268500","ts":"1629759103.269600","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"d7861a3e-964a-46c3-8494-9af267d27607","blocks":[{"type":"rich_text","block_id":"pLWQ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In our case it does mean that data is forever though, and so overtime, you continue to need to deal with the historical versions of the data you ever had."}]}]}],"user":"U0K064KQV","text":"In our case it does mean that data is forever though, and so overtime, you continue to need to deal with the historical versions of the data you ever had."}
{"type":"message","thread_ts":"1629757500.268500","ts":"1629759255.269800","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"4432acb0-7aa3-4b57-a555-4e45cc985cdb","blocks":[{"type":"rich_text","block_id":"KoowB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We generally try to make sure that DB migrations can always be applied while the system is live so when we are planning a DB change, we'll make sure the code will work with either today's DB or tomorrow's DB -- which means we might need to roll out some changes to code first -- then roll out the DB migration then maybe roll out code changes to remove the multi-version handling. But, like "},{"type":"user","user_id":"U0K064KQV"},{"type":"text","text":"\u2019s scenario, that's all somewhat meta and tangential to the actual DB migration machinery itself."}]}]}],"user":"U04V70XH6","text":"We generally try to make sure that DB migrations can always be applied while the system is live so when we are planning a DB change, we'll make sure the code will work with either today's DB or tomorrow's DB -- which means we might need to roll out some changes to code first -- then roll out the DB migration then maybe roll out code changes to remove the multi-version handling. But, like <@U0K064KQV>\u2019s scenario, that's all somewhat meta and tangential to the actual DB migration machinery itself."}
{"type":"message","thread_ts":"1629757500.268500","ts":"1629796702.301000","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"876e6d88-5c52-402b-8840-ea5967a70c66","blocks":[{"type":"rich_text","block_id":"gkjm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've had a fair amount of success with "},{"type":"link","url":"https:\/\/flywaydb.org\/"},{"type":"text","text":" in the past."}]}]}],"user":"U0P0TMEFJ","text":"I've had a fair amount of success with <https:\/\/flywaydb.org\/> in the past."}
{"type":"message","thread_ts":"1629757500.268500","ts":"1629798381.301600","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"6033c371-3ab9-43b9-aaac-736c4d4cf441","blocks":[{"type":"rich_text","block_id":"se\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"great, thx guys, I will take a look in these libraries as well.,"}]}]}],"user":"U062Z6YMT","text":"great, thx guys, I will take a look in these libraries as well.,"}
{"type":"message","thread_ts":"1629757500.268500","ts":"1629810422.302200","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"f6555aee-8e95-4808-b43a-9001c84ac5c3","blocks":[{"type":"rich_text","block_id":"nvc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In my previous job (non-Clojure) we used Flyway to migrate our AWS Redshift database. I made a CI\/CD pipeline based on Flyway, so we could validate schema changes on our 'test' scratch DB instance (schema only) and 'staging' DB instance (schema + test data) before rolling out to the 'production' instance. Flyway was pretty solid and straightforward with all this chicanery going on."}]}]}],"user":"U2C6SPLDS","text":"In my previous job (non-Clojure) we used Flyway to migrate our AWS Redshift database. I made a CI\/CD pipeline based on Flyway, so we could validate schema changes on our 'test' scratch DB instance (schema only) and 'staging' DB instance (schema + test data) before rolling out to the 'production' instance. Flyway was pretty solid and straightforward with all this chicanery going on."}
{"type":"message","thread_ts":"1629757500.268500","edited":{"user":"U0K064KQV","ts":"1629829832.000000"},"ts":"1629829744.303800","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"bca7398b-ee5f-4f05-971d-69dcb3ef6e2a","blocks":[{"type":"rich_text","block_id":"9=X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm curious, what does it do exactly that's not just running a SQL script? A quick glance and it seems to offer very little over migratus or ragtime but appears to have some commercial aspects to it?"}]}]}],"user":"U0K064KQV","text":"I'm curious, what does it do exactly that's not just running a SQL script? A quick glance and it seems to offer very little over migratus or ragtime but appears to have some commercial aspects to it?"}
{"attachments":[{"service_name":"Flyway","title_link":"https:\/\/flywaydb.org\/download","fallback":"Flyway: Download + pricing - Flyway","from_url":"https:\/\/flywaydb.org\/download","title":"Download + pricing - Flyway","id":1,"service_icon":"https:\/\/flywaydb.org\/wp-content\/uploads\/2020\/12\/cropped-favicon-180x180.png","original_url":"https:\/\/flywaydb.org\/download","text":"Download the free Flyway Community Edition, or try Flyway Teams Edition with extra features and support options."}],"type":"message","thread_ts":"1629757500.268500","ts":"1629848341.307400","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"0d9fd00a-d0e5-49b7-b615-d3a204c018b7","blocks":[{"type":"rich_text","block_id":"bNJCQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There's a chart comparing free and commercial versions of Flyway on the download page : "},{"type":"link","url":"https:\/\/flywaydb.org\/download"},{"type":"text","text":"\nThe free version was sufficient for our needs at my old job."}]}]}],"user":"U2C6SPLDS","text":"There's a chart comparing free and commercial versions of Flyway on the download page : <https:\/\/flywaydb.org\/download>\nThe free version was sufficient for our needs at my old job."}
{"type":"message","thread_ts":"1629757500.268500","ts":"1629890272.329000","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"13d5115e-5837-46f9-94cb-a129aa10841c","blocks":[{"type":"rich_text","block_id":"vZ3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One of the advantages it has over, say ragtime, is that it will lock to ensure that the migrations are only being run by one process at a time. So if you, for example, ran the migrations in a k8s pod at application startup and you ran many replicas, only one of those processes would actually run the migrations. With ragtime that's your problem. I've never used migratus, so I can't comment on that."}]}]}],"user":"U0P0TMEFJ","text":"One of the advantages it has over, say ragtime, is that it will lock to ensure that the migrations are only being run by one process at a time. So if you, for example, ran the migrations in a k8s pod at application startup and you ran many replicas, only one of those processes would actually run the migrations. With ragtime that's your problem. I've never used migratus, so I can't comment on that."}
{"type":"message","thread_ts":"1629757500.268500","edited":{"user":"U0K064KQV","ts":"1629924284.000000"},"ts":"1629924275.377900","parent_user_id":"U062Z6YMT","team":"T03RZGPFR","client_msg_id":"a588a4eb-7227-47b5-ab30-1025644cb1f8","blocks":[{"type":"rich_text","block_id":"uKt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum... ya okay, I'm probably a Clojurist at heart "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":" so I feel like I'd rather have the choice of locking mechanism if I need one by combining it with another lib, but I can see the appeal of having something that guides you into it"}]}]}],"user":"U0K064KQV","text":"Hum... ya okay, I'm probably a Clojurist at heart :stuck_out_tongue: so I feel like I'd rather have the choice of locking mechanism if I need one by combining it with another lib, but I can see the appeal of having something that guides you into it"}
{"subscribed":false,"reply_users":["U050ECB92","U2FRKM4TW","UPT2EHH9D","UEQPKG7HQ","U051SS2EU","U051MHSEK"],"type":"message","thread_ts":"1629731602.262700","reply_users_count":6,"ts":"1629731602.262700","team":"T03RZGPFR","client_msg_id":"2db9214d-6508-4c61-b6f8-db6ef6d3be7c","blocks":[{"type":"rich_text","block_id":"7bSy\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's a good way to make the following refactoring? :\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"|-maindir\n|-|-subdir\n|-|-|-lib.cljs (ns maindir.subdir.lib)\n|-|-|-anotherlib.cljs\n|-|-|-yetanother.cljs\n|-|-|-alsothis.cljs\n*abra kadabra*\n      \\  \/\n       \\\/\n|-maindir\n|-|-lib.cljs (ns maindir.lib)\n|-|-anotherlib.cljs\n|-|-yetanother.cljs\n|-|-alsothis.cljs"}]},{"type":"rich_text_section","elements":[]}]}],"is_locked":false,"user":"UPT2EHH9D","reply_count":10,"latest_reply":"1629794849.299100","text":"What's a good way to make the following refactoring? :\n```|-maindir\n|-|-subdir\n|-|-|-lib.cljs (ns maindir.subdir.lib)\n|-|-|-anotherlib.cljs\n|-|-|-yetanother.cljs\n|-|-|-alsothis.cljs\n*abra kadabra*\n      \\  \/\n       \\\/\n|-maindir\n|-|-lib.cljs (ns maindir.lib)\n|-|-anotherlib.cljs\n|-|-yetanother.cljs\n|-|-alsothis.cljs```\n"}
{"subscribed":false,"reply_users":["U050ECB92","U2FRKM4TW","UPT2EHH9D","UEQPKG7HQ","U051SS2EU","U051MHSEK"],"type":"message","thread_ts":"1629731602.262700","reply_users_count":6,"ts":"1629731602.262700","team":"T03RZGPFR","client_msg_id":"2db9214d-6508-4c61-b6f8-db6ef6d3be7c","blocks":[{"type":"rich_text","block_id":"7bSy\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's a good way to make the following refactoring? :\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"|-maindir\n|-|-subdir\n|-|-|-lib.cljs (ns maindir.subdir.lib)\n|-|-|-anotherlib.cljs\n|-|-|-yetanother.cljs\n|-|-|-alsothis.cljs\n*abra kadabra*\n      \\  \/\n       \\\/\n|-maindir\n|-|-lib.cljs (ns maindir.lib)\n|-|-anotherlib.cljs\n|-|-yetanother.cljs\n|-|-alsothis.cljs"}]},{"type":"rich_text_section","elements":[]}]}],"is_locked":false,"user":"UPT2EHH9D","reply_count":10,"latest_reply":"1629794849.299100","text":"What's a good way to make the following refactoring? :\n```|-maindir\n|-|-subdir\n|-|-|-lib.cljs (ns maindir.subdir.lib)\n|-|-|-anotherlib.cljs\n|-|-|-yetanother.cljs\n|-|-|-alsothis.cljs\n*abra kadabra*\n      \\  \/\n       \\\/\n|-maindir\n|-|-lib.cljs (ns maindir.lib)\n|-|-anotherlib.cljs\n|-|-yetanother.cljs\n|-|-alsothis.cljs```\n"}
{"type":"message","thread_ts":"1629731602.262700","ts":"1629731948.264600","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"e98c17fa-19f0-4022-8b94-27ebba923459","blocks":[{"type":"rich_text","block_id":"=WK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"mv","style":{"code":true}},{"type":"text","text":"\nI'm old fashioned about this kind of stuff"}]}]}],"user":"U050ECB92","text":"`mv`\nI'm old fashioned about this kind of stuff"}
{"type":"message","thread_ts":"1629731602.262700","ts":"1629732138.264900","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"6461066c-76bf-4479-a56e-59366fa56ce8","blocks":[{"type":"rich_text","block_id":"ZjAaZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And then "},{"type":"text","text":"sed","style":{"code":true}},{"type":"text","text":" followed by careful perusing of "},{"type":"text","text":"git diff","style":{"code":true}},{"type":"text","text":"?"}]}]}],"user":"U2FRKM4TW","text":"And then `sed` followed by careful perusing of `git diff`?"}
{"type":"message","thread_ts":"1629731602.262700","ts":"1629732265.265100","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"def97212-0a14-4ed8-80a0-85036614dd64","blocks":[{"type":"rich_text","block_id":"fbhQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For the sedding and diffing I will use emacs.\nBut yeah, "},{"type":"text","text":"mv","style":{"code":true}},{"type":"text","text":" is reliable, \"one by one\" is an acceptable answer "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"UPT2EHH9D","text":"For the sedding and diffing I will use emacs.\nBut yeah, `mv` is reliable, \"one by one\" is an acceptable answer :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629731602.262700","ts":"1629732755.265300","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"ae8a7b79-2af1-45aa-9722-1b7854a75ac0","blocks":[{"type":"rich_text","block_id":"NFyn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually the only replacement needed is removing \".subdir.\" from everywhere, not that bad."}]}]}],"user":"UPT2EHH9D","text":"Actually the only replacement needed is removing \".subdir.\" from everywhere, not that bad."}
{"type":"message","thread_ts":"1629731602.262700","ts":"1629734108.265500","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"9a635e5c-692b-45b7-896f-5c6c8c1c5c4c","blocks":[{"type":"rich_text","block_id":"oE6qK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Obviously not the only one"}]}]}],"user":"UPT2EHH9D","text":"Obviously not the only one"}
{"type":"message","thread_ts":"1629731602.262700","ts":"1629737713.265900","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"a5ff6b03-1782-4dff-beb0-072ea0ad3aef","blocks":[{"type":"rich_text","block_id":"j2Wb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm probably too late but since you're using emacs, dired should be a better choice than vanilla mv"}]}]}],"user":"UEQPKG7HQ","reactions":[{"name":"+1","users":["UPT2EHH9D"],"count":1}],"text":"I'm probably too late but since you're using emacs, dired should be a better choice than vanilla mv"}
{"type":"message","thread_ts":"1629731602.262700","edited":{"user":"U051SS2EU","ts":"1629739657.000000"},"ts":"1629739616.266500","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"c387db3d-a08d-44b4-ba95-d425c93fddc0","blocks":[{"type":"rich_text","block_id":"Y1N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is one of the few cases in clojure where you can do a compiler guided refactor - for every ns form that does not match the path to the file, the compiler will complain, you can repeatedly fix the declarations and reload your namespaces until you get no such complaints"}]}]}],"user":"U051SS2EU","reactions":[{"name":"+1","users":["UEQPKG7HQ","UPT2EHH9D"],"count":2}],"text":"this is one of the few cases in clojure where you can do a compiler guided refactor - for every ns form that does not match the path to the file, the compiler will complain, you can repeatedly fix the declarations and reload your namespaces until you get no such complaints"}
{"type":"message","thread_ts":"1629731602.262700","ts":"1629743544.267200","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"503d6a81-a876-4931-a857-c030b6e6598f","blocks":[{"type":"rich_text","block_id":"zC9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thats what I eneded up doing, \nI don't know how to use dired yet beyond the most basic survival, but ivy occur edit mode was amazing help in locating and editing names across multiple files at once"}]}]}],"user":"UPT2EHH9D","text":"Thats what I eneded up doing, \nI don't know how to use dired yet beyond the most basic survival, but ivy occur edit mode was amazing help in locating and editing names across multiple files at once"}
{"type":"message","thread_ts":"1629731602.262700","ts":"1629743993.267400","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"635a846d-fcc3-4dbb-961a-d3c47365f673","blocks":[{"type":"rich_text","block_id":"Lz2h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what I said above was incomplete, of course. you get two compiler errors, one when the ns decl doesn't match the path to the file, the other when the required ns no longer exists due to the refactor"}]}]}],"user":"U051SS2EU","text":"what I said above was incomplete, of course. you get two compiler errors, one when the ns decl doesn't match the path to the file, the other when the required ns no longer exists due to the refactor"}
{"type":"message","thread_ts":"1629731602.262700","edited":{"user":"U051MHSEK","ts":"1629801814.000000"},"ts":"1629794849.299100","parent_user_id":"UPT2EHH9D","team":"T03RZGPFR","client_msg_id":"979e881a-c8d6-4767-b597-79176526609b","blocks":[{"type":"rich_text","block_id":"ykUw5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Late to the party, but I've previously done this in stages.\n\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"git mv","style":{"code":true}},{"type":"text","text":" (not just mv), and commit to do the most disruptive part of the refactor (file renaming) "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"global sed-replace to fix ns declarations and references everywhere (src, test, comments, docs, scripts etc.) "},{"type":"text","text":"sed -i -e <pattern1> -e <pattern2> ...","style":{"code":true}},{"type":"text","text":" "}]}],"style":"ordered","indent":0,"border":0},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"After that, it helps to grep -R <token> to identify various unexpected patterns I might have to further sed\/replace"}]}],"style":"ordered","indent":1,"border":0},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"git add -p","style":{"code":true}},{"type":"text","text":"  to review+stage each rename piece by piece, and of course git commit"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"run tests as well as build jar and run app and exercise it to see if it all appears to work"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"git squash","style":{"code":true}},{"type":"text","text":" to make the whole refactor a single atomic commit"}]}],"style":"ordered","indent":0,"offset":2,"border":0}]}],"user":"U051MHSEK","text":"Late to the party, but I've previously done this in stages.\n\n1. `git mv` (not just mv), and commit to do the most disruptive part of the refactor (file renaming) \n2. global sed-replace to fix ns declarations and references everywhere (src, test, comments, docs, scripts etc.) `sed -i -e &lt;pattern1&gt; -e &lt;pattern2&gt; ...` \n    a. After that, it helps to grep -R &lt;token&gt; to identify various unexpected patterns I might have to further sed\/replace\n3. `git add -p`  to review+stage each rename piece by piece, and of course git commit\n4. run tests as well as build jar and run app and exercise it to see if it all appears to work\n5. `git squash` to make the whole refactor a single atomic commit"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U02CP7RHGMN","U45T93RA6","U04V5VAUN","U5RCSJ6BB"],"type":"message","thread_ts":"1629707028.251300","reply_users_count":5,"ts":"1629707028.251300","team":"T03RZGPFR","client_msg_id":"8272edbe-4f00-4e74-b71d-45b538338856","blocks":[{"type":"rich_text","block_id":"1Ub","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all, I\u2019m working out the various components to use in a backend web stack today and was wondering what the idiomatic database libraries are right now (excluding Datomic - considering it but would like to see the other options). I\u2019m planning to use Pedestal at this stage but can\u2019t seem to find a database library that works asynchronously. I\u2019m coming from a mostly Rust and Python background the last few years so maybe I\u2019m missing something."}]}]}],"is_locked":false,"user":"U02CP7RHGMN","reply_count":14,"latest_reply":"1629720431.257700","text":"Hi all, I\u2019m working out the various components to use in a backend web stack today and was wondering what the idiomatic database libraries are right now (excluding Datomic - considering it but would like to see the other options). I\u2019m planning to use Pedestal at this stage but can\u2019t seem to find a database library that works asynchronously. I\u2019m coming from a mostly Rust and Python background the last few years so maybe I\u2019m missing something."}
{"subscribed":false,"reply_users":["U2FRKM4TW","U02CP7RHGMN","U45T93RA6","U04V5VAUN","U5RCSJ6BB"],"type":"message","thread_ts":"1629707028.251300","reply_users_count":5,"ts":"1629707028.251300","team":"T03RZGPFR","client_msg_id":"8272edbe-4f00-4e74-b71d-45b538338856","blocks":[{"type":"rich_text","block_id":"1Ub","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all, I\u2019m working out the various components to use in a backend web stack today and was wondering what the idiomatic database libraries are right now (excluding Datomic - considering it but would like to see the other options). I\u2019m planning to use Pedestal at this stage but can\u2019t seem to find a database library that works asynchronously. I\u2019m coming from a mostly Rust and Python background the last few years so maybe I\u2019m missing something."}]}]}],"is_locked":false,"user":"U02CP7RHGMN","reply_count":14,"latest_reply":"1629720431.257700","text":"Hi all, I\u2019m working out the various components to use in a backend web stack today and was wondering what the idiomatic database libraries are right now (excluding Datomic - considering it but would like to see the other options). I\u2019m planning to use Pedestal at this stage but can\u2019t seem to find a database library that works asynchronously. I\u2019m coming from a mostly Rust and Python background the last few years so maybe I\u2019m missing something."}
{"attachments":[{"color":"24292f","fallback":"seancorfield\/next-jdbc","fields":[{"title":"Website","value":"<https:\/\/cljdoc.org\/d\/com.github.seancorfield\/next.jdbc\/>","short":true},{"title":"Stars","value":"490","short":true}],"is_app_unfurl":true,"title":"seancorfield\/next-jdbc","id":1,"app_unfurl_url":"https:\/\/github.com\/seancorfield\/next-jdbc","text":"A modern low-level Clojure wrapper for JDBC-based access to databases.","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629707028.251300","ts":"1629707198.251400","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"6254345a-cb84-4b23-b4fb-4155cde57de4","blocks":[{"type":"rich_text","block_id":"Fnh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would start with selecting a DB itself first, and only then a library.\nIf you're fine with PostgreSQL or any other JDBC-compatible DB, take a look at "},{"type":"link","url":"https:\/\/github.com\/seancorfield\/next-jdbc"},{"type":"text","text":"\nThere's no async support out of the box, as far as I can tell, but you can easily wrap what you need in threads. If you use "},{"type":"text","text":"core.async","style":{"code":true}},{"type":"text","text":", there's a handy "},{"type":"text","text":"thread","style":{"code":true}},{"type":"text","text":" macro."}]}]}],"user":"U2FRKM4TW","text":"I would start with selecting a DB itself first, and only then a library.\nIf you're fine with PostgreSQL or any other JDBC-compatible DB, take a look at <https:\/\/github.com\/seancorfield\/next-jdbc>\nThere's no async support out of the box, as far as I can tell, but you can easily wrap what you need in threads. If you use `core.async`, there's a handy `thread` macro."}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629708499.252300","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"f1e0e93a-dd7a-41bb-94e0-dcecd3dfafb1","blocks":[{"type":"rich_text","block_id":"5vTyS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for the reply!\nPostgres is indeed what I\u2019m leaning towards as I have experience with it already. Will using "},{"type":"text","text":"core.async\/thread","style":{"code":true}},{"type":"text","text":" spin up a new thread with all the overhead that entails or will it utilise its own thread pool? I\u2019ve had a quick glance at the source and can see it uses "},{"type":"text","text":"Executor\/newCachedThreadPool","style":{"code":true}},{"type":"text","text":" but I\u2019m not experienced enough with core.async to follow whether that starts one or re-uses one."}]}]}],"user":"U02CP7RHGMN","text":"Thanks for the reply!\nPostgres is indeed what I\u2019m leaning towards as I have experience with it already. Will using `core.async\/thread` spin up a new thread with all the overhead that entails or will it utilise its own thread pool? I\u2019ve had a quick glance at the source and can see it uses `Executor\/newCachedThreadPool` but I\u2019m not experienced enough with core.async to follow whether that starts one or re-uses one."}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629708624.252500","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"1554a6f1-f7b3-42e2-bcf5-130497610701","blocks":[{"type":"rich_text","block_id":"hVSg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It will use that thread pool, yes."}]}]}],"user":"U2FRKM4TW","text":"It will use that thread pool, yes."}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629708784.252700","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"3949bd16-c43a-47eb-afcf-cee5cf1954e7","blocks":[{"type":"rich_text","block_id":"fVx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It\u2019s own, already-running one?"}]}]}],"user":"U02CP7RHGMN","text":"It\u2019s own, already-running one?"}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629708984.253300","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"c0ab3f7c-9370-46b7-8744-2ec7c21172a1","blocks":[{"type":"rich_text","block_id":"HouOM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thread pools don't run, they manage threads.\nIt already exists. It will launch new threads as needed, and it will cache them. Threads that haven't been reused for long will be pruned from the cache to free resources."}]}]}],"user":"U2FRKM4TW","text":"Thread pools don't run, they manage threads.\nIt already exists. It will launch new threads as needed, and it will cache them. Threads that haven't been reused for long will be pruned from the cache to free resources."}
{"attachments":[{"color":"24292f","fallback":"tomekw\/hikari-cp","fields":[{"title":"Stars","value":"343","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"tomekw\/hikari-cp","id":1,"app_unfurl_url":"https:\/\/github.com\/tomekw\/hikari-cp","text":"A Clojure wrapper to HikariCP JDBC connection pool","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629707028.251300","ts":"1629709071.253600","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"61195bbb-e9c4-4b5f-b4cc-f497558e0fc5","blocks":[{"type":"rich_text","block_id":"lVzK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You also want to use this to avoid opening new connections every time: "},{"type":"link","url":"https:\/\/github.com\/tomekw\/hikari-cp"}]}]}],"user":"U2FRKM4TW","text":"You also want to use this to avoid opening new connections every time: <https:\/\/github.com\/tomekw\/hikari-cp>"}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629709170.253900","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"7712ef0f-c4e5-47a8-b5cc-35a924b6c0e8","blocks":[{"type":"rich_text","block_id":"68a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, got it. Thanks for the help!"}]}]}],"user":"U02CP7RHGMN","reactions":[{"name":"+1","users":["U2FRKM4TW"],"count":1}],"text":"Ok, got it. Thanks for the help!"}
{"attachments":[{"author_link":"https:\/\/clojurians.slack.com\/team\/U899JBRPF","author_id":"U899JBRPF","author_icon":"https:\/\/avatars.slack-edge.com\/2019-02-21\/557893052357_2ef04236fc7614712d5e_48.jpg","is_thread_root_unfurl":true,"fallback":"[August 20th, 2021 7:36 AM] taylor.jeremydavid: 5 years since our last review, <@U06P1CPLJ> has led a new iteration of JUXT's Clojure Radar <https:\/\/www.juxt.pro\/blog\/radar-2021>","mrkdwn_in":["text"],"from_url":"https:\/\/clojurians.slack.com\/archives\/C8NUSGWG6\/p1629470210186200","footer":"Thread in #news-and-articles","channel_id":"C8NUSGWG6","ts":"1629470210.186200","id":1,"channel_name":"news-and-articles","is_msg_unfurl":true,"author_name":"Jeremy Taylor","author_subname":"Jeremy Taylor","original_url":"https:\/\/clojurians.slack.com\/archives\/C8NUSGWG6\/p1629470210186200","text":"5 years since our last review, <@U06P1CPLJ> has led a new iteration of JUXT's Clojure Radar <https:\/\/www.juxt.pro\/blog\/radar-2021>"}],"type":"message","thread_ts":"1629707028.251300","ts":"1629715071.255200","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"44b02be7-fae2-4666-8f02-7e7ce192b434","blocks":[{"type":"rich_text","block_id":"072+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"re: async "},{"type":"link","url":"https:\/\/clojurians.slack.com\/archives\/C8NUSGWG6\/p1629470210186200"}]}]}],"user":"U45T93RA6","text":"re: async <https:\/\/clojurians.slack.com\/archives\/C8NUSGWG6\/p1629470210186200>"}
{"type":"message","thread_ts":"1629707028.251300","edited":{"user":"U04V5VAUN","ts":"1629716270.000000"},"ts":"1629716127.256200","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"4131b56a-69d6-4ef9-ac83-e1d344c3cfd1","blocks":[{"type":"rich_text","block_id":"UoUoC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You seem like you\u2019ve already settled on going async. Why would that be? IMO (not having programmed much async) the sync model is much easier on the brain and the JVM works rather nicely with threads. Put in another way. Unless you know that your app will have a lot of traffic with potentially long running requests, I\u2019d go with a synchronous approach."}]}]}],"user":"U04V5VAUN","reactions":[{"name":"heavy_plus_sign","users":["U45T93RA6"],"count":1}],"text":"You seem like you\u2019ve already settled on going async. Why would that be? IMO (not having programmed much async) the sync model is much easier on the brain and the JVM works rather nicely with threads. Put in another way. Unless you know that your app will have a lot of traffic with potentially long running requests, I\u2019d go with a synchronous approach."}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629716621.256600","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"463263e0-351e-4796-9d3e-2fe535517cc2","blocks":[{"type":"rich_text","block_id":"fGAaV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Async != "},{"type":"text","text":"core.async","style":{"code":true}},{"type":"text","text":". You can have the first without the second. Using threads could also be considered async programming. But up to OP to decide what it means in their context."}]}]}],"user":"U2FRKM4TW","text":"Async != `core.async`. You can have the first without the second. Using threads could also be considered async programming. But up to OP to decide what it means in their context."}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629718309.257000","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"1e6554ed-1dd5-40a8-b168-ada076e4dc83","blocks":[{"type":"rich_text","block_id":"d6xW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean async in the sense of non-blocking io with work distributed among threads (reactor). I also prefer threads for almost every task but this is one case where the memory saving from going async is worth the burden. Requests will all have several operations that need to be performed before responding, this affects latency of course but for the application it\u2019s fine."}]}]}],"user":"U02CP7RHGMN","text":"I mean async in the sense of non-blocking io with work distributed among threads (reactor). I also prefer threads for almost every task but this is one case where the memory saving from going async is worth the burden. Requests will all have several operations that need to be performed before responding, this affects latency of course but for the application it\u2019s fine."}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629718400.257200","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"5fc97ab4-ac12-4c34-a6da-233db61c2702","blocks":[{"type":"rich_text","block_id":"\/FyC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For context I\u2019m coming at this from a Rust and Python background mostly. I have also done epoll work in C many years ago."}]}]}],"user":"U02CP7RHGMN","text":"For context I\u2019m coming at this from a Rust and Python background mostly. I have also done epoll work in C many years ago."}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629720320.257500","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"1f495289-2ec2-4ebc-aa90-99aed7a5d8e5","blocks":[{"type":"rich_text","block_id":"6KP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Non-blocking database drivers on the jvm have not achieved wide popularity in the clojure ecosystem. If that's something you believe you need I'd probably look at r2dbc or vert.x. \n\nFor your awareness there is also a jdk project that has been underway for a while that seeks to virtualize threads largely as-is rather than requiring you to use a different api when you want the benefits of non-blocking code. You can read more about it here: "},{"type":"link","url":"http:\/\/cr.openjdk.java.net\/~rpressler\/loom\/loom\/sol1_part1.html","text":"http:\/\/cr.openjdk.java.net\/~rpressler\/loom\/loom\/sol1_part1.html"}]}]}],"user":"U5RCSJ6BB","text":"Non-blocking database drivers on the jvm have not achieved wide popularity in the clojure ecosystem. If that's something you believe you need I'd probably look at r2dbc or vert.x. \n\nFor your awareness there is also a jdk project that has been underway for a while that seeks to virtualize threads largely as-is rather than requiring you to use a different api when you want the benefits of non-blocking code. You can read more about it here: <http:\/\/cr.openjdk.java.net\/~rpressler\/loom\/loom\/sol1_part1.html|http:\/\/cr.openjdk.java.net\/~rpressler\/loom\/loom\/sol1_part1.html>"}
{"type":"message","thread_ts":"1629707028.251300","ts":"1629720431.257700","parent_user_id":"U02CP7RHGMN","team":"T03RZGPFR","client_msg_id":"e358f48e-492f-4991-867e-1458cbc060f0","blocks":[{"type":"rich_text","block_id":"pVT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I\u2019m eagerly awaiting the landing of Project Loom!"}]}]}],"user":"U02CP7RHGMN","reactions":[{"name":"slightly_smiling_face","users":["U5RCSJ6BB"],"count":1}],"text":"I\u2019m eagerly awaiting the landing of Project Loom!"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U4P4NREBY","U3L6TFEJF"],"type":"message","thread_ts":"1629704792.249100","reply_users_count":3,"ts":"1629704792.249100","team":"T03RZGPFR","client_msg_id":"eee090b6-a30c-4395-b505-135a3535934f","blocks":[{"type":"rich_text","block_id":"fam","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I need to extend some Java classes. I\u2019ve been pretty happy with Clojure\u2019s interop so far, but this seems to be an area where interop is a lot more complicated, e.g. a sudden proliferation of namespaces with "},{"type":"text","text":"(:gen-class ...)","style":{"code":true}},{"type":"text","text":"  containing lots of interop-specific key-value pairs. Does it even make sense to attempt interop in this case, or am I better off  just writing Java code and importing that into Clojure somehow? What are your experiences?"}]}]}],"is_locked":false,"user":"U4P4NREBY","reply_count":13,"latest_reply":"1629792197.290600","text":"I need to extend some Java classes. I\u2019ve been pretty happy with Clojure\u2019s interop so far, but this seems to be an area where interop is a lot more complicated, e.g. a sudden proliferation of namespaces with `(:gen-class ...)`  containing lots of interop-specific key-value pairs. Does it even make sense to attempt interop in this case, or am I better off  just writing Java code and importing that into Clojure somehow? What are your experiences?"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U4P4NREBY","U3L6TFEJF"],"type":"message","thread_ts":"1629704792.249100","reply_users_count":3,"ts":"1629704792.249100","team":"T03RZGPFR","client_msg_id":"eee090b6-a30c-4395-b505-135a3535934f","blocks":[{"type":"rich_text","block_id":"fam","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I need to extend some Java classes. I\u2019ve been pretty happy with Clojure\u2019s interop so far, but this seems to be an area where interop is a lot more complicated, e.g. a sudden proliferation of namespaces with "},{"type":"text","text":"(:gen-class ...)","style":{"code":true}},{"type":"text","text":"  containing lots of interop-specific key-value pairs. Does it even make sense to attempt interop in this case, or am I better off  just writing Java code and importing that into Clojure somehow? What are your experiences?"}]}]}],"is_locked":false,"user":"U4P4NREBY","reply_count":13,"latest_reply":"1629792197.290600","text":"I need to extend some Java classes. I\u2019ve been pretty happy with Clojure\u2019s interop so far, but this seems to be an area where interop is a lot more complicated, e.g. a sudden proliferation of namespaces with `(:gen-class ...)`  containing lots of interop-specific key-value pairs. Does it even make sense to attempt interop in this case, or am I better off  just writing Java code and importing that into Clojure somehow? What are your experiences?"}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629707660.251700","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"e6a45365-213a-4980-b8e4-95e55c266ed3","blocks":[{"type":"rich_text","block_id":"d9l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sometimes you can get rather far with just "},{"type":"text","text":"proxy","style":{"code":true}},{"type":"text","text":". But if that's not the case, you might want to take a look at these libraries that let you generate JVM bytecode using Clojure, seemingly with no hassle:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/athos\/JiSE"}]},{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/jgpc42\/insn"}]}],"style":"bullet","indent":0,"border":0},{"type":"rich_text_section","elements":[{"type":"text","text":"Clojure itself has something similar in the "},{"type":"text","text":"clojure.asm","style":{"code":true}},{"type":"text","text":" namespace, but it's more cumbersome to use:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"http:\/\/polekilroysoft.github.io\/ClojureJavadoc\/clojure1.0\/clojure\/asm\/package-summary.html"}]},{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/gist.github.com\/athos\/1033052\/b332f3786c40f1c5b85abf1ba56012024b977448"}]}],"style":"bullet","indent":0,"border":0},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAnd if you decide to go with writing plain Java and using it within a Clojure project, I can give you a few more links."}]}]}],"user":"U2FRKM4TW","text":"Sometimes you can get rather far with just `proxy`. But if that's not the case, you might want to take a look at these libraries that let you generate JVM bytecode using Clojure, seemingly with no hassle:\n\u2022 <https:\/\/github.com\/athos\/JiSE>\n\u2022 <https:\/\/github.com\/jgpc42\/insn>\nClojure itself has something similar in the `clojure.asm` namespace, but it's more cumbersome to use:\n\u2022 <http:\/\/polekilroysoft.github.io\/ClojureJavadoc\/clojure1.0\/clojure\/asm\/package-summary.html>\n\u2022 <https:\/\/gist.github.com\/athos\/1033052\/b332f3786c40f1c5b85abf1ba56012024b977448>\nAnd if you decide to go with writing plain Java and using it within a Clojure project, I can give you a few more links."}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629708074.251900","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"f97cac7e-d162-4007-a5bd-dd40eb167e69","blocks":[{"type":"rich_text","block_id":"II8i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. JiSE looks a lot more manageable, while insn reminds me of :gen-class. Do you have any experience using either?"}]}]}],"user":"U4P4NREBY","text":"Thanks. JiSE looks a lot more manageable, while insn reminds me of :gen-class. Do you have any experience using either?"}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629708195.252100","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"3c0c1df4-2425-46fe-b3b5-04e2e7ffe117","blocks":[{"type":"rich_text","block_id":"2w4mn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nope. :) I just hoard links. I used Virgil in a similar situation - but I didn't know about the above back then. Nowadays I wouldn't recommend it."}]}]}],"user":"U2FRKM4TW","text":"Nope. :) I just hoard links. I used Virgil in a similar situation - but I didn't know about the above back then. Nowadays I wouldn't recommend it."}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629708977.253100","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"eb453570-1f22-4d67-b666-7fc510f012d0","blocks":[{"type":"rich_text","block_id":"LUBH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok. Thanks anyway. Guess I\u2019ll try JiSE and see where that takes me!"}]}]}],"user":"U4P4NREBY","reactions":[{"name":"+1","users":["U2FRKM4TW"],"count":1}],"text":"Ok. Thanks anyway. Guess I\u2019ll try JiSE and see where that takes me!"}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629714056.254300","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"7d03e077-7c35-4666-83f9-441fc745ea31","blocks":[{"type":"rich_text","block_id":"9pVbG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I\u2019ve had success with writing Java and mixing it in with Virgil  in the past"}]}]}],"user":"U3L6TFEJF","text":"I\u2019ve had success with writing Java and mixing it in with Virgil  in the past"}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629714283.254500","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"d459f5fd-57a9-4624-b0e6-d31482be48df","blocks":[{"type":"rich_text","block_id":"C+hd","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U3L6TFEJF"},{"type":"text","text":" I\u2019m using tools deps, not Leiningen or Boot, so I guess Virgil isn\u2019t as plug and play."}]}]}],"user":"U4P4NREBY","text":"<@U3L6TFEJF> I\u2019m using tools deps, not Leiningen or Boot, so I guess Virgil isn\u2019t as plug and play."}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629714738.254700","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"1aebbb72-910b-4665-b746-b84897ad1ad0","blocks":[{"type":"rich_text","block_id":"lT1OR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmmm\u2026 JiSE says it "},{"type":"text","text":"does","style":{"italic":true}},{"type":"text","text":" support inheritance, but I can\u2019t figure out how to extend a class. None of the example or the tests seem to do that. I really wish there was a Java-in-deps.edn solution that was good to go."}]}]}],"user":"U4P4NREBY","text":"Hmmmm\u2026 JiSE says it _does_ support inheritance, but I can\u2019t figure out how to extend a class. None of the example or the tests seem to do that. I really wish there was a Java-in-deps.edn solution that was good to go."}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629714903.254900","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"e9355571-622f-4ead-a468-b8aa8b516ed3","blocks":[{"type":"rich_text","block_id":"lXAgF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are such solutions:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/IGJoshua\/americano"}]},{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/EwenG\/badigeon"}]},{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/just-sultanov\/ninja.platform\/blob\/master\/docs\/ninja.tools\/javac.adoc"}]}],"style":"bullet","indent":0,"border":0},{"type":"rich_text_section","elements":[]}]}],"user":"U2FRKM4TW","reactions":[{"name":"clap","users":["U4P4NREBY"],"count":1}],"text":"There are such solutions:\n\u2022 <https:\/\/github.com\/IGJoshua\/americano>\n\u2022 <https:\/\/github.com\/EwenG\/badigeon>\n\u2022 <https:\/\/github.com\/just-sultanov\/ninja.platform\/blob\/master\/docs\/ninja.tools\/javac.adoc>\n"}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629715110.255500","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"321dcc25-e7f1-4380-9daa-90e9c2612105","blocks":[{"type":"rich_text","block_id":"EQ0o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I also found this for the newly-released tools.build: "},{"type":"link","url":"https:\/\/www.clojure.org\/guides\/tools_build#_mixed_java_clojure_build"}]}]}],"user":"U4P4NREBY","text":"I also found this for the newly-released tools.build: <https:\/\/www.clojure.org\/guides\/tools_build#_mixed_java_clojure_build>"}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629715173.255700","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"858194ae-366f-4293-a4e8-5593a3ea6afb","blocks":[{"type":"rich_text","block_id":"X\/YL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Still not sure which one to pick. I guess americano seems to be the most friendly option."}]}]}],"user":"U4P4NREBY","text":"Still not sure which one to pick. I guess americano seems to be the most friendly option."}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629715269.255900","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"0ca8d35b-3547-4810-bc38-9ad7283a5b8d","blocks":[{"type":"rich_text","block_id":"mHZ3Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Huh, I didn't know about "},{"type":"text","text":"clojure.tools.build.api","style":{"code":true}},{"type":"text","text":" including "},{"type":"text","text":"javac","style":{"code":true}},{"type":"text","text":", thanks!"}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"+1","users":["U4P4NREBY"],"count":1}],"text":"Huh, I didn't know about `clojure.tools.build.api` including `javac`, thanks!"}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629791875.290400","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"c11ed01c-5169-42c2-a973-589d7d48dd22","blocks":[{"type":"rich_text","block_id":"=FhM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just wanted to report back that Americano is incredibly simple to set up. It does require running "},{"type":"text","text":"clj -X:compile-java","style":{"code":true}},{"type":"text","text":" to recompile (there is no automation of that step AFAIK). In the meantime, I\u2019ve discovered on the mailing list of the Java framework whose class I was extending that I didn\u2019t actually need to extend anything, I could simply mutate an instance of a generic class to get nearly the same result, so I reverted my Java code commit and went with that solution instead. Still, I\u2019m really happy that I tried out Americano and I will definitely use that next time I need to write some Java-in-Clojure."}]}]}],"user":"U4P4NREBY","text":"Just wanted to report back that Americano is incredibly simple to set up. It does require running `clj -X:compile-java` to recompile (there is no automation of that step AFAIK). In the meantime, I\u2019ve discovered on the mailing list of the Java framework whose class I was extending that I didn\u2019t actually need to extend anything, I could simply mutate an instance of a generic class to get nearly the same result, so I reverted my Java code commit and went with that solution instead. Still, I\u2019m really happy that I tried out Americano and I will definitely use that next time I need to write some Java-in-Clojure."}
{"type":"message","thread_ts":"1629704792.249100","ts":"1629792197.290600","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"fa1ddafd-be27-437e-a903-3bb19d79b9c0","blocks":[{"type":"rich_text","block_id":"71WJ","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" there is no automation of that step AFAIK"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"You should be able to do that by making Americano a part of your app and just calling the compilation code - that's exactly how I used to use Virgil. But not sure if it's a good thing to do."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"pray","users":["U4P4NREBY"],"count":1}],"text":"&gt;  there is no automation of that step AFAIK\nYou should be able to do that by making Americano a part of your app and just calling the compilation code - that's exactly how I used to use Virgil. But not sure if it's a good thing to do."}
{"subscribed":false,"reply_users":["UGC0NEP4Y","U0K064KQV","UTXR46DS6","U08BJGV6E"],"type":"message","display_as_bot":false,"thread_ts":"1629623979.243000","reply_users_count":4,"ts":"1629623979.243000","files":[{"thumb_1024_w":1024,"thumb_1024_h":331,"thumb_1024":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_1024.png","thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_80.png","thumb_360_h":116,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_160.png","thumb_960":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_960.png","thumb_960_w":960,"original_w":1592,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02C4MV6SUU\/download\/screenshot_2021-08-22_at_11.19.32.png","name":"Screenshot 2021-08-22 at 11.19.32.png","permalink":"https:\/\/clojurians.slack.com\/files\/U04V5VAUN\/F02C4MV6SUU\/screenshot_2021-08-22_at_11.19.32.png","username":"","mode":"hosted","thumb_480_h":155,"created":1629623975,"display_as_bot":false,"thumb_480":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_480.png","mimetype":"image\/png","size":102622,"title":"Screenshot 2021-08-22 at 11.19.32.png","media_display_type":"unknown","thumb_800":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_800.png","is_public":true,"id":"F02C4MV6SUU","original_h":514,"external_type":"","thumb_480_w":480,"thumb_360_w":360,"thumb_720_h":232,"thumb_720_w":720,"thumb_tiny":"AwAPADDS3Cmkj1IopCM0AO3D1oDD1ppAIwRmgAAYAxQA8OD0o3Co1UKMAY706gD\/2Q==","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02C4MV6SUU\/screenshot_2021-08-22_at_11.19.32.png","thumb_720":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_720.png","thumb_960_h":310,"pretty_type":"PNG","has_rich_preview":false,"timestamp":1629623975,"thumb_800_w":800,"user":"U04V5VAUN","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_64.png","thumb_800_h":258,"permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02C4MV6SUU-315b576ec0"}],"is_locked":false,"user":"U04V5VAUN","reply_count":4,"upload":false,"latest_reply":"1629708805.252900","text":""}
{"subscribed":false,"reply_users":["UGC0NEP4Y","U0K064KQV","UTXR46DS6","U08BJGV6E"],"type":"message","display_as_bot":false,"thread_ts":"1629623979.243000","reply_users_count":4,"ts":"1629623979.243000","files":[{"thumb_1024_w":1024,"thumb_1024_h":331,"thumb_1024":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_1024.png","thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_80.png","thumb_360_h":116,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_160.png","thumb_960":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_960.png","thumb_960_w":960,"original_w":1592,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02C4MV6SUU\/download\/screenshot_2021-08-22_at_11.19.32.png","name":"Screenshot 2021-08-22 at 11.19.32.png","permalink":"https:\/\/clojurians.slack.com\/files\/U04V5VAUN\/F02C4MV6SUU\/screenshot_2021-08-22_at_11.19.32.png","username":"","mode":"hosted","thumb_480_h":155,"created":1629623975,"display_as_bot":false,"thumb_480":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_480.png","mimetype":"image\/png","size":102622,"title":"Screenshot 2021-08-22 at 11.19.32.png","media_display_type":"unknown","thumb_800":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_800.png","is_public":true,"id":"F02C4MV6SUU","original_h":514,"external_type":"","thumb_480_w":480,"thumb_360_w":360,"thumb_720_h":232,"thumb_720_w":720,"thumb_tiny":"AwAPADDS3Cmkj1IopCM0AO3D1oDD1ppAIwRmgAAYAxQA8OD0o3Co1UKMAY706gD\/2Q==","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02C4MV6SUU\/screenshot_2021-08-22_at_11.19.32.png","thumb_720":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_720.png","thumb_960_h":310,"pretty_type":"PNG","has_rich_preview":false,"timestamp":1629623975,"thumb_800_w":800,"user":"U04V5VAUN","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02C4MV6SUU-9e39cf7c59\/screenshot_2021-08-22_at_11.19.32_64.png","thumb_800_h":258,"permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02C4MV6SUU-315b576ec0"}],"is_locked":false,"user":"U04V5VAUN","reply_count":4,"upload":false,"latest_reply":"1629708805.252900","text":""}
{"type":"message","thread_ts":"1629623979.243000","ts":"1629647312.243300","parent_user_id":"U04V5VAUN","team":"T03RZGPFR","client_msg_id":"74e57d90-1791-49ef-a430-b92066b65398","blocks":[{"type":"rich_text","block_id":"8K2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also down on my side."}]}]}],"user":"UGC0NEP4Y","text":"Also down on my side."}
{"type":"message","thread_ts":"1629623979.243000","ts":"1629658294.243500","parent_user_id":"U04V5VAUN","team":"T03RZGPFR","client_msg_id":"6c46bfa9-0b4b-4048-8832-fe1e92b05511","blocks":[{"type":"rich_text","block_id":"Jb9WX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"same"}]}]}],"user":"U0K064KQV","text":"same"}
{"type":"message","thread_ts":"1629623979.243000","ts":"1629699380.244200","parent_user_id":"U04V5VAUN","team":"T03RZGPFR","client_msg_id":"a2679e78-79a9-448f-a327-101376211d5a","blocks":[{"type":"rich_text","block_id":"1lKl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"same"}]}]}],"user":"UTXR46DS6","text":"same"}
{"type":"message","thread_ts":"1629623979.243000","ts":"1629708805.252900","parent_user_id":"U04V5VAUN","team":"T03RZGPFR","client_msg_id":"eef82c73-06c8-4dba-87be-1e9908cdf7f5","blocks":[{"type":"rich_text","block_id":"p4a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Same"}]}]}],"user":"U08BJGV6E","text":"Same"}
{"client_msg_id":"8a364245-8299-4caa-a044-12513cfe2222","type":"message","text":"<http:\/\/clojureverse.org|clojureverse.org> down?","user":"U04V5VAUN","ts":"1629623957.242900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Ohv","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"http:\/\/clojureverse.org","text":"clojureverse.org"},{"type":"text","text":" down?"}]}]}],"reactions":[{"name":"flushed","users":["U3TSNPRT9"],"count":1},{"name":"heavy_plus_sign","users":["U61R3V2P2","UFTRLDZEW"],"count":2}]}
{"subscribed":false,"reply_users":["U0WL6FA77","UHD67JRL4"],"type":"message","thread_ts":"1629521602.240800","reply_users_count":2,"ts":"1629521602.240800","team":"T03RZGPFR","client_msg_id":"d3dae486-cf84-4d5c-b597-efe18f801590","blocks":[{"type":"rich_text","block_id":"wPMHs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi, are there people around who are interested in clojure and blockchain? working on this"}]}]}],"is_locked":false,"user":"U02BJ5QDNP5","reply_count":2,"latest_reply":"1629620149.242100","text":"hi, are there people around who are interested in clojure and blockchain? working on this"}
{"subscribed":false,"reply_users":["U0WL6FA77","UHD67JRL4"],"type":"message","thread_ts":"1629521602.240800","reply_users_count":2,"ts":"1629521602.240800","team":"T03RZGPFR","client_msg_id":"d3dae486-cf84-4d5c-b597-efe18f801590","blocks":[{"type":"rich_text","block_id":"wPMHs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi, are there people around who are interested in clojure and blockchain? working on this"}]}]}],"is_locked":false,"user":"U02BJ5QDNP5","reply_count":2,"latest_reply":"1629620149.242100","text":"hi, are there people around who are interested in clojure and blockchain? working on this"}
{"type":"message","thread_ts":"1629521602.240800","ts":"1629563660.241700","parent_user_id":"U02BJ5QDNP5","team":"T03RZGPFR","client_msg_id":"CE818EF7-EAFA-4446-B645-5F7152C27988","blocks":[{"type":"rich_text","block_id":"7BN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was doing for ETH in ClojureScript"}]}]}],"user":"U0WL6FA77","text":"I was doing for ETH in ClojureScript"}
{"type":"message","thread_ts":"1629521602.240800","ts":"1629620149.242100","parent_user_id":"U02BJ5QDNP5","team":"T03RZGPFR","client_msg_id":"86a214fe-fed1-40bb-b71e-725274df3657","blocks":[{"type":"rich_text","block_id":"jHcI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hey "},{"type":"user","user_id":"U02BJ5QDNP5"},{"type":"text","text":" at "},{"type":"link","url":"https:\/\/multis.co"},{"type":"text","text":" we use ClojureScript to extend "},{"type":"link","url":"https:\/\/gnosis-safe.io"},{"type":"text","text":" business capabilities.\n\nThere's also "},{"type":"link","url":"https:\/\/github.com\/district0x"},{"type":"text","text":" doing lots of ClojureScript in a open-source fashion"}]}]}],"user":"UHD67JRL4","text":"hey <@U02BJ5QDNP5> at <https:\/\/multis.co> we use ClojureScript to extend <https:\/\/gnosis-safe.io> business capabilities.\n\nThere's also <https:\/\/github.com\/district0x> doing lots of ClojureScript in a open-source fashion"}
{"client_msg_id":"8e15ee5f-ccde-4646-86aa-72bc59433a79","type":"message","text":"(not the do-like macro, the metadata approach)","user":"U3JH98J4R","ts":"1629504113.240300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"VRav","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(not the do-like macro, the metadata approach)"}]}]}]}
{"client_msg_id":"8bfe85ce-3bdb-4c1e-bab0-8d5c25bf6a90","type":"message","text":"^we are doing the same thing with new todos, so we get discoverability and a place to document what work needs to be done and why","user":"U3JH98J4R","ts":"1629504057.239900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"P+j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"^we are doing the same thing with new todos, so we get discoverability and a place to document what work needs to be done and why"}]}]}]}
{"client_msg_id":"4d0821ac-42d6-404f-ad44-2f97a4ffaa8b","type":"message","text":"at one point on a project when converting TODO comments to jira issues, I would make custom macros like `do` to act as markers `(defmacro jira-issue-5 [&amp; args] `(do ~@args))`  sort of things, it was just a lot to keep up","user":"U0NCTKEV8","ts":"1629504007.239000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"rySAb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"at one point on a project when converting TODO comments to jira issues, I would make custom macros like "},{"type":"text","text":"do","style":{"code":true}},{"type":"text","text":" to act as markers "},{"type":"text","text":"(defmacro jira-issue-5 [& args] `(do ~@args))","style":{"code":true}},{"type":"text","text":"  sort of things, it was just a lot to keep up"}]}]}]}
{"client_msg_id":"78da7798-da9e-4e88-a739-e1e0120e181e","type":"message","text":"with the hypothetical benefit that when refactoring code later this will be easier to track down than a text comment","user":"U3JH98J4R","ts":"1629503786.236300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"LhFM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with the hypothetical benefit that when refactoring code later this will be easier to track down than a text comment"}]}]}]}
{"client_msg_id":"703deca0-9866-4e7f-8935-805146a47250","type":"message","text":"```(defn ^{:assumes #{assumptions\/one-cart-per-horse}}\n  function-that-we-would-have-to-search-for-otherwise\n  [cart-id]\n  (first (p-horses\/for-cart-id cart-id)))```","user":"U3JH98J4R","ts":"1629503751.235500","team":"T03RZGPFR","edited":{"user":"U3JH98J4R","ts":"1629503944.000000"},"blocks":[{"type":"rich_text","block_id":"duYx\/","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn ^{:assumes #{assumptions\/one-cart-per-horse}}\n  function-that-we-would-have-to-search-for-otherwise\n  [cart-id]\n  (first (p-horses\/for-cart-id cart-id)))"}]}]}]}
{"client_msg_id":"faaeb93b-6f8c-4810-b449-23b5d644add4","type":"message","text":"then attach assumptions to vars directly as metadata","user":"U3JH98J4R","ts":"1629503674.234100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"P\/bB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then attach assumptions to vars directly as metadata"}]}]}]}
{"client_msg_id":"dbe0fb1b-316e-42ba-9372-05ad956a1c85","type":"message","text":"```(ns your.company.domain.assumptions)\n\n(def one-cart-per-horse ::one-cart-per-horse)```\n","user":"U3JH98J4R","ts":"1629503656.233500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"o0\/p","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns your.company.domain.assumptions)\n\n(def one-cart-per-horse ::one-cart-per-horse)"}]},{"type":"rich_text_section","elements":[]}]}]}
{"client_msg_id":"ac99e7eb-4d38-4be7-89e2-c6afc8a85efb","type":"message","text":"like 1-1 relations assumed in a 1-many sql relation","user":"U3JH98J4R","ts":"1629503640.233100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"VaHSX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like 1-1 relations assumed in a 1-many sql relation"}]}]}]}
{"client_msg_id":"28a8c55e-4884-4261-96aa-7ac682c049f9","type":"message","text":"make a file for assumptions we make about our data model that aren't necessarily apparent in our data model","user":"U3JH98J4R","ts":"1629503596.232300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"9xB=5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"make a file for assumptions we make about our data model that aren't necessarily apparent in our data model"}]}]}]}
{"client_msg_id":"c953d8bc-3e30-4b8e-ab03-2e54a9a3413e","type":"message","text":"Pattern we just started adopting but we are pretty confident is going to start paying dividends","user":"U3JH98J4R","ts":"1629503513.231500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"zB3b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pattern we just started adopting but we are pretty confident is going to start paying dividends"}]}]}]}
{"subscribed":false,"reply_users":["U4YGF4NGM","U4P4NREBY"],"type":"message","thread_ts":"1629501948.231000","reply_users_count":2,"ts":"1629501948.231000","team":"T03RZGPFR","client_msg_id":"AB30FEA2-BBB5-49DA-B4D8-F8C8ED19AF8B","blocks":[{"type":"rich_text","block_id":"q+G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or is it about building the tree itself"}]}]}],"is_locked":false,"user":"U050ECB92","reply_count":4,"latest_reply":"1629703283.244700","text":"Or is it about building the tree itself"}
{"subscribed":false,"reply_users":["U4YGF4NGM","U4P4NREBY"],"type":"message","thread_ts":"1629501948.231000","reply_users_count":2,"ts":"1629501948.231000","team":"T03RZGPFR","client_msg_id":"AB30FEA2-BBB5-49DA-B4D8-F8C8ED19AF8B","blocks":[{"type":"rich_text","block_id":"q+G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or is it about building the tree itself"}]}]}],"is_locked":false,"user":"U050ECB92","reply_count":4,"latest_reply":"1629703283.244700","text":"Or is it about building the tree itself"}
{"type":"message","thread_ts":"1629501948.231000","edited":{"user":"U4YGF4NGM","ts":"1629503862.000000"},"ts":"1629503830.236400","parent_user_id":"U050ECB92","team":"T03RZGPFR","client_msg_id":"c30d472c-bea0-42a0-9634-c69827adeb81","blocks":[{"type":"rich_text","block_id":"j3rI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's about building the tree itself. I have some config that would change how the tree is constructed, and I'd like it to be associated with the in-progress tree I'm constructing with a zipper"}]}]}],"user":"U4YGF4NGM","text":"it's about building the tree itself. I have some config that would change how the tree is constructed, and I'd like it to be associated with the in-progress tree I'm constructing with a zipper"}
{"type":"message","thread_ts":"1629501948.231000","ts":"1629503988.238500","parent_user_id":"U050ECB92","team":"T03RZGPFR","client_msg_id":"9005336d-5545-4542-adfc-81f69128cb9f","blocks":[{"type":"rich_text","block_id":"hSI+0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess for now I'll keep a bookmark:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"{:config <config>\n :wip-tree <zipper>}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and if I come back later I can pass that to a function that will thread "},{"type":"text","text":"config","style":{"code":true}},{"type":"text","text":" through to the functions used to build the tree"}]}]}],"user":"U4YGF4NGM","text":"I guess for now I'll keep a bookmark:\n```{:config &lt;config&gt;\n :wip-tree &lt;zipper&gt;}```\nand if I come back later I can pass that to a function that will thread `config` through to the functions used to build the tree"}
{"type":"message","thread_ts":"1629501948.231000","ts":"1629703211.244500","parent_user_id":"U050ECB92","team":"T03RZGPFR","client_msg_id":"15228e3f-b512-45d3-8169-865c1c14e9ba","blocks":[{"type":"rich_text","block_id":"I3\/=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you put it in the metadata of the zipper when you iterate through the nodes?"}]}]}],"user":"U4P4NREBY","text":"Can you put it in the metadata of the zipper when you iterate through the nodes?"}
{"type":"message","thread_ts":"1629501948.231000","ts":"1629703283.244700","parent_user_id":"U050ECB92","team":"T03RZGPFR","client_msg_id":"56d72f7c-60be-42a5-b989-ce63f170af36","blocks":[{"type":"rich_text","block_id":"7ajL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Depends a lot on your algorithm of course, but I think I\u2019ve dones something like that. My use case was modifying an existing tree, though."}]}]}],"user":"U4P4NREBY","text":"Depends a lot on your algorithm of course, but I think I\u2019ve dones something like that. My use case was modifying an existing tree, though."}
{"client_msg_id":"D91C820B-3B0A-4D7A-8C14-A2B3AA132F7D","type":"message","text":"Is the flow of information\/context\nRoot-&gt; leaves\nLeaves-&gt; root\nOr bidirectional ? <@U4YGF4NGM> ","user":"U050ECB92","ts":"1629501871.230600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"mHm1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is the flow of information\/context\n"},{"type":"text","text":"Root-> leaves\nLeaves-> root\nOr bidirectional ? "},{"type":"user","user_id":"U4YGF4NGM"},{"type":"text","text":" "}]}]}]}
{"subscribed":false,"reply_users":["U4YGF4NGM","U7RJTCH6J"],"type":"message","thread_ts":"1629501124.229000","reply_users_count":2,"ts":"1629501124.229000","team":"T03RZGPFR","client_msg_id":"e2615e81-618a-4a0d-98ec-fe50b595c6bf","blocks":[{"type":"rich_text","block_id":"8oJM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"per node context? or just general context?"}]}]}],"is_locked":false,"user":"U7RJTCH6J","reply_count":2,"latest_reply":"1629504022.239100","text":"per node context? or just general context?"}
{"subscribed":false,"reply_users":["U4YGF4NGM","U7RJTCH6J"],"type":"message","thread_ts":"1629501124.229000","reply_users_count":2,"ts":"1629501124.229000","team":"T03RZGPFR","client_msg_id":"e2615e81-618a-4a0d-98ec-fe50b595c6bf","blocks":[{"type":"rich_text","block_id":"8oJM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"per node context? or just general context?"}]}]}],"is_locked":false,"user":"U7RJTCH6J","reply_count":2,"latest_reply":"1629504022.239100","text":"per node context? or just general context?"}
{"type":"message","thread_ts":"1629501124.229000","ts":"1629503765.235800","parent_user_id":"U7RJTCH6J","team":"T03RZGPFR","client_msg_id":"ef1cb277-a894-4fe6-8246-0875e8d7daaa","blocks":[{"type":"rich_text","block_id":"p+IF1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"general context"}]}]}],"user":"U4YGF4NGM","text":"general context"}
{"type":"message","thread_ts":"1629501124.229000","ts":"1629504022.239100","parent_user_id":"U7RJTCH6J","team":"T03RZGPFR","client_msg_id":"c9ae6a96-ff2d-400e-be31-502526a848f7","blocks":[{"type":"rich_text","block_id":"J7I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I tend to use the zipper operations as low level ops and use them to create higher levels ops that more directly fit my use case."}]}]}],"user":"U7RJTCH6J","text":"I tend to use the zipper operations as low level ops and use them to create higher levels ops that more directly fit my use case."}
{"client_msg_id":"be2b9da7-0658-4345-84c0-fb6d8638775a","type":"message","text":"having gone down the zipper route, I am now wishing that zippers had a built-in way to maintain some information in the context as it traversed the tree","user":"U4YGF4NGM","ts":"1629499715.228500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"bSP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"having gone down the zipper route, I am now wishing that zippers had a built-in way to maintain some information in the context as it traversed the tree"}]}]}]}
{"subscribed":false,"reply_users":["U2FRKM4TW","U4YGF4NGM","U7RJTCH6J","UE21H2HHD","U0NCTKEV8"],"type":"message","thread_ts":"1629479901.215200","reply_users_count":5,"ts":"1629479901.215200","team":"T03RZGPFR","client_msg_id":"6b205cd1-d82d-4684-b0fa-3527f3698db5","blocks":[{"type":"rich_text","block_id":"es8+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it kind of feels like a zipper but I've only ever used a zipper to search and modify leaves, not construct an entire tree starting from the root"}]}]}],"is_locked":false,"user":"U4YGF4NGM","reply_count":24,"latest_reply":"1629493730.226900","text":"it kind of feels like a zipper but I've only ever used a zipper to search and modify leaves, not construct an entire tree starting from the root"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U4YGF4NGM","U7RJTCH6J","UE21H2HHD","U0NCTKEV8"],"type":"message","thread_ts":"1629479901.215200","reply_users_count":5,"ts":"1629479901.215200","team":"T03RZGPFR","client_msg_id":"6b205cd1-d82d-4684-b0fa-3527f3698db5","blocks":[{"type":"rich_text","block_id":"es8+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it kind of feels like a zipper but I've only ever used a zipper to search and modify leaves, not construct an entire tree starting from the root"}]}]}],"is_locked":false,"user":"U4YGF4NGM","reply_count":24,"latest_reply":"1629493730.226900","text":"it kind of feels like a zipper but I've only ever used a zipper to search and modify leaves, not construct an entire tree starting from the root"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629480045.215300","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"f452f96d-1990-4f58-81c7-97e3cf9703ac","blocks":[{"type":"rich_text","block_id":"Qy=1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It still won't save you form mutating data "},{"type":"text","text":"if","style":{"italic":true}},{"type":"text","text":" you need to pause and resume processing on the very same data.\nBut if you can change the reference to the data like you'd do with regular "},{"type":"text","text":"assoc","style":{"code":true}},{"type":"text","text":", you can do what JS does, in pretty much the same way, no?"}]}]}],"user":"U2FRKM4TW","text":"It still won't save you form mutating data _if_ you need to pause and resume processing on the very same data.\nBut if you can change the reference to the data like you'd do with regular `assoc`, you can do what JS does, in pretty much the same way, no?"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629480362.215500","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"30856b32-3c39-4c34-b374-d921ac40772a","blocks":[{"type":"rich_text","block_id":"=EN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the reference identity isn't important but what I'm stuck on is trying to imagine what kind of structure would allow me to stop and resume it"}]}]}],"user":"U4YGF4NGM","text":"the reference identity isn't important but what I'm stuck on is trying to imagine what kind of structure would allow me to stop and resume it"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629480520.215700","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"d0ffba71-e951-41f6-9fc6-952a2a185e44","blocks":[{"type":"rich_text","block_id":"i4l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I have to keep track of where in the tree I'm currently working on"}]}]}],"user":"U4YGF4NGM","text":"I guess I have to keep track of where in the tree I'm currently working on"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629480530.215900","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"554afe94-fb09-4752-9ce4-1ae11178caf3","blocks":[{"type":"rich_text","block_id":"7OUI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which is why it seems like a zipper"}]}]}],"user":"U4YGF4NGM","text":"which is why it seems like a zipper"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629481597.221400","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"5fdb2a8c-82b5-49e4-a1fc-72fe09d9a16f","blocks":[{"type":"rich_text","block_id":"YE6ue","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can definitely do this with zipper."}]}]}],"user":"U7RJTCH6J","text":"you can definitely do this with zipper."}
{"type":"message","thread_ts":"1629479901.215200","edited":{"user":"U2FRKM4TW","ts":"1629481649.000000"},"ts":"1629481639.221600","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"2b2ed7e0-d11c-4c0b-bae0-df753c0eef4e","blocks":[{"type":"rich_text","block_id":"w0XA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's not a tree, it's a graph, so just having reversed or two-way references won't work if the path is important. You need to record the path. A zipper is indeed fine. But if any branch within a node can be identified with a single unique key, then just a vector of such keys will work as well."}]}]}],"user":"U2FRKM4TW","text":"It's not a tree, it's a graph, so just having reversed or two-way references won't work if the path is important. You need to record the path. A zipper is indeed fine. But if any branch within a node can be identified with a single unique key, then just a vector of such keys will work as well."}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629481674.221900","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"0cc1f361-58c6-4605-8552-7596118468ca","blocks":[{"type":"rich_text","block_id":"sHDQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm going down the zipper route"}]}]}],"user":"U4YGF4NGM","text":"I'm going down the zipper route"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629481675.222100","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"6afb4cb0-536c-492f-b9a9-9046e11151dd","blocks":[{"type":"rich_text","block_id":"Ub3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could also use any of the graph libraries like ubergraph\/loom"}]}]}],"user":"U7RJTCH6J","text":"you could also use any of the graph libraries like ubergraph\/loom"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629481797.222300","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"a4c701e3-1c8e-405c-8dc9-ebc550a9b386","blocks":[{"type":"rich_text","block_id":"KgV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not sure if your graph will have cycles, but if it does, it seems like using zippers would be cumbersome"}]}]}],"user":"U7RJTCH6J","text":"not sure if your graph will have cycles, but if it does, it seems like using zippers would be cumbersome"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629481864.222500","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"964fde97-95fd-4c82-b85a-99e25c7c94a5","blocks":[{"type":"rich_text","block_id":"T4nAe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I say graph but I'm p sure it's a tree, so zippers should be ok"}]}]}],"user":"U4YGF4NGM","text":"I say graph but I'm p sure it's a tree, so zippers should be ok"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629481869.222700","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"30f97b03-8893-488c-899f-a73d484a7933","blocks":[{"type":"rich_text","block_id":"w3mz1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"they just confuse me "},{"type":"emoji","name":"sweat_smile"}]}]}],"user":"U4YGF4NGM","text":"they just confuse me :sweat_smile:"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629481989.222900","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"136fc1a7-e558-4691-bdfa-79f2d1a62e11","blocks":[{"type":"rich_text","block_id":"nLO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, why not just a vector path? Something like "},{"type":"text","text":"[:a :b :c]","style":{"code":true}},{"type":"text","text":" for a tree that's just "},{"type":"text","text":"{:a {:b {:c 1} :d 2} :e 3}","style":{"code":true}},{"type":"text","text":"?"}]}]}],"user":"U2FRKM4TW","text":"So, why not just a vector path? Something like `[:a :b :c]` for a tree that's just `{:a {:b {:c 1} :d 2} :e 3}`?"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629482538.223100","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"19e6bdd5-2709-4d24-aa9f-7ddc8bf3fc82","blocks":[{"type":"rich_text","block_id":"Uzl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think that's basically what zippers do they just have more algebra already done for you"}]}]}],"user":"U4YGF4NGM","text":"I think that's basically what zippers do they just have more algebra already done for you"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629482869.223300","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"473377d5-072f-4c36-8083-05194bd5f876","blocks":[{"type":"rich_text","block_id":"FmdL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure what's mean by algebra here. They don't have anything that's not simple up\/down\/left\/right navigation with some mutation.\nIf your tree doesn't have a concept of left and right siblings, then zippers won't be a good fit IMO. In the above toy tree, that's exactly the case. What's the path \"down from "},{"type":"text","text":":a","style":{"code":true}},{"type":"text","text":"\"? There's no such thing. What's the path \"to the left of "},{"type":"text","text":":d","style":{"code":true}},{"type":"text","text":"\"? Again - no such thing.\nBut if your tree is more similar to a nested vector, then zippers might be more suitable. Although vectors are still associative, you can store a vector of indices as path."}]}]}],"user":"U2FRKM4TW","text":"Not sure what's mean by algebra here. They don't have anything that's not simple up\/down\/left\/right navigation with some mutation.\nIf your tree doesn't have a concept of left and right siblings, then zippers won't be a good fit IMO. In the above toy tree, that's exactly the case. What's the path \"down from `:a`\"? There's no such thing. What's the path \"to the left of `:d`\"? Again - no such thing.\nBut if your tree is more similar to a nested vector, then zippers might be more suitable. Although vectors are still associative, you can store a vector of indices as path."}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629482970.223500","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"842f7530-2279-4c11-88e6-e5abae93f456","blocks":[{"type":"rich_text","block_id":"mjYqf","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"They don't have anything that's not simple up\/down\/left\/right navigation with some mutation."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"zippers are immutable"}]}]}],"user":"U7RJTCH6J","text":"&gt; They don't have anything that's not simple up\/down\/left\/right navigation with some mutation.\nzippers are immutable"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629482982.223700","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"7c7e29eb-d9c3-4dae-ad5b-bf554eee3d70","blocks":[{"type":"rich_text","block_id":"4fgb0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW, I did include some "},{"type":"link","url":"https:\/\/cljdoc.org\/d\/rewrite-clj\/rewrite-clj\/1.0.644-alpha\/doc\/user-guide#_a_brief_introduction_to_zippers","text":"reference links on zippers"},{"type":"text","text":" in rewrite-clj user guide - if that helps your zipper journey at all."}]}]}],"user":"UE21H2HHD","reactions":[{"name":"+1::skin-tone-2","users":["U4YGF4NGM"],"count":1}],"text":"FWIW, I did include some <https:\/\/cljdoc.org\/d\/rewrite-clj\/rewrite-clj\/1.0.644-alpha\/doc\/user-guide#_a_brief_introduction_to_zippers|reference links on zippers> in rewrite-clj user guide - if that helps your zipper journey at all."}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629483023.224100","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"8c962ed4-ce41-4fea-a074-a0e00ea10272","blocks":[{"type":"rich_text","block_id":"8Aqpf","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"What's the path \"down from\u00a0"},{"type":"text","text":":a","style":{"code":true}},{"type":"text","text":"\"? There's no such thing."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"it's easy to define a zipper navigation that does exactly this"}]}]}],"user":"U7RJTCH6J","text":"&gt; What's the path \"down from\u00a0`:a`\"? There's no such thing.\nit's easy to define a zipper navigation that does exactly this"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629483244.224300","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"8e0e0d53-0dd8-493d-9d02-bc7f95353254","blocks":[{"type":"rich_text","block_id":"Fzw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> zippers are immutable\n\nThat's just poor wording on my end. I mean that there are things like "},{"type":"text","text":"assoc","style":{"code":true}},{"type":"text","text":" but for zippers."}]}]}],"user":"U2FRKM4TW","text":"&gt; zippers are immutable\n\nThat's just poor wording on my end. I mean that there are things like `assoc` but for zippers."}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629483642.224500","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"1bb99a21-cd9f-4a45-9cd4-32c3bd3a3c60","blocks":[{"type":"rich_text","block_id":"mXQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I understand what you mean p-himik. In my case, my tree has left and right siblings. to show my hand, it's a React fiber tree - so fibers that represent elements on the page have quite a bit of metadata about them and have siblings, children, etc.\n\nI'm guessing if I go about trying to do the book keeping myself, I'm going to end up recreating zippers from scratch - which would probably help me understand them more, but I want to be lazy on my three day weekend "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":" so I'm going to try and grok zippers a bit better first."}]}]}],"user":"U4YGF4NGM","reactions":[{"name":"+1","users":["U2FRKM4TW"],"count":1}],"text":"I understand what you mean p-himik. In my case, my tree has left and right siblings. to show my hand, it's a React fiber tree - so fibers that represent elements on the page have quite a bit of metadata about them and have siblings, children, etc.\n\nI'm guessing if I go about trying to do the book keeping myself, I'm going to end up recreating zippers from scratch - which would probably help me understand them more, but I want to be lazy on my three day weekend :stuck_out_tongue: so I'm going to try and grok zippers a bit better first."}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629488415.225200","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"3bfd1f40-0d89-4754-a78a-8304f0b719e2","blocks":[{"type":"rich_text","block_id":"te86","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If zippers don't work out, try some kind of lenses, you can often get something very zipper like but a little more customizable"}]}]}],"user":"U0NCTKEV8","text":"If zippers don't work out, try some kind of lenses, you can often get something very zipper like but a little more customizable"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629488596.225400","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"4a92fd94-aa7b-4d1d-a420-d9eabb7db295","blocks":[{"type":"rich_text","block_id":"Q7qvS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"zippers are working really well so far"}]}]}],"user":"U4YGF4NGM","text":"zippers are working really well so far"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629488625.225600","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"153cfc05-964b-4115-938c-caafe62be359","blocks":[{"type":"rich_text","block_id":"RTA","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/lilactown\/react-clj\/blob\/main\/src\/lilactown\/react\/fiber.clj"},{"type":"text","text":" "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U4YGF4NGM","reactions":[{"name":"nice","users":["U7RJTCH6J"],"count":1}],"text":"<https:\/\/github.com\/lilactown\/react-clj\/blob\/main\/src\/lilactown\/react\/fiber.clj> :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629491563.226600","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"94b908a5-51a7-42d3-a242-c91f5e64737f","blocks":[{"type":"rich_text","block_id":"5Ql","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it looks like "},{"type":"text","text":"reconcile-node","style":{"code":true}},{"type":"text","text":" could probably be simplified to:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(zip\/edit loc perform-work)"}]}]}],"user":"U7RJTCH6J","text":"it looks like `reconcile-node` could probably be simplified to:\n```(zip\/edit loc perform-work)```"}
{"type":"message","thread_ts":"1629479901.215200","ts":"1629493730.226900","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"c4c75a55-8271-49a6-9125-adf485685511","blocks":[{"type":"rich_text","block_id":"Shen","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah good tip. I've added more to it now, but I could probably move that into "},{"type":"text","text":"perform-work","style":{"code":true}}]}]}],"user":"U4YGF4NGM","text":"ah good tip. I've added more to it now, but I could probably move that into `perform-work`"}
{"client_msg_id":"4b693ae7-c97a-4097-82ae-58119a65cea8","type":"message","text":"I'm trying to figure out if there's a clever way to handle this in an immutable way before I resort to a bunch of ref types or using mutable fields :&lt;","user":"U4YGF4NGM","ts":"1629479832.214200","team":"T03RZGPFR","edited":{"user":"U4YGF4NGM","ts":"1629479841.000000"},"blocks":[{"type":"rich_text","block_id":"Lnb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm trying to figure out if there's a clever way to handle this in an immutable way before I resort to a bunch of ref types or using mutable fields :<"}]}]}]}
{"client_msg_id":"3a7e312c-36f3-4972-ae87-a5caf9e30583","type":"message","text":"I've got an interesting algorithm I'm trying to convert into Clojure.\n\nthe algorithm is constructing a graph. I want to be able to stop and resume constructing the graph at any leaf.\n\nthe way I'm reading it done in the mutable lang (JS) is by keeping two top-level references: the root of the graph and the node to be worked on.\n\nit then mutates properties on these nodes to keep references to their parent, child and siblings as they do work to form the graph.","user":"U4YGF4NGM","ts":"1629479780.213300","team":"T03RZGPFR","edited":{"user":"U4YGF4NGM","ts":"1629479794.000000"},"blocks":[{"type":"rich_text","block_id":"Jpe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've got an interesting algorithm I'm trying to convert into Clojure.\n\nthe algorithm is constructing a graph. I want to be able to stop and resume constructing the graph at any leaf.\n\nthe way I'm reading it done in the mutable lang (JS) is by keeping two top-level references: the root of the graph and the node to be worked on.\n\nit then mutates properties on these nodes to keep references to their parent, child and siblings as they do work to form the graph."}]}]}]}
{"subscribed":false,"reply_users":["U1G869VNV","U4GBCUVMF"],"type":"message","thread_ts":"1629466838.204600","reply_users_count":2,"ts":"1629466838.204600","team":"T03RZGPFR","client_msg_id":"a1077078-fe0d-470c-8e76-89f2b7ef7651","blocks":[{"type":"rich_text","block_id":"HTC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any suggestions on how to write better E2E tests?"}]}]}],"is_locked":false,"user":"U4GBCUVMF","reply_count":4,"latest_reply":"1629479433.211700","text":"Any suggestions on how to write better E2E tests?"}
{"subscribed":false,"reply_users":["U1G869VNV","U4GBCUVMF"],"type":"message","thread_ts":"1629466838.204600","reply_users_count":2,"ts":"1629466838.204600","team":"T03RZGPFR","client_msg_id":"a1077078-fe0d-470c-8e76-89f2b7ef7651","blocks":[{"type":"rich_text","block_id":"HTC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any suggestions on how to write better E2E tests?"}]}]}],"is_locked":false,"user":"U4GBCUVMF","reply_count":4,"latest_reply":"1629479433.211700","text":"Any suggestions on how to write better E2E tests?"}
{"type":"message","thread_ts":"1629466838.204600","ts":"1629474324.204700","parent_user_id":"U4GBCUVMF","team":"T03RZGPFR","client_msg_id":"fe74d325-12ee-4e6e-8a8a-ffe0ca8817fe","blocks":[{"type":"rich_text","block_id":"+GS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One of the interesting things I've seen with e2e tests is allowing the driver to inspect the client state directly to make assertions and drive the tests."}]}]}],"user":"U1G869VNV","text":"One of the interesting things I've seen with e2e tests is allowing the driver to inspect the client state directly to make assertions and drive the tests."}
{"type":"message","thread_ts":"1629466838.204600","ts":"1629474409.205000","parent_user_id":"U4GBCUVMF","team":"T03RZGPFR","client_msg_id":"3cc2ffa1-4051-4d7f-b441-69947a623724","blocks":[{"type":"rich_text","block_id":"6VQu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pulling the client side state in our app is as easy as\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn- get-state [driver]\n  (read-string\n   (api\/js-execute driver \"return window.getState()\")))"}]}]}],"user":"U1G869VNV","text":"Pulling the client side state in our app is as easy as\n```(defn- get-state [driver]\n  (read-string\n   (api\/js-execute driver \"return window.getState()\")))```"}
{"attachments":[{"color":"24292f","fallback":"igrishaev\/etaoin","fields":[{"title":"Website","value":"<http:\/\/grishaev.me\/etaoin\/>","short":true},{"title":"Stars","value":"652","short":true}],"is_app_unfurl":true,"title":"igrishaev\/etaoin","id":1,"app_unfurl_url":"https:\/\/github.com\/igrishaev\/etaoin","text":"Pure Clojure Webdriver protocol implementation","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629466838.204600","ts":"1629474482.205200","parent_user_id":"U4GBCUVMF","team":"T03RZGPFR","client_msg_id":"80f6a1fc-8322-48b2-b39f-57cd889de04a","blocks":[{"type":"rich_text","block_id":"BM+B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We've been using "},{"type":"link","url":"https:\/\/github.com\/igrishaev\/etaoin"},{"type":"text","text":" at work and it seems to work pretty well."}]}]}],"user":"U1G869VNV","text":"We've been using <https:\/\/github.com\/igrishaev\/etaoin> at work and it seems to work pretty well."}
{"type":"message","thread_ts":"1629466838.204600","ts":"1629479433.211700","parent_user_id":"U4GBCUVMF","team":"T03RZGPFR","client_msg_id":"24c5e936-bf22-4f92-84dd-c32cfef89492","blocks":[{"type":"rich_text","block_id":"DVMO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting, thank you! Ill try it out."}]}]}],"user":"U4GBCUVMF","text":"interesting, thank you! Ill try it out."}
{"subscribed":false,"reply_users":["U45T93RA6","U051SS2EU"],"type":"message","thread_ts":"1629460308.203800","reply_users_count":2,"ts":"1629460308.203800","team":"T03RZGPFR","client_msg_id":"ef39587d-3c6e-4328-998e-88505315d2b1","blocks":[{"type":"rich_text","block_id":"qZWrd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi there, has anyone ever had trouble picking up POI on the classpath while working with Docjure? Deps are installed, so I can't see why it's not able to be loaded."}]}]}],"is_locked":false,"user":"UKS4ERACX","reply_count":3,"latest_reply":"1629739339.266300","text":"Hi there, has anyone ever had trouble picking up POI on the classpath while working with Docjure? Deps are installed, so I can't see why it's not able to be loaded."}
{"subscribed":false,"reply_users":["U45T93RA6","U051SS2EU"],"type":"message","thread_ts":"1629460308.203800","reply_users_count":2,"ts":"1629460308.203800","team":"T03RZGPFR","client_msg_id":"ef39587d-3c6e-4328-998e-88505315d2b1","blocks":[{"type":"rich_text","block_id":"qZWrd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi there, has anyone ever had trouble picking up POI on the classpath while working with Docjure? Deps are installed, so I can't see why it's not able to be loaded."}]}]}],"is_locked":false,"user":"UKS4ERACX","reply_count":3,"latest_reply":"1629739339.266300","text":"Hi there, has anyone ever had trouble picking up POI on the classpath while working with Docjure? Deps are installed, so I can't see why it's not able to be loaded."}
{"type":"message","thread_ts":"1629460308.203800","ts":"1629486360.224900","parent_user_id":"UKS4ERACX","team":"T03RZGPFR","client_msg_id":"bfbcd504-c711-4642-8565-a7d030bd03a2","blocks":[{"type":"rich_text","block_id":"sK3h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven't had that error w\/ Docjure myself\n\n what does the stacktrace look like?"}]}]}],"user":"U45T93RA6","text":"I haven't had that error w\/ Docjure myself\n\n what does the stacktrace look like?"}
{"type":"message","thread_ts":"1629460308.203800","ts":"1629739280.266100","parent_user_id":"UKS4ERACX","team":"T03RZGPFR","client_msg_id":"7840f7da-2f5b-406b-9521-e976130d64cd","blocks":[{"type":"rich_text","block_id":"r=b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"typically with clojure we don't install deps, we use a dependency manager which caches deps and calculates a classpath including the cached artifact"}]}]}],"user":"U051SS2EU","text":"typically with clojure we don't install deps, we use a dependency manager which caches deps and calculates a classpath including the cached artifact"}
{"type":"message","thread_ts":"1629460308.203800","ts":"1629739339.266300","parent_user_id":"UKS4ERACX","team":"T03RZGPFR","client_msg_id":"48c9709c-1b41-480e-9c6f-2040558dda75","blocks":[{"type":"rich_text","block_id":"0e=f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you literally mean installing the dep (eg. via OS package manager) I have not successfully used debian installed java libraries with clojure, and it always ends up being easier to use the dep manager (eg. clj or lein) to add the dep"}]}]}],"user":"U051SS2EU","text":"if you literally mean installing the dep (eg. via OS package manager) I have not successfully used debian installed java libraries with clojure, and it always ends up being easier to use the dep manager (eg. clj or lein) to add the dep"}
{"subscribed":false,"reply_users":["U3JH98J4R","U01T10Y7FJ5","U0WL6FA77"],"type":"message","thread_ts":"1629418020.200300","reply_users_count":3,"edited":{"user":"U01T10Y7FJ5","ts":"1629418096.000000"},"ts":"1629418020.200300","team":"T03RZGPFR","client_msg_id":"cb843a1b-c2cd-4a05-af26-eb49687da0bb","blocks":[{"type":"rich_text","block_id":"Og8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey, are there any ready made cookie-based user authentication options available for Clojure?"}]}]}],"is_locked":false,"user":"U01T10Y7FJ5","reply_count":6,"latest_reply":"1629464117.203900","text":"Hey, are there any ready made cookie-based user authentication options available for Clojure?"}
{"subscribed":false,"reply_users":["U3JH98J4R","U01T10Y7FJ5","U0WL6FA77"],"type":"message","thread_ts":"1629418020.200300","reply_users_count":3,"edited":{"user":"U01T10Y7FJ5","ts":"1629418096.000000"},"ts":"1629418020.200300","team":"T03RZGPFR","client_msg_id":"cb843a1b-c2cd-4a05-af26-eb49687da0bb","blocks":[{"type":"rich_text","block_id":"Og8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey, are there any ready made cookie-based user authentication options available for Clojure?"}]}]}],"is_locked":false,"user":"U01T10Y7FJ5","reply_count":6,"latest_reply":"1629464117.203900","text":"Hey, are there any ready made cookie-based user authentication options available for Clojure?"}
{"type":"message","thread_ts":"1629418020.200300","ts":"1629418898.200600","parent_user_id":"U01T10Y7FJ5","team":"T03RZGPFR","client_msg_id":"28c66703-0b25-47ce-974d-a2b4e2b5a7db","blocks":[{"type":"rich_text","block_id":"gx\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"take a look at buddy and co"}]}]}],"user":"U3JH98J4R","text":"take a look at buddy and co"}
{"type":"message","thread_ts":"1629418020.200300","ts":"1629421554.200800","parent_user_id":"U01T10Y7FJ5","team":"T03RZGPFR","client_msg_id":"2ea1f90c-15e6-4aa8-9590-664f0a8b5590","blocks":[{"type":"rich_text","block_id":"ak7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what is the and co?"}]}]}],"user":"U01T10Y7FJ5","text":"what is the and co?"}
{"type":"message","thread_ts":"1629418020.200300","ts":"1629459531.202100","parent_user_id":"U01T10Y7FJ5","team":"T03RZGPFR","client_msg_id":"63cae97e-1c21-42b2-8fcf-568de713f8a8","blocks":[{"type":"rich_text","block_id":"vxE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It was quite a long time ago, but I got to the conclusion if want to have it good write it yourself"}]}]}],"user":"U0WL6FA77","text":"It was quite a long time ago, but I got to the conclusion if want to have it good write it yourself"}
{"type":"message","thread_ts":"1629418020.200300","ts":"1629459542.202300","parent_user_id":"U01T10Y7FJ5","team":"T03RZGPFR","client_msg_id":"13365b1a-7639-4b3e-9f9d-ac36bf2f8d9b","blocks":[{"type":"rich_text","block_id":"XJt\/w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I didn\u2019t find anything what satisfy me"}]}]}],"user":"U0WL6FA77","text":"I didn\u2019t find anything what satisfy me"}
{"type":"message","thread_ts":"1629418020.200300","ts":"1629459554.202500","parent_user_id":"U01T10Y7FJ5","team":"T03RZGPFR","client_msg_id":"e9417ef6-c8df-4503-86a1-4d2f4a2143f0","blocks":[{"type":"rich_text","block_id":"fPN1z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I don\u2019t really remember details"}]}]}],"user":"U0WL6FA77","text":"But I don\u2019t really remember details"}
{"type":"message","thread_ts":"1629418020.200300","ts":"1629464117.203900","parent_user_id":"U01T10Y7FJ5","team":"T03RZGPFR","client_msg_id":"aaad8359-704c-4822-8ca6-a697f5bc9eab","blocks":[{"type":"rich_text","block_id":"3=8m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, thanks."}]}]}],"user":"U01T10Y7FJ5","text":"Okay, thanks."}
{"client_msg_id":"de9dc8c5-27b8-4734-8e29-d43ceac88691","type":"message","text":"I guess if consumers would want to schedule the actual work the process does using their async lib of choice then I would want a lib that implements it using that async lib anyway","user":"U4YGF4NGM","ts":"1629417345.198400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"T6HT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess if consumers would want to schedule the actual work the process does using their async lib of choice then I would want a lib that implements it using that async lib anyway"}]}]}]}
{"subscribed":false,"reply_users":["U5RCSJ6BB","U4YGF4NGM","U6CN6JQ22","U09LZR36F"],"type":"message","thread_ts":"1629417213.196900","reply_users_count":4,"ts":"1629417213.196900","team":"T03RZGPFR","client_msg_id":"5956c48c-03d5-43d8-b6a0-f0c8f4727b96","blocks":[{"type":"rich_text","block_id":"LqGRE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let's say I have some process that could produce one or more results, possibly in an asynchronous manner.\n\na consumer would want to handle the results in order until the process is complete, like pipe the results to a web client.\n\nis there some generic interface I could put in front of this process so that I wouldn't have to pick one particular async lib (i.e. core.async, manifold, etc.)?"}]}]}],"is_locked":false,"user":"U4YGF4NGM","reply_count":4,"reactions":[{"name":"white_check_mark","users":["U08RYUHQE"],"count":1}],"latest_reply":"1629449625.201500","text":"let's say I have some process that could produce one or more results, possibly in an asynchronous manner.\n\na consumer would want to handle the results in order until the process is complete, like pipe the results to a web client.\n\nis there some generic interface I could put in front of this process so that I wouldn't have to pick one particular async lib (i.e. core.async, manifold, etc.)?"}
{"subscribed":false,"reply_users":["U5RCSJ6BB","U4YGF4NGM","U6CN6JQ22","U09LZR36F"],"type":"message","thread_ts":"1629417213.196900","reply_users_count":4,"ts":"1629417213.196900","team":"T03RZGPFR","client_msg_id":"5956c48c-03d5-43d8-b6a0-f0c8f4727b96","blocks":[{"type":"rich_text","block_id":"LqGRE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let's say I have some process that could produce one or more results, possibly in an asynchronous manner.\n\na consumer would want to handle the results in order until the process is complete, like pipe the results to a web client.\n\nis there some generic interface I could put in front of this process so that I wouldn't have to pick one particular async lib (i.e. core.async, manifold, etc.)?"}]}]}],"is_locked":false,"user":"U4YGF4NGM","reply_count":4,"reactions":[{"name":"white_check_mark","users":["U08RYUHQE"],"count":1}],"latest_reply":"1629449625.201500","text":"let's say I have some process that could produce one or more results, possibly in an asynchronous manner.\n\na consumer would want to handle the results in order until the process is complete, like pipe the results to a web client.\n\nis there some generic interface I could put in front of this process so that I wouldn't have to pick one particular async lib (i.e. core.async, manifold, etc.)?"}
{"type":"message","thread_ts":"1629417213.196900","ts":"1629417345.198200","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"160b7812-f057-49ca-b939-18c15b954db2","blocks":[{"type":"rich_text","block_id":"Sa=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think callbacks are often the most general and can be adapted into any of the other abstractions"}]}]}],"user":"U5RCSJ6BB","text":"I think callbacks are often the most general and can be adapted into any of the other abstractions"}
{"type":"message","thread_ts":"1629417213.196900","ts":"1629417385.198500","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"7f0461b0-32e6-457e-b4a4-d5b7a76ba772","blocks":[{"type":"rich_text","block_id":"2fF6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm good point"}]}]}],"user":"U4YGF4NGM","text":"hmm good point"}
{"type":"message","thread_ts":"1629417213.196900","ts":"1629445965.201200","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"0c385377-d5f2-4896-bdf4-2cf1fb9bf27f","blocks":[{"type":"rich_text","block_id":"1\/EnY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I tried something similar, ended up having the API with core.async for simplicity (in my case the clients implementations where using core.async anyway), but in case it can be of use:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\n(defprotocol Handler\n  :extend-via-metadata true\n  (handle* [this val cb] \"Handle new value, calls cb with true if value was handled properly, false otherwise\"))\n\n(extend-protocol Handler\n  Fn\n  (handle* [this val cb] (try (this val)\n                              (cb true)\n                              (catch Exception _\n                                (cb false))))\n\n  ManyToManyChannel\n  (handle* [this val cb] (try (a\/put! this val cb)\n                              (catch Exception _\n                                (cb false)))))"}]}]}],"user":"U6CN6JQ22","text":"I tried something similar, ended up having the API with core.async for simplicity (in my case the clients implementations where using core.async anyway), but in case it can be of use:\n\n```\n(defprotocol Handler\n  :extend-via-metadata true\n  (handle* [this val cb] \"Handle new value, calls cb with true if value was handled properly, false otherwise\"))\n\n(extend-protocol Handler\n  Fn\n  (handle* [this val cb] (try (this val)\n                              (cb true)\n                              (catch Exception _\n                                (cb false))))\n\n  ManyToManyChannel\n  (handle* [this val cb] (try (a\/put! this val cb)\n                              (catch Exception _\n                                (cb false)))))```"}
{"type":"message","thread_ts":"1629417213.196900","ts":"1629449625.201500","parent_user_id":"U4YGF4NGM","team":"T03RZGPFR","client_msg_id":"52b15c92-8c35-4552-a77f-5922f334840a","blocks":[{"type":"rich_text","block_id":"m0Ooq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The most comprehensive API to mimick would be the reactive streams api.  It supports all the cancellation\/failure stuff afaik."}]}]}],"user":"U09LZR36F","reactions":[{"name":"heavy_plus_sign","users":["U5RCSJ6BB"],"count":1}],"text":"The most comprehensive API to mimick would be the reactive streams api.  It supports all the cancellation\/failure stuff afaik."}
{"client_msg_id":"6910c3d4-4284-4b34-9e5b-227499f1ab97","type":"message","text":"(and then merge m2 into that)","user":"U04V70XH6","ts":"1629414225.192700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Mu5jD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and then merge m2 into that)"}]}]}]}
{"subscribed":false,"reply_users":["U0C8489U6"],"type":"message","thread_ts":"1629414214.192400","reply_users_count":1,"ts":"1629414214.192400","team":"T03RZGPFR","client_msg_id":"09465a87-3b3a-47b2-a64a-8b8a702980b0","blocks":[{"type":"rich_text","block_id":"Jle","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0C8489U6"},{"type":"text","text":" I think you'd need to do "},{"type":"text","text":"(select-keys m1 (keys m2))","style":{"code":true}},{"type":"text","text":" for that?"}]}]}],"is_locked":false,"user":"U04V70XH6","reply_count":2,"latest_reply":"1629414340.193000","text":"<@U0C8489U6> I think you'd need to do `(select-keys m1 (keys m2))` for that?"}
{"subscribed":false,"reply_users":["U0C8489U6"],"type":"message","thread_ts":"1629414214.192400","reply_users_count":1,"ts":"1629414214.192400","team":"T03RZGPFR","client_msg_id":"09465a87-3b3a-47b2-a64a-8b8a702980b0","blocks":[{"type":"rich_text","block_id":"Jle","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0C8489U6"},{"type":"text","text":" I think you'd need to do "},{"type":"text","text":"(select-keys m1 (keys m2))","style":{"code":true}},{"type":"text","text":" for that?"}]}]}],"is_locked":false,"user":"U04V70XH6","reply_count":2,"latest_reply":"1629414340.193000","text":"<@U0C8489U6> I think you'd need to do `(select-keys m1 (keys m2))` for that?"}
{"type":"message","thread_ts":"1629414214.192400","ts":"1629414291.192800","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"ae8537e6-077c-44e7-9feb-993671cb5ef5","blocks":[{"type":"rich_text","block_id":"W2U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah cool yeah that would definitely work..."}]}]}],"user":"U0C8489U6","text":"ah cool yeah that would definitely work..."}
{"type":"message","thread_ts":"1629414214.192400","edited":{"user":"U0C8489U6","ts":"1629414632.000000"},"ts":"1629414340.193000","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"f856152b-607f-450c-b879-51f4a992e4bb","blocks":[{"type":"rich_text","block_id":"AWsa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you Sean I felt I was missing some core function but after a bit of googling it seems I am not missing anything"}]}]}],"user":"U0C8489U6","text":"Thank you Sean I felt I was missing some core function but after a bit of googling it seems I am not missing anything"}
{"client_msg_id":"3621e3af-31dd-484a-b861-1e61ecc697a9","type":"message","text":"Hi there, what is the pattern for merging maps keeping into consideration subtractive operations? (i.e. `(merge m1 m2) where a key in `m2` does exist at all).\nI know `merge-with` would not work in this case because there is not key in `m2`","user":"U0C8489U6","ts":"1629413344.191700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"z\/L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi there, what is the pattern for merging maps keeping into consideration subtractive operations? (i.e. `(merge m1 m2) where a key in "},{"type":"text","text":"m2","style":{"code":true}},{"type":"text","text":" does exist at all).\nI know "},{"type":"text","text":"merge-with","style":{"code":true}},{"type":"text","text":" would not work in this case because there is not key in "},{"type":"text","text":"m2","style":{"code":true}}]}]}]}
{"attachments":[{"color":"24292f","fallback":"ptaoussanis\/truss","fields":[{"title":"Website","value":"<https:\/\/www.taoensso.com>","short":true},{"title":"Stars","value":"246","short":true}],"is_app_unfurl":true,"title":"ptaoussanis\/truss","id":1,"app_unfurl_url":"https:\/\/github.com\/ptaoussanis\/truss#assertions-within-prepost-conditions","text":"Assertions API for Clojure\/Script","bot_id":"B0213V66QKT"}],"type":"message","edited":{"user":"U0K064KQV","ts":"1629412692.000000"},"ts":"1629412687.189300","team":"T03RZGPFR","client_msg_id":"f83cf21c-0432-4697-8ced-cf8d39b8c2f1","blocks":[{"type":"rich_text","block_id":"6OLC4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could also consider pre\/post and something like Truss, that would also give you a guarantee your types are somewhat correct: "},{"type":"link","url":"https:\/\/github.com\/ptaoussanis\/truss#assertions-within-prepost-conditions"},{"type":"text","text":" and is more lightweight than full-blown specs"}]}]}],"user":"U0K064KQV","text":"You could also consider pre\/post and something like Truss, that would also give you a guarantee your types are somewhat correct: <https:\/\/github.com\/ptaoussanis\/truss#assertions-within-prepost-conditions> and is more lightweight than full-blown specs"}
{"client_msg_id":"4ea28da0-8b43-43c9-834a-e7f03ac4ce43","type":"message","text":"I don't actually recommend this, I think doc-string or spec is better, but if you insist on having the type inline, plain meta doesn't have the risk that type hint does.","user":"U0K064KQV","ts":"1629412523.188500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"WXkxE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't actually recommend this, I think doc-string or spec is better, but if you insist on having the type inline, plain meta doesn't have the risk that type hint does."}]}]}]}
{"client_msg_id":"4adfcf74-fcf6-4e18-9736-e6d748a22c52","type":"message","text":"``` (defn foo\n  ^:String [^:int a ^:int b]\n  (str a b))```\nBecause if you add type hints, and the hint is wrong, you can technically break the code or slow down the performance of it","user":"U0K064KQV","ts":"1629412451.187800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"tbWv","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":" (defn foo\n  ^:String [^:int a ^:int b]\n  (str a b))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nBecause if you add type hints, and the hint is wrong, you can technically break the code or slow down the performance of it"}]}]}]}
{"client_msg_id":"40779b00-c4c6-4ddd-97ce-09125bade211","type":"message","text":"<@U08RYUHQE> If you want, use meta, but don't use hints. For example:","user":"U0K064KQV","ts":"1629412142.186700","team":"T03RZGPFR","edited":{"user":"U0K064KQV","ts":"1629412711.000000"},"blocks":[{"type":"rich_text","block_id":"rZ064","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U08RYUHQE"},{"type":"text","text":" If you want, use meta, but don't use hints. For example:"}]}]}]}
{"client_msg_id":"22e8d292-f005-4ec5-a43a-3a5d4f9f2011","type":"message","text":"The use case #2 per <https:\/\/github.com\/stathissideris\/spec-provider\/tree\/f9e4b3a9a54752a1c2c8df0291ff517679442a1a#use-cases> would be interesting here\n\n(TIL about that specific capability from spec-provider... that's why I love answering questions :) )","user":"U45T93RA6","ts":"1629382547.183700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"tvf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The use case #2 per "},{"type":"link","url":"https:\/\/github.com\/stathissideris\/spec-provider\/tree\/f9e4b3a9a54752a1c2c8df0291ff517679442a1a#use-cases"},{"type":"text","text":" would be interesting here\n\n(TIL about that specific capability from spec-provider... that's why I love answering questions :) )"}]}]}]}
{"client_msg_id":"bdf559a5-4163-48d8-97bd-24d6157d807e","type":"message","text":"speced and instrumented functions sound like the best plan","user":"U11BV7MTK","ts":"1629380875.182500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"vY2Ll","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"speced and instrumented functions sound like the best plan"}]}]}]}
{"client_msg_id":"e587e434-1785-4329-a2e4-dad2c189b25d","type":"message","text":"so thanks","user":"U08RYUHQE","ts":"1629380465.182000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"RRhH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so thanks"}]}]}]}
{"client_msg_id":"ebe29559-4d8d-4df3-a8c7-8785b0c7428b","type":"message","text":"I need to annotate these things somehow before starting to break them","user":"U08RYUHQE","ts":"1629380447.181800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"SS\/2X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I need to annotate these things somehow before starting to break them"}]}]}],"reactions":[{"name":"slightly_smiling_face","users":["U45T93RA6"],"count":1}]}
{"client_msg_id":"064f8040-99ba-4fe2-87c8-7daf1c4c4039","type":"message","text":"yeah, but I like the idea of bespoke","user":"U08RYUHQE","ts":"1629380436.181400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Pfw+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, but I like the idea of bespoke"}]}]}]}
{"client_msg_id":"c2452002-ba00-4da1-9351-fa94586fcc78","type":"message","text":"Yes or bespoke metadata like `^{::kind :map}` if you feel that helps you during refactoring\n\nAnything but abusing type hints :pray:","user":"U45T93RA6","ts":"1629380387.181000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"eIH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes or bespoke metadata like "},{"type":"text","text":"^{::kind :map}","style":{"code":true}},{"type":"text","text":" if you feel that helps you during refactoring\n\nAnything but abusing type hints "},{"type":"emoji","name":"pray"}]}]}]}
{"subscribed":false,"reply_users":["U0K064KQV"],"type":"message","thread_ts":"1629380282.179500","reply_users_count":1,"ts":"1629380282.179500","team":"T03RZGPFR","client_msg_id":"46002fcc-6965-414c-b1bd-10128f69df22","blocks":[{"type":"rich_text","block_id":"mj7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can write superfluous spec - one that's not checked. Just as a documentation."}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":1,"latest_reply":"1629412103.186100","text":"You can write superfluous spec - one that's not checked. Just as a documentation."}
{"subscribed":false,"reply_users":["U0K064KQV"],"type":"message","thread_ts":"1629380282.179500","reply_users_count":1,"ts":"1629380282.179500","team":"T03RZGPFR","client_msg_id":"46002fcc-6965-414c-b1bd-10128f69df22","blocks":[{"type":"rich_text","block_id":"mj7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can write superfluous spec - one that's not checked. Just as a documentation."}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":1,"latest_reply":"1629412103.186100","text":"You can write superfluous spec - one that's not checked. Just as a documentation."}
{"type":"message","thread_ts":"1629380282.179500","ts":"1629412103.186100","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"c0a7bd08-a78e-48be-9c8c-a10581cb9931","blocks":[{"type":"rich_text","block_id":"L8XeJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, the problem with type hint is that the wrong hint will potentially break things or hurt performance. Where as wrong doc or spec won't"}]}]}],"user":"U0K064KQV","text":"Yes, the problem with type hint is that the wrong hint will potentially break things or hurt performance. Where as wrong doc or spec won't"}
{"client_msg_id":"e210016b-67e9-4b2d-80e1-2043475ff683","type":"message","text":"but while figuring out the call stack it helps to see what is going around many levels deep","user":"U08RYUHQE","ts":"1629380260.178800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"kIqm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but while figuring out the call stack it helps to see what is going around many levels deep"}]}]}]}
{"client_msg_id":"c3bc8eb9-1ffe-4955-bcc6-8ae38a2bfe5a","type":"message","text":"this will eventually be refactored to use spec","user":"U08RYUHQE","ts":"1629380240.178300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"6Wy5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this will eventually be refactored to use spec"}]}]}]}
{"client_msg_id":"527217B7-F1F9-4823-9C8E-D762AA9756A3","type":"message","text":"If you want to actually make a checkable descriptive result, write a spec","user":"U064X3EF3","ts":"1629380238.178200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"iIo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you want to actually make a checkable descriptive result, write a spec"}]}]}]}
{"client_msg_id":"bb630999-5617-403a-8dd9-f778b7df184d","type":"message","text":"In principle type hints are the wrong tool for documentation. It's objective - it often will emit technically wrong code\n\nDocstrings or Spec are more idiomatic","user":"U45T93RA6","ts":"1629380226.177600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"R6ZWA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In principle type hints are the wrong tool for documentation. It's objective - it often will emit technically wrong code\n\nDocstrings or Spec are more idiomatic"}]}]}]}
{"client_msg_id":"E709C4E6-9263-45E7-8DF7-DC841718FD35","type":"message","text":"Type hints tell you nothing about semantics","user":"U050ECB92","ts":"1629380217.177000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"hZx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Type hints tell you nothing about semantics"}]}]}],"reactions":[{"name":"100","users":["U883WCP5Z","U060FKQPN","U0K064KQV"],"count":3}]}
{"client_msg_id":"EC759F1F-C33C-450D-9F7E-31E286FF0BDF","type":"message","text":"Still, disagree hard","user":"U050ECB92","ts":"1629380206.176400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"RWFM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Still, disagree hard"}]}]}]}
{"client_msg_id":"af7f3774-9851-4d81-8c94-475b462b34a2","type":"message","text":"s\/readable\/understandable\/","user":"U08RYUHQE","ts":"1629380193.175900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"q8ok","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"s\/readable\/understandable\/"}]}]}]}
{"client_msg_id":"A8A5A577-68D3-4A80-98CC-B4E87D222023","type":"message","text":"docstrings ftw","user":"U050ECB92","ts":"1629380191.175800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"zIb\/K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"docstrings ftw"}]}]}]}
{"client_msg_id":"05F42839-388C-4351-A5DD-4828CA5D1AE2","type":"message","text":"Adding superfluous type hints will make it less readable","user":"U050ECB92","ts":"1629380176.175200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"QvQY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Adding superfluous type hints will make it less readable"}]}]}],"reactions":[{"name":"100","users":["U051SS2EU","U883WCP5Z","U0K064KQV"],"count":3}]}
{"client_msg_id":"1ec5667e-0663-4959-ba39-5850441f680f","type":"message","text":"fair enough. This is old code that I'm going through, so adding hints was another way to make things readable without changing it for now","user":"U08RYUHQE","ts":"1629380121.173700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"f5IKj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"fair enough. This is old code that I'm going through, so adding hints was another way to make things readable without changing it for now"}]}]}]}
{"client_msg_id":"ed88dd07-2ba3-4417-9f1b-0c051c72d76f","type":"message","text":"```(defn ^String foo [] {:x 1})\n\n(foo) ;; =&gt; {:x 1}```\nType hints can lie","user":"U04V4KLKC","ts":"1629380119.173600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"4dX","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn ^String foo [] {:x 1})\n\n(foo) ;; => {:x 1}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Type hints can lie"}]}]}]}
{"client_msg_id":"a80166ea-f088-4e87-b7fc-039739533eae","type":"message","text":"so I was just trying to be consistent","user":"U08RYUHQE","ts":"1629380067.172200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"8\/TD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I was just trying to be consistent"}]}]}]}
{"client_msg_id":"983a41cc-a0c8-424b-b85f-1c18ce33c6f0","type":"message","text":"docstrings are the correct vehicle for that","user":"U11BV7MTK","ts":"1629380064.172100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"oTY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"docstrings are the correct vehicle for that"}]}]}]}
{"client_msg_id":"0cb90b9f-d42c-45d2-b395-f170d43a6267","type":"message","text":"when naming is ambiguous, it helps to quickly check if I'm returning a list or a map on things like `scan-datapoints`","user":"U08RYUHQE","ts":"1629380047.171700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"8vs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"when naming is ambiguous, it helps to quickly check if I'm returning a list or a map on things like "},{"type":"text","text":"scan-datapoints","style":{"code":true}}]}]}]}
{"client_msg_id":"9d342ad1-dd53-43aa-addb-37fc51b7b992","type":"message","text":"Well, another advantage of type hints is implicit documentation","user":"U08RYUHQE","ts":"1629379995.170400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"NZtI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, another advantage of type hints is implicit documentation"}]}]}]}
{"client_msg_id":"8c6c8b95-afed-45dd-83ad-c8931c8c418e","type":"message","text":"There are situations in which returning a hint for such a defn is justified. What are you trying to do \/ why?","user":"U45T93RA6","ts":"1629379973.169900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"g+v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are situations in which returning a hint for such a defn is justified. What are you trying to do \/ why?"}]}]}]}
{"client_msg_id":"E15A5AF8-42DA-4F7A-ADFF-463344DFCA51","type":"message","text":"Type hints are for Java interop. That\u2019s Clojure data and no type hint is needed","user":"U064X3EF3","ts":"1629379894.169100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"VbJ6D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Type hints are for Java interop. That\u2019s Clojure data and no type hint is needed"}]}]}]}
{"client_msg_id":"9F375A00-CC2F-4249-899D-F1D942B4FC4C","type":"message","text":"No type hint","user":"U064X3EF3","ts":"1629379834.168200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"2cuY+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No type hint"}]}]}]}
{"client_msg_id":"d3f73340-ae58-4bd0-b4ec-f1df84ec6e60","type":"message","text":"Greetings! I have a little conundrum: What is the correct type hint to use for the return type of something that returns `{:a \"map\" :of \"stuff\"}`?","user":"U08RYUHQE","ts":"1629379799.167900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"d3Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Greetings! I have a little conundrum: What is the correct type hint to use for the return type of something that returns "},{"type":"text","text":"{:a \"map\" :of \"stuff\"}","style":{"code":true}},{"type":"text","text":"?"}]}]}]}
{"subscribed":false,"reply_users":["U0K064KQV"],"type":"message","thread_ts":"1629362826.165700","reply_users_count":1,"edited":{"user":"U05469DKJ","ts":"1629362862.000000"},"ts":"1629362826.165700","team":"T03RZGPFR","client_msg_id":"aa8e4948-7cb0-4f0e-9b32-aad98b32b822","blocks":[{"type":"rich_text","block_id":"76D","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0K064KQV"},{"type":"text","text":" There's "},{"type":"text","text":"take-while","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(into [] (take-while (complement #{5})) (range 10))"}]}]}],"is_locked":false,"user":"U05469DKJ","reply_count":1,"latest_reply":"1629411846.185700","text":"<@U0K064KQV> There's `take-while`:\n```(into [] (take-while (complement #{5})) (range 10))```"}
{"subscribed":false,"reply_users":["U0K064KQV"],"type":"message","thread_ts":"1629362826.165700","reply_users_count":1,"edited":{"user":"U05469DKJ","ts":"1629362862.000000"},"ts":"1629362826.165700","team":"T03RZGPFR","client_msg_id":"aa8e4948-7cb0-4f0e-9b32-aad98b32b822","blocks":[{"type":"rich_text","block_id":"76D","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0K064KQV"},{"type":"text","text":" There's "},{"type":"text","text":"take-while","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(into [] (take-while (complement #{5})) (range 10))"}]}]}],"is_locked":false,"user":"U05469DKJ","reply_count":1,"latest_reply":"1629411846.185700","text":"<@U0K064KQV> There's `take-while`:\n```(into [] (take-while (complement #{5})) (range 10))```"}
{"type":"message","thread_ts":"1629362826.165700","ts":"1629411846.185700","parent_user_id":"U05469DKJ","team":"T03RZGPFR","client_msg_id":"357f03eb-a664-4dec-a94f-048b307b7343","blocks":[{"type":"rich_text","block_id":"TsxL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya, but that doesn't include the one that matches the pred "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"user":"U0K064KQV","text":"Ya, but that doesn't include the one that matches the pred :stuck_out_tongue:"}
{"subscribed":false,"reply_users":["U0P0TMEFJ"],"type":"message","thread_ts":"1629348800.164000","reply_users_count":1,"edited":{"user":"U0K064KQV","ts":"1629348861.000000"},"ts":"1629348800.164000","team":"T03RZGPFR","client_msg_id":"d51ef8e5-031d-4785-a57b-6cc04083e744","blocks":[{"type":"rich_text","block_id":"7Nya","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why isn't halt-when implemented like:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn halt-when'\n  [pred]\n  (fn [rf]\n    (fn\n      ([] (rf))\n      ([done] (rf done))\n      ([acc e] (if (pred e) (reduced (rf acc e)) (rf acc e))))))\n\n(transduce\n (halt-when' #{4})\n conj\n [1 2 3 4 5 6 7 8 9])\n[1 2 3 4]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nOr is there another transducer that does this?"}]}]}],"is_locked":false,"user":"U0K064KQV","reply_count":3,"latest_reply":"1629377056.166600","text":"Why isn't halt-when implemented like:\n\n```(defn halt-when'\n  [pred]\n  (fn [rf]\n    (fn\n      ([] (rf))\n      ([done] (rf done))\n      ([acc e] (if (pred e) (reduced (rf acc e)) (rf acc e))))))\n\n(transduce\n (halt-when' #{4})\n conj\n [1 2 3 4 5 6 7 8 9])\n[1 2 3 4]```\nOr is there another transducer that does this?"}
{"subscribed":false,"reply_users":["U0P0TMEFJ"],"type":"message","thread_ts":"1629348800.164000","reply_users_count":1,"edited":{"user":"U0K064KQV","ts":"1629348861.000000"},"ts":"1629348800.164000","team":"T03RZGPFR","client_msg_id":"d51ef8e5-031d-4785-a57b-6cc04083e744","blocks":[{"type":"rich_text","block_id":"7Nya","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why isn't halt-when implemented like:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn halt-when'\n  [pred]\n  (fn [rf]\n    (fn\n      ([] (rf))\n      ([done] (rf done))\n      ([acc e] (if (pred e) (reduced (rf acc e)) (rf acc e))))))\n\n(transduce\n (halt-when' #{4})\n conj\n [1 2 3 4 5 6 7 8 9])\n[1 2 3 4]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nOr is there another transducer that does this?"}]}]}],"is_locked":false,"user":"U0K064KQV","reply_count":3,"latest_reply":"1629377056.166600","text":"Why isn't halt-when implemented like:\n\n```(defn halt-when'\n  [pred]\n  (fn [rf]\n    (fn\n      ([] (rf))\n      ([done] (rf done))\n      ([acc e] (if (pred e) (reduced (rf acc e)) (rf acc e))))))\n\n(transduce\n (halt-when' #{4})\n conj\n [1 2 3 4 5 6 7 8 9])\n[1 2 3 4]```\nOr is there another transducer that does this?"}
{"type":"message","thread_ts":"1629348800.164000","ts":"1629374820.165900","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"77ccde79-2fde-4b44-8aea-e1a1218ac886","blocks":[{"type":"rich_text","block_id":"Tn4wA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think that "},{"type":"text","text":"halt-when","style":{"code":true}},{"type":"text","text":" should stop when the predicate returns true, and not include the result. However, it tries to give you a function to give you a strategy for what to do when it does, so you can decide what to do. But I think there's a problem with the way it's implemented. Firstly, it seems to return "},{"type":"text","text":"input","style":{"code":true}},{"type":"text","text":" where it should be returning the result:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(into [] (halt-when #{4}) (range))\nclass java.lang.Long cannot be cast to class clojure.lang.ITransientCollection (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.ITransientCollection is in unnamed module of loader 'app')"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"So I think this stops it from throwing class cast exceptions:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn halt-when1\n  ([pred] (halt-when1 pred nil))\n  ([pred retf]\n   (fn [rf]\n     (fn\n       ([] (rf))\n       ([result]\n        (if (and (map? result) (contains? result ::halt))\n          (::halt result)\n          (rf result)))\n       ([result input]\n        (if (pred input)\n          (reduced {::halt (rf (if retf (retf result input) result))})\n          (rf result input)))))))\n(into [] (halt-when1 #{4}) (range)) ;; => [0 1 2 3]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"However, I think that the "},{"type":"text","text":"retf","style":{"code":true}},{"type":"text","text":" function is now coupled to the transducing context. So if you want to include the "},{"type":"text","text":"4","style":{"code":true}},{"type":"text","text":" then you need to know when you create the transducer that it will be used in a specific context and that you need to call "},{"type":"text","text":"conj","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"conj!","style":{"code":true}},{"type":"text","text":" or whatever. So I think that this signature of the function makes more sense:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn halt-when2\n  ([pred] (halt-when2 pred nil))\n  ([pred retf]\n   (fn [rf]\n     (fn\n       ([] (rf))\n       ([result]\n        (if (and (map? result) (contains? result ::halt))\n          (::halt result)\n          (rf result)))\n       ([result input]\n        (if (pred input)\n          (let [r (if retf\n                    (retf rf result input)\n                    result)]\n            (reduced {::halt (rf r)}))\n          (rf result input)))))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and now you get to actually decide what to do:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(into [] (halt-when2 #{4} (fn [rf r i] (rf r i))) (range)) ;; => [0 1 2 3 4]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Does that make sense?"}]}]}],"user":"U0P0TMEFJ","text":"I think that `halt-when` should stop when the predicate returns true, and not include the result. However, it tries to give you a function to give you a strategy for what to do when it does, so you can decide what to do. But I think there's a problem with the way it's implemented. Firstly, it seems to return `input` where it should be returning the result:\n```(into [] (halt-when #{4}) (range))\nclass java.lang.Long cannot be cast to class clojure.lang.ITransientCollection (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.ITransientCollection is in unnamed module of loader 'app')```\nSo I think this stops it from throwing class cast exceptions:\n```(defn halt-when1\n  ([pred] (halt-when1 pred nil))\n  ([pred retf]\n   (fn [rf]\n     (fn\n       ([] (rf))\n       ([result]\n        (if (and (map? result) (contains? result ::halt))\n          (::halt result)\n          (rf result)))\n       ([result input]\n        (if (pred input)\n          (reduced {::halt (rf (if retf (retf result input) result))})\n          (rf result input)))))))\n(into [] (halt-when1 #{4}) (range)) ;; =&gt; [0 1 2 3]```\nHowever, I think that the `retf` function is now coupled to the transducing context. So if you want to include the `4` then you need to know when you create the transducer that it will be used in a specific context and that you need to call `conj` or `conj!` or whatever. So I think that this signature of the function makes more sense:\n```(defn halt-when2\n  ([pred] (halt-when2 pred nil))\n  ([pred retf]\n   (fn [rf]\n     (fn\n       ([] (rf))\n       ([result]\n        (if (and (map? result) (contains? result ::halt))\n          (::halt result)\n          (rf result)))\n       ([result input]\n        (if (pred input)\n          (let [r (if retf\n                    (retf rf result input)\n                    result)]\n            (reduced {::halt (rf r)}))\n          (rf result input)))))))```\nand now you get to actually decide what to do:\n```(into [] (halt-when2 #{4} (fn [rf r i] (rf r i))) (range)) ;; =&gt; [0 1 2 3 4]```\nDoes that make sense?"}
{"type":"message","thread_ts":"1629348800.164000","ts":"1629375767.166100","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"a0259b48-7008-4e7a-887a-838569eb69b6","blocks":[{"type":"rich_text","block_id":"suSC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've asked this here: "},{"type":"link","url":"https:\/\/ask.clojure.org\/index.php\/10955\/halt-when-transducer-throws-class-cast-exception-when-used"},{"type":"text","text":" cos I think it looks like a bug "},{"type":"emoji","name":"wink"}]}]}],"user":"U0P0TMEFJ","text":"I've asked this here: <https:\/\/ask.clojure.org\/index.php\/10955\/halt-when-transducer-throws-class-cast-exception-when-used> cos I think it looks like a bug :wink:"}
{"type":"message","thread_ts":"1629348800.164000","ts":"1629377056.166600","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"11712691-e167-4c1f-ac56-c9e652273b1c","blocks":[{"type":"rich_text","block_id":"U1v9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm ... ok ... just found this : "},{"type":"link","url":"https:\/\/groups.google.com\/g\/clojure\/c\/6HvmJIUsXKk\/m\/gLqUsfcnAwAJ"}]}]}],"user":"U0P0TMEFJ","text":"hmm ... ok ... just found this : <https:\/\/groups.google.com\/g\/clojure\/c\/6HvmJIUsXKk\/m\/gLqUsfcnAwAJ>"}
{"subscribed":false,"reply_users":["UU67HFS2X","U04V70XH6"],"type":"message","thread_ts":"1629302431.158100","reply_users_count":2,"ts":"1629302431.158100","team":"T03RZGPFR","client_msg_id":"990adf21-ac91-427a-8122-41e2f87689e0","blocks":[{"type":"rich_text","block_id":"CB\/","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UU67HFS2X"},{"type":"text","text":" You'll need to provide a bit more info... in a thread, could you paste the stacktrace and provide some info about "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" and your project structure?"}]}]}],"is_locked":false,"user":"U04V70XH6","reply_count":18,"latest_reply":"1629358788.164600","text":"<@UU67HFS2X> You'll need to provide a bit more info... in a thread, could you paste the stacktrace and provide some info about `deps.edn` and your project structure?"}
{"subscribed":false,"reply_users":["UU67HFS2X","U04V70XH6"],"type":"message","thread_ts":"1629302431.158100","reply_users_count":2,"ts":"1629302431.158100","team":"T03RZGPFR","client_msg_id":"990adf21-ac91-427a-8122-41e2f87689e0","blocks":[{"type":"rich_text","block_id":"CB\/","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UU67HFS2X"},{"type":"text","text":" You'll need to provide a bit more info... in a thread, could you paste the stacktrace and provide some info about "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" and your project structure?"}]}]}],"is_locked":false,"user":"U04V70XH6","reply_count":18,"latest_reply":"1629358788.164600","text":"<@UU67HFS2X> You'll need to provide a bit more info... in a thread, could you paste the stacktrace and provide some info about `deps.edn` and your project structure?"}
{"type":"message","thread_ts":"1629302431.158100","edited":{"user":"UU67HFS2X","ts":"1629302837.000000"},"ts":"1629302651.158200","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"5b263013-ae64-4202-8515-7c6f4b198e0f","blocks":[{"type":"rich_text","block_id":"nLd","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"clj -X:dev:tests\nSLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\nSLF4J: See "},{"type":"link","url":"http:\/\/www.slf4j.org\/codes.html#StaticLoggerBinder"},{"type":"text","text":" for further details.\n\nRunning tests in #{\"test\"}\nException in thread \"main\" Syntax error compiling at (beanbag\/schemas\/pricesnagger\/feeds\/feeds.clj:1:1).\n\tat clojure.lang.Compiler.load(Compiler.java:7647)\n\tat clojure.lang.RT.loadResourceScript(RT.java:381)\n\tat clojure.lang.RT.loadResourceScript(RT.java:372)\n\tat clojure.lang.RT.load(RT.java:463)\n\tat clojure.lang.RT.load(RT.java:428)\n\tat clojure.core$load$fn__6824.invoke(core.clj:6126)\n\tat clojure.core$load.invokeStatic(core.clj:6125)\n\tat clojure.core$load.doInvoke(core.clj:6109)\n\tat clojure.lang.RestFn.invoke(RestFn.java:408)\n\tat clojure.core$load_one.invokeStatic(core.clj:5908)\n\tat clojure.core$load_one.invoke(core.clj:5903)\n\tat clojure.core$load_lib$fn__6765.invoke(core.clj:5948)\n\tat clojure.core$load_lib.invokeStatic(core.clj:5947)\n\tat clojure.core$load_lib.doInvoke(core.clj:5928)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_libs.invokeStatic(core.clj:5985)\n\tat clojure.core$load_libs.doInvoke(core.clj:5969)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$require.invokeStatic(core.clj:6007)\n\tat clojure.core$require.doInvoke(core.clj:6007)\n\tat clojure.lang.RestFn.invoke(RestFn.java:482)\n\tat beanbag.views.v2.orders.invoice_generation$eval22174$loading__6706__auto____22175.invoke(invoice_generation.clj:1)\n\tat beanbag.views.v2.orders.invoice_generation$eval22174.invokeStatic(invoice_generation.clj:1)\n\tat beanbag.views.v2.orders.invoice_generation$eval22174.invoke(invoice_generation.clj:1)\n\tat clojure.lang.Compiler.eval(Compiler.java:7176)\n\tat clojure.lang.Compiler.eval(Compiler.java:7165)\n\tat clojure.lang.Compiler.load(Compiler.java:7635)\n\tat clojure.lang.RT.loadResourceScript(RT.java:381)\n\tat clojure.lang.RT.loadResourceScript(RT.java:372)\n\tat clojure.lang.RT.load(RT.java:463)\n\tat clojure.lang.RT.load(RT.java:428)\n\tat clojure.core$load$fn__6824.invoke(core.clj:6126)\n\tat clojure.core$load.invokeStatic(core.clj:6125)\n\tat clojure.core$load.doInvoke(core.clj:6109)\n\tat clojure.lang.RestFn.invoke(RestFn.java:408)\n\tat clojure.core$load_one.invokeStatic(core.clj:5908)\n\tat clojure.core$load_one.invoke(core.clj:5903)\n\tat clojure.core$load_lib$fn__6765.invoke(core.clj:5948)\n\tat clojure.core$load_lib.invokeStatic(core.clj:5947)\n\tat clojure.core$load_lib.doInvoke(core.clj:5928)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_libs.invokeStatic(core.clj:5985)\n\tat clojure.core$load_libs.doInvoke(core.clj:5969)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$require.invokeStatic(core.clj:6007)\n\tat clojure.core$require.doInvoke(core.clj:6007)\n\tat clojure.lang.RestFn.invoke(RestFn.java:551)\n\tat beanbag.v2.orders.invoice_generation_test$eval18746$loading__6706__auto____18747.invoke(invoice_generation_test.clj:1)\n\tat beanbag.v2.orders.invoice_generation_test$eval18746.invokeStatic(invoice_generation_test.clj:1)\n\tat beanbag.v2.orders.invoice_generation_test$eval18746.invoke(invoice_generation_test.clj:1)\n\tat clojure.lang.Compiler.eval(Compiler.java:7176)\n\tat clojure.lang.Compiler.eval(Compiler.java:7165)\n\tat clojure.lang.Compiler.load(Compiler.java:7635)\n\tat clojure.lang.RT.loadResourceScript(RT.java:381)\n\tat clojure.lang.RT.loadResourceScript(RT.java:372)\n\tat clojure.lang.RT.load(RT.java:463)\n\tat clojure.lang.RT.load(RT.java:428)\n\tat clojure.core$load$fn__6824.invoke(core.clj:6126)\n\tat clojure.core$load.invokeStatic(core.clj:6125)\n\tat clojure.core$load.doInvoke(core.clj:6109)\n\tat clojure.lang.RestFn.invoke(RestFn.java:408)\n\tat clojure.core$load_one.invokeStatic(core.clj:5908)\n\tat clojure.core$load_one.invoke(core.clj:5903)\n\tat clojure.core$load_lib$fn__6765.invoke(core.clj:5948)\n\tat clojure.core$load_lib.invokeStatic(core.clj:5947)\n\tat clojure.core$load_lib.doInvoke(core.clj:5928)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_libs.invokeStatic(core.clj:5985)\n\tat clojure.core$load_libs.doInvoke(core.clj:5969)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$require.invokeStatic(core.clj:6007)\n\tat clojure.core$require.doInvoke(core.clj:6007)\n\tat clojure.lang.RestFn.invoke(RestFn.java:408)\n\tat clojure.core$map$fn__5851.invoke(core.clj:2755)\n\tat clojure.lang.LazySeq.sval(LazySeq.java:42)\n\tat clojure.lang.LazySeq.seq(LazySeq.java:51)\n\tat clojure.lang.RT.seq(RT.java:531)\n\tat clojure.core$seq__5387.invokeStatic(core.clj:137)\n\tat clojure.core$dorun.invokeStatic(core.clj:3133)\n\tat clojure.core$dorun.invoke(core.clj:3133)\n\tat cognitect.test_runner$test.invokeStatic(test_runner.clj:71)\n\tat cognitect.test_runner$test.invoke(test_runner.clj:62)\n\tat cognitect.test_runner.api$do_test.invokeStatic(api.clj:14)\n\tat cognitect.test_runner.api$do_test.invoke(api.clj:6)\n\tat cognitect.test_runner.api$test.invokeStatic(api.clj:30)\n\tat cognitect.test_runner.api$test.invoke(api.clj:16)\n\tat clojure.lang.AFn.applyToHelper(AFn.java:154)\n\tat clojure.lang.AFn.applyTo(AFn.java:144)\n\tat clojure.lang.Var.applyTo(Var.java:705)\n\tat clojure.core$apply.invokeStatic(core.clj:665)\n\tat clojure.core$apply.invoke(core.clj:660)\n\tat clojure.run.exec$exec.invokeStatic(exec.clj:39)\n\tat clojure.run.exec$exec.doInvoke(exec.clj:34)\n\tat clojure.lang.RestFn.invoke(RestFn.java:423)\n\tat clojure.run.exec$_main.invokeStatic(exec.clj:163)\n\tat clojure.run.exec$_main.doInvoke(exec.clj:153)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.lang.Var.applyTo(Var.java:705)\n\tat clojure.core$apply.invokeStatic(core.clj:665)\n\tat clojure.main$main_opt.invokeStatic(main.clj:491)\n\tat clojure.main$main_opt.invoke(main.clj:487)\n\tat clojure.main$main.invokeStatic(main.clj:598)\n\tat clojure.main$main.doInvoke(main.clj:561)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.lang.Var.applyTo(Var.java:705)\n\tat clojure.main.main(main.java:37)\nCaused by: java.lang.Exception: No namespace: beanbag.schemas.pricesnagger.feeds.models\n\tat clojure.core$refer.invokeStatic(core.clj:4234)\n\tat clojure.core$refer.doInvoke(core.clj:4217)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:139)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_lib.invokeStatic(core.clj:5966)\n\tat clojure.core$load_lib.doInvoke(core.clj:5928)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_libs.invokeStatic(core.clj:5985)\n\tat clojure.core$load_libs.doInvoke(core.clj:5969)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$require.invokeStatic(core.clj:6007)\n\tat clojure.core$require.doInvoke(core.clj:6007)\n\tat clojure.lang.RestFn.invoke(RestFn.java:805)\n\tat beanbag.schemas.pricesnagger.feeds.feeds$eval22202$loading__6706__auto____22203.invoke(feeds.clj:1)\n\tat beanbag.schemas.pricesnagger.feeds.feeds$eval22202.invokeStatic(feeds.clj:1)\n\tat beanbag.schemas.pricesnagger.feeds.feeds$eval22202.invoke(feeds.clj:1)\n\tat clojure.lang.Compiler.eval(Compiler.java:7176)\n\tat clojure.lang.Compiler.eval(Compiler.java:7165)\n\tat clojure.lang.Compiler.load(Compiler.java:7635)\n\t... 111 more"}]},{"type":"rich_text_section","elements":[]}]}],"user":"UU67HFS2X","text":"```clj -X:dev:tests\nSLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\nSLF4J: See <http:\/\/www.slf4j.org\/codes.html#StaticLoggerBinder> for further details.\n\nRunning tests in #{\"test\"}\nException in thread \"main\" Syntax error compiling at (beanbag\/schemas\/pricesnagger\/feeds\/feeds.clj:1:1).\n\tat clojure.lang.Compiler.load(Compiler.java:7647)\n\tat clojure.lang.RT.loadResourceScript(RT.java:381)\n\tat clojure.lang.RT.loadResourceScript(RT.java:372)\n\tat clojure.lang.RT.load(RT.java:463)\n\tat clojure.lang.RT.load(RT.java:428)\n\tat clojure.core$load$fn__6824.invoke(core.clj:6126)\n\tat clojure.core$load.invokeStatic(core.clj:6125)\n\tat clojure.core$load.doInvoke(core.clj:6109)\n\tat clojure.lang.RestFn.invoke(RestFn.java:408)\n\tat clojure.core$load_one.invokeStatic(core.clj:5908)\n\tat clojure.core$load_one.invoke(core.clj:5903)\n\tat clojure.core$load_lib$fn__6765.invoke(core.clj:5948)\n\tat clojure.core$load_lib.invokeStatic(core.clj:5947)\n\tat clojure.core$load_lib.doInvoke(core.clj:5928)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_libs.invokeStatic(core.clj:5985)\n\tat clojure.core$load_libs.doInvoke(core.clj:5969)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$require.invokeStatic(core.clj:6007)\n\tat clojure.core$require.doInvoke(core.clj:6007)\n\tat clojure.lang.RestFn.invoke(RestFn.java:482)\n\tat beanbag.views.v2.orders.invoice_generation$eval22174$loading__6706__auto____22175.invoke(invoice_generation.clj:1)\n\tat beanbag.views.v2.orders.invoice_generation$eval22174.invokeStatic(invoice_generation.clj:1)\n\tat beanbag.views.v2.orders.invoice_generation$eval22174.invoke(invoice_generation.clj:1)\n\tat clojure.lang.Compiler.eval(Compiler.java:7176)\n\tat clojure.lang.Compiler.eval(Compiler.java:7165)\n\tat clojure.lang.Compiler.load(Compiler.java:7635)\n\tat clojure.lang.RT.loadResourceScript(RT.java:381)\n\tat clojure.lang.RT.loadResourceScript(RT.java:372)\n\tat clojure.lang.RT.load(RT.java:463)\n\tat clojure.lang.RT.load(RT.java:428)\n\tat clojure.core$load$fn__6824.invoke(core.clj:6126)\n\tat clojure.core$load.invokeStatic(core.clj:6125)\n\tat clojure.core$load.doInvoke(core.clj:6109)\n\tat clojure.lang.RestFn.invoke(RestFn.java:408)\n\tat clojure.core$load_one.invokeStatic(core.clj:5908)\n\tat clojure.core$load_one.invoke(core.clj:5903)\n\tat clojure.core$load_lib$fn__6765.invoke(core.clj:5948)\n\tat clojure.core$load_lib.invokeStatic(core.clj:5947)\n\tat clojure.core$load_lib.doInvoke(core.clj:5928)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_libs.invokeStatic(core.clj:5985)\n\tat clojure.core$load_libs.doInvoke(core.clj:5969)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$require.invokeStatic(core.clj:6007)\n\tat clojure.core$require.doInvoke(core.clj:6007)\n\tat clojure.lang.RestFn.invoke(RestFn.java:551)\n\tat beanbag.v2.orders.invoice_generation_test$eval18746$loading__6706__auto____18747.invoke(invoice_generation_test.clj:1)\n\tat beanbag.v2.orders.invoice_generation_test$eval18746.invokeStatic(invoice_generation_test.clj:1)\n\tat beanbag.v2.orders.invoice_generation_test$eval18746.invoke(invoice_generation_test.clj:1)\n\tat clojure.lang.Compiler.eval(Compiler.java:7176)\n\tat clojure.lang.Compiler.eval(Compiler.java:7165)\n\tat clojure.lang.Compiler.load(Compiler.java:7635)\n\tat clojure.lang.RT.loadResourceScript(RT.java:381)\n\tat clojure.lang.RT.loadResourceScript(RT.java:372)\n\tat clojure.lang.RT.load(RT.java:463)\n\tat clojure.lang.RT.load(RT.java:428)\n\tat clojure.core$load$fn__6824.invoke(core.clj:6126)\n\tat clojure.core$load.invokeStatic(core.clj:6125)\n\tat clojure.core$load.doInvoke(core.clj:6109)\n\tat clojure.lang.RestFn.invoke(RestFn.java:408)\n\tat clojure.core$load_one.invokeStatic(core.clj:5908)\n\tat clojure.core$load_one.invoke(core.clj:5903)\n\tat clojure.core$load_lib$fn__6765.invoke(core.clj:5948)\n\tat clojure.core$load_lib.invokeStatic(core.clj:5947)\n\tat clojure.core$load_lib.doInvoke(core.clj:5928)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_libs.invokeStatic(core.clj:5985)\n\tat clojure.core$load_libs.doInvoke(core.clj:5969)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$require.invokeStatic(core.clj:6007)\n\tat clojure.core$require.doInvoke(core.clj:6007)\n\tat clojure.lang.RestFn.invoke(RestFn.java:408)\n\tat clojure.core$map$fn__5851.invoke(core.clj:2755)\n\tat clojure.lang.LazySeq.sval(LazySeq.java:42)\n\tat clojure.lang.LazySeq.seq(LazySeq.java:51)\n\tat clojure.lang.RT.seq(RT.java:531)\n\tat clojure.core$seq__5387.invokeStatic(core.clj:137)\n\tat clojure.core$dorun.invokeStatic(core.clj:3133)\n\tat clojure.core$dorun.invoke(core.clj:3133)\n\tat cognitect.test_runner$test.invokeStatic(test_runner.clj:71)\n\tat cognitect.test_runner$test.invoke(test_runner.clj:62)\n\tat cognitect.test_runner.api$do_test.invokeStatic(api.clj:14)\n\tat cognitect.test_runner.api$do_test.invoke(api.clj:6)\n\tat cognitect.test_runner.api$test.invokeStatic(api.clj:30)\n\tat cognitect.test_runner.api$test.invoke(api.clj:16)\n\tat clojure.lang.AFn.applyToHelper(AFn.java:154)\n\tat clojure.lang.AFn.applyTo(AFn.java:144)\n\tat clojure.lang.Var.applyTo(Var.java:705)\n\tat clojure.core$apply.invokeStatic(core.clj:665)\n\tat clojure.core$apply.invoke(core.clj:660)\n\tat clojure.run.exec$exec.invokeStatic(exec.clj:39)\n\tat clojure.run.exec$exec.doInvoke(exec.clj:34)\n\tat clojure.lang.RestFn.invoke(RestFn.java:423)\n\tat clojure.run.exec$_main.invokeStatic(exec.clj:163)\n\tat clojure.run.exec$_main.doInvoke(exec.clj:153)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.lang.Var.applyTo(Var.java:705)\n\tat clojure.core$apply.invokeStatic(core.clj:665)\n\tat clojure.main$main_opt.invokeStatic(main.clj:491)\n\tat clojure.main$main_opt.invoke(main.clj:487)\n\tat clojure.main$main.invokeStatic(main.clj:598)\n\tat clojure.main$main.doInvoke(main.clj:561)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.lang.Var.applyTo(Var.java:705)\n\tat clojure.main.main(main.java:37)\nCaused by: java.lang.Exception: No namespace: beanbag.schemas.pricesnagger.feeds.models\n\tat clojure.core$refer.invokeStatic(core.clj:4234)\n\tat clojure.core$refer.doInvoke(core.clj:4217)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:139)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_lib.invokeStatic(core.clj:5966)\n\tat clojure.core$load_lib.doInvoke(core.clj:5928)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:142)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$load_libs.invokeStatic(core.clj:5985)\n\tat clojure.core$load_libs.doInvoke(core.clj:5969)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:137)\n\tat clojure.core$apply.invokeStatic(core.clj:667)\n\tat clojure.core$require.invokeStatic(core.clj:6007)\n\tat clojure.core$require.doInvoke(core.clj:6007)\n\tat clojure.lang.RestFn.invoke(RestFn.java:805)\n\tat beanbag.schemas.pricesnagger.feeds.feeds$eval22202$loading__6706__auto____22203.invoke(feeds.clj:1)\n\tat beanbag.schemas.pricesnagger.feeds.feeds$eval22202.invokeStatic(feeds.clj:1)\n\tat beanbag.schemas.pricesnagger.feeds.feeds$eval22202.invoke(feeds.clj:1)\n\tat clojure.lang.Compiler.eval(Compiler.java:7176)\n\tat clojure.lang.Compiler.eval(Compiler.java:7165)\n\tat clojure.lang.Compiler.load(Compiler.java:7635)\n\t... 111 more```\n"}
{"type":"message","thread_ts":"1629302431.158100","edited":{"user":"UU67HFS2X","ts":"1629302821.000000"},"ts":"1629302743.158400","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"b3d271a4-fa69-4b0a-9645-bad5416bc4de","blocks":[{"type":"rich_text","block_id":"MGF=","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":":tests {:extra-paths [\"test\"]\n                   :extra-deps {io.github.cognitect-labs\/test-runner\n                                {:git\/url \""},{"type":"link","url":"https:\/\/github.com\/cognitect-labs\/test-runner.git"},{"type":"text","text":"\"\n                                 :sha \"4e7e1c0dfd5291fa2134df052443dc29695d8cbe\"}}\n                   :main-opts [\"-m\" \"cognitect.test-runner\"]\n                   :exec-fn cognitect.test-runner.api\/test\n                   }"}]},{"type":"rich_text_section","elements":[]}]}],"user":"UU67HFS2X","text":"```:tests {:extra-paths [\"test\"]\n                   :extra-deps {io.github.cognitect-labs\/test-runner\n                                {:git\/url \"<https:\/\/github.com\/cognitect-labs\/test-runner.git>\"\n                                 :sha \"4e7e1c0dfd5291fa2134df052443dc29695d8cbe\"}}\n                   :main-opts [\"-m\" \"cognitect.test-runner\"]\n                   :exec-fn cognitect.test-runner.api\/test\n                   }```\n"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629302791.158700","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"089f0747-ee00-46f9-ad61-26937d2749d3","blocks":[{"type":"rich_text","block_id":"J8as","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":":paths [\"resources\" \"src\" \"libs\"] the rest is basically just my deps"}]}]}],"user":"UU67HFS2X","text":":paths [\"resources\" \"src\" \"libs\"] the rest is basically just my deps"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629302915.159200","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"854cca46-e4d9-4c10-9420-b48455abb7ae","blocks":[{"type":"rich_text","block_id":"Fwt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"when i look in those files the linter does not pick up any syntax errors, and i can not spot any I have tried commenting out a load of stuff but still not traced down where the issue is to resolve it"}]}]}],"user":"UU67HFS2X","text":"when i look in those files the linter does not pick up any syntax errors, and i can not spot any I have tried commenting out a load of stuff but still not traced down where the issue is to resolve it"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629303024.159400","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"f7fbe714-b23f-4a9c-9c58-cf2e7735cf1a","blocks":[{"type":"rich_text","block_id":"OFL0M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"would some kind of cyclic dependency cause this type of error ?"}]}]}],"user":"UU67HFS2X","text":"would some kind of cyclic dependency cause this type of error ?"}
{"type":"message","thread_ts":"1629302431.158100","edited":{"user":"U04V70XH6","ts":"1629303758.000000"},"ts":"1629303700.159600","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"cc76147d-4eb9-4a21-a457-60c60b8a2738","blocks":[{"type":"rich_text","block_id":"VyCAl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could be. The three namespaces of interest are "},{"type":"text","text":"beanbag.schemas.pricesnagger.feeds.feeds","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"beanbag.schemas.pricesnagger.feeds.models","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"beanbag.v2.orders.invoice-generation-test","style":{"code":true}}]}]}],"user":"U04V70XH6","text":"Could be. The three namespaces of interest are `beanbag.schemas.pricesnagger.feeds.feeds`, `beanbag.schemas.pricesnagger.feeds.models`, `beanbag.v2.orders.invoice-generation-test`"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629303792.159900","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"fbb4b63c-3d19-49bf-af58-8f75d72560ed","blocks":[{"type":"rich_text","block_id":"sj8YA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It looks like "},{"type":"text","text":"invoice-generation-test","style":{"code":true}},{"type":"text","text":" requires "},{"type":"text","text":"feeds","style":{"code":true}},{"type":"text","text":" and that requires "},{"type":"text","text":"models","style":{"code":true}},{"type":"text","text":"?"}]}]}],"user":"U04V70XH6","text":"It looks like `invoice-generation-test` requires `feeds` and that requires `models`?"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629304037.160100","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"72bf85b2-2f2a-48ba-8ff1-e70c1427a362","blocks":[{"type":"rich_text","block_id":"heOde","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so invoice-generation-test does not require either of those namespaces though it likely includes other namespace that do use them"}]}]}],"user":"UU67HFS2X","text":"so invoice-generation-test does not require either of those namespaces though it likely includes other namespace that do use them"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629304093.160300","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"669e6186-0cde-4679-a5c9-46d6172ac456","blocks":[{"type":"rich_text","block_id":"a+hnI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the stack trace feels very unhelpful in this case, not sure why its even flagging invoice-generation-test in the stacktrace, is it saying the error might be related to that"}]}]}],"user":"UU67HFS2X","text":"the stack trace feels very unhelpful in this case, not sure why its even flagging invoice-generation-test in the stacktrace, is it saying the error might be related to that"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629304294.160500","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"9e216956-bec2-405a-885a-ba44b18e5f14","blocks":[{"type":"rich_text","block_id":"GiC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah so that made me comment out the whole test file and the issue has gone"}]}]}],"user":"UU67HFS2X","text":"ah so that made me comment out the whole test file and the issue has gone"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629304306.160700","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"098d7a98-0da1-47ef-b9f7-e629ec77eb2c","blocks":[{"type":"rich_text","block_id":"diUrr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so i guess its related some how"}]}]}],"user":"UU67HFS2X","text":"so i guess its related some how"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629304353.160900","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"0a9e5c68-efe2-4a5c-a1e0-74de30395957","blocks":[{"type":"rich_text","block_id":"\/YJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess i can remove the comments one by one until it comes back"}]}]}],"user":"UU67HFS2X","text":"I guess i can remove the comments one by one until it comes back"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629304942.161100","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"624a4a42-ea72-4324-9960-a91523116077","blocks":[{"type":"rich_text","block_id":"GrbK6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"definitely related to required namespaces, two in particular so i will look in those see what i can discover"}]}]}],"user":"UU67HFS2X","text":"definitely related to required namespaces, two in particular so i will look in those see what i can discover"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629304975.161300","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"61a8f6e5-f108-4ba3-9999-3bdb8d6b0dfa","blocks":[{"type":"rich_text","block_id":"Iqq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks for you assistance "},{"type":"user","user_id":"U064X3EF3"},{"type":"text","text":" helpful as always "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"UU67HFS2X","text":"thanks for you assistance <@U064X3EF3> helpful as always :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629305449.161500","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"713c0026-e01a-4eef-9857-9bb090d78e05","blocks":[{"type":"rich_text","block_id":"CIm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"not sure why its even flagging invoice-generation-test in the stacktrace\" because that's the file Clojure was compiling when it ran into the error..."}]}]}],"user":"U04V70XH6","text":"\"not sure why its even flagging invoice-generation-test in the stacktrace\" because that's the file Clojure was compiling when it ran into the error..."}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629305469.161700","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"4c6d29dd-7299-4def-b83c-ec5b9ec861a7","blocks":[{"type":"rich_text","block_id":"73dS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let us know what the solution ended up being!"}]}]}],"user":"U04V70XH6","text":"Let us know what the solution ended up being!"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629305569.161900","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"3ba24d9b-abbf-4e6d-8e08-3da58f744cbb","blocks":[{"type":"rich_text","block_id":"0Cs=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sure it for tomorrow now anyway to finish fixing"}]}]}],"user":"UU67HFS2X","text":"sure it for tomorrow now anyway to finish fixing"}
{"type":"message","thread_ts":"1629302431.158100","ts":"1629358788.164600","parent_user_id":"U04V70XH6","team":"T03RZGPFR","client_msg_id":"47523149-71be-404d-a816-bb68247a9c88","blocks":[{"type":"rich_text","block_id":"=nGY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"seems it was a circular dependancy, there was a constant set in feeds.feed i have moved it under feeds.constants and now it works, I still 100% dont get why I get this in the tests but not in the running application as the requires are not that different"}]}]}],"user":"UU67HFS2X","reactions":[{"name":"+1","users":["UQY3M3F6D"],"count":1},{"name":"+1::skin-tone-2","users":["U04V70XH6"],"count":1}],"text":"seems it was a circular dependancy, there was a constant set in feeds.feed i have moved it under feeds.constants and now it works, I still 100% dont get why I get this in the tests but not in the running application as the requires are not that different"}
{"client_msg_id":"2b9afab2-94be-4467-887e-aa7e61ae7cd7","type":"message","text":"the error is not in any of the test namespaces how ever","user":"UU67HFS2X","ts":"1629301921.156700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Anv8=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the error is not in any of the test namespaces how ever"}]}]}]}
{"client_msg_id":"b96ea19c-cf5a-4765-9fcb-9a24a0881276","type":"message","text":"its strange in that the app runs, and the thing i change was to bring in the cognitext test runner and use clj -X:tests which then makes the error appear","user":"UU67HFS2X","ts":"1629301905.156000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"e7G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"its strange in that the app runs, and the thing i change was to bring in the cognitext test runner and use clj -X:tests which then makes the error appear"}]}]}]}
{"client_msg_id":"1060626c-4ddf-4f0a-969d-d7ce49b7e809","type":"message","text":"wonder if anyone can give me some suggestions, I have a stack trace Caused by: java.lang.Exception: No namespace further up the stack trace I have Exception in thread \"main\" Syntax error compiling at line 1:1 I know this is normally caused by - and _ but i have neither in the namespace or files, anything else i should be looking for ?","user":"UU67HFS2X","ts":"1629301853.154900","team":"T03RZGPFR","edited":{"user":"UU67HFS2X","ts":"1629301994.000000"},"blocks":[{"type":"rich_text","block_id":"JU0CV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"wonder if anyone can give me some suggestions, I have a stack trace Caused by: java.lang.Exception: No namespace further up the stack trace I have Exception in thread \"main\" Syntax error compiling at line 1:1 I know this is normally caused by - and _ but i have neither in the namespace or files, anything else i should be looking for ?"}]}]}]}
{"subscribed":false,"reply_users":["U45T93RA6","UL638RXE2","U022T96EFV3"],"type":"message","thread_ts":"1629278238.149700","reply_users_count":3,"ts":"1629278238.149700","team":"T03RZGPFR","client_msg_id":"74d32287-991a-4c8a-9956-5cbd55d2aeba","blocks":[{"type":"rich_text","block_id":"t\/Tc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any whitelabel app examples in Clojure(script)? Open source? Just to be clear, I am not talking about frameworks\/templates where a developer fills in the details, but rather a users building their app with no-code\/low-code tools. I admit that the line becomes blurry at some point."}]}]}],"is_locked":false,"user":"UL638RXE2","reply_count":4,"latest_reply":"1629300967.152800","text":"Are there any whitelabel app examples in Clojure(script)? Open source? Just to be clear, I am not talking about frameworks\/templates where a developer fills in the details, but rather a users building their app with no-code\/low-code tools. I admit that the line becomes blurry at some point."}
{"subscribed":false,"reply_users":["U45T93RA6","UL638RXE2","U022T96EFV3"],"type":"message","thread_ts":"1629278238.149700","reply_users_count":3,"ts":"1629278238.149700","team":"T03RZGPFR","client_msg_id":"74d32287-991a-4c8a-9956-5cbd55d2aeba","blocks":[{"type":"rich_text","block_id":"t\/Tc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any whitelabel app examples in Clojure(script)? Open source? Just to be clear, I am not talking about frameworks\/templates where a developer fills in the details, but rather a users building their app with no-code\/low-code tools. I admit that the line becomes blurry at some point."}]}]}],"is_locked":false,"user":"UL638RXE2","reply_count":4,"latest_reply":"1629300967.152800","text":"Are there any whitelabel app examples in Clojure(script)? Open source? Just to be clear, I am not talking about frameworks\/templates where a developer fills in the details, but rather a users building their app with no-code\/low-code tools. I admit that the line becomes blurry at some point."}
{"type":"message","thread_ts":"1629278238.149700","ts":"1629284517.151300","parent_user_id":"UL638RXE2","team":"T03RZGPFR","client_msg_id":"6c1eb71b-bc5e-4a32-bc73-f4f765b2f972","blocks":[{"type":"rich_text","block_id":"Crek","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A no-code platform sounds like something that would be closed-source \/ commercial\n\nYou might have luck by searching "},{"type":"text","text":"multitenancy","style":{"code":true}},{"type":"text","text":" (not the same thing, but might solve a % of your problem)"}]}]}],"user":"U45T93RA6","text":"A no-code platform sounds like something that would be closed-source \/ commercial\n\nYou might have luck by searching `multitenancy` (not the same thing, but might solve a % of your problem)"}
{"type":"message","thread_ts":"1629278238.149700","ts":"1629285241.151500","parent_user_id":"UL638RXE2","team":"T03RZGPFR","client_msg_id":"55392223-fb45-4d9a-8918-14c2a2d0663a","blocks":[{"type":"rich_text","block_id":"0YH\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was actually more interested in how a no-code app could look like on the cljs side."}]}]}],"user":"UL638RXE2","text":"I was actually more interested in how a no-code app could look like on the cljs side."}
{"attachments":[{"color":"24292f","fallback":"day8\/re-com","fields":[{"title":"Website","value":"<https:\/\/re-com.day8.com.au>","short":true},{"title":"Stars","value":"706","short":true}],"is_app_unfurl":true,"title":"day8\/re-com","id":1,"app_unfurl_url":"https:\/\/github.com\/day8\/re-com","text":"A ClojureScript library of reusable components for Reagent","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629278238.149700","ts":"1629285680.151700","parent_user_id":"UL638RXE2","team":"T03RZGPFR","client_msg_id":"9dfd106b-4969-4834-a7d5-13b20543bf66","blocks":[{"type":"rich_text","block_id":"eevW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah I get it but it would be quite the coincidence... it's like asking if there's an Uber clone in clojurescript\n\nI'd focus instead in the underlying APIs (like drag and drop) or components (e.g. "},{"type":"link","url":"https:\/\/github.com\/day8\/re-com"},{"type":"text","text":")"}]}]}],"user":"U45T93RA6","text":"Yeah I get it but it would be quite the coincidence... it's like asking if there's an Uber clone in clojurescript\n\nI'd focus instead in the underlying APIs (like drag and drop) or components (e.g. <https:\/\/github.com\/day8\/re-com>)"}
{"attachments":[{"color":"24292f","fallback":"penpot\/penpot","fields":[{"title":"Website","value":"<https:\/\/penpot.app>","short":true},{"title":"Stars","value":"4695","short":true}],"is_app_unfurl":true,"title":"penpot\/penpot","id":1,"app_unfurl_url":"https:\/\/github.com\/penpot\/penpot","text":"Penpot - The Open-Source design &amp; prototyping platform","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629278238.149700","edited":{"user":"U022T96EFV3","ts":"1629301314.000000"},"ts":"1629300967.152800","parent_user_id":"UL638RXE2","team":"T03RZGPFR","client_msg_id":"ff314f55-ff2a-46cf-868d-6f7df938ed80","blocks":[{"type":"rich_text","block_id":"PZQrl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It\u2019s not quite what you\u2019re asking for, but "},{"type":"link","url":"https:\/\/github.com\/penpot\/penpot","text":"penpot"},{"type":"text","text":" is an open source design and prototyping platform written in clj\/cljs. I\u2019m sure there would be a lot of ideas you could "},{"type":"text","text":"draw ","style":{"italic":true}},{"type":"emoji","name":"lower_left_paintbrush"},{"type":"text","text":"  inspiration from by looking through their codebase if you\u2019re curious about creating a drag-n-drop UI builder "},{"type":"emoji","name":"simple_smile"}]}]}],"user":"U022T96EFV3","reactions":[{"name":"+1","users":["UL638RXE2"],"count":1}],"text":"It\u2019s not quite what you\u2019re asking for, but <https:\/\/github.com\/penpot\/penpot|penpot> is an open source design and prototyping platform written in clj\/cljs. I\u2019m sure there would be a lot of ideas you could _draw_ :lower_left_paintbrush:  inspiration from by looking through their codebase if you\u2019re curious about creating a drag-n-drop UI builder :simple_smile:"}
{"subscribed":false,"reply_users":["U45T93RA6","U06HHF230","U0N9SJHCH"],"type":"message","thread_ts":"1629273946.143200","reply_users_count":3,"ts":"1629273946.143200","team":"T03RZGPFR","client_msg_id":"c8e99406-3b80-4220-91ce-f700c944ec17","blocks":[{"type":"rich_text","block_id":"dMCR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In an application I have defined Clojure functions with "},{"type":"text","text":"defn","style":{"code":true}},{"type":"text","text":". These functions are called at runtime dynamically (from Java Code with "},{"type":"text","text":"Clojure.var","style":{"code":true}},{"type":"text","text":"), they are not referenced in the code itself. Everything works fine in the REPL, but in the compiled application, I am getting "},{"type":"text","text":"Attempting to call unbound fn","style":{"code":true}},{"type":"text","text":" when I try to call the function. My assumption is, that the functions are removed as dead code while compiling the Uberjar, would that be correct? Is there some kind of hint to prevent the removal?"}]}]}],"is_locked":false,"user":"U0N9SJHCH","reply_count":6,"latest_reply":"1629286735.152000","text":"In an application I have defined Clojure functions with `defn`. These functions are called at runtime dynamically (from Java Code with `Clojure.var`), they are not referenced in the code itself. Everything works fine in the REPL, but in the compiled application, I am getting `Attempting to call unbound fn` when I try to call the function. My assumption is, that the functions are removed as dead code while compiling the Uberjar, would that be correct? Is there some kind of hint to prevent the removal?"}
{"subscribed":false,"reply_users":["U45T93RA6","U06HHF230","U0N9SJHCH"],"type":"message","thread_ts":"1629273946.143200","reply_users_count":3,"ts":"1629273946.143200","team":"T03RZGPFR","client_msg_id":"c8e99406-3b80-4220-91ce-f700c944ec17","blocks":[{"type":"rich_text","block_id":"dMCR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In an application I have defined Clojure functions with "},{"type":"text","text":"defn","style":{"code":true}},{"type":"text","text":". These functions are called at runtime dynamically (from Java Code with "},{"type":"text","text":"Clojure.var","style":{"code":true}},{"type":"text","text":"), they are not referenced in the code itself. Everything works fine in the REPL, but in the compiled application, I am getting "},{"type":"text","text":"Attempting to call unbound fn","style":{"code":true}},{"type":"text","text":" when I try to call the function. My assumption is, that the functions are removed as dead code while compiling the Uberjar, would that be correct? Is there some kind of hint to prevent the removal?"}]}]}],"is_locked":false,"user":"U0N9SJHCH","reply_count":6,"latest_reply":"1629286735.152000","text":"In an application I have defined Clojure functions with `defn`. These functions are called at runtime dynamically (from Java Code with `Clojure.var`), they are not referenced in the code itself. Everything works fine in the REPL, but in the compiled application, I am getting `Attempting to call unbound fn` when I try to call the function. My assumption is, that the functions are removed as dead code while compiling the Uberjar, would that be correct? Is there some kind of hint to prevent the removal?"}
{"type":"message","thread_ts":"1629273946.143200","edited":{"user":"U45T93RA6","ts":"1629274316.000000"},"ts":"1629274128.143300","parent_user_id":"U0N9SJHCH","team":"T03RZGPFR","client_msg_id":"e9a4fd88-d46d-4228-85ec-ccf148032794","blocks":[{"type":"rich_text","block_id":"eVKB4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uberjarring does not perform dead code elimination\n\nI'd debug this by inspecting the uberjar. For each ns there should be N .class files denoting each defn (or fn)\n\nIf there's nothing, there's something wrong in your uberjarring\n\n(I assume you perform AOT along with the uberjarring, but one does not imply the other)"}]}]}],"user":"U45T93RA6","text":"uberjarring does not perform dead code elimination\n\nI'd debug this by inspecting the uberjar. For each ns there should be N .class files denoting each defn (or fn)\n\nIf there's nothing, there's something wrong in your uberjarring\n\n(I assume you perform AOT along with the uberjarring, but one does not imply the other)"}
{"type":"message","thread_ts":"1629273946.143200","edited":{"user":"U06HHF230","ts":"1629274316.000000"},"ts":"1629274247.143500","parent_user_id":"U0N9SJHCH","team":"T03RZGPFR","client_msg_id":"93cd28ab-b015-4663-8067-fb690238ca4c","blocks":[{"type":"rich_text","block_id":"+fFe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There\u2019s no such thing as dead-code elimination in clj (on the standard jvm anyway \u2014 graalvm native-image does I believe do something like this though).\n\nI suspect you\u2019ve just not required the namespaces or initialised the clojure environment properly\u2026 e.g. with:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"IFn require = Clojure.var(\"clojure.core\", \"require\");\nrequire.invoke(Clojure.read(\"clojure.set\"));"}]}]}],"user":"U06HHF230","reactions":[{"name":"+1","users":["U45T93RA6","U0N9SJHCH"],"count":2}],"text":"There\u2019s no such thing as dead-code elimination in clj (on the standard jvm anyway \u2014 graalvm native-image does I believe do something like this though).\n\nI suspect you\u2019ve just not required the namespaces or initialised the clojure environment properly\u2026 e.g. with:\n\n```IFn require = Clojure.var(\"clojure.core\", \"require\");\nrequire.invoke(Clojure.read(\"clojure.set\"));```"}
{"type":"message","thread_ts":"1629273946.143200","ts":"1629274261.143700","parent_user_id":"U0N9SJHCH","team":"T03RZGPFR","client_msg_id":"a35c5391-e824-4887-a013-9edbbe737378","blocks":[{"type":"rich_text","block_id":"fHa","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/clojure.org\/reference\/java_interop#_calling_clojure_from_java"}]}]}],"user":"U06HHF230","text":"<https:\/\/clojure.org\/reference\/java_interop#_calling_clojure_from_java>"}
{"type":"message","thread_ts":"1629273946.143200","ts":"1629276209.145000","parent_user_id":"U0N9SJHCH","team":"T03RZGPFR","client_msg_id":"8f95013a-d295-4459-b16f-7a56ce63a463","blocks":[{"type":"rich_text","block_id":"ddm\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You suspected correctly, I did not require the ns. Thanks a lot you two!"}]}]}],"user":"U0N9SJHCH","reactions":[{"name":"+1","users":["U06HHF230"],"count":1}],"text":"You suspected correctly, I did not require the ns. Thanks a lot you two!"}
{"type":"message","thread_ts":"1629273946.143200","edited":{"user":"U06HHF230","ts":"1629281654.000000"},"ts":"1629281629.150500","parent_user_id":"U0N9SJHCH","team":"T03RZGPFR","client_msg_id":"614961ed-e992-488c-a412-16e970044083","blocks":[{"type":"rich_text","block_id":"i3IT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW you may be interested in "},{"type":"text","text":"clojure.core\/requiring-resolve","style":{"code":true}},{"type":"text","text":" (added in clojure 1.10)"}]}]}],"user":"U06HHF230","text":"FWIW you may be interested in `clojure.core\/requiring-resolve` (added in clojure 1.10)"}
{"type":"message","thread_ts":"1629273946.143200","ts":"1629286735.152000","parent_user_id":"U0N9SJHCH","team":"T03RZGPFR","client_msg_id":"3c54a723-41ee-4653-b96b-beb1af63c841","blocks":[{"type":"rich_text","block_id":"3UpB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks again, I bookmarked it "},{"type":"emoji","name":"+1"}]}]}],"user":"U0N9SJHCH","text":"Thanks again, I bookmarked it :+1:"}
{"client_msg_id":"e95230fd-49af-42d1-a7c7-db6dd3c372bb","type":"message","text":"I thought about doing that for `shadow-cljs.edn` a long time ago but decided against it. didn't feel right somehow. looked weird in practice IMHO.","user":"U05224H0W","ts":"1629270484.139200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"8b0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought about doing that for "},{"type":"text","text":"shadow-cljs.edn","style":{"code":true}},{"type":"text","text":" a long time ago but decided against it. didn't feel right somehow. looked weird in practice IMHO."}]}]}],"reactions":[{"name":"eyes","users":["U45T93RA6"],"count":1}]}
{"subscribed":false,"reply_users":["U06HHF230","U45T93RA6"],"type":"message","thread_ts":"1629270221.138100","reply_users_count":2,"ts":"1629270221.138100","team":"T03RZGPFR","client_msg_id":"2b4ed4de-c9e2-4051-a9d6-50db56bcb04e","blocks":[{"type":"rich_text","block_id":"f9Wx6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Say I have a file named config.edn representing a single map.\n\nWould you find a strong drawback to unwrapping the top-level map and letting each top-level form represent either a k or a v?\n\nMost times it would be obvious whether a form is a k or a v (keys are often a single keyword; values are often larger than keys). One could use commas after each k-v in case of doubt.\n\nThis would remove a level of indentation and also make editing\/formatting more isolated.\n\nI'm thinking of paredit navigation or map alignment... often those become global if everything belongs to one big map"}]}]}],"is_locked":false,"user":"U45T93RA6","reply_count":4,"latest_reply":"1629281541.150200","text":"Say I have a file named config.edn representing a single map.\n\nWould you find a strong drawback to unwrapping the top-level map and letting each top-level form represent either a k or a v?\n\nMost times it would be obvious whether a form is a k or a v (keys are often a single keyword; values are often larger than keys). One could use commas after each k-v in case of doubt.\n\nThis would remove a level of indentation and also make editing\/formatting more isolated.\n\nI'm thinking of paredit navigation or map alignment... often those become global if everything belongs to one big map"}
{"subscribed":false,"reply_users":["U06HHF230","U45T93RA6"],"type":"message","thread_ts":"1629270221.138100","reply_users_count":2,"ts":"1629270221.138100","team":"T03RZGPFR","client_msg_id":"2b4ed4de-c9e2-4051-a9d6-50db56bcb04e","blocks":[{"type":"rich_text","block_id":"f9Wx6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Say I have a file named config.edn representing a single map.\n\nWould you find a strong drawback to unwrapping the top-level map and letting each top-level form represent either a k or a v?\n\nMost times it would be obvious whether a form is a k or a v (keys are often a single keyword; values are often larger than keys). One could use commas after each k-v in case of doubt.\n\nThis would remove a level of indentation and also make editing\/formatting more isolated.\n\nI'm thinking of paredit navigation or map alignment... often those become global if everything belongs to one big map"}]}]}],"is_locked":false,"user":"U45T93RA6","reply_count":4,"latest_reply":"1629281541.150200","text":"Say I have a file named config.edn representing a single map.\n\nWould you find a strong drawback to unwrapping the top-level map and letting each top-level form represent either a k or a v?\n\nMost times it would be obvious whether a form is a k or a v (keys are often a single keyword; values are often larger than keys). One could use commas after each k-v in case of doubt.\n\nThis would remove a level of indentation and also make editing\/formatting more isolated.\n\nI'm thinking of paredit navigation or map alignment... often those become global if everything belongs to one big map"}
{"type":"message","thread_ts":"1629270221.138100","ts":"1629275123.144500","parent_user_id":"U45T93RA6","team":"T03RZGPFR","client_msg_id":"9daec606-5d4d-4b78-980d-6fa2344f5c4d","blocks":[{"type":"rich_text","block_id":"0l4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well the main problem as I see it is that "},{"type":"text","text":".edn","style":{"code":true}},{"type":"text","text":" is intended to be a data format; and therefore its interpretation will likely be shared and want to be unambiguous.\n\nIf you do this anyone reading your .edn file will need to know to slurp the file and handle it specially with something like: "},{"type":"text","text":"(read-string (str \"{\"  slurped-config \"}\"))","style":{"code":true}},{"type":"text","text":".\n\nSpecifically the problem I see is that you\u2019re removing the container from the serialisation, so users won\u2019t know what the correct structure is.  I would personally assume that such a file was a sequence of top-level forms that would need to be read one at a time with "},{"type":"text","text":"clojure.edn\/read","style":{"code":true}},{"type":"text","text":" rather than "},{"type":"text","text":"clojure.edn\/read-string","style":{"code":true}},{"type":"text","text":".\n\nUsing heuristics and hints like you suggest will be brittle (and also unlikely to be supported in any existing edn parser); commas in the edn spec are whitespace and not something most parsers represent as they have no homoiconic data representation.\n\nI see very little reason to opt out of the standard only to save two characters and a little bit of indentation.\n\nAlso one other problem is that users may easily find yourself with an odd number of forms, which will no longer generate a parse error."}]}]}],"user":"U06HHF230","text":"Well the main problem as I see it is that `.edn` is intended to be a data format; and therefore its interpretation will likely be shared and want to be unambiguous.\n\nIf you do this anyone reading your .edn file will need to know to slurp the file and handle it specially with something like: `(read-string (str \"{\"  slurped-config \"}\"))`.\n\nSpecifically the problem I see is that you\u2019re removing the container from the serialisation, so users won\u2019t know what the correct structure is.  I would personally assume that such a file was a sequence of top-level forms that would need to be read one at a time with `clojure.edn\/read` rather than `clojure.edn\/read-string`.\n\nUsing heuristics and hints like you suggest will be brittle (and also unlikely to be supported in any existing edn parser); commas in the edn spec are whitespace and not something most parsers represent as they have no homoiconic data representation.\n\nI see very little reason to opt out of the standard only to save two characters and a little bit of indentation.\n\nAlso one other problem is that users may easily find yourself with an odd number of forms, which will no longer generate a parse error."}
{"type":"message","thread_ts":"1629270221.138100","ts":"1629275209.144700","parent_user_id":"U45T93RA6","team":"T03RZGPFR","client_msg_id":"7fe1929f-f377-442e-b006-444e9166d690","blocks":[{"type":"rich_text","block_id":"1Vl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If your data really is just a sequence of forms, then you can certainly use "},{"type":"text","text":"clojure.edn\/read","style":{"code":true}},{"type":"text","text":" to read and represent it \u2014 but it sounds like it\u2019s a hashmap."}]}]}],"user":"U06HHF230","text":"If your data really is just a sequence of forms, then you can certainly use `clojure.edn\/read` to read and represent it \u2014 but it sounds like it\u2019s a hashmap."}
{"type":"message","thread_ts":"1629270221.138100","ts":"1629278430.150000","parent_user_id":"U45T93RA6","team":"T03RZGPFR","client_msg_id":"fc782406-89d6-49ab-ab46-614932f2fa26","blocks":[{"type":"rich_text","block_id":"JP5Y5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Good considerations thanks!\n\nA nuance which maybe I should have stated in advance is that only my app will read this file, prior to passing it elsewhere. (It's a fairly common thing to do)\n\nSo other than editors\/formatters\/linters there wouldn't be arbitrary readers that could somehow choke on this file\n\nI'm aware that what I have in mind isn't exactly clean, however I'll entertain the idea unless there's a hard-and-fast flaw"}]}]}],"user":"U45T93RA6","text":"Good considerations thanks!\n\nA nuance which maybe I should have stated in advance is that only my app will read this file, prior to passing it elsewhere. (It's a fairly common thing to do)\n\nSo other than editors\/formatters\/linters there wouldn't be arbitrary readers that could somehow choke on this file\n\nI'm aware that what I have in mind isn't exactly clean, however I'll entertain the idea unless there's a hard-and-fast flaw"}
{"type":"message","thread_ts":"1629270221.138100","ts":"1629281541.150200","parent_user_id":"U45T93RA6","team":"T03RZGPFR","client_msg_id":"43a67f2e-bf91-461e-8b24-a51ac02f6d0b","blocks":[{"type":"rich_text","block_id":"eSB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That\u2019s entirely up to you \u2014 but I wouldn\u2019t underestimate the communication power of having "},{"type":"text","text":"{","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"}","style":{"code":true}},{"type":"text","text":" in the file itself."}]}]}],"user":"U06HHF230","reactions":[{"name":"eyes","users":["U45T93RA6"],"count":1}],"text":"That\u2019s entirely up to you \u2014 but I wouldn\u2019t underestimate the communication power of having `{` `}` in the file itself."}
{"client_msg_id":"e5eb1f3e-301f-4e91-8467-f4712d0f6928","type":"message","text":"or python integration","user":"U3JH98J4R","ts":"1629242663.121400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"5ydKn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or python integration"}]}]}]}
{"client_msg_id":"590e7581-1ffb-46c9-93fe-7195a276702f","type":"message","text":"or tech ml dataset for the dataframe type stuff","user":"U3JH98J4R","ts":"1629242656.121200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"r8VTy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or tech ml dataset for the dataframe type stuff"}]}]}]}
{"client_msg_id":"8705a74e-a994-4ccd-8207-d2c288bdbc99","type":"message","text":"if you are just messing around with quaternions and whatnot maybe take a look at neanderthal","user":"U3JH98J4R","ts":"1629242604.120800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"NKI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you are just messing around with quaternions and whatnot maybe take a look at neanderthal"}]}]}]}
{"client_msg_id":"91cd35af-9dbf-4fd5-8139-e372c595cd9f","type":"message","text":"your spec above was doubles not ints, but yeah","user":"U051SS2EU","ts":"1629241499.116200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ueNeT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"your spec above was doubles not ints, but yeah"}]}]}],"reactions":[{"name":"white_check_mark","users":["U050CT4HR"],"count":1}]}
{"client_msg_id":"57593456-b012-46d4-aefa-6c97a756d66a","type":"message","text":"Brilliant:\n```(DataFrame\/of (into-array (map int-array\n                               [[0 0 0 0]\n                                [0 0 0 0]\n                                [0 0 0 0]]))\n              (into-array java.lang.String\n                          [\"w\"\n                           \"x\"\n                           \"y\"\n                           \"z\"]))```","user":"U050CT4HR","ts":"1629241445.115700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"dci4H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Brilliant:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(DataFrame\/of (into-array (map int-array\n                               [[0 0 0 0]\n                                [0 0 0 0]\n                                [0 0 0 0]]))\n              (into-array java.lang.String\n                          [\"w\"\n                           \"x\"\n                           \"y\"\n                           \"z\"]))"}]}]}]}
{"client_msg_id":"6d2c8a62-b2ca-4f83-98f4-8623d651221d","type":"message","text":"Aha, the array is only for the variable part.","user":"U050CT4HR","ts":"1629241356.115400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"q8Ug","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aha, the array is only for the variable part."}]}]}]}
{"client_msg_id":"a676ad56-8165-4a40-8c43-01103b6b1930","type":"message","text":"`(.of O data (into-array String [...]))`","user":"U051SS2EU","ts":"1629241335.115000","team":"T03RZGPFR","edited":{"user":"U051SS2EU","ts":"1629241362.000000"},"blocks":[{"type":"rich_text","block_id":"uBkfW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(.of O data (into-array String [...]))","style":{"code":true}}]}]}]}
{"client_msg_id":"6ff36e69-0b0b-4cd1-976e-ca8c5b928037","type":"message","text":"My understanding is that you just pass arrays to vararg functions.","user":"U050CT4HR","ts":"1629241320.114700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"YpTN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My understanding is that you just pass arrays to vararg functions."}]}]}]}
{"client_msg_id":"65053e0d-3adc-4e1c-8779-2876d44323b1","type":"message","text":"It\u2019s been a while since I\u2019ve had to interop with a vararg Java method. How would I call a static method with this type signature? `*of*(double[][]\u00a0data, java.lang.String...\u00a0names)`","user":"U050CT4HR","ts":"1629241282.113800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Z1X8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It\u2019s been a while since I\u2019ve had to interop with a vararg Java method. How would I call a static method with this type signature? "},{"type":"text","text":"of","style":{"bold":true,"code":true}},{"type":"text","text":"(double[][]\u00a0data, java.lang.String...\u00a0names)","style":{"code":true}}]}]}]}
{"client_msg_id":"efb21d35-210a-4105-a0f9-5ed15a4cdc65","type":"message","text":"(IIRC)","user":"U051SS2EU","ts":"1629240999.111400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"MDl9Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(IIRC)"}]}]}]}
{"client_msg_id":"3bc16141-b9ed-491f-ab01-9224fa60c70a","type":"message","text":"I think I got my signals crossed because under X11 you really do look up screens and windows with numeric ids that aren't pointers","user":"U051SS2EU","ts":"1629240984.111100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Eii","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I got my signals crossed because under X11 you really do look up screens and windows with numeric ids that aren't pointers"}]}]}]}
{"client_msg_id":"8a74e047-7787-46f7-8682-f7eb4ba74864","type":"message","text":"I guess I'll keep that in mind when I see random \"long\" args that are actually pointers","user":"U051SS2EU","ts":"1629240948.110200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"6mwB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I'll keep that in mind when I see random \"long\" args that are actually pointers"}]}]}]}
{"client_msg_id":"33b4b44d-4904-4510-bb45-38585593b9d6","type":"message","text":"&gt; [in]\tmonitor\tThe monitor to use for full screen mode, or NULL for windowed mode.\n&gt; [in]\tshare\tThe window whose context to share resources with, or NULL to not share resources. ","user":"U7RJTCH6J","ts":"1629240894.109600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"RfI","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"[in]\tmonitor\tThe monitor to use for full screen mode, or NULL for windowed mode.\n[in]\tshare\tThe window whose context to share resources with, or NULL to not share resources. "}]}]}]}
{"client_msg_id":"922008a6-934a-4ef7-a5b5-169e0032facb","type":"message","text":"yeah, it's just shitty docs and it wanted 0, thanks","user":"U051SS2EU","ts":"1629240893.109300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"9wV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, it's just shitty docs and it wanted 0, thanks"}]}]}]}
{"client_msg_id":"3fdf37b4-bfa7-45fa-a1fb-695740aebfa9","type":"message","text":"<https:\/\/www.glfw.org\/docs\/latest\/group__window.html#ga5c336fddf2cbb5b92f65f10fb6043344>","user":"U7RJTCH6J","ts":"1629240875.109000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"sFLh","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/www.glfw.org\/docs\/latest\/group__window.html#ga5c336fddf2cbb5b92f65f10fb6043344"}]}]}]}
{"client_msg_id":"550e5ec9-1482-4119-be60-1c7e03adf9a0","type":"message","text":"My bet that it's the case. The original function definition:\n```\nGLFWwindow* glfwCreateWindow\t(\tint \twidth,\nint \theight,\nconst char * \ttitle,\nGLFWmonitor * \tmonitor,\nGLFWwindow * \tshare \n)\t```","user":"U2FRKM4TW","ts":"1629240864.108800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"HxXo9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My bet that it's the case. The original function definition:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\nGLFWwindow* glfwCreateWindow\t(\tint \twidth,\nint \theight,\nconst char * \ttitle,\nGLFWmonitor * \tmonitor,\nGLFWwindow * \tshare \n)\t"}]}]}]}
{"client_msg_id":"05d623f7-8b45-4871-a8ae-7ae83b7ca722","type":"message","text":"or they copy and pasted from the glfw docs","user":"U7RJTCH6J","ts":"1629240846.108200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"XFErJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or they copy and pasted from the glfw docs"}]}]}]}
{"client_msg_id":"b536293f-0f14-46ab-bcf4-693ad97a71cb","type":"message","text":"I'll try it though","user":"U051SS2EU","ts":"1629240842.107900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"4rD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll try it though"}]}]}]}
{"client_msg_id":"afb729eb-abe8-44ec-a70a-0c0d9a66db0b","type":"message","text":"I've never seen 0 called NULL in javadoc","user":"U051SS2EU","ts":"1629240838.107600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"c+z4h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've never seen 0 called NULL in javadoc"}]}]}]}
{"client_msg_id":"2b50bc36-2bb3-4221-ab12-ac7319a5ecc6","type":"message","text":"those are most likely pointers and they probable mean a null pointer (eg. 0) rather than java null","user":"U7RJTCH6J","ts":"1629240818.107200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"awx=e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"those are most likely pointers and they probable mean a null pointer (eg. 0) rather than java null"}]}]}]}
{"client_msg_id":"e9af094f-ad83-4a96-a62e-9c3a07d9b07a","type":"message","text":"I want to call the second method listed here:\n```(ins)org.noisesmith.gamey=&gt; (-&gt; (reflect\/reflect GLFW) :members (-&gt;&gt; (filter (fn [x] (= (:name x) 'glfwCreateWindow)))) pprint)\n({:name glfwCreateWindow,\n  :return-type long,\n  :declaring-class org.lwjgl.glfw.GLFW,\n  :parameter-types [int int java.nio.ByteBuffer long long],\n  :exception-types [],\n  :flags #{:public :static}}\n {:name glfwCreateWindow,\n  :return-type long,\n  :declaring-class org.lwjgl.glfw.GLFW,\n  :parameter-types [int int java.lang.CharSequence long long],\n  :exception-types [],\n  :flags #{:public :static}})\nnil```\nwhen I call it as follows:\n```(GLFW\/glfwCreateWindow 300 300 \"Hello, World!\" nil nil)```\nI get\n```Execution error (IllegalArgumentException) at org.noisesmith.gamey\/init (gamey.clj:18).\nNo matching method glfwCreateWindow found taking 5 args```\nthe javadoc for this method tells me I should be providing nil for my last two arguments <https:\/\/javadoc.lwjgl.org\/org\/lwjgl\/glfw\/GLFW.html#glfwCreateWindow(int,int,java.lang.CharSequence,long,long)>\nwhat's the trick to getting clojure to find the right method here? hint the nil as a Long or something?","user":"U051SS2EU","ts":"1629240628.106000","team":"T03RZGPFR","edited":{"user":"U051SS2EU","ts":"1629240789.000000"},"blocks":[{"type":"rich_text","block_id":"VWK8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I want to call the second method listed here:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ins)org.noisesmith.gamey=> (-> (reflect\/reflect GLFW) :members (->> (filter (fn [x] (= (:name x) 'glfwCreateWindow)))) pprint)\n({:name glfwCreateWindow,\n  :return-type long,\n  :declaring-class org.lwjgl.glfw.GLFW,\n  :parameter-types [int int java.nio.ByteBuffer long long],\n  :exception-types [],\n  :flags #{:public :static}}\n {:name glfwCreateWindow,\n  :return-type long,\n  :declaring-class org.lwjgl.glfw.GLFW,\n  :parameter-types [int int java.lang.CharSequence long long],\n  :exception-types [],\n  :flags #{:public :static}})\nnil"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"when I call it as follows:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(GLFW\/glfwCreateWindow 300 300 \"Hello, World!\" nil nil)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I get\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Execution error (IllegalArgumentException) at org.noisesmith.gamey\/init (gamey.clj:18).\nNo matching method glfwCreateWindow found taking 5 args"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"the javadoc for this method tells me I should be providing nil for my last two arguments "},{"type":"link","url":"https:\/\/javadoc.lwjgl.org\/org\/lwjgl\/glfw\/GLFW.html#glfwCreateWindow(int,int,java.lang.CharSequence,long,long)"},{"type":"text","text":"\nwhat's the trick to getting clojure to find the right method here? hint the nil as a Long or something?"}]}]}]}
{"subscribed":false,"reply_users":["U06BQ07JS","U3JH98J4R","U2FRKM4TW","U8QBZBHGD","U0NCTKEV8","U0K064KQV"],"type":"message","thread_ts":"1629238299.094600","reply_users_count":6,"edited":{"user":"U06BQ07JS","ts":"1629238439.000000"},"ts":"1629238299.094600","team":"T03RZGPFR","client_msg_id":"aebc9417-d634-4214-96d4-65a99d25e6c2","blocks":[{"type":"rich_text","block_id":"rNPkq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm writing a script that migrates data.  I want to grab a list of IDs, and send them to n threads to run concurrently.  I was chunking them, but some threads finish early, and it slows down as it nears the end.  I would like to use a queue for this.  Should I use core.async, or can I just use an atom with a list as a queue?"}]}]}],"is_locked":false,"user":"U06BQ07JS","reply_count":70,"latest_reply":"1629408099.185400","text":"I'm writing a script that migrates data.  I want to grab a list of IDs, and send them to n threads to run concurrently.  I was chunking them, but some threads finish early, and it slows down as it nears the end.  I would like to use a queue for this.  Should I use core.async, or can I just use an atom with a list as a queue?"}
{"subscribed":false,"reply_users":["U06BQ07JS","U3JH98J4R","U2FRKM4TW","U8QBZBHGD","U0NCTKEV8","U0K064KQV"],"type":"message","thread_ts":"1629238299.094600","reply_users_count":6,"edited":{"user":"U06BQ07JS","ts":"1629238439.000000"},"ts":"1629238299.094600","team":"T03RZGPFR","client_msg_id":"aebc9417-d634-4214-96d4-65a99d25e6c2","blocks":[{"type":"rich_text","block_id":"rNPkq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm writing a script that migrates data.  I want to grab a list of IDs, and send them to n threads to run concurrently.  I was chunking them, but some threads finish early, and it slows down as it nears the end.  I would like to use a queue for this.  Should I use core.async, or can I just use an atom with a list as a queue?"}]}]}],"is_locked":false,"user":"U06BQ07JS","reply_count":70,"latest_reply":"1629408099.185400","text":"I'm writing a script that migrates data.  I want to grab a list of IDs, and send them to n threads to run concurrently.  I was chunking them, but some threads finish early, and it slows down as it nears the end.  I would like to use a queue for this.  Should I use core.async, or can I just use an atom with a list as a queue?"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238417.094700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"a89af4cf-2ac9-4f14-a44a-0f6174a400bb","blocks":[{"type":"rich_text","block_id":"LQy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The problem I see with the atom is that getting the first element in the list, and updating to "},{"type":"text","text":"rest","style":{"code":true}},{"type":"text","text":" needs to happen in the same operation to avoid race conditions, and I'm not readily seeing how to do that"}]}]}],"user":"U06BQ07JS","text":"The problem I see with the atom is that getting the first element in the list, and updating to `rest` needs to happen in the same operation to avoid race conditions, and I'm not readily seeing how to do that"}
{"type":"message","thread_ts":"1629238299.094600","edited":{"user":"U3JH98J4R","ts":"1629238457.000000"},"ts":"1629238449.095000","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"32545f74-7937-4e57-a6d0-027681bd5f3d","blocks":[{"type":"rich_text","block_id":"Gdz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just use an ExecutorService"}]}]}],"user":"U3JH98J4R","text":"just use an ExecutorService"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238493.095300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"e47c45b0-9de6-4c5c-a563-aded84a75db2","blocks":[{"type":"rich_text","block_id":"rbOI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"max N threads, submit all your tasks"}]}]}],"user":"U3JH98J4R","text":"max N threads, submit all your tasks"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238538.095500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"07ad44d0-2fb9-46d6-8c5d-66332d5ba565","blocks":[{"type":"rich_text","block_id":"RlIq\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That doesn't work great if the queue is large of it a task requires too much data. Had OOMs before because of it."}]}]}],"user":"U2FRKM4TW","text":"That doesn't work great if the queue is large of it a task requires too much data. Had OOMs before because of it."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238659.095700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"ae19277e-6d21-4133-8335-2e90fbaefa40","blocks":[{"type":"rich_text","block_id":"4xVc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"claypoole has lazy versions of its parallel functions"}]}]}],"user":"U8QBZBHGD","text":"claypoole has lazy versions of its parallel functions"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238678.095900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"98439057-9553-456b-a65d-d493f6c63e2c","blocks":[{"type":"rich_text","block_id":"Q3K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that is why you make filling the work queue a task on the work queue"}]}]}],"user":"U0NCTKEV8","text":"that is why you make filling the work queue a task on the work queue"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238715.096100","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"620c4a90-bd87-43cc-ba0c-098af006e5d6","blocks":[{"type":"rich_text","block_id":"MjaYX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but yeah, use an executor "},{"type":"link","url":"https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/util\/concurrent\/Executors.html#newFixedThreadPool-int-"}]}]}],"user":"U0NCTKEV8","text":"but yeah, use an executor <https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/util\/concurrent\/Executors.html#newFixedThreadPool-int->"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238750.096300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"849fc4b4-f535-46bb-a997-22efb41b99c7","blocks":[{"type":"rich_text","block_id":"Syy52","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could you elaborate a bit? I'm probably too sleepy to grasp it right away."}]}]}],"user":"U2FRKM4TW","text":"Could you elaborate a bit? I'm probably too sleepy to grasp it right away."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238761.096500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"0c678172-c120-4cf4-868f-d27c7feee5c6","blocks":[{"type":"rich_text","block_id":"Cfx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the problem with an atom is it is non-blocking, and for a work queue you generally want something blocking, or else you end up polling for work"}]}]}],"user":"U0NCTKEV8","text":"the problem with an atom is it is non-blocking, and for a work queue you generally want something blocking, or else you end up polling for work"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238805.096700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"9d4300a5-f431-4986-80a4-9d10ddfd6740","blocks":[{"type":"rich_text","block_id":"vQe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"say you have some how some database query that you can fetch in pages, and you want to do work to each page"}]}]}],"user":"U0NCTKEV8","text":"say you have some how some database query that you can fetch in pages, and you want to do work to each page"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238814.096900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"24f9691f-9bb8-4d12-82be-86ab602d97fb","blocks":[{"type":"rich_text","block_id":"6lqv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks for the quick responses!  I gotta run, but I'm going to come back and look through what you sent"}]}]}],"user":"U06BQ07JS","text":"thanks for the quick responses!  I gotta run, but I'm going to come back and look through what you sent"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238847.097100","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"25329a86-82c2-479f-a2d7-280eb9706c72","blocks":[{"type":"rich_text","block_id":"t2Unc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you write some code that grabs N pages, puts them on the work queue, then queues itself on the work queue to do the next N, etc"}]}]}],"user":"U0NCTKEV8","text":"you write some code that grabs N pages, puts them on the work queue, then queues itself on the work queue to do the next N, etc"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238872.097300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"a0981e21-67cc-4271-a3f4-f4139b9cd479","blocks":[{"type":"rich_text","block_id":"Fn\/Ki","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you never over fill the work queue and oom because of the queue size"}]}]}],"user":"U0NCTKEV8","text":"so you never over fill the work queue and oom because of the queue size"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629238951.097500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"b8d44b66-ba6c-4eb2-918e-a6c4529f9bde","blocks":[{"type":"rich_text","block_id":"3zOz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(1 at a time is never, N at a time is greatly reduced, but whatever)"}]}]}],"user":"U0NCTKEV8","text":"(1 at a time is never, N at a time is greatly reduced, but whatever)"}
{"type":"message","thread_ts":"1629238299.094600","edited":{"user":"U2FRKM4TW","ts":"1629239196.000000"},"ts":"1629239002.097700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"d7928428-0977-4496-9b60-a536f70160d1","blocks":[{"type":"rich_text","block_id":"pkaV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, right, makes sense. I was stuck on thinking about it in the context of the problem that I had - a queue of manageable size already in memory, so I never had to fetch any pages. Just scheduling it all was blowing things up because threads aren't that light-weight, even if you don't feed them much data. (or rather, not threads themselves since there's a limited amount but the scheduled task in the executor)"}]}]}],"user":"U2FRKM4TW","text":"Ah, right, makes sense. I was stuck on thinking about it in the context of the problem that I had - a queue of manageable size already in memory, so I never had to fetch any pages. Just scheduling it all was blowing things up because threads aren't that light-weight, even if you don't feed them much data. (or rather, not threads themselves since there's a limited amount but the scheduled task in the executor)"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239003.097900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"6cd7b470-a4ab-4238-9b72-769738de52dc","blocks":[{"type":"rich_text","block_id":"MN9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how would you handle the result of the executor so that there's backpressure?"}]}]}],"user":"U8QBZBHGD","text":"how would you handle the result of the executor so that there's backpressure?"}
{"type":"message","thread_ts":"1629238299.094600","edited":{"user":"U8QBZBHGD","ts":"1629239123.000000"},"ts":"1629239099.098100","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"94ac2e20-b8bb-4d90-8682-430742f9fa0e","blocks":[{"type":"rich_text","block_id":"bYns3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I suppose it depends on what the executor service is doing. if it's executing just for side effects or if it's producing values to be used by a subsequent step"}]}]}],"user":"U8QBZBHGD","text":"I suppose it depends on what the executor service is doing. if it's executing just for side effects or if it's producing values to be used by a subsequent step"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239120.098300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"84ee155a-e3b6-4b1c-9673-0dc6d51a3028","blocks":[{"type":"rich_text","block_id":"moTkT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"depends, if you use a fixed size threadpool (like the static method I linked to) and fill the queue in the way I described then there is pressure, if you are interacting with the executor externally it is tricky but doable, you may have to cps your code though"}]}]}],"user":"U0NCTKEV8","text":"depends, if you use a fixed size threadpool (like the static method I linked to) and fill the queue in the way I described then there is pressure, if you are interacting with the executor externally it is tricky but doable, you may have to cps your code though"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239238.098700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"4ff5165c-3e03-4a42-b72e-e8bede9741a0","blocks":[{"type":"rich_text","block_id":"NPZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I suppose you could wire up fixed size blocking queues between things but then you have to tune all of that and handle failure modes and startup\/shutdown and stuff"}]}]}],"user":"U8QBZBHGD","text":"I suppose you could wire up fixed size blocking queues between things but then you have to tune all of that and handle failure modes and startup\/shutdown and stuff"}
{"type":"message","thread_ts":"1629238299.094600","edited":{"user":"U2FRKM4TW","ts":"1629239285.000000"},"ts":"1629239259.098900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"996971fc-b660-441d-9548-5a9f79c2631f","blocks":[{"type":"rich_text","block_id":"86T","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0NCTKEV8"},{"type":"text","text":" To approach it from a different side - why would you "},{"type":"text","text":"not","style":{"italic":true}},{"type":"text","text":" want to use core.async? Any other reasons besides \"it's easy enough to do with a fixed thread pool and a queue\"?"}]}]}],"user":"U2FRKM4TW","text":"<@U0NCTKEV8> To approach it from a different side - why would you _not_ want to use core.async? Any other reasons besides \"it's easy enough to do with a fixed thread pool and a queue\"?"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239291.099300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"47a82c0c-84b7-4430-8892-d8c9df8e5623","blocks":[{"type":"rich_text","block_id":"RyB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you are connecting core.async code to an executor used for io, it usually suffices to ignore any futures the executor creates, and instead queue up tasks that deliver their results to a channel, and have the core.async code park on the channel"}]}]}],"user":"U0NCTKEV8","text":"if you are connecting core.async code to an executor used for io, it usually suffices to ignore any futures the executor creates, and instead queue up tasks that deliver their results to a channel, and have the core.async code park on the channel"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239337.099500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"8f208c24-a99d-4811-a3f8-8bd272ca7d49","blocks":[{"type":"rich_text","block_id":"Tur8e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"core.async is kind of 3 things: channels, the go macro, and threadpools"}]}]}],"user":"U0NCTKEV8","text":"core.async is kind of 3 things: channels, the go macro, and threadpools"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239338.099700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"e3e0a6cc-238d-480a-a743-d5a964dfffd6","blocks":[{"type":"rich_text","block_id":"Hvo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that makes sense"}]}]}],"user":"U8QBZBHGD","text":"that makes sense"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239349.099900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"154870a9-ca16-4981-8f92-9c7de6246117","blocks":[{"type":"rich_text","block_id":"Zo98h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and alts, alts is so crucial"}]}]}],"user":"U8QBZBHGD","text":"and alts, alts is so crucial"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239372.100100","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"3390e422-2aa1-4a2a-97f0-6fda184366b8","blocks":[{"type":"rich_text","block_id":"iN2lp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"alts is the magic that makes the channels functional for building a system"}]}]}],"user":"U8QBZBHGD","text":"alts is the magic that makes the channels functional for building a system"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239383.100300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"97ae6b01-3fd9-455d-bbdd-b6914e7793ca","blocks":[{"type":"rich_text","block_id":"xrf41","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like yes I'll alts on both a quit channel and an input channel thanks"}]}]}],"user":"U8QBZBHGD","text":"like yes I'll alts on both a quit channel and an input channel thanks"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239420.100500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"e3762cfb-c9a0-4f36-9f35-9b85518bc45b","blocks":[{"type":"rich_text","block_id":"FIs2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"alts falls out of channels with cancelable\/idempotent callbacks"}]}]}],"user":"U0NCTKEV8","text":"alts falls out of channels with cancelable\/idempotent callbacks"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239420.100700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"e37d0a0c-53c8-4609-b4a3-ba83d080368e","blocks":[{"type":"rich_text","block_id":"mBnX4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess that's a feature of channels, though"}]}]}],"user":"U8QBZBHGD","text":"I guess that's a feature of channels, though"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239425.100900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"97a13e5a-fed3-4269-8cb2-e794c9be1206","blocks":[{"type":"rich_text","block_id":"=\/OJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah"}]}]}],"user":"U0NCTKEV8","text":"yeah"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239491.101100","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"5747f0e3-3f43-492f-818d-46118f6fbca3","blocks":[{"type":"rich_text","block_id":"ZBE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder how claypoole does its lazy executor"}]}]}],"user":"U8QBZBHGD","text":"I wonder how claypoole does its lazy executor"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239524.101300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"521ab75f-6a1e-4c35-b967-20ce3190eff6","blocks":[{"type":"rich_text","block_id":"tCwAA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the downside to that is it's limited in performance by how fast the consumer side can consume"}]}]}],"user":"U8QBZBHGD","text":"the downside to that is it's limited in performance by how fast the consumer side can consume"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239535.101500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"c0d59bf2-f3a8-459d-8066-46fbcc90f104","blocks":[{"type":"rich_text","block_id":"fQIVw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the 3 things really synergize, but they may not match what you are doing, and none of them is a fixed pool executor"}]}]}],"user":"U0NCTKEV8","text":"the 3 things really synergize, but they may not match what you are doing, and none of them is a fixed pool executor"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239563.101700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"7e691e73-5fb2-468e-a77a-44c9ead319a7","blocks":[{"type":"rich_text","block_id":"RQI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so like you can do io on a async\/thread, but async\/thread creation is unbounded"}]}]}],"user":"U0NCTKEV8","text":"so like you can do io on a async\/thread, but async\/thread creation is unbounded"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239575.101900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"cdde92cc-c3e1-48c5-a9f1-c44918ebb875","blocks":[{"type":"rich_text","block_id":"ROhTq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which may or may not be fine, depending"}]}]}],"user":"U0NCTKEV8","text":"which may or may not be fine, depending"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239635.102100","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"0c8488db-f418-433d-b07b-a8ea1916b73e","blocks":[{"type":"rich_text","block_id":"vK22L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"channels are great, and when you need them there is no substitute, but a lot of the time you can get by with some kind of queue from java.util.concurrent"}]}]}],"user":"U0NCTKEV8","text":"channels are great, and when you need them there is no substitute, but a lot of the time you can get by with some kind of queue from java.util.concurrent"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239741.102300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"43bdbf94-2b6f-4951-85c4-1e0ca0f09627","blocks":[{"type":"rich_text","block_id":"T+F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm surprised no one mentioned CompletionService: "},{"type":"link","url":"https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/util\/concurrent\/CompletionService.html"}]}]}],"user":"U0K064KQV","text":"I'm surprised no one mentioned CompletionService: <https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/util\/concurrent\/CompletionService.html>"}
{"type":"message","thread_ts":"1629238299.094600","edited":{"user":"U0K064KQV","ts":"1629240046.000000"},"ts":"1629239795.102500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"e436c4a0-12c1-4e61-a673-8e637039c1bc","blocks":[{"type":"rich_text","block_id":"3Bn","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(import 'java.util.concurrent.ExecutorCompletionService)\n(import 'java.util.concurrent.Executors)\n\n(defn do-concurrently\n  \"Executes each task in tasks with concurrency c, assuming side-effects,\n   and run handler on their results as they complete. Handler is called\n   synchronously from the calling thread.\"\n  [tasks c handler]\n  (let [executor (Executors\/newFixedThreadPool c)\n        cs (ExecutorCompletionService. executor)\n        initial (take c tasks)\n        remaining (drop c tasks)]\n    ;; Submit initial batch of tasks to run concurrently.\n    (doseq [task initial]\n      (-> cs (.submit task)))\n    (doseq [task remaining]\n      ;; Block until any task completes.\n      (let [result (-> cs .take .get)]\n        ;; When there remains tasks, submit another one to\n        ;; replace the one that just completed.\n        (-> cs (.submit task))\n        ;; Handle the result of the task that just completed.\n        (handler result)))\n    ;; Since we submitted an initial batch, but only handled a remaining\n    ;; number of tasks, some tasks are left un-handled, and we need to handle\n    ;; them.\n    (doseq [_ initial]\n      (handler (-> cs .take .get)))\n    ;; shutdown executor once all tasks have been processed\n    (-> executor .shutdown)))\n\n(defn io\n  \"Simulating an IO operation by sleeping the calling thread\n   for the given amount-of-time. Returns the amount-of-time.\"\n  [amount-of-time]\n  (Thread\/sleep amount-of-time)\n  amount-of-time)\n\n;;; Run io 10000 times at 10 ms per io call with up to 100 concurrent calls\n;;; and sum up all results.\n;;; Then print the time it took and the resulting sum.\n(let [sum (atom 0)]\n  (time\n   (do-concurrently (repeat 10000 (partial io 10)) 100 #(swap! sum + %)))\n  (println @sum))"}]}]}],"user":"U0K064KQV","text":"```(import 'java.util.concurrent.ExecutorCompletionService)\n(import 'java.util.concurrent.Executors)\n\n(defn do-concurrently\n  \"Executes each task in tasks with concurrency c, assuming side-effects,\n   and run handler on their results as they complete. Handler is called\n   synchronously from the calling thread.\"\n  [tasks c handler]\n  (let [executor (Executors\/newFixedThreadPool c)\n        cs (ExecutorCompletionService. executor)\n        initial (take c tasks)\n        remaining (drop c tasks)]\n    ;; Submit initial batch of tasks to run concurrently.\n    (doseq [task initial]\n      (-&gt; cs (.submit task)))\n    (doseq [task remaining]\n      ;; Block until any task completes.\n      (let [result (-&gt; cs .take .get)]\n        ;; When there remains tasks, submit another one to\n        ;; replace the one that just completed.\n        (-&gt; cs (.submit task))\n        ;; Handle the result of the task that just completed.\n        (handler result)))\n    ;; Since we submitted an initial batch, but only handled a remaining\n    ;; number of tasks, some tasks are left un-handled, and we need to handle\n    ;; them.\n    (doseq [_ initial]\n      (handler (-&gt; cs .take .get)))\n    ;; shutdown executor once all tasks have been processed\n    (-&gt; executor .shutdown)))\n\n(defn io\n  \"Simulating an IO operation by sleeping the calling thread\n   for the given amount-of-time. Returns the amount-of-time.\"\n  [amount-of-time]\n  (Thread\/sleep amount-of-time)\n  amount-of-time)\n\n;;; Run io 10000 times at 10 ms per io call with up to 100 concurrent calls\n;;; and sum up all results.\n;;; Then print the time it took and the resulting sum.\n(let [sum (atom 0)]\n  (time\n   (do-concurrently (repeat 10000 (partial io 10)) 100 #(swap! sum + %)))\n  (println @sum))```"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239833.102800","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"16eb8de5-96ae-4c5e-819d-2d9a2c0608ba","blocks":[{"type":"rich_text","block_id":"yWHFu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The trick is that you first submit "},{"type":"text","text":"c","style":{"code":true}},{"type":"text","text":" number of tasks to be executed concurrently. In this case, I've chosen to make 100 concurrent calls at a time. The call to "},{"type":"text","text":"submit","style":{"code":true}},{"type":"text","text":" is non blocking and will return immediately. After you've initiated your first batch, you block on "},{"type":"text","text":"cs","style":{"code":true}},{"type":"text","text":", which will wait till any of them complete, and when one does, it will unblock and return the result of the task that just completed. When that happens, we will submit another task, so that we maintain our concurrency level, and we will call our handler with the result. In effect, we're saying, perform n number of calls up to c at a time. We are handling the results on the thread which submits the remaining tasks as they complete. This means that if our handler is very slow, it will delay our re-queuing of remaining tasks, so that's something to keep in mind. Finally, we have to handle the remaining batch of un-handled tasks, and shutdown the "},{"type":"text","text":"executor","style":{"code":true}},{"type":"text","text":" to release the resources associated with it."}]}]}],"user":"U0K064KQV","text":"The trick is that you first submit `c` number of tasks to be executed concurrently. In this case, I've chosen to make 100 concurrent calls at a time. The call to `submit` is non blocking and will return immediately. After you've initiated your first batch, you block on `cs`, which will wait till any of them complete, and when one does, it will unblock and return the result of the task that just completed. When that happens, we will submit another task, so that we maintain our concurrency level, and we will call our handler with the result. In effect, we're saying, perform n number of calls up to c at a time. We are handling the results on the thread which submits the remaining tasks as they complete. This means that if our handler is very slow, it will delay our re-queuing of remaining tasks, so that's something to keep in mind. Finally, we have to handle the remaining batch of un-handled tasks, and shutdown the `executor` to release the resources associated with it."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629239871.103000","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"85fffe9a-2790-493d-bb93-77ed228938b3","blocks":[{"type":"rich_text","block_id":"HYa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"core.async pipelines are vaguely like an executor, but not really (pipelines have more ordering which will limit concurrency)"}]}]}],"user":"U0NCTKEV8","text":"core.async pipelines are vaguely like an executor, but not really (pipelines have more ordering which will limit concurrency)"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629240643.106100","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"910bc0d0-5a07-4ab8-9271-da8f50ad738d","blocks":[{"type":"rich_text","block_id":"i0QIm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps a naive question. Why would this be bad? Assuming we want exactly "},{"type":"text","text":"(+ 2 (.. Runtime getRuntime availableProcessors))","style":{"code":true}},{"type":"text","text":" concurrently running tasks, as "},{"type":"text","text":"pmap","style":{"code":true}},{"type":"text","text":" gives us.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(->> tasks\n     (pmap do-stuff)\n     vec)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"tasks","style":{"code":true}},{"type":"text","text":" itself could be a chunked lazy seq that won't realize too much data ahead."}]}]}],"user":"U2FRKM4TW","text":"Perhaps a naive question. Why would this be bad? Assuming we want exactly `(+ 2 (.. Runtime getRuntime availableProcessors))` concurrently running tasks, as `pmap` gives us.\n```(-&gt;&gt; tasks\n     (pmap do-stuff)\n     vec)```\n`tasks` itself could be a chunked lazy seq that won't realize too much data ahead."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629240682.106300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"bc1dbff1-ae90-4b98-90e8-cbb7415e2786","blocks":[{"type":"rich_text","block_id":"rh7xe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pmap is the worst"}]}]}],"user":"U0NCTKEV8","text":"pmap is the worst"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629240761.106500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"ff00dba6-535a-4bc8-bed3-3b7dab713fcf","blocks":[{"type":"rich_text","block_id":"i+\/nS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I like pmap "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":" , it actually does something similar in trying to stay ahead, but you can't control the number of threads, and it retains the head of whatever you are doing."}]}]}],"user":"U0K064KQV","text":"I like pmap :stuck_out_tongue: , it actually does something similar in trying to stay ahead, but you can't control the number of threads, and it retains the head of whatever you are doing."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629240859.108600","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"532f4614-665c-4f2a-98bf-8bb69fb12a9b","blocks":[{"type":"rich_text","block_id":"euLL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Though it retains order I think, so might not be as fast in any case"}]}]}],"user":"U0K064KQV","text":"Though it retains order I think, so might not be as fast in any case"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629240943.109900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"7ddc3206-29ea-4296-a7dc-f8341b3998f3","blocks":[{"type":"rich_text","block_id":"fC8l\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pmaps limiting to 2+ is of course broken (because of chunking), and the way it combines laziness and concurrency is bad, and the way it encapsulates the execution means even its broken limits don't apply if you have multiple pmaps being called"}]}]}],"user":"U0NCTKEV8","text":"pmaps limiting to 2+ is of course broken (because of chunking), and the way it combines laziness and concurrency is bad, and the way it encapsulates the execution means even its broken limits don't apply if you have multiple pmaps being called"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629240951.110300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"e9ad3350-71cb-41b5-a4c6-41f18d06e3db","blocks":[{"type":"rich_text","block_id":"k5EIw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, and the ordering thing"}]}]}],"user":"U0NCTKEV8","text":"yes, and the ordering thing"}
{"type":"message","thread_ts":"1629238299.094600","edited":{"user":"U0K064KQV","ts":"1629241034.000000"},"ts":"1629241022.111500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"84cdd077-42cf-47ec-93fe-295dc1a71cbf","blocks":[{"type":"rich_text","block_id":"7hQN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, the chunking is actually a blessing in disguise, because you can now control pmap's concurrency based on your chunk size "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"user":"U0K064KQV","text":"Well, the chunking is actually a blessing in disguise, because you can now control pmap's concurrency based on your chunk size :stuck_out_tongue:"}
{"type":"message","thread_ts":"1629238299.094600","edited":{"user":"U2FRKM4TW","ts":"1629241215.000000"},"ts":"1629241053.111800","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"433062bc-014c-4ae1-96ab-c34c3c5a2942","blocks":[{"type":"rich_text","block_id":"2Isr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> limiting to 2+ is of course broken (because of chunking)\n\n"},{"type":"text","text":"Doesn't ","style":{"strike":true}},{"type":"text","text":"lazy-seq","style":{"strike":true,"code":true}},{"type":"text","text":" there basically disable chunking? Since it advances one at a time.","style":{"strike":true}},{"type":"text","text":"\nDuh, there's extra "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"&gt; limiting to 2+ is of course broken (because of chunking)\n\n~Doesn't `lazy-seq` there basically disable chunking? Since it advances one at a time.~\nDuh, there's extra `map`."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241100.112200","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"927391a3-5d56-4ff3-bce5-300066520337","blocks":[{"type":"rich_text","block_id":"fT6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was just looking at some migration code, where the migration is written as a reduce (a fold) over each users data, and then the reduce operation is customized to run each reduce step on an executor, and enqueue the next step to run when it is done"}]}]}],"user":"U0NCTKEV8","text":"I was just looking at some migration code, where the migration is written as a reduce (a fold) over each users data, and then the reduce operation is customized to run each reduce step on an executor, and enqueue the next step to run when it is done"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241138.112800","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"0395cab4-dbd8-4d1e-80ac-2fd975c66dc4","blocks":[{"type":"rich_text","block_id":"nE6Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so then you can throw them all on a single executor and they share time"}]}]}],"user":"U0NCTKEV8","text":"so then you can throw them all on a single executor and they share time"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241206.113000","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"f1527f2f-3b81-46f6-abe0-d3dee55f3c8c","blocks":[{"type":"rich_text","block_id":"03AP","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"user=> (seq [1 2 3 4])\n(1 2 3 4)\nuser=> (class (seq [1 2 3 4]))\nclojure.lang.PersistentVector$ChunkedSeq\nuser=> (lazy-seq (seq [1 2 3 4]))\n(1 2 3 4)\nuser=> (class (lazy-seq (seq [1 2 3 4])))\nclojure.lang.LazySeq\nuser=> (class (seq (lazy-seq (seq [1 2 3 4]))))\nclojure.lang.PersistentVector$ChunkedSeq\nuser=>"}]},{"type":"rich_text_section","elements":[]}]}],"user":"U0NCTKEV8","text":"```user=&gt; (seq [1 2 3 4])\n(1 2 3 4)\nuser=&gt; (class (seq [1 2 3 4]))\nclojure.lang.PersistentVector$ChunkedSeq\nuser=&gt; (lazy-seq (seq [1 2 3 4]))\n(1 2 3 4)\nuser=&gt; (class (lazy-seq (seq [1 2 3 4])))\nclojure.lang.LazySeq\nuser=&gt; (class (seq (lazy-seq (seq [1 2 3 4]))))\nclojure.lang.PersistentVector$ChunkedSeq\nuser=&gt;```\n"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241283.113900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"04011f76-64d0-4f9b-b149-1664df329dfc","blocks":[{"type":"rich_text","block_id":"EXG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can see it going in batch of 32 here:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(pmap #(do (.println System\/out (str \"map: \" %)) (Thread\/sleep 500) %) (range 100))"}]}]}],"user":"U0K064KQV","text":"You can see it going in batch of 32 here:\n```(pmap #(do (.println System\/out (str \"map: \" %)) (Thread\/sleep 500) %) (range 100))```"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241465.115800","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"ca74deb7-962e-4733-aa78-c5392e388dfe","blocks":[{"type":"rich_text","block_id":"eT\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The customized reduce is just\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\n(defn exec-reduce [exec fun init coll]\n  (if (seq coll)\n    (exec (fn []\n            (if-not (reduced? init)\n              (exec-reduce exec fun (fun init (first coll)) (rest coll))\n              (fun (unreduced init)))))\n    (fun (unreduced init))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so exec is expected to be a function that queues another function on the executor"}]}]}],"user":"U0NCTKEV8","text":"The customized reduce is just\n```\n(defn exec-reduce [exec fun init coll]\n  (if (seq coll)\n    (exec (fn []\n            (if-not (reduced? init)\n              (exec-reduce exec fun (fun init (first coll)) (rest coll))\n              (fun (unreduced init)))))\n    (fun (unreduced init))))```\nso exec is expected to be a function that queues another function on the executor"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241523.116300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"146ee1c2-0cd9-44ee-8fba-0c72b1aed9b4","blocks":[{"type":"rich_text","block_id":"b4Kdq","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0NCTKEV8"},{"type":"text","text":" Is your example really correct, given that you explicitly wrap a chunked seq?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn step [x]\n  (lazy-seq\n    (if (pos? x)\n      (do\n        (println x)\n        (cons x (step (dec x))))\n      [x])))\n\n(first (step 100))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The above will print "},{"type":"text","text":"100","style":{"code":true}},{"type":"text","text":" only once. That's what I meant by \"removes chunking\", and that's similar to what "},{"type":"text","text":"pmap","style":{"code":true}},{"type":"text","text":" is using. However, it uses "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" in between, which is chunked, and that's where that "},{"type":"text","text":"n","style":{"code":true}},{"type":"text","text":" gets ignored."}]}]}],"user":"U2FRKM4TW","text":"<@U0NCTKEV8> Is your example really correct, given that you explicitly wrap a chunked seq?\n```(defn step [x]\n  (lazy-seq\n    (if (pos? x)\n      (do\n        (println x)\n        (cons x (step (dec x))))\n      [x])))\n\n(first (step 100))```\nThe above will print `100` only once. That's what I meant by \"removes chunking\", and that's similar to what `pmap` is using. However, it uses `map` in between, which is chunked, and that's where that `n` gets ignored."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241565.116700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"395c9eb1-8bea-4598-a0ef-40636911552c","blocks":[{"type":"rich_text","block_id":"oXA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no that is not correct"}]}]}],"user":"U0NCTKEV8","text":"no that is not correct"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241606.116900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"64fec80c-08a3-49bb-87a8-dcfc86d424f1","blocks":[{"type":"rich_text","block_id":"z0PO4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lazy-seq is not a defense against chunking"}]}]}],"user":"U0NCTKEV8","text":"lazy-seq is not a defense against chunking"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241625.117100","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"c2d703ea-d508-4d4e-8243-fb132109d347","blocks":[{"type":"rich_text","block_id":"HiHwu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you don't have a chunked seq there, which is why you don't see it behave like one"}]}]}],"user":"U0NCTKEV8","text":"you don't have a chunked seq there, which is why you don't see it behave like one"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241676.117300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"10898115-3de2-4898-8e93-61af1080d173","blocks":[{"type":"rich_text","block_id":"oUI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, true, my wording sucks, apologies. Replace \"removes chunking\" with \"allows creating lazy seqs without chunking\"."}]}]}],"user":"U2FRKM4TW","text":"Oh, true, my wording sucks, apologies. Replace \"removes chunking\" with \"allows creating lazy seqs without chunking\"."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241687.117500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"c793d57e-0a0a-47d2-89c0-40aa1968dd73","blocks":[{"type":"rich_text","block_id":"ZLli","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"of course"}]}]}],"user":"U0NCTKEV8","text":"of course"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241715.117700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"432399e6-b9cd-4bc9-9ac2-44ccc450a9b2","blocks":[{"type":"rich_text","block_id":"=Lv6w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can create lazy-seqs without chunking, but some people have things like vectors and like to map over them"}]}]}],"user":"U0NCTKEV8","text":"you can create lazy-seqs without chunking, but some people have things like vectors and like to map over them"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241752.117900","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"d1f1bf35-7f92-45ae-b3bd-fefae365e7d8","blocks":[{"type":"rich_text","block_id":"Jgf5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or have a pipeline like "},{"type":"text","text":"(-> v (map ..) (map ...) (pmap ...))","style":{"code":true}},{"type":"text","text":" or something"}]}]}],"user":"U0NCTKEV8","text":"or have a pipeline like `(-&gt; v (map ..) (map ...) (pmap ...))` or something"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241766.118100","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"892a47cf-5d45-4c57-96c9-7cff29d2d01b","blocks":[{"type":"rich_text","block_id":"VrWo5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where because it started as a vector you get chunking"}]}]}],"user":"U0NCTKEV8","text":"where because it started as a vector you get chunking"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629241808.118300","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"832adfa4-b109-465a-842e-cb5643ca53fa","blocks":[{"type":"rich_text","block_id":"+Em3f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"TIL "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" by itself does not induce chunking."}]}]}],"user":"U2FRKM4TW","text":"TIL `map` by itself does not induce chunking."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629242070.118500","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"0882ead0-4499-49fe-b9c9-67111fd301e4","blocks":[{"type":"rich_text","block_id":"5G+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For example:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn re-chunk [n xs]\n  (lazy-seq\n    (when-let [s (seq (take n xs))]\n      (let [cb (chunk-buffer n)]\n        (doseq [x s] (chunk-append cb x))\n        (chunk-cons (chunk cb) (re-chunk n (drop n xs)))))))\n\n(pmap #(do (.println System\/out (str \"map: \" %)) (Thread\/sleep 500) %) (re-chunk 50 (range 100)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nNow it is doing 50 at a time."}]}]}],"user":"U0K064KQV","text":"For example:\n\n```(defn re-chunk [n xs]\n  (lazy-seq\n    (when-let [s (seq (take n xs))]\n      (let [cb (chunk-buffer n)]\n        (doseq [x s] (chunk-append cb x))\n        (chunk-cons (chunk cb) (re-chunk n (drop n xs)))))))\n\n(pmap #(do (.println System\/out (str \"map: \" %)) (Thread\/sleep 500) %) (re-chunk 50 (range 100)))```\nNow it is doing 50 at a time."}
{"type":"message","thread_ts":"1629238299.094600","edited":{"user":"U2FRKM4TW","ts":"1629242200.000000"},"ts":"1629242073.118700","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"039f7411-1227-4b65-ae7d-c90f16d0db1a","blocks":[{"type":"rich_text","block_id":"7Mw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Going back to your initial reply on "},{"type":"text","text":"pmap","style":{"code":true}},{"type":"text","text":", and ignoring the chunking for now.\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":" the way it encapsulates the execution means even its broken limits don't apply if you have multiple pmaps being called"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I can see that, although creating thread pools willy-nilly I "},{"type":"text","text":"guess","style":{"italic":true}},{"type":"text","text":" would be roughly the same. So treating a single usage of "},{"type":"text","text":"pmap","style":{"code":true}},{"type":"text","text":" as if it were a creation of a new thread pool should deal with that concern.\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":" the way it combines laziness and concurrency is bad"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"This is probably the most interesting. Could you say a couple more words on it?"}]}]}],"user":"U2FRKM4TW","text":"Going back to your initial reply on `pmap`, and ignoring the chunking for now.\n&gt;  the way it encapsulates the execution means even its broken limits don't apply if you have multiple pmaps being called\nI can see that, although creating thread pools willy-nilly I _guess_ would be roughly the same. So treating a single usage of `pmap` as if it were a creation of a new thread pool should deal with that concern.\n\n&gt;  the way it combines laziness and concurrency is bad\nThis is probably the most interesting. Could you say a couple more words on it?"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629242272.119000","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"003d0f24-7b73-400e-ba04-f50b78a3767c","blocks":[{"type":"rich_text","block_id":"nDp6l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just a general statement I guess, the laziness limits your ability to control execution, the use of concurrency implies you care about execution"}]}]}],"user":"U0NCTKEV8","text":"just a general statement I guess, the laziness limits your ability to control execution, the use of concurrency implies you care about execution"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629242405.119200","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"24ba1d2d-3073-416a-abdb-536cb524ed78","blocks":[{"type":"rich_text","block_id":"RF+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think for a script, you can probably trust something like:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(dorun (pmap #(handle (some-io %)) coll)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nKeeping in mind that your handler will run in parallel as well."}]}]}],"user":"U0K064KQV","text":"I think for a script, you can probably trust something like:\n\n```(dorun (pmap #(handle (some-io %)) coll)```\nKeeping in mind that your handler will run in parallel as well."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629242460.119400","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"05065744-f41f-473a-9ee2-40c3eb62927b","blocks":[{"type":"rich_text","block_id":"nHB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It'll go 32 at a time by default, and you can re-chunk if you want it to go faster. Though you can't slow it down much more then that, since it'll be num of threads + 2 at a minimum, chunk-size otherwise"}]}]}],"user":"U0K064KQV","text":"It'll go 32 at a time by default, and you can re-chunk if you want it to go faster. Though you can't slow it down much more then that, since it'll be num of threads + 2 at a minimum, chunk-size otherwise"}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629242525.119600","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"1fcc7ec0-2237-4cb7-ab6d-e913d071d087","blocks":[{"type":"rich_text","block_id":"Vryg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you both, I learned something new."}]}]}],"user":"U2FRKM4TW","text":"Thank you both, I learned something new."}
{"type":"message","thread_ts":"1629238299.094600","ts":"1629242530.119800","parent_user_id":"U06BQ07JS","team":"T03RZGPFR","client_msg_id":"558a59a2-b5d9-4013-a3bc-337dc329290e","blocks":[{"type":"rich_text","block_id":"FGbR6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But honestly, the CompletionService in my opinion is the best way to go if you want to run a bunch of tasks in parallel batches and go as fast as you can, handling each result where order doesn't matter."}]}]}],"user":"U0K064KQV","text":"But honestly, the CompletionService in my opinion is the best way to go if you want to run a bunch of tasks in parallel batches and go as fast as you can, handling each result where order doesn't matter."}
{"type":"message","display_as_bot":false,"thread_ts":"1629238299.094600","ts":"1629408099.185400","parent_user_id":"U06BQ07JS","client_msg_id":"9ee0944b-d040-40e1-85d7-a1c7a373dc1f","files":[{"edit_link":"https:\/\/clojurians.slack.com\/files\/U06BQ07JS\/F02BSKKHH98\/migration_with_completionservice.clj\/edit","editable":true,"is_external":false,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02BSKKHH98\/download\/migration_with_completionservice.clj","name":"migration with CompletionService.clj","permalink":"https:\/\/clojurians.slack.com\/files\/U06BQ07JS\/F02BSKKHH98\/migration_with_completionservice.clj","username":"","mode":"snippet","lines":43,"created":1629408098,"display_as_bot":false,"mimetype":"text\/plain","size":1937,"title":"migration with CompletionService","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-bracket\">(<\/span><span class=\"cm-keyword\">defn<\/span> <span class=\"cm-variable\">migrate!<\/span><\/pre><\/div>\n<div><pre>    <span class=\"cm-bracket\">[<\/span><span class=\"cm-variable\">&amp;<\/span> <span class=\"cm-bracket\">[<\/span><span class=\"cm-bracket\">{<\/span><span class=\"cm-atom\">:keys<\/span> <span class=\"cm-bracket\">[<\/span><span class=\"cm-variable\">limit<\/span> <span class=\"cm-variable\">thread-count<\/span><span class=\"cm-bracket\">]<\/span> <span class=\"cm-atom\">:as<\/span> <span class=\"cm-variable\">run-config<\/span><span class=\"cm-bracket\">}<\/span><span class=\"cm-bracket\">]<\/span><span class=\"cm-bracket\">]<\/span><\/pre><\/div>\n<div><pre>    <span class=\"cm-bracket\">(<\/span><span class=\"cm-keyword\">let<\/span> <span class=\"cm-bracket\">[<\/span><span class=\"cm-variable\">_<\/span> <span class=\"cm-bracket\">(<\/span><span class=\"cm-keyword\">when-not<\/span> <span class=\"cm-variable\">thread-count<\/span><\/pre><\/div>\n<div><pre>              <span class=\"cm-bracket\">(<\/span><span class=\"cm-keyword\">throw<\/span> <span class=\"cm-bracket\">(<\/span><span class=\"cm-keyword\">ex-info<\/span> <span class=\"cm-string\">&quot;must have thread-count&quot;<\/span> <span class=\"cm-variable\">run-config<\/span><span class=\"cm-bracket\">)<\/span><span class=\"cm-bracket\">)<\/span><span class=\"cm-bracket\">)<\/span><\/pre><\/div>\n<div><pre>          <span class=\"cm-variable\">_<\/span> <span class=\"cm-bracket\">(<\/span><span class=\"cm-keyword\">println<\/span> <span class=\"cm-string\">&quot;limit =&quot;<\/span> <span class=\"cm-variable\">limit<\/span><span class=\"cm-bracket\">)<\/span><\/pre><\/div>\n<\/div>\n<\/div>\n","preview":"(defn migrate!\n    [& [{:keys [limit thread-count] :as run-config}]]\n    (let [_ (when-not thread-count\n              (throw (ex-info \"must have thread-count\" run-config)))\n          _ (println \"limit =\" limit)","is_public":true,"id":"F02BSKKHH98","lines_more":38,"external_type":"","public_url_shared":false,"filetype":"clojure","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02BSKKHH98\/migration_with_completionservice.clj","pretty_type":"Clojure","has_rich_preview":false,"timestamp":1629408098,"user":"U06BQ07JS","preview_is_truncated":true,"permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02BSKKHH98-1a93dc0bc3"}],"blocks":[{"type":"rich_text","block_id":"TLQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks everyone.  I ended up using the CompletionService and am very happy!"}]}]}],"user":"U06BQ07JS","upload":true,"text":"Thanks everyone.  I ended up using the CompletionService and am very happy!"}
{"client_msg_id":"2e3564fb-fa5e-476a-b65f-c1a43fab2b8a","type":"message","text":"the index parameter muddies things, so it might be clearer if you think about it just in terms of filter, or possibly start from filter and see what it takes to add the index","user":"U0NCTKEV8","ts":"1629232605.090800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"b4Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the index parameter muddies things, so it might be clearer if you think about it just in terms of filter, or possibly start from filter and see what it takes to add the index"}]}]}]}
{"subscribed":false,"reply_users":["U0K064KQV"],"type":"message","thread_ts":"1629232507.089800","reply_users_count":1,"ts":"1629232507.089800","team":"T03RZGPFR","client_msg_id":"cff06a75-c56e-46cc-9090-aab9e3c9dca7","blocks":[{"type":"rich_text","block_id":"uMbBu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that would throw away the accumulator in the reduce and makes no sense"}]}]}],"is_locked":false,"user":"U0NCTKEV8","reply_count":1,"latest_reply":"1629234699.091200","text":"that would throw away the accumulator in the reduce and makes no sense"}
{"subscribed":false,"reply_users":["U0K064KQV"],"type":"message","thread_ts":"1629232507.089800","reply_users_count":1,"ts":"1629232507.089800","team":"T03RZGPFR","client_msg_id":"cff06a75-c56e-46cc-9090-aab9e3c9dca7","blocks":[{"type":"rich_text","block_id":"uMbBu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that would throw away the accumulator in the reduce and makes no sense"}]}]}],"is_locked":false,"user":"U0NCTKEV8","reply_count":1,"latest_reply":"1629234699.091200","text":"that would throw away the accumulator in the reduce and makes no sense"}
{"type":"message","thread_ts":"1629232507.089800","ts":"1629234699.091200","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"a5ce91d7-a949-45a5-bd00-9ebfe6946ff2","blocks":[{"type":"rich_text","block_id":"v=IE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum, I was thinking like you'd get the accumulated list of things kept till now as the accumulator, and maybe the index as.the element.\n\nBut I think you're, what they did is probably better"}]}]}],"user":"U0K064KQV","text":"Hum, I was thinking like you'd get the accumulated list of things kept till now as the accumulator, and maybe the index as.the element.\n\nBut I think you're, what they did is probably better"}
{"client_msg_id":"3033c246-b0cc-4011-834d-5ebf2ec32e45","type":"message","text":"Feel it would have been better to pass the index down","user":"U0K064KQV","ts":"1629232472.089300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ukrK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Feel it would have been better to pass the index down"}]}]}]}
{"client_msg_id":"81ec9aa3-be55-44b0-935b-cb7ebf6ad95a","type":"message","text":"there is no other behavior for keep-indexed as a transducer that makes senses","user":"U0NCTKEV8","ts":"1629232447.089000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"t2Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there is no other behavior for keep-indexed as a transducer that makes senses"}]}]}]}
{"subscribed":false,"reply_users":["U0K064KQV","U0NCTKEV8"],"type":"message","thread_ts":"1629232305.088100","reply_users_count":2,"ts":"1629232305.088100","team":"T03RZGPFR","client_msg_id":"57aaa710-7e9d-4ed7-a440-b69e01313be4","blocks":[{"type":"rich_text","block_id":"G8b3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reduce's behavior there is in some ways considered to be a mistake"}]}]}],"is_locked":false,"user":"U0NCTKEV8","reply_count":9,"latest_reply":"1629246663.123000","text":"reduce's behavior there is in some ways considered to be a mistake"}
{"subscribed":false,"reply_users":["U0K064KQV","U0NCTKEV8"],"type":"message","thread_ts":"1629232305.088100","reply_users_count":2,"ts":"1629232305.088100","team":"T03RZGPFR","client_msg_id":"57aaa710-7e9d-4ed7-a440-b69e01313be4","blocks":[{"type":"rich_text","block_id":"G8b3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reduce's behavior there is in some ways considered to be a mistake"}]}]}],"is_locked":false,"user":"U0NCTKEV8","reply_count":9,"latest_reply":"1629246663.123000","text":"reduce's behavior there is in some ways considered to be a mistake"}
{"type":"message","thread_ts":"1629232305.088100","ts":"1629234838.091700","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"58ddb675-dee5-4957-868e-bfcae7991a50","blocks":[{"type":"rich_text","block_id":"2hDZ\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting, in what sense?\n\nI feel like most of my reduce use case start with the first two elements."}]}]}],"user":"U0K064KQV","text":"Interesting, in what sense?\n\nI feel like most of my reduce use case start with the first two elements."}
{"type":"message","thread_ts":"1629232305.088100","ts":"1629234871.091900","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"06538d1a-74cc-4218-a4d4-adac0ae3f051","blocks":[{"type":"rich_text","block_id":"N\/QsG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And so I often need to find a kind of identity for the init, and sometimes that can be tricky."}]}]}],"user":"U0K064KQV","text":"And so I often need to find a kind of identity for the init, and sometimes that can be tricky."}
{"type":"message","thread_ts":"1629232305.088100","ts":"1629244635.121600","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"6bedd7e1-d2a2-4a01-b59f-da5a9aa24649","blocks":[{"type":"rich_text","block_id":"YO87e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Assumes the accumulator and the elements are the same type"}]}]}],"user":"U0NCTKEV8","text":"Assumes the accumulator and the elements are the same type"}
{"type":"message","thread_ts":"1629232305.088100","ts":"1629244662.121800","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"ffb1efca-a495-4c72-a9fa-9de61d7c448f","blocks":[{"type":"rich_text","block_id":"wGw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which is almost never the case for complex folds"}]}]}],"user":"U0NCTKEV8","text":"Which is almost never the case for complex folds"}
{"type":"message","thread_ts":"1629232305.088100","ts":"1629244705.122000","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"ef608a52-8cf5-41c6-af19-6a3039549a21","blocks":[{"type":"rich_text","block_id":"qxxLQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is why reducers have distinct combining and reducing functions"}]}]}],"user":"U0NCTKEV8","text":"It is why reducers have distinct combining and reducing functions"}
{"type":"message","thread_ts":"1629232305.088100","ts":"1629245988.122200","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"6dbb4b3b-b789-4f36-83f6-0d0038607438","blocks":[{"type":"rich_text","block_id":"VLag+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum... I mean, but before you at least had a choice, if they are the same type, don't pass init, if they are not, pass an init. Now when they are the same type, you need to find a value of that type that somehow will result in an identity when your reducing function is first called"}]}]}],"user":"U0K064KQV","text":"Hum... I mean, but before you at least had a choice, if they are the same type, don't pass init, if they are not, pass an init. Now when they are the same type, you need to find a value of that type that somehow will result in an identity when your reducing function is first called"}
{"type":"message","thread_ts":"1629232305.088100","ts":"1629246194.122400","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"1eea0066-d833-45d6-a474-20d574ec0487","blocks":[{"type":"rich_text","block_id":"B2W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or call first and rest your self"}]}]}],"user":"U0NCTKEV8","text":"Or call first and rest your self"}
{"type":"message","thread_ts":"1629232305.088100","edited":{"user":"U0K064KQV","ts":"1629246609.000000"},"ts":"1629246591.122600","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"7a898028-0852-4ae9-ae50-2e1d397b234a","blocks":[{"type":"rich_text","block_id":"dd7l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought about that, felt it was weird. Wouldn't it mess up the coll if it was on a reduced fast path?"}]}]}],"user":"U0K064KQV","text":"I thought about that, felt it was weird. Wouldn't it mess up the coll if it was on a reduced fast path?"}
{"type":"message","thread_ts":"1629232305.088100","ts":"1629246663.123000","parent_user_id":"U0NCTKEV8","team":"T03RZGPFR","client_msg_id":"6aa85b7a-99b8-44f7-975a-5bcb92c5e72f","blocks":[{"type":"rich_text","block_id":"sPU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is what reduce has to do anyway if you don't supply an init"}]}]}],"user":"U0NCTKEV8","text":"It is what reduce has to do anyway if you don't supply an init"}
{"client_msg_id":"23fb0f81-b6fc-4102-8acf-7862ef305c42","type":"message","text":"there is not","user":"U0NCTKEV8","ts":"1629232289.087700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ZyI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there is not"}]}]}]}
{"client_msg_id":"17e23517-0d6e-47b6-8561-4d358ee08bac","type":"message","text":"Ya, I think I'm just surprised by the behavior of keep-indexed transducer. Its like it keeps track of the init even though its later in the reduction, and passes it to my f as the first value.\n\nAlso, is there no way to have init be the first element? Like what reduce does?","user":"U0K064KQV","ts":"1629232268.087500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"jc=bZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya, I think I'm just surprised by the behavior of keep-indexed transducer. Its like it keeps track of the init even though its later in the reduction, and passes it to my f as the first value.\n\nAlso, is there no way to have init be the first element? Like what reduce does?"}]}]}]}
{"client_msg_id":"c63e81d3-6ee1-40fb-a935-be0ce39037e4","type":"message","text":"transduce builds a new function `g` by applying `xf` to `f` and then reduces with `g`","user":"U0NCTKEV8","ts":"1629232200.086400","team":"T03RZGPFR","edited":{"user":"U0NCTKEV8","ts":"1629232208.000000"},"blocks":[{"type":"rich_text","block_id":"Qvu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"transduce builds a new function "},{"type":"text","text":"g","style":{"code":true}},{"type":"text","text":" by applying "},{"type":"text","text":"xf","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" and then reduces with "},{"type":"text","text":"g","style":{"code":true}}]}]}]}
{"client_msg_id":"c79f39f0-43d9-4fbe-a122-f8709e9ae8a7","type":"message","text":"as I said transduce is something like `((xf f) (reduce (xf f) init coll))`","user":"U0NCTKEV8","ts":"1629232163.085600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ZEda\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as I said transduce is something like "},{"type":"text","text":"((xf f) (reduce (xf f) init coll))","style":{"code":true}}]}]}]}
{"client_msg_id":"e4b3aae2-8c2e-4e17-88cd-558d46f3c41d","type":"message","text":"f and xf are not distinct","user":"U0NCTKEV8","ts":"1629232134.085100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"q21f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"f and xf are not distinct"}]}]}]}
{"client_msg_id":"47965b6f-64ba-4e3a-8b20-8df2114aadb8","type":"message","text":"So I'm confused as to what receives the init value first? Does it first call the 2-ary of xf with [init first-element] and then keep-indexed calls my `f\/2-ary` but passes to it the init untouched and the transformed element? But if so, I should see it printing a bunch of nils.\n\nSo I think keep-indexed chooses not to call my `f` until there is a non-nil transformed element, but then I'm confused how my `f ` at that point receives init ? Is that just all what keep-indexed does under the hood?","user":"U0K064KQV","ts":"1629231264.081400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"sYb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I'm confused as to what receives the init value first? Does it first call the 2-ary of xf with [init first-element] and then keep-indexed calls my "},{"type":"text","text":"f\/2-ary","style":{"code":true}},{"type":"text","text":" but passes to it the init untouched and the transformed element? But if so, I should see it printing a bunch of nils.\n\nSo I think keep-indexed chooses not to call my "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" until there is a non-nil transformed element, but then I'm confused how my `f ` at that point receives init ? Is that just all what keep-indexed does under the hood?"}]}]}]}
{"subscribed":false,"reply_users":["U7RJTCH6J","U0NCTKEV8","U0K064KQV","U11BV7MTK","U04V70XH6"],"type":"message","thread_ts":"1629229925.075800","reply_users_count":5,"ts":"1629229925.075800","team":"T03RZGPFR","client_msg_id":"34f76b24-4fb1-4d4e-b645-24140895f67f","blocks":[{"type":"rich_text","block_id":"HSJb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it is called in "},{"type":"text","text":"transduce","style":{"code":true}}]}]}],"is_locked":false,"user":"U11BV7MTK","reply_count":63,"latest_reply":"1629254504.133800","text":"it is called in `transduce`"}
{"subscribed":false,"reply_users":["U7RJTCH6J","U0NCTKEV8","U0K064KQV","U11BV7MTK","U04V70XH6"],"type":"message","thread_ts":"1629229925.075800","reply_users_count":5,"ts":"1629229925.075800","team":"T03RZGPFR","client_msg_id":"34f76b24-4fb1-4d4e-b645-24140895f67f","blocks":[{"type":"rich_text","block_id":"HSJb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it is called in "},{"type":"text","text":"transduce","style":{"code":true}}]}]}],"is_locked":false,"user":"U11BV7MTK","reply_count":63,"latest_reply":"1629254504.133800","text":"it is called in `transduce`"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629230004.076100","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"b23145f7-700c-46f7-b5d9-6bd38bfff92e","blocks":[{"type":"rich_text","block_id":"u6B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where?"}]}]}],"user":"U7RJTCH6J","text":"where?"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629230096.076300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"fe5a1912-9c3a-4fa0-8d40-201721892f6e","blocks":[{"type":"rich_text","block_id":"2R9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there are actually multiple 0 arities available to tranduce, I beliver it will call (f), but before applying xf, which is the confusing thing"}]}]}],"user":"U0NCTKEV8","text":"there are actually multiple 0 arities available to tranduce, I beliver it will call (f), but before applying xf, which is the confusing thing"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/core.clj | core.clj>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/clojure\/clojure|clojure\/clojure>","title":"<https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/core.clj | core.clj>","id":1,"app_unfurl_url":"https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/core.clj#L6904","text":"```\n  ([xform f coll] (transduce xform f (f) coll))\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629229925.075800","ts":"1629230097.076500","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"473e4a1d-c0fb-46e0-b4af-1624e7f96be8","blocks":[{"type":"rich_text","block_id":"7W5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"afaict, the initial value is produced by calling the reducing function "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":"  rather than calling the transducer, "},{"type":"text","text":"xform","style":{"code":true}},{"type":"text","text":"\n"},{"type":"link","url":"https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/core.clj#L6904"}]}]}],"user":"U7RJTCH6J","text":"afaict, the initial value is produced by calling the reducing function `f`  rather than calling the transducer, `xform`\n<https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/core.clj#L6904>"}
{"type":"message","thread_ts":"1629229925.075800","edited":{"user":"U0K064KQV","ts":"1629230105.000000"},"ts":"1629230098.076700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"79ae8f92-0c70-4396-ae89-8323a4026398","blocks":[{"type":"rich_text","block_id":"yIx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It would call my "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" with no arg if no init is passed"}]}]}],"user":"U0K064KQV","text":"It would call my `f` with no arg if no init is passed"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629230424.077400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"60a1dfcd-d301-41d3-85d0-c01865ac859e","blocks":[{"type":"rich_text","block_id":"Shr2\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reducing function can of course have transducers\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [rf ((map inc) conj)]\n  (transduce (map inc) rf [] (range 4)))"}]},{"type":"rich_text_section","elements":[]}]}],"user":"U11BV7MTK","text":"reducing function can of course have transducers\n```(let [rf ((map inc) conj)]\n  (transduce (map inc) rf [] (range 4)))```\n"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231061.078600","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"e8a53a83-0491-41d5-84e8-f7fd923168cb","blocks":[{"type":"rich_text","block_id":"wrLHf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does that ever call the transducer's 0 arity?"}]}]}],"user":"U7RJTCH6J","text":"does that ever call the transducer's 0 arity?"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231272.081500","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"d7730d78-b786-4b8d-b2de-4a7dec5b4c5c","blocks":[{"type":"rich_text","block_id":"7AF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that would call the 0 arity of "},{"type":"text","text":"(map inc)","style":{"code":true}}]}]}],"user":"U11BV7MTK","text":"that would call the 0 arity of `(map inc)`"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231290.081900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"7eb139a8-8f7f-4da1-b6cd-fbcbcab29535","blocks":[{"type":"rich_text","block_id":"rBhZO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which will delegate to the underlying reducing function "},{"type":"text","text":"conj","style":{"code":true}},{"type":"text","text":" which will return []"}]}]}],"user":"U11BV7MTK","text":"which will delegate to the underlying reducing function `conj` which will return []"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231316.082300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"90a7ab2b-2847-483b-b15f-d1af488dcd07","blocks":[{"type":"rich_text","block_id":"mPc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you sure, that's not what the doc says."}]}]}],"user":"U0K064KQV","text":"Are you sure, that's not what the doc says."}
{"type":"message","thread_ts":"1629229925.075800","edited":{"user":"U0K064KQV","ts":"1629231356.000000"},"ts":"1629231344.082700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"39ffaede-3a9a-4610-aeb2-32841a201821","blocks":[{"type":"rich_text","block_id":"5MLB","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If init is not supplied, (f) will be called to produce it."}]}]}],"user":"U0K064KQV","text":"&gt; If init is not supplied, (f) will be called to produce it."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231401.083000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"a471965b-04c8-4b95-add3-9a40dd0f1021","blocks":[{"type":"rich_text","block_id":"7y+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe it implied, only if the xform 0-ary decides to call it"}]}]}],"user":"U0K064KQV","text":"Maybe it implied, only if the xform 0-ary decides to call it"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231418.083200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"65e74775-33e1-46d2-aff6-cb176571b4c6","blocks":[{"type":"rich_text","block_id":"FyZ0","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [xf1 (fn [rf]\n            (fn\n              ([] (println \"I am called\") (rf))\n              ([result] (rf result))\n              ([result x] (rf result x))))\n      rf (xf1 conj)]\n  (transduce (map inc) rf (range 5)))\nI am called\n[1 2 3 4 5]"}]}]}],"user":"U11BV7MTK","text":"```(let [xf1 (fn [rf]\n            (fn\n              ([] (println \"I am called\") (rf))\n              ([result] (rf result))\n              ([result x] (rf result x))))\n      rf (xf1 conj)]\n  (transduce (map inc) rf (range 5)))\nI am called\n[1 2 3 4 5]```"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231441.083400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"235971f3-fc29-4d8f-b201-6ad29e67d752","blocks":[{"type":"rich_text","block_id":"VO3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"unless you are pointing out that i accidentally supplied the init"}]}]}],"user":"U11BV7MTK","text":"unless you are pointing out that i accidentally supplied the init"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231644.084000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"ea78626a-81e6-46e3-b12f-90c3ca1ad152","blocks":[{"type":"rich_text","block_id":"IKM","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(transduce\n  (fn [rf]\n    (fn ([] (println \"xf init\") (rf))\n      ([done] (println \"xf done: \" done) done)\n      ([acc e] (println \"xf rf: \" acc e) e)))\n  (fn\n    ([] (println \"f init\") :init)\n    ([done] (println \"f done: \" done) done)\n    ([acc e] (println \"f rf: \" acc e) e))\n  [1 2 3 4 5 6 7 8 9])\n\nf init\nxf rf:  :init 1\nxf rf:  1 2\nxf rf:  2 3\nxf rf:  3 4\nxf rf:  4 5\nxf rf:  5 6\nxf rf:  6 7\nxf rf:  7 8\nxf rf:  8 9\nxf done:  9\n9"}]}]}],"user":"U0K064KQV","text":"```(transduce\n  (fn [rf]\n    (fn ([] (println \"xf init\") (rf))\n      ([done] (println \"xf done: \" done) done)\n      ([acc e] (println \"xf rf: \" acc e) e)))\n  (fn\n    ([] (println \"f init\") :init)\n    ([done] (println \"f done: \" done) done)\n    ([acc e] (println \"f rf: \" acc e) e))\n  [1 2 3 4 5 6 7 8 9])\n\nf init\nxf rf:  :init 1\nxf rf:  1 2\nxf rf:  2 3\nxf rf:  3 4\nxf rf:  4 5\nxf rf:  5 6\nxf rf:  6 7\nxf rf:  7 8\nxf rf:  8 9\nxf done:  9\n9```"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231674.084200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"5b50be64-40cd-4196-aa00-300f08a0411f","blocks":[{"type":"rich_text","block_id":"pcBTP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't see "},{"type":"text","text":"xf init","style":{"code":true}},{"type":"text","text":" being called"}]}]}],"user":"U0K064KQV","text":"I don't see `xf init` being called"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231790.084400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"2144507b-f7da-4a2a-8f0d-91b2cbd35b6d","blocks":[{"type":"rich_text","block_id":"d=D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm honestly super confused by what I see, did I do somethinig wrong?"}]}]}],"user":"U0K064KQV","text":"I'm honestly super confused by what I see, did I do somethinig wrong?"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231806.084600","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"1e354adf-179b-46b9-88ed-2779ccf0e0d6","blocks":[{"type":"rich_text","block_id":"4Uu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, forgot to call rf in the other 2"}]}]}],"user":"U0K064KQV","text":"Oh, forgot to call rf in the other 2"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629231982.084800","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"e3ea6e35-00b8-4b29-84a2-88de55048290","blocks":[{"type":"rich_text","block_id":"id9wa","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(transduce\n  (fn [rf]\n    (fn ([] (println \"xf init\") (rf))\n      ([done] (println \"xf done: \" done) (rf done))\n      ([acc e] (println \"xf rf: \" acc e) (rf acc e))))\n  (fn\n    ([] (println \"f init\") :init)\n    ([done] (println \"f done: \" done) done)\n    ([acc e] (println \"f rf: \" acc e) e))\n  [1 2 3 4 5 6 7 8 9])\nf init\nxf rf:  :init 1\nf rf:  :init 1\nxf rf:  1 2\nf rf:  1 2\nxf rf:  2 3\nf rf:  2 3\nxf rf:  3 4\nf rf:  3 4\nxf rf:  4 5\nf rf:  4 5\nxf rf:  5 6\nf rf:  5 6\nxf rf:  6 7\nf rf:  6 7\nxf rf:  7 8\nf rf:  7 8\nxf rf:  8 9\nf rf:  8 9\nxf done:  9\nf done:  9\n9"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYou can still see it never calls the init arity of xf"}]}]}],"user":"U0K064KQV","text":"```(transduce\n  (fn [rf]\n    (fn ([] (println \"xf init\") (rf))\n      ([done] (println \"xf done: \" done) (rf done))\n      ([acc e] (println \"xf rf: \" acc e) (rf acc e))))\n  (fn\n    ([] (println \"f init\") :init)\n    ([done] (println \"f done: \" done) done)\n    ([acc e] (println \"f rf: \" acc e) e))\n  [1 2 3 4 5 6 7 8 9])\nf init\nxf rf:  :init 1\nf rf:  :init 1\nxf rf:  1 2\nf rf:  1 2\nxf rf:  2 3\nf rf:  2 3\nxf rf:  3 4\nf rf:  3 4\nxf rf:  4 5\nf rf:  4 5\nxf rf:  5 6\nf rf:  5 6\nxf rf:  6 7\nf rf:  6 7\nxf rf:  7 8\nf rf:  7 8\nxf rf:  8 9\nf rf:  8 9\nxf done:  9\nf done:  9\n9```\nYou can still see it never calls the init arity of xf"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629251436.123400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"fdbee5cb-ff0b-4af7-b534-2c09fa4c2336","blocks":[{"type":"rich_text","block_id":"YGz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which is what I said, yes."}]}]}],"user":"U04V70XH6","text":"Which is what I said, yes."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629251512.123600","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"76012cb7-6908-4cb4-bc98-1421bdffdff4","blocks":[{"type":"rich_text","block_id":"7rhK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The 0-arity of "},{"type":"text","text":"f","style":{"italic":true}},{"type":"text","text":" is called. That is "},{"type":"text","text":"not","style":{"italic":true}},{"type":"text","text":" the 0-arity of the transducer. "},{"type":"text","text":"f","style":{"italic":true}},{"type":"text","text":" should be callable with 0 or 2 arguments. The transducer is definitionally required to have three arities: 0 (supposedly \"init\" but it is never used), 1 (completing), 2 (reducing)."}]}]}],"user":"U04V70XH6","text":"The 0-arity of _f_ is called. That is _not_ the 0-arity of the transducer. _f_ should be callable with 0 or 2 arguments. The transducer is definitionally required to have three arities: 0 (supposedly \"init\" but it is never used), 1 (completing), 2 (reducing)."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629252222.124400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"2c3461fa-6821-45ef-9a1a-3414d30ccabf","blocks":[{"type":"rich_text","block_id":"pUaV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i posted an example above where a transducer's 0 arity was called"}]}]}],"user":"U11BV7MTK","text":"i posted an example above where a transducer's 0 arity was called"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629252642.124600","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"01e55457-cc13-4aa2-94c1-80eb8159673b","blocks":[{"type":"rich_text","block_id":"C52ts","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No. Your example has a "},{"type":"text","text":"reducing step function","style":{"italic":true}},{"type":"text","text":". That's not a transducer."}]}]}],"user":"U04V70XH6","text":"No. Your example has a _reducing step function_. That's not a transducer."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629252710.124800","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"f1613f96-7272-4917-8b03-29abb5c416a4","blocks":[{"type":"rich_text","block_id":"MrjB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the "},{"type":"text","text":"transduce","style":{"code":true}},{"type":"text","text":" call, the transducer is the first argument ("},{"type":"text","text":"xform","style":{"code":true}},{"type":"text","text":")."}]}]}],"user":"U04V70XH6","text":"In the `transduce` call, the transducer is the first argument (`xform`)."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629252753.125000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"a33fbff5-9b83-443f-8341-f81f7c0c2004","blocks":[{"type":"rich_text","block_id":"Y5Faq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not all transducer-related functions have a "},{"type":"text","text":"reducing step function","style":{"italic":true}},{"type":"text","text":"."}]}]}],"user":"U04V70XH6","text":"Not all transducer-related functions have a _reducing step function_."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629252794.125200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"86bc54fa-74f0-473a-9b34-bbe56ef8124d","blocks":[{"type":"rich_text","block_id":"qZO5n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"("},{"type":"text","text":"sequence","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"eduction","style":{"code":true}},{"type":"text","text":", etc)"}]}]}],"user":"U04V70XH6","text":"(`sequence`, `eduction`, etc)"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253084.125400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"2105f2f7-125c-4c4b-874e-066264330377","blocks":[{"type":"rich_text","block_id":"oau5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"didn't i use a transducer as a function from one reducing function to another?"}]}]}],"user":"U11BV7MTK","text":"didn't i use a transducer as a function from one reducing function to another?"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253112.125700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"b4732a79-36a2-4c70-a830-c4bd12fea5dc","blocks":[{"type":"rich_text","block_id":"ov5","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [xf1 (fn [rf]\n            (fn\n              ([] (println \"I am called\") (rf))\n              ([result] (rf result))\n              ([result x] (rf result x))))\n      rf (xf1 conj)]\n  (transduce (map inc) rf (range 5)))\nI am called\n[1 2 3 4 5]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"xf1","style":{"code":true}},{"type":"text","text":" is a transducer here correct?"}]}]}],"user":"U11BV7MTK","text":"```(let [xf1 (fn [rf]\n            (fn\n              ([] (println \"I am called\") (rf))\n              ([result] (rf result))\n              ([result x] (rf result x))))\n      rf (xf1 conj)]\n  (transduce (map inc) rf (range 5)))\nI am called\n[1 2 3 4 5]```\n`xf1` is a transducer here correct?"}
{"type":"message","thread_ts":"1629229925.075800","edited":{"user":"U04V70XH6","ts":"1629253321.000000"},"ts":"1629253189.125900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"41308b1c-c627-4a3e-8baf-b2de053b639f","blocks":[{"type":"rich_text","block_id":"bRiq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"stares at the code","style":{"italic":true}},{"type":"text","text":" Hmm, yeah, so a transducer will have its 0-arity called only when it is used to create a reducing step function from another reducing (step) function. How\/where is that actually done in the wild?"}]}]}],"user":"U04V70XH6","text":"_stares at the code_ Hmm, yeah, so a transducer will have its 0-arity called only when it is used to create a reducing step function from another reducing (step) function. How\/where is that actually done in the wild?"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253232.126100","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"c2e24fe9-11d9-4441-9101-076b0408d02d","blocks":[{"type":"rich_text","block_id":"BKm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, it is"}]}]}],"user":"U0NCTKEV8","text":"Yeah, it is"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253277.126300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"1a655f2c-26e9-4cc9-9f5f-fc13c293a762","blocks":[{"type":"rich_text","block_id":"XwptQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But xf1 is not passed to transduce"}]}]}],"user":"U0NCTKEV8","text":"But xf1 is not passed to transduce"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253305.126500","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"28310de1-9cfc-4195-8eed-c74ff8e131ff","blocks":[{"type":"rich_text","block_id":"rkdQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it is in a slightly different context but it is an example of where the 0-arity of a transducer is called"}]}]}],"user":"U11BV7MTK","text":"it is in a slightly different context but it is an example of where the 0-arity of a transducer is called"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253337.126800","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"a1916046-7362-4e4f-be68-791ed1285b3d","blocks":[{"type":"rich_text","block_id":"ldA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so i was just pointing out that this was a bit over eager is all\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"The transducer is definitionally required to have three arities: 0 (supposedly \"init\" but it is never used),"}]}]}],"user":"U11BV7MTK","text":"so i was just pointing out that this was a bit over eager is all\n&gt; The transducer is definitionally required to have three arities: 0 (supposedly \"init\" but it is never used),"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253353.127000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"427405d4-df67-441c-b7d2-8d6f4a3c3ee5","blocks":[{"type":"rich_text","block_id":"TKieu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This gets it to really picky terminology"}]}]}],"user":"U0NCTKEV8","text":"This gets it to really picky terminology"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253374.127200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"b4025b77-e777-468d-86ec-71de35817200","blocks":[{"type":"rich_text","block_id":"CPQVz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But "},{"type":"text","text":"xform","style":{"code":true}},{"type":"text","text":" -- which is what is normally referred to as a transducer never gets its 0-arity called in any transducer-related functions."}]}]}],"user":"U04V70XH6","text":"But `xform` -- which is what is normally referred to as a transducer never gets its 0-arity called in any transducer-related functions."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253391.127400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"ace84129-8992-4208-9785-8ffad9d33f39","blocks":[{"type":"rich_text","block_id":"MO8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The transducer being a function from step function to step function has no 0-arity"}]}]}],"user":"U0NCTKEV8","text":"The transducer being a function from step function to step function has no 0-arity"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253399.127600","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"2e56c6a5-d6e8-4831-a23e-3ea855c71ab6","blocks":[{"type":"rich_text","block_id":"dUF3O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah i agree. i've also gotten wallowed a bit in figuring out which functions are transducers, which are reducing functions, if there's a name for a reducing function that has a 0-arity version, etc"}]}]}],"user":"U11BV7MTK","text":"yeah i agree. i've also gotten wallowed a bit in figuring out which functions are transducers, which are reducing functions, if there's a name for a reducing function that has a 0-arity version, etc"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253419.127800","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"1a7963bb-3144-4824-a47b-f89f82287f46","blocks":[{"type":"rich_text","block_id":"IZN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a name for a reducing function that also has a completion arity, etc"}]}]}],"user":"U11BV7MTK","text":"a name for a reducing function that also has a completion arity, etc"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253420.128000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"8f5871e9-ee7e-45b2-83f7-28ca87dafad6","blocks":[{"type":"rich_text","block_id":"7ElM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"True, the transducer itself really only has a 1-arity version..."}]}]}],"user":"U04V70XH6","text":"True, the transducer itself really only has a 1-arity version..."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253453.128200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"0f77fd96-e9fe-4077-83c5-0e288726198b","blocks":[{"type":"rich_text","block_id":"=ge","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I guess it's sloppy to refer to a transducer having a 0-arity at all?"}]}]}],"user":"U04V70XH6","text":"Yeah, I guess it's sloppy to refer to a transducer having a 0-arity at all?"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253460.128400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"c30756f9-e62d-4760-ba8a-2fee38ffad57","blocks":[{"type":"rich_text","block_id":"ZLlLJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But people are generally pretty lax about what is called a transducer"}]}]}],"user":"U0NCTKEV8","text":"But people are generally pretty lax about what is called a transducer"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253529.128700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"50d8165c-962c-4838-933c-640a39c327d1","blocks":[{"type":"rich_text","block_id":"KREW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"The inner function is defined with 3 arities used for different purposes:\" -- from "},{"type":"link","url":"https:\/\/clojure.org\/reference\/transducers"}]}]}],"user":"U04V70XH6","text":"\"The inner function is defined with 3 arities used for different purposes:\" -- from <https:\/\/clojure.org\/reference\/transducers>"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253541.128900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"172f34c5-133d-4697-bc5d-2991da018580","blocks":[{"type":"rich_text","block_id":"nMUL4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So when it is said that transduce doesn't invoke the 0arity what is meant is that it doesn't invoke the 0-arity of the step function created by applying xform to the step function"}]}]}],"user":"U0NCTKEV8","text":"So when it is said that transduce doesn't invoke the 0arity what is meant is that it doesn't invoke the 0-arity of the step function created by applying xform to the step function"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253574.129100","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"c9eb0d78-9649-4476-8261-0208ed55997e","blocks":[{"type":"rich_text","block_id":"pVVk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry, I guess I'll be more careful with terminology from now on "},{"type":"emoji","name":"neutral_face"},{"type":"text","text":" There's at least one very confused SO post about this..."}]}]}],"user":"U04V70XH6","text":"Sorry, I guess I'll be more careful with terminology from now on :neutral_face: There's at least one very confused SO post about this..."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253624.129300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"cda5bf2a-c007-4ae3-81b8-eb324a028323","blocks":[{"type":"rich_text","block_id":"aDV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And given that meaning it is still true with dpsuttons example"}]}]}],"user":"U0NCTKEV8","text":"And given that meaning it is still true with dpsuttons example"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253696.129500","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"465608f7-7665-42ea-a97d-fd44b55415fc","blocks":[{"type":"rich_text","block_id":"EY8g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That does make me ask my other Q again tho' "},{"type":"user","user_id":"U11BV7MTK"},{"type":"text","text":": where in the wild do we see transducers applied to reducing step functions to create new reducing step functions? Normally we just see the "},{"type":"text","text":"xform","style":{"code":true}},{"type":"text","text":" as a "},{"type":"text","text":"comp","style":{"code":true}},{"type":"text","text":" of a bunch of transducers."}]}]}],"user":"U04V70XH6","text":"That does make me ask my other Q again tho' <@U11BV7MTK>: where in the wild do we see transducers applied to reducing step functions to create new reducing step functions? Normally we just see the `xform` as a `comp` of a bunch of transducers."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253731.129700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"aa420c0c-af69-4039-b9f1-0de564c69394","blocks":[{"type":"rich_text","block_id":"AfZW2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(it is now clear to me that is what the reference doc is actually describing, now matter how many times I've read it in the past!)"}]}]}],"user":"U04V70XH6","text":"(it is now clear to me that is what the reference doc is actually describing, now matter how many times I've read it in the past!)"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253765.129900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"960ea96a-2da5-45da-a638-1e6d526c2415","blocks":[{"type":"rich_text","block_id":"SfGe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've seen the places where xform is called on a reducing function called a \"reducing context\""}]}]}],"user":"U0NCTKEV8","text":"I've seen the places where xform is called on a reducing function called a \"reducing context\""}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253807.130100","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"c9a51c38-bf34-4b7b-a652-6012167aeae2","blocks":[{"type":"rich_text","block_id":"5Ynn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we've got a few at work"}]}]}],"user":"U11BV7MTK","text":"we've got a few at work"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253809.130300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"ed888330-cfc1-4e01-979e-82ffbca7aa8b","blocks":[{"type":"rich_text","block_id":"jqO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, interesting... in OSS? Link? Or just in blog posts about transducers?"}]}]}],"user":"U04V70XH6","text":"Ah, interesting... in OSS? Link? Or just in blog posts about transducers?"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253814.130500","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"e9f2f0fc-44d4-4091-8f67-6fe7f35f1e7c","blocks":[{"type":"rich_text","block_id":"drR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So there is one of those inside transduce, and sequence, and core.async channels, and if you where creating your own reducing context"}]}]}],"user":"U0NCTKEV8","text":"So there is one of those inside transduce, and sequence, and core.async channels, and if you where creating your own reducing context"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253824.130700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"7a38087a-ad4d-4436-8d42-13c1cf813be1","blocks":[{"type":"rich_text","block_id":"JWpK0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure"}]}]}],"user":"U0NCTKEV8","text":"Not sure"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253830.130900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"e398981c-d7d4-4266-91ee-60e54b11a0a8","blocks":[{"type":"rich_text","block_id":"3dW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let me see if i can find them. at metabase we're all open source so i can share"}]}]}],"user":"U11BV7MTK","text":"let me see if i can find them. at metabase we're all open source so i can share"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253846.131100","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"c6ed2eab-d6eb-4ff3-bf18-5528cabe113e","blocks":[{"type":"rich_text","block_id":"ekzbx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I forget you work there "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U04V70XH6","text":"I forget you work there :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629253936.131400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"84bd5f9e-eec2-47dc-9fe5-76658ecc004a","blocks":[{"type":"rich_text","block_id":"7e\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"going on about a year now"}]}]}],"user":"U11BV7MTK","text":"going on about a year now"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629254191.132000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"abbc64ae-978e-48fa-b8cb-935f13470391","blocks":[{"type":"rich_text","block_id":"T+L50","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this stuff takes me a while to remember how everything works but here's an example"}]}]}],"user":"U11BV7MTK","text":"this stuff takes me a while to remember how everything works but here's an example"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj | fingerprinters.clj>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/metabase\/metabase|metabase\/metabase>","title":"<https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj | fingerprinters.clj>","id":1,"app_unfurl_url":"https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj#L248","text":"```\n(deffingerprinter :type\/Text\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629229925.075800","ts":"1629254192.132200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"f2e8a2b1-d3ea-468b-94bd-a69411cc7ca6","blocks":[{"type":"rich_text","block_id":"W=xxQ","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj#L248"}]}]}],"user":"U11BV7MTK","text":"<https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj#L248>"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629254327.132500","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"c856f606-8c5c-427e-8789-8d183950e542","blocks":[{"type":"rich_text","block_id":"29N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but that will be super hard to follow without some navigation and knowing what is going on"}]}]}],"user":"U11BV7MTK","text":"but that will be super hard to follow without some navigation and knowing what is going on"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj | fingerprinters.clj>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/metabase\/metabase|metabase\/metabase>","title":"<https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj | fingerprinters.clj>","id":1,"app_unfurl_url":"https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj#L206-L221","text":"```\n(defn- histogram\n  \"Transducer that summarizes numerical data with a histogram.\"\n  ([] (hist\/create))\n  ([^Histogram histogram] histogram)\n  ([^Histogram histogram x] (hist\/insert-simple! histogram x)))\n\n(defn real-number?\n  \"Is `x` a real number (i.e. not a `NaN` or an `Infinity`)?\"\n  [x]\n  (and (number? x)\n       (not (Double\/isNaN x))\n       (not (Double\/isInfinite x))))\n\n(deffingerprinter :type\/Number\n  (redux\/post-complete\n   ((filter real-number?) histogram)\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629229925.075800","ts":"1629254327.132700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"e7857290-454a-4e27-b6d8-43cf01c18dd6","blocks":[{"type":"rich_text","block_id":"SBHIs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And just above that, there's the same confusion we just had here: "},{"type":"link","url":"https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj#L206-L221"},{"type":"text","text":" -- "},{"type":"text","text":"histogram","style":{"code":true}},{"type":"text","text":" isn't a transducer, it's a reducing step function."}]}]}],"user":"U04V70XH6","text":"And just above that, there's the same confusion we just had here: <https:\/\/github.com\/metabase\/metabase\/blob\/master\/src\/metabase\/sync\/analyze\/fingerprint\/fingerprinters.clj#L206-L221> -- `histogram` isn't a transducer, it's a reducing step function."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629254365.133000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"36c28804-bf49-4e48-87fe-557930543d23","blocks":[{"type":"rich_text","block_id":"S4CR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes good point. there is no other rf involved so it immediately stands out"}]}]}],"user":"U11BV7MTK","text":"yes good point. there is no other rf involved so it immediately stands out"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629254370.133200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"fdbce364-ac6f-448b-825d-16910c58bfac","blocks":[{"type":"rich_text","block_id":"M+U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and then it's used in "},{"type":"text","text":"((filter real-number?) histogram)","style":{"code":true}},{"type":"text","text":" at the end of that block)"}]}]}],"user":"U04V70XH6","text":"(and then it's used in `((filter real-number?) histogram)` at the end of that block)"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629254407.133400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"d2c02515-af86-47a3-8862-08f49fde2481","blocks":[{"type":"rich_text","block_id":"3Od","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i think the first time i the pattern like this was in the history of clojure paper"}]}]}],"user":"U11BV7MTK","text":"i think the first time i the pattern like this was in the history of clojure paper"}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629254479.133600","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"df146297-bf32-4eb2-a019-5a3a573f4d4e","blocks":[{"type":"rich_text","block_id":"DVT+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, I'll bear Metabase in mind when this subject comes up again (because it will). Thank you! I've been perpetuating incorrect information because I had my terminology wrong."}]}]}],"user":"U04V70XH6","text":"OK, I'll bear Metabase in mind when this subject comes up again (because it will). Thank you! I've been perpetuating incorrect information because I had my terminology wrong."}
{"type":"message","thread_ts":"1629229925.075800","ts":"1629254504.133800","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"ea8b19ab-5f9a-4aa3-b9d9-4951f69a643e","blocks":[{"type":"rich_text","block_id":"GHsy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"every time i reason about these things some new piece clicks into place"}]}]}],"user":"U11BV7MTK","text":"every time i reason about these things some new piece clicks into place"}
{"client_msg_id":"c3b615f9-8e77-46b2-92c8-2f0645c42e8f","type":"message","text":"The thing about transducers that seems to confuse everyone is that there are three arities and one of them (0-arity) is never called :slightly_smiling_face:","user":"U04V70XH6","ts":"1629229720.075400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"YO2k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The thing about transducers that seems to confuse everyone is that there are three arities and one of them (0-arity) is never called "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]}
{"client_msg_id":"40429c60-59ec-4c5f-9940-b8ef57352c77","type":"message","text":"Lets use this one instead:\n\n```(defn index-of\n   [element coll]\n   (transduce\n    (keep-indexed\n     (fn [idx item]\n       (when (= element item) idx)))\n    (fn\n      ([acc e] (println acc e) (when (some? e) (reduced e)))\n      ([done] done))\n    :init\n    coll))\n\n(index-of 3 [1 2 3 4 5 6 7])\n:init 2\n2```","user":"U0K064KQV","ts":"1629229704.075100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"FHQAA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Lets use this one instead:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn index-of\n   [element coll]\n   (transduce\n    (keep-indexed\n     (fn [idx item]\n       (when (= element item) idx)))\n    (fn\n      ([acc e] (println acc e) (when (some? e) (reduced e)))\n      ([done] done))\n    :init\n    coll))\n\n(index-of 3 [1 2 3 4 5 6 7])\n:init 2\n2"}]}]}]}
{"subscribed":false,"reply_users":["U0NCTKEV8"],"type":"message","thread_ts":"1629229439.073900","reply_users_count":1,"ts":"1629229439.073900","team":"T03RZGPFR","client_msg_id":"0f0c5246-2a68-4e7b-bef2-2ed7745b3be4","blocks":[{"type":"rich_text","block_id":"e7E2y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum, ya it might be haha, I was more focused on the transduce bit."}]}]}],"is_locked":false,"user":"U0K064KQV","reply_count":3,"latest_reply":"1629230162.077100","text":"Hum, ya it might be haha, I was more focused on the transduce bit."}
{"subscribed":false,"reply_users":["U0NCTKEV8"],"type":"message","thread_ts":"1629229439.073900","reply_users_count":1,"ts":"1629229439.073900","team":"T03RZGPFR","client_msg_id":"0f0c5246-2a68-4e7b-bef2-2ed7745b3be4","blocks":[{"type":"rich_text","block_id":"e7E2y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum, ya it might be haha, I was more focused on the transduce bit."}]}]}],"is_locked":false,"user":"U0K064KQV","reply_count":3,"latest_reply":"1629230162.077100","text":"Hum, ya it might be haha, I was more focused on the transduce bit."}
{"type":"message","thread_ts":"1629229439.073900","ts":"1629229914.075500","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"2256109b-d445-40ff-a797-331fc06804a4","blocks":[{"type":"rich_text","block_id":"l1rTa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think what you are missing is how transducers work, where transduce is kind of the trivial application of"}]}]}],"user":"U0NCTKEV8","text":"I think what you are missing is how transducers work, where transduce is kind of the trivial application of"}
{"type":"message","thread_ts":"1629229439.073900","ts":"1629229977.075900","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"9daa0d11-1448-473a-9489-d3bfb30f00fe","blocks":[{"type":"rich_text","block_id":"JTt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you can dig up rich's original blog post about transducers it might be helpful"}]}]}],"user":"U0NCTKEV8","text":"If you can dig up rich's original blog post about transducers it might be helpful"}
{"attachments":[{"thumb_width":2000,"thumb_height":2000,"service_name":"Cognitect.com","title_link":"https:\/\/www.cognitect.com\/blog\/2014\/8\/6\/transducers-are-coming","fallback":"Cognitect.com: Transducers are Coming","from_url":"https:\/\/www.cognitect.com\/blog\/2014\/8\/6\/transducers-are-coming","title":"Transducers are Coming","ts":1407297600,"id":1,"thumb_url":"https:\/\/www.cognitect.com\/assets\/images\/logo_large.png","service_icon":"https:\/\/www.cognitect.com\/apple-icon-57x57.png","original_url":"https:\/\/www.cognitect.com\/blog\/2014\/8\/6\/transducers-are-coming","text":"Transducers are a powerful and composable way to build algorithmic transformations that you can reuse in many contexts, and they're coming to Clojure core an..."}],"type":"message","thread_ts":"1629229439.073900","ts":"1629230162.077100","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"282a26f5-3522-4fc6-83e6-f859ed64d865","blocks":[{"type":"rich_text","block_id":"VIs","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/www.cognitect.com\/blog\/2014\/8\/6\/transducers-are-coming"}]}]}],"user":"U0NCTKEV8","text":"<https:\/\/www.cognitect.com\/blog\/2014\/8\/6\/transducers-are-coming>"}
{"client_msg_id":"21a9bc8e-00c3-4de3-991c-f0e62fc99cc6","type":"message","text":"Which maybe is a thing you want, but seems highly unlikely","user":"U0NCTKEV8","ts":"1629229320.073400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"jnb=k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which maybe is a thing you want, but seems highly unlikely"}]}]}]}
{"client_msg_id":"79b61acc-7228-4276-8a81-f02529dad1d4","type":"message","text":"I think you code is just kind of buggy? Like, inside your mapped keep-index function, you are conjing indices onto the passed in to the whole index-of function","user":"U0NCTKEV8","ts":"1629229275.072300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"QeCbj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you code is just kind of buggy? Like, inside your mapped keep-index function, you are conjing indices onto the passed in to the whole index-of function"}]}]}]}
{"client_msg_id":"70a57c8d-cd41-4fa9-802c-c9fc94af0260","type":"message","text":"So f is not invoked directly, and xf has control of what f sees","user":"U0NCTKEV8","ts":"1629229097.069900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"674","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So f is not invoked directly, and xf has control of what f sees"}]}]}]}
{"client_msg_id":"3a16ae6d-1e65-4f6e-8ca7-ce81e621602f","type":"message","text":"Transduce is something like `((xf f)(reduce (xf f) init coll))`","user":"U0NCTKEV8","ts":"1629229067.069000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Nq1L2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Transduce is something like "},{"type":"text","text":"((xf f)(reduce (xf f) init coll))","style":{"code":true}}]}]}]}
{"client_msg_id":"67742069-c728-469a-8f40-d0ce0b585278","type":"message","text":"```(defn index-of\n   ([element coll]\n    (index-of element coll []))\n   ([element coll idxs]\n    (transduce\n     (comp (keep-indexed\n            (fn [idx item]\n              (if (sequential? item)\n                (index-of element item (conj idxs idx))\n                (when (= element item) (conj idxs idx))))))\n     (fn\n       ([acc e] (println acc e) (when (some? e) (reduced e)))\n       ([done] (first done)))\n     :init\n     coll)))\n\n(index-of 3 [1 2 3 4 5 6 7])\n\n;; prints:\n:init [2]\n:: returns:\n2```","user":"U0K064KQV","ts":"1629229055.068800","team":"T03RZGPFR","edited":{"user":"U0K064KQV","ts":"1629229088.000000"},"blocks":[{"type":"rich_text","block_id":"ZK2","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn index-of\n   ([element coll]\n    (index-of element coll []))\n   ([element coll idxs]\n    (transduce\n     (comp (keep-indexed\n            (fn [idx item]\n              (if (sequential? item)\n                (index-of element item (conj idxs idx))\n                (when (= element item) (conj idxs idx))))))\n     (fn\n       ([acc e] (println acc e) (when (some? e) (reduced e)))\n       ([done] (first done)))\n     :init\n     coll)))\n\n(index-of 3 [1 2 3 4 5 6 7])\n\n;; prints:\n:init [2]\n:: returns:\n2"}]}]}]}
{"client_msg_id":"5E6EF4C3-461D-4DC5-892E-77B200BAC85B","type":"message","text":"Can you put a simple case here?","user":"U11BV7MTK","ts":"1629228439.065100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Tx72","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you put a simple case here?"}]}]}]}
{"client_msg_id":"2920742e-2b6e-45de-8a28-071ba5801201","type":"message","text":"In `transduce`, I'm a bit confused when `f` is involved. It seems that the 2-ary of my `f` is called once in the begging with the init but the element is like the element returned by the xf. So I'm confused, its like my `f` is plugged after the xf, but it received the init?","user":"U0K064KQV","ts":"1629227890.064700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"j9CPz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In "},{"type":"text","text":"transduce","style":{"code":true}},{"type":"text","text":", I'm a bit confused when "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" is involved. It seems that the 2-ary of my "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" is called once in the begging with the init but the element is like the element returned by the xf. So I'm confused, its like my "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" is plugged after the xf, but it received the init?"}]}]}]}
{"client_msg_id":"cc99aa94-d945-4bd1-82c8-45b8c6d5e51b","type":"message","text":"the reader conditionals prevent compiler errors, I can't imagine what wouldn't even compile?","user":"U051SS2EU","ts":"1629226156.061600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"POzSx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the reader conditionals prevent compiler errors, I can't imagine what wouldn't even compile?"}]}]}]}
{"client_msg_id":"6fb1a4ee-0d32-4f1c-b149-5badcef0dd02","type":"message","text":"but you cannot change the platform identifiers used when reading clj or cljs source itself","user":"U064X3EF3","ts":"1629226145.061300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"12W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but you cannot change the platform identifiers used when reading clj or cljs source itself"}]}]}]}
{"subscribed":false,"reply_users":["U0PUGPSFR","U4YGF4NGM","U051SS2EU"],"type":"message","thread_ts":"1629226131.060900","reply_users_count":3,"ts":"1629226131.060900","team":"T03RZGPFR","client_msg_id":"bb5103df-9128-4f49-bb0c-eee27e656668","blocks":[{"type":"rich_text","block_id":"hkD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the difference between cljs in web and cljs in react-native is not like the difference between clj and cljs - regular conditional forms will work for what you want without extending the reader conditionals"}]}]}],"is_locked":false,"user":"U051SS2EU","reply_count":12,"latest_reply":"1629241099.112000","text":"I think the difference between cljs in web and cljs in react-native is not like the difference between clj and cljs - regular conditional forms will work for what you want without extending the reader conditionals"}
{"subscribed":false,"reply_users":["U0PUGPSFR","U4YGF4NGM","U051SS2EU"],"type":"message","thread_ts":"1629226131.060900","reply_users_count":3,"ts":"1629226131.060900","team":"T03RZGPFR","client_msg_id":"bb5103df-9128-4f49-bb0c-eee27e656668","blocks":[{"type":"rich_text","block_id":"hkD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the difference between cljs in web and cljs in react-native is not like the difference between clj and cljs - regular conditional forms will work for what you want without extending the reader conditionals"}]}]}],"is_locked":false,"user":"U051SS2EU","reply_count":12,"latest_reply":"1629241099.112000","text":"I think the difference between cljs in web and cljs in react-native is not like the difference between clj and cljs - regular conditional forms will work for what you want without extending the reader conditionals"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629227258.062800","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"ed1ccab7-62bf-4ae5-bc96-a359e1b93017","blocks":[{"type":"rich_text","block_id":"0tP+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"regular conditional forms will work\". Not sure what are \"regular conditional forms\", but then I am no Clojure guru. Is this some other reader macrology? I only new of the cljs\/clj variants.\n\nWe can certainly write app code that tests some run-time variable to decide which platform to cater to, but I am worried about the NS and project.clj dependencies. Do we solve all this with some black-belt (or trivials deps.edn work)?"}]}]}],"user":"U0PUGPSFR","text":"\"regular conditional forms will work\". Not sure what are \"regular conditional forms\", but then I am no Clojure guru. Is this some other reader macrology? I only new of the cljs\/clj variants.\n\nWe can certainly write app code that tests some run-time variable to decide which platform to cater to, but I am worried about the NS and project.clj dependencies. Do we solve all this with some black-belt (or trivials deps.edn work)?"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629227494.063100","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"f1349b2c-aefd-4909-bdfe-cf5cebd06016","blocks":[{"type":"rich_text","block_id":"o=Ld","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wait ENVARs? Well, still need conditional "},{"type":"text","text":"(ns (:require....???))","style":{"code":true}}]}]}],"user":"U0PUGPSFR","text":"Wait ENVARs? Well, still need conditional `(ns (:require....???))`"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629228752.066100","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"e7798cef-aafe-4e0f-9cb7-822977161b5e","blocks":[{"type":"rich_text","block_id":"m\/a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah the real PITA sharing code between two platforms (web and rn) are conditional requires"}]}]}],"user":"U4YGF4NGM","text":"yeah the real PITA sharing code between two platforms (web and rn) are conditional requires"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629228761.066300","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"0021e27f-a0b8-4839-ab94-57bfab1c7664","blocks":[{"type":"rich_text","block_id":"h9Xtw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you really want something that works at the compiler level"}]}]}],"user":"U4YGF4NGM","text":"you really want something that works at the compiler level"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629228780.066500","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"ed97d53b-0ffa-4cf7-b5ed-53b9e540efb7","blocks":[{"type":"rich_text","block_id":"3=Z0P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"since you can't really conditionally require code in CLJS"}]}]}],"user":"U4YGF4NGM","text":"since you can't really conditionally require code in CLJS"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629231285.081700","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"947f227a-3107-4acb-984d-9880684133ef","blocks":[{"type":"rich_text","block_id":"FGk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can conditionally require by using the require function inside a conditional, then use some variety of DI to provide the right platform dependent implementation"}]}]}],"user":"U051SS2EU","text":"you can conditionally require by using the require function inside a conditional, then use some variety of DI to provide the right platform dependent implementation"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629231299.082100","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"e8f01450-a307-456f-8ace-54bd50c1697e","blocks":[{"type":"rich_text","block_id":"3uS0Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"integrant \/ component \/ etc. make this easy"}]}]}],"user":"U051SS2EU","text":"integrant \/ component \/ etc. make this easy"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629231336.082500","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"c67c8687-e954-4672-97da-c1b4be29219a","blocks":[{"type":"rich_text","block_id":"QtRy+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what makes this harder in cljs is that you can't use "},{"type":"text","text":"resolve","style":{"code":true}}]}]}],"user":"U051SS2EU","text":"what makes this harder in cljs is that you can't use `resolve`"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629231470.083600","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"f1602143-1ebe-438b-aa25-cf54bc620005","blocks":[{"type":"rich_text","block_id":"8Nd6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, you cannot use "},{"type":"text","text":"require","style":{"code":true}},{"type":"text","text":" inside of a conditional in CLJS"}]}]}],"user":"U4YGF4NGM","text":"no, you cannot use `require` inside of a conditional in CLJS"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629231571.083800","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"c91f1ddb-eee6-4226-98ce-1a6cc932eaa2","blocks":[{"type":"rich_text","block_id":"XF8OM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"all dependencies within a namespace must be statically put in the "},{"type":"text","text":"(ns ,,, (:require ,,,))","style":{"code":true}},{"type":"text","text":" in ClojureScript"}]}]}],"user":"U4YGF4NGM","text":"all dependencies within a namespace must be statically put in the `(ns ,,, (:require ,,,))` in ClojureScript"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629234044.091000","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"b8c50729-ecf0-41ae-b036-175738138189","blocks":[{"type":"rich_text","block_id":"RF1T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, I forgot that, thanks"}]}]}],"user":"U051SS2EU","text":"oh, I forgot that, thanks"}
{"type":"message","thread_ts":"1629226131.060900","ts":"1629241099.112000","parent_user_id":"U051SS2EU","team":"T03RZGPFR","client_msg_id":"c981c33f-46c6-4b92-baa7-11623839b896","blocks":[{"type":"rich_text","block_id":"6S6qN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am having fantasies of two projects, one dedicate to Web, one to RN, that include whatever can be platform-neutral in one shared project, and then each pulls in a platform-specific project that supplies to provide (essentially) a common API to the ultimate client apps. "},{"type":"text","text":"insert hand-waving","style":{"italic":true}},{"type":"text","text":". We could even leave out platform-specific stuff, but I kinda like the idea of shared code bases as much as possible in an enterprise situation where code reuse has a chance."}]}]}],"user":"U0PUGPSFR","text":"I am having fantasies of two projects, one dedicate to Web, one to RN, that include whatever can be platform-neutral in one shared project, and then each pulls in a platform-specific project that supplies to provide (essentially) a common API to the ultimate client apps. _insert hand-waving_. We could even leave out platform-specific stuff, but I kinda like the idea of shared code bases as much as possible in an enterprise situation where code reuse has a chance."}
{"client_msg_id":"49973cec-6c8f-4edf-a61d-197a5fb1a9f2","type":"message","text":"it is designed as an extensible system, and you can pass platform identifiers to the reader in its option map when you invoke it","user":"U064X3EF3","ts":"1629226121.060400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"DxCr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it is designed as an extensible system, and you can pass platform identifiers to the reader in its option map when you invoke it"}]}]}]}
{"client_msg_id":"73d35e56-1fa0-4c86-b15c-b4f6b335fb63","type":"message","text":"it can probably not be extended in the way you want to extend it","user":"U064X3EF3","ts":"1629226094.059000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"3fdQY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it can probably not be extended in the way you want to extend it"}]}]}]}
{"subscribed":false,"reply_users":["U0P0TMEFJ","U051SS2EU","U4YGF4NGM"],"type":"message","thread_ts":"1629225882.057600","reply_users_count":3,"ts":"1629225882.057600","team":"T03RZGPFR","client_msg_id":"d563c2fa-11df-4916-813c-ce0e372fbd57","blocks":[{"type":"rich_text","block_id":"jQGx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can "},{"type":"text","text":"#?","style":{"code":true}},{"type":"text","text":" be extended?\n\nWe are looking at using the magic of\u00a0.cljc\u00a0to share code between backend and front, but \"front\" has to work for both web and some RN wrapper.\n\nAnd they ^^^ differ in re, say, talking to MQTT via Paho.\n\nI see these\u00a0#?\u00a0options in the doc example:\n\n#?(:clj\u00a0 (Clojure expression)\n\u00a0\u00a0\u00a0:cljs (ClojureScript expression)\n\u00a0\u00a0\u00a0:cljr (Clojure CLR expression)\n\u00a0\u00a0\u00a0:default (fallthrough expression))\n\nCan we extend that ourselves? Thx!\u00a0"},{"type":"emoji","name":"pray"}]}]}],"is_locked":false,"user":"U0PUGPSFR","reply_count":7,"latest_reply":"1629234705.091400","text":"Can `#?` be extended?\n\nWe are looking at using the magic of\u00a0.cljc\u00a0to share code between backend and front, but \"front\" has to work for both web and some RN wrapper.\n\nAnd they ^^^ differ in re, say, talking to MQTT via Paho.\n\nI see these\u00a0#?\u00a0options in the doc example:\n\n#?(:clj\u00a0 (Clojure expression)\n\u00a0\u00a0\u00a0:cljs (ClojureScript expression)\n\u00a0\u00a0\u00a0:cljr (Clojure CLR expression)\n\u00a0\u00a0\u00a0:default (fallthrough expression))\n\nCan we extend that ourselves? Thx!\u00a0:pray:"}
{"subscribed":false,"reply_users":["U0P0TMEFJ","U051SS2EU","U4YGF4NGM"],"type":"message","thread_ts":"1629225882.057600","reply_users_count":3,"ts":"1629225882.057600","team":"T03RZGPFR","client_msg_id":"d563c2fa-11df-4916-813c-ce0e372fbd57","blocks":[{"type":"rich_text","block_id":"jQGx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can "},{"type":"text","text":"#?","style":{"code":true}},{"type":"text","text":" be extended?\n\nWe are looking at using the magic of\u00a0.cljc\u00a0to share code between backend and front, but \"front\" has to work for both web and some RN wrapper.\n\nAnd they ^^^ differ in re, say, talking to MQTT via Paho.\n\nI see these\u00a0#?\u00a0options in the doc example:\n\n#?(:clj\u00a0 (Clojure expression)\n\u00a0\u00a0\u00a0:cljs (ClojureScript expression)\n\u00a0\u00a0\u00a0:cljr (Clojure CLR expression)\n\u00a0\u00a0\u00a0:default (fallthrough expression))\n\nCan we extend that ourselves? Thx!\u00a0"},{"type":"emoji","name":"pray"}]}]}],"is_locked":false,"user":"U0PUGPSFR","reply_count":7,"latest_reply":"1629234705.091400","text":"Can `#?` be extended?\n\nWe are looking at using the magic of\u00a0.cljc\u00a0to share code between backend and front, but \"front\" has to work for both web and some RN wrapper.\n\nAnd they ^^^ differ in re, say, talking to MQTT via Paho.\n\nI see these\u00a0#?\u00a0options in the doc example:\n\n#?(:clj\u00a0 (Clojure expression)\n\u00a0\u00a0\u00a0:cljs (ClojureScript expression)\n\u00a0\u00a0\u00a0:cljr (Clojure CLR expression)\n\u00a0\u00a0\u00a0:default (fallthrough expression))\n\nCan we extend that ourselves? Thx!\u00a0:pray:"}
{"type":"message","thread_ts":"1629225882.057600","ts":"1629226102.059400","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"30397e03-f959-42a6-8375-cef0b054fdd3","blocks":[{"type":"rich_text","block_id":"ssOnE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think babashka supports it's own tag in the same way ... I suspect that \"extend that ourselves\" is going to mean \"write a complier\" "},{"type":"emoji","name":"wink"}]}]}],"user":"U0P0TMEFJ","reactions":[{"name":"100","users":["U051SS2EU"],"count":1}],"text":"I think babashka supports it's own tag in the same way ... I suspect that \"extend that ourselves\" is going to mean \"write a complier\" :wink:"}
{"type":"message","thread_ts":"1629225882.057600","ts":"1629226212.061800","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"7f7cef64-981d-4fb3-8d38-f2621beb679d","blocks":[{"type":"rich_text","block_id":"8Np","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think clojure is modular enough that you just need to implement your own reader"}]}]}],"user":"U051SS2EU","text":"I think clojure is modular enough that you just need to implement your own reader"}
{"type":"message","thread_ts":"1629225882.057600","ts":"1629228625.065300","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"e0b8e551-98cf-4a39-80f1-56a1311cdee7","blocks":[{"type":"rich_text","block_id":"EeLM7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe shadow-cljs has this as a feature"}]}]}],"user":"U4YGF4NGM","text":"I believe shadow-cljs has this as a feature"}
{"type":"message","thread_ts":"1629225882.057600","ts":"1629228637.065500","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"14e3aa32-7697-4083-9038-d6076689f9a5","blocks":[{"type":"rich_text","block_id":"sb2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've used it before to share code between browser and node.js code"}]}]}],"user":"U4YGF4NGM","text":"I've used it before to share code between browser and node.js code"}
{"type":"message","thread_ts":"1629225882.057600","ts":"1629228656.065700","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"e2c1f5f3-16be-4235-bf71-4db07822cb3c","blocks":[{"type":"rich_text","block_id":"MSha","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/shadow-cljs.github.io\/docs\/UsersGuide.html#_conditional_reading"}]}]}],"user":"U4YGF4NGM","reactions":[{"name":"+1","users":["U0PUGPSFR"],"count":1}],"text":"<https:\/\/shadow-cljs.github.io\/docs\/UsersGuide.html#_conditional_reading>"}
{"type":"message","thread_ts":"1629225882.057600","ts":"1629228692.065900","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"441fd5c6-63f7-4c91-bf3f-58ae46d987ab","blocks":[{"type":"rich_text","block_id":"ROxR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe in a normal JVM Clojure context it should just skip over any conditional that doesn't match "},{"type":"text","text":":clj","style":{"code":true}}]}]}],"user":"U4YGF4NGM","text":"I believe in a normal JVM Clojure context it should just skip over any conditional that doesn't match `:clj`"}
{"type":"message","thread_ts":"1629225882.057600","ts":"1629234705.091400","parent_user_id":"U0PUGPSFR","team":"T03RZGPFR","client_msg_id":"2fe7d031-75d5-4d32-ae00-3e1bf2497fbc","blocks":[{"type":"rich_text","block_id":"Wxo","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"+1"},{"type":"text","text":" .. cool ... I didn't know shadow had implemented that ... that's super useful ... every day's a school day "},{"type":"emoji","name":"wink"}]}]}],"user":"U0P0TMEFJ","text":":+1: .. cool ... I didn't know shadow had implemented that ... that's super useful ... every day's a school day :wink:"}
{"subscribed":false,"reply_users":["U45T93RA6","U0WL6FA77","U029J729MUP","U0VP19K6K","U487Z32UF","UGJE0MM0W"],"type":"message","thread_ts":"1629203721.031900","reply_users_count":6,"ts":"1629203721.031900","team":"T03RZGPFR","client_msg_id":"4f1e5c70-31fb-41ff-805f-235a31c48a32","blocks":[{"type":"rich_text","block_id":"dbj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When exactly garbage collector free memory? When references no longer exist? From time to time? In some kind of random way?\n\nThe point is I see heap usage on chart and I am thinking if it is current need for memory or also include significant part of data which are no longer needed, but GC didn\u2019t remove them yet."}]}]}],"is_locked":false,"user":"U0WL6FA77","reply_count":82,"latest_reply":"1629841187.306700","text":"When exactly garbage collector free memory? When references no longer exist? From time to time? In some kind of random way?\n\nThe point is I see heap usage on chart and I am thinking if it is current need for memory or also include significant part of data which are no longer needed, but GC didn\u2019t remove them yet."}
{"subscribed":false,"reply_users":["U45T93RA6","U0WL6FA77","U029J729MUP","U0VP19K6K","U487Z32UF","UGJE0MM0W"],"type":"message","thread_ts":"1629203721.031900","reply_users_count":6,"ts":"1629203721.031900","team":"T03RZGPFR","client_msg_id":"4f1e5c70-31fb-41ff-805f-235a31c48a32","blocks":[{"type":"rich_text","block_id":"dbj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When exactly garbage collector free memory? When references no longer exist? From time to time? In some kind of random way?\n\nThe point is I see heap usage on chart and I am thinking if it is current need for memory or also include significant part of data which are no longer needed, but GC didn\u2019t remove them yet."}]}]}],"is_locked":false,"user":"U0WL6FA77","reply_count":82,"latest_reply":"1629841187.306700","text":"When exactly garbage collector free memory? When references no longer exist? From time to time? In some kind of random way?\n\nThe point is I see heap usage on chart and I am thinking if it is current need for memory or also include significant part of data which are no longer needed, but GC didn\u2019t remove them yet."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629203950.032000","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"7ff50723-d9c8-4a74-8735-ccf1b0eb6ed8","blocks":[{"type":"rich_text","block_id":"5g0=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think most GCs don't free memory at all, their Linux process' memory can only grow or keep its size\n\nG1GC does free memory as soon as it performs a GC"}]}]}],"user":"U45T93RA6","text":"I think most GCs don't free memory at all, their Linux process' memory can only grow or keep its size\n\nG1GC does free memory as soon as it performs a GC"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204038.032200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"c3347a38-143d-43d5-9b84-5323ffef25db","blocks":[{"type":"rich_text","block_id":"dFBj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't understand the second paragraph, you might want to reword it"}]}]}],"user":"U45T93RA6","text":"I don't understand the second paragraph, you might want to reword it"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204200.032400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"b0c4b7ac-799e-4aae-afd0-f145dc5cbcbd","blocks":[{"type":"rich_text","block_id":"OZM","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I think most GCs don\u2019t free memory at all,"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI don\u2019t understand what you mean"}]}]}],"user":"U0WL6FA77","text":"&gt; I think most GCs don\u2019t free memory at all,\nI don\u2019t understand what you mean"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204217.032600","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"a7853007-8256-45a5-b35f-e8efeda782b7","blocks":[{"type":"rich_text","block_id":"Pts","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh ok to precise:"}]}]}],"user":"U0WL6FA77","text":"oh ok to precise:"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204228.032800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"4d146605-a5e6-4d88-b18b-b49e55962ba3","blocks":[{"type":"rich_text","block_id":"q4UpR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean free memory inside Java application, not for system"}]}]}],"user":"U0WL6FA77","reactions":[{"name":"+1","users":["U45T93RA6"],"count":1}],"text":"I mean free memory inside Java application, not for system"}
{"type":"message","display_as_bot":false,"thread_ts":"1629203721.031900","ts":"1629204352.033100","parent_user_id":"U0WL6FA77","files":[{"thumb_1024_w":1024,"thumb_1024_h":219,"thumb_1024":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B06EPHD5-469d72c18f\/image_1024.png","thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B06EPHD5-469d72c18f\/image_80.png","thumb_360_h":77,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B06EPHD5-469d72c18f\/image_160.png","thumb_960":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B06EPHD5-469d72c18f\/image_960.png","thumb_960_w":960,"original_w":2256,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02B06EPHD5\/download\/image.png","name":"image.png","permalink":"https:\/\/clojurians.slack.com\/files\/U0WL6FA77\/F02B06EPHD5\/image.png","username":"","mode":"hosted","thumb_480_h":103,"created":1629204266,"display_as_bot":false,"thumb_480":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B06EPHD5-469d72c18f\/image_480.png","mimetype":"image\/png","size":69287,"title":"image.png","media_display_type":"unknown","thumb_800":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B06EPHD5-469d72c18f\/image_800.png","is_public":true,"id":"F02B06EPHD5","original_h":482,"external_type":"","thumb_480_w":480,"thumb_360_w":360,"thumb_720_h":154,"thumb_720_w":720,"thumb_tiny":"AwAKADDSoqLJ5570sf8ArD9KXWwLUkzRmlopgJk0UtFAH\/\/Z","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B06EPHD5-469d72c18f\/image_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02B06EPHD5\/image.png","thumb_720":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B06EPHD5-469d72c18f\/image_720.png","thumb_960_h":205,"pretty_type":"PNG","has_rich_preview":false,"timestamp":1629204266,"thumb_800_w":800,"user":"U0WL6FA77","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B06EPHD5-469d72c18f\/image_64.png","thumb_800_h":171,"permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02B06EPHD5-6e86a727a1"}],"blocks":[{"type":"rich_text","block_id":"oOlpb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am thinking how to interpret used heap:\n1) heap which is currently used by app to which app refer\n2) the point above + memory which is not needed anymore, but GC didn\u2019t free it yet"}]}]}],"user":"U0WL6FA77","upload":false,"text":"I am thinking how to interpret used heap:\n1) heap which is currently used by app to which app refer\n2) the point above + memory which is not needed anymore, but GC didn\u2019t free it yet"}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"U0WL6FA77","ts":"1629204428.000000"},"ts":"1629204416.033300","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"30ea23ae-660b-4850-bedb-2c34c66dfeb8","blocks":[{"type":"rich_text","block_id":"y3jp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so the code where using 1GB vector in function which ended. This data are not used by app anymore. Is this 1GB still in used heap and waiting for GC to remove it? I think yes. How long?"}]}]}],"user":"U0WL6FA77","text":"so the code where using 1GB vector in function which ended. This data are not used by app anymore. Is this 1GB still in used heap and waiting for GC to remove it? I think yes. How long?"}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"U45T93RA6","ts":"1629205336.000000"},"ts":"1629204423.033500","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"ab79d37e-856e-4968-af65-cd61b9ca9078","blocks":[{"type":"rich_text","block_id":"Cj\/U","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" When exactly garbage collector free memory? When references no longer exist? From time to time? In some kind of random way?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAnswering again then: will depend on the choice of GC and its parameters (which can be "},{"type":"text","text":"many","style":{"italic":true}},{"type":"text","text":").\n\nI guess a sensible tldr is that if the GC thinks you're about to run out of memory, and it's good timing to perform a GC, then it will do so.\n\nOverall it's a non-deterministic process although "},{"type":"text","text":"(System\/gc)","style":{"code":true}},{"type":"text","text":" can nudge it for the sake of experimientation."}]}]}],"user":"U45T93RA6","text":"&gt;  When exactly garbage collector free memory? When references no longer exist? From time to time? In some kind of random way?\nAnswering again then: will depend on the choice of GC and its parameters (which can be _many_).\n\nI guess a sensible tldr is that if the GC thinks you're about to run out of memory, and it's good timing to perform a GC, then it will do so.\n\nOverall it's a non-deterministic process although `(System\/gc)` can nudge it for the sake of experimientation."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204497.033800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"0c8f0494-7a54-457b-a3f9-af9ac9915eb2","blocks":[{"type":"rich_text","block_id":"=HDE","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"GC thinks you\u2019re about to run out of memory, and it\u2019s good timing to perform a GC, then it will do so"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYes this one for sure when it is close to out of memory. But what before? Does it run every 15 minutes or something like that?"}]}]}],"user":"U0WL6FA77","text":"&gt; GC thinks you\u2019re about to run out of memory, and it\u2019s good timing to perform a GC, then it will do so\nYes this one for sure when it is close to out of memory. But what before? Does it run every 15 minutes or something like that?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204514.034000","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"1b40a418-49f4-40f7-aaa2-efa0229009da","blocks":[{"type":"rich_text","block_id":"z5Nvl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Without that knowledge I don\u2019t know how to think about heap usage"}]}]}],"user":"U0WL6FA77","text":"Without that knowledge I don\u2019t know how to think about heap usage"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204553.034200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"cf679e73-6401-4bb2-98f7-53397a647dc2","blocks":[{"type":"rich_text","block_id":"IRecF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But hmm. Maybe I just have to accept I can\u2019t know what memory heap contain. I mean how many old data."}]}]}],"user":"U0WL6FA77","text":"But hmm. Maybe I just have to accept I can\u2019t know what memory heap contain. I mean how many old data."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204596.034400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"4cecad3d-7e6d-43cf-a8b3-170e19f80c62","blocks":[{"type":"rich_text","block_id":"1wG9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think any GC will have a hard-and-fast rule like \"every 15m\" or such. They're really complicated programs (which is why runtimes other than the JVM have subpar GCs)"}]}]}],"user":"U45T93RA6","text":"I don't think any GC will have a hard-and-fast rule like \"every 15m\" or such. They're really complicated programs (which is why runtimes other than the JVM have subpar GCs)"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204640.034600","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"5ba1e931-263d-4db9-8389-8f67dfeab7f7","blocks":[{"type":"rich_text","block_id":"QOYWh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok so then it means I can\u2019t really use heap usage as a way to know how much memory app need at that moment"}]}]}],"user":"U0WL6FA77","text":"ok so then it means I can\u2019t really use heap usage as a way to know how much memory app need at that moment"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204764.034800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"077b062a-6bb5-4042-b700-5563867b06f1","blocks":[{"type":"rich_text","block_id":"Bc3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In your screenshot, "},{"type":"text","text":"Used Heap","style":{"code":true}},{"type":"text","text":" includes used and unused object references. I know this by pure logic: the graph "},{"type":"text","text":"descends","style":{"italic":true}},{"type":"text","text":" from time to time (once per each performed GC), which implies it accumulates garbage as the program runs"}]}]}],"user":"U45T93RA6","text":"In your screenshot, `Used Heap` includes used and unused object references. I know this by pure logic: the graph _descends_ from time to time (once per each performed GC), which implies it accumulates garbage as the program runs"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629204856.035000","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"1c23277e-4d94-4f87-afb9-efec43dab49e","blocks":[{"type":"rich_text","block_id":"8\/XsA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"exactly, so I can\u2019t rely on this to debug memory usage"}]}]}],"user":"U0WL6FA77","text":"exactly, so I can\u2019t rely on this to debug memory usage"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205231.035600","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"f24a8fe1-cbea-436f-af83-3fd6def5c577","blocks":[{"type":"rich_text","block_id":"4bgiq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you google around, you should be able to find tools for dumping JVM memory and then exploring the dumped snapshot. These tools aren\u2019t super easy to use, but if you need to know what\u2019s eating up your memory, they\u2019re a good way to explore it."}]}]}],"user":"U029J729MUP","text":"If you google around, you should be able to find tools for dumping JVM memory and then exploring the dumped snapshot. These tools aren\u2019t super easy to use, but if you need to know what\u2019s eating up your memory, they\u2019re a good way to explore it."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205236.035800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"aeec414d-ae0f-42b3-b7c6-71d55e1b1d47","blocks":[{"type":"rich_text","block_id":"E6\/Or","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In my "},{"type":"text","text":"very","style":{"italic":true}},{"type":"text","text":" limited understanding of memory usage that graph looks normal to me (depends on exactly what it\u2019s doing at the end there though). What are you trying to debug?"}]}]}],"user":"U0VP19K6K","reactions":[{"name":"heavy_plus_sign","users":["U45T93RA6","U029J729MUP"],"count":2}],"text":"In my _very_ limited understanding of memory usage that graph looks normal to me (depends on exactly what it\u2019s doing at the end there though). What are you trying to debug?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205537.036300","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"834f15b4-bc8a-4d3c-b253-bf38dbcf8377","blocks":[{"type":"rich_text","block_id":"I4\/","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U029J729MUP"},{"type":"text","text":" I am waiting for cannot allocate memory to get heap dump file. But I am really not sure if it will help me. Debugging this is hard and very limited information. Especially with anonymous functions which are named in the way you really don\u2019t know what part of the code it is."}]}]}],"user":"U0WL6FA77","text":"<@U029J729MUP> I am waiting for cannot allocate memory to get heap dump file. But I am really not sure if it will help me. Debugging this is hard and very limited information. Especially with anonymous functions which are named in the way you really don\u2019t know what part of the code it is."}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"U0WL6FA77","ts":"1629205575.000000"},"ts":"1629205567.036500","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"e010ac67-2a84-4d36-bd4b-866790431372","blocks":[{"type":"rich_text","block_id":"Dg+4P","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0VP19K6K"},{"type":"text","text":" I am trying to fix \u201cjava.io.IOException: Cannot allocate memory\u201d"}]}]}],"user":"U0WL6FA77","text":"<@U0VP19K6K> I am trying to fix \u201cjava.io.IOException: Cannot allocate memory\u201d"}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"U0VP19K6K","ts":"1629205604.000000"},"ts":"1629205587.036800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"aec5019f-b7e6-4901-8fb6-fe906ccb6a65","blocks":[{"type":"rich_text","block_id":"S1Ys","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is that what happens at the end of the graph?"}]}]}],"user":"U0VP19K6K","text":"Is that what happens at the end of the graph?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205654.037100","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"cbf524ed-a1d8-4617-bca6-4c9f9ad9996e","blocks":[{"type":"rich_text","block_id":"6183k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"user":"U0WL6FA77","text":"yes"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205662.037300","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"1741fbc8-8cc4-47ed-92fe-04db646fbaac","blocks":[{"type":"rich_text","block_id":"40Cp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if it\u2019s a problem with JVM memory, I would expect an error, not an exception "},{"type":"emoji","name":"thinking_face"}]}]}],"user":"U029J729MUP","text":"if it\u2019s a problem with JVM memory, I would expect an error, not an exception :thinking_face:"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205688.037500","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"bdae0e30-dc8d-4d33-948a-a0ae84254677","blocks":[{"type":"rich_text","block_id":"\/cUPQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is probably memory leak in the app, but if for sure and where."}]}]}],"user":"U0WL6FA77","text":"It is probably memory leak in the app, but if for sure and where."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205714.037700","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"d25ff29d-4c3f-4f3c-af77-144382810f29","blocks":[{"type":"rich_text","block_id":"3dV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"googling that error message suggests that this may be an allocation failure in a child process"}]}]}],"user":"U029J729MUP","text":"googling that error message suggests that this may be an allocation failure in a child process"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205733.037900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"3616a106-94d8-49a2-af50-06e891388170","blocks":[{"type":"rich_text","block_id":"HpDG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if the JVM itself were running out of memory, you\u2019d get an OutOfMemoryError, not an IOException"}]}]}],"user":"U029J729MUP","reactions":[{"name":"heavy_plus_sign","users":["U45T93RA6"],"count":1}],"text":"if the JVM itself were running out of memory, you\u2019d get an OutOfMemoryError, not an IOException"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205759.038200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"ae41029e-387e-4939-b800-1982f5b9d8cb","blocks":[{"type":"rich_text","block_id":"M3aY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it is happening when downloading AWS S3 file"}]}]}],"user":"U0WL6FA77","text":"it is happening when downloading AWS S3 file"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205794.038400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"02d196d6-cea6-418a-9158-86427a56aee9","blocks":[{"type":"rich_text","block_id":"wZO","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"com.amazonaws.services.s3.internal.S3AbortableInputStream - Not all bytes were read from the S3ObjectInputStream, aborting HTTP connection. This is likely an error and may result in sub-optimal behavior. Request only the bytes you need via a ranged GET or drain the input stream after use.\nException in thread \"cli-planner thread\" java.io.IOException: Cannot allocate memory"}]}]}],"user":"U0WL6FA77","text":"```com.amazonaws.services.s3.internal.S3AbortableInputStream - Not all bytes were read from the S3ObjectInputStream, aborting HTTP connection. This is likely an error and may result in sub-optimal behavior. Request only the bytes you need via a ranged GET or drain the input stream after use.\nException in thread \"cli-planner thread\" java.io.IOException: Cannot allocate memory```"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205841.038600","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"31032227-9f55-4b1d-bc19-b17044ad0b6c","blocks":[{"type":"rich_text","block_id":"fzU\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"before we were using Java 8 and we had out of memory exception, after update to Java 11 we have the one above"}]}]}],"user":"U0WL6FA77","text":"before we were using Java 8 and we had out of memory exception, after update to Java 11 we have the one above"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205843.038800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"cdd9c39b-3b21-48f8-bfde-c44064b9cddb","blocks":[{"type":"rich_text","block_id":"0ACN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What\u2019s the max heap size?"}]}]}],"user":"U0VP19K6K","text":"What\u2019s the max heap size?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205877.039000","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"94862751-76d4-4772-9685-96133d87cbbc","blocks":[{"type":"rich_text","block_id":"LFw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"14000Mi"}]}]}],"user":"U0WL6FA77","text":"14000Mi"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205899.039200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"5e68e9f8-39b2-48dc-8a55-459d33a59251","blocks":[{"type":"rich_text","block_id":"ZvbY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so quite a lot"}]}]}],"user":"U0WL6FA77","text":"so quite a lot"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205914.039400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"773c9c80-f6d4-498e-88e6-4160b53e3f9f","blocks":[{"type":"rich_text","block_id":"ntYn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it maybe then a case that the JVM just needs more heap than it\u2019s allowed to use? (eyeballing graph above)"}]}]}],"user":"U0VP19K6K","text":"Is it maybe then a case that the JVM just needs more heap than it\u2019s allowed to use? (eyeballing graph above)"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205949.039600","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"801c6ce8-71ce-4cf8-865d-3fc45d017a20","blocks":[{"type":"rich_text","block_id":"zpu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we were increasing it a few times and it always needs more"}]}]}],"user":"U0WL6FA77","reactions":[{"name":"thinking_face","users":["U0VP19K6K"],"count":1}],"text":"we were increasing it a few times and it always needs more"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629205976.039900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"68bb03af-379e-4303-b7e4-d57c1b1b61ad","blocks":[{"type":"rich_text","block_id":"7P72Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Note carefully the difference between an exception and an error. This is an exception, implying that it\u2019s something the JVM program may in principle be able to handle. That means the JVM itself is not running out of memory \u2013 something else, in native code, is failing to allocate, which may be for a number of reasons."}]}]}],"user":"U029J729MUP","reactions":[{"name":"point_up","users":["U0VP19K6K"],"count":1}],"text":"Note carefully the difference between an exception and an error. This is an exception, implying that it\u2019s something the JVM program may in principle be able to handle. That means the JVM itself is not running out of memory \u2013 something else, in native code, is failing to allocate, which may be for a number of reasons."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206046.040200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"d8a38f99-7c9d-4858-9481-3465a902889d","blocks":[{"type":"rich_text","block_id":"9AZh","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U029J729MUP"},{"type":"text","text":" can you give such example?"}]}]}],"user":"U0WL6FA77","text":"<@U029J729MUP> can you give such example?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206108.040400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"42801c1f-d894-4d2a-be5f-c941ae758fa8","blocks":[{"type":"rich_text","block_id":"FXfy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you'd have better luck starting this thread over again stating that you get a  "},{"type":"text","text":"java.io.IOException: Cannot allocate memory","style":{"code":true}},{"type":"text","text":" and ideally attaching a redacted stacktrace, and the specific things you've tried for trying to solve that specific error (generic OOM hunting doesn't count; that assumes a specific root cause)\n\ntldr this doesn't particularly smell like an OOM, you can get better help by simply stating  your problem and letting the experts who hang out in "},{"type":"channel","channel_id":"C03S1KBA2"},{"type":"text","text":" help\n\n(certainly not me in this case)"}]}]}],"user":"U45T93RA6","reactions":[{"name":"heavy_plus_sign","users":["U029J729MUP"],"count":1}],"text":"I think you'd have better luck starting this thread over again stating that you get a  `java.io.IOException: Cannot allocate memory` and ideally attaching a redacted stacktrace, and the specific things you've tried for trying to solve that specific error (generic OOM hunting doesn't count; that assumes a specific root cause)\n\ntldr this doesn't particularly smell like an OOM, you can get better help by simply stating  your problem and letting the experts who hang out in <#C03S1KBA2|clojure> help\n\n(certainly not me in this case)"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206134.040600","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"70097379-9c62-42ce-860b-ded9e4ce2895","blocks":[{"type":"rich_text","block_id":"FlM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don\u2019t have a lot of experience with native code, but, for example, something might be trying to allocate a contiguous block that is larger than any free spot in system memory"}]}]}],"user":"U029J729MUP","reactions":[{"name":"thinking_face","users":["U0WL6FA77"],"count":1}],"text":"I don\u2019t have a lot of experience with native code, but, for example, something might be trying to allocate a contiguous block that is larger than any free spot in system memory"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206159.040800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"e82fc5be-12df-49d1-85b7-b8dbf716a548","blocks":[{"type":"rich_text","block_id":"L1=8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which isn\u2019t quite the same thing as simply running out of memory, and is very different from "},{"type":"text","text":"the JVM","style":{"italic":true}},{"type":"text","text":" running out of memory"}]}]}],"user":"U029J729MUP","text":"which isn\u2019t quite the same thing as simply running out of memory, and is very different from _the JVM_ running out of memory"}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"U0WL6FA77","ts":"1629206249.000000"},"ts":"1629206240.041200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"8250c3ea-fa81-4817-a8ad-720f5ddb93db","blocks":[{"type":"rich_text","block_id":"YBGvy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok so let\u2019s be clear about what "},{"type":"text","text":"java.io.IOException: Cannot allocate memory","style":{"code":true}},{"type":"text","text":" mean\n\nAre you saying it is not about heap or Java memory, but system memory for 100%?"}]}]}],"user":"U0WL6FA77","text":"ok so let\u2019s be clear about what `java.io.IOException: Cannot allocate memory` mean\n\nAre you saying it is not about heap or Java memory, but system memory for 100%?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206267.041500","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"d89ba0a0-1164-4676-9317-70278b46ee17","blocks":[{"type":"rich_text","block_id":"eOExq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or only it can mean this"}]}]}],"user":"U0WL6FA77","text":"or only it can mean this"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206277.041700","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"2b2ad620-c9e2-41fb-bc54-692bc47c9ddb","blocks":[{"type":"rich_text","block_id":"W4I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah\u2026 I would also consider that there are multiple factors here\u2026 I wouldn\u2019t assume it\u2019s a leak, not sure what you\u2019re doing with the stream but if it\u2019s big enough and you\u2019re trying to consume the whole thing in one go it could surface other issues like others have mentioned? Just a stab in the dark "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U0VP19K6K","text":"Yeah\u2026 I would also consider that there are multiple factors here\u2026 I wouldn\u2019t assume it\u2019s a leak, not sure what you\u2019re doing with the stream but if it\u2019s big enough and you\u2019re trying to consume the whole thing in one go it could surface other issues like others have mentioned? Just a stab in the dark :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206277.041900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"6290d5e4-edc8-4676-8e83-6f1a61185cbf","blocks":[{"type":"rich_text","block_id":"D9zPh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or it exactly mean this"}]}]}],"user":"U0WL6FA77","text":"or it exactly mean this"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206311.042100","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"078a6be9-aecb-4b55-b5c2-227bf448fcb2","blocks":[{"type":"rich_text","block_id":"mC6Q2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes. If the JVM were running out of memory, it would be an OutOfMemoryError. An IOException implies that it\u2019s a problem encountered while interfacing with something else on the system. Googling the error message reveals that people encounter this most often when working with child processes."}]}]}],"user":"U029J729MUP","text":"Yes. If the JVM were running out of memory, it would be an OutOfMemoryError. An IOException implies that it\u2019s a problem encountered while interfacing with something else on the system. Googling the error message reveals that people encounter this most often when working with child processes."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206369.042300","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"8a79af00-874f-4c2e-ba5d-dc50a0d28305","blocks":[{"type":"rich_text","block_id":"JJ\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what exactly do you mean by child process here?"}]}]}],"user":"U0WL6FA77","text":"what exactly do you mean by child process here?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206414.042500","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"31bf1bb2-141c-4881-8f87-b79989a9f6ed","blocks":[{"type":"rich_text","block_id":"XHrm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"asking differently: async don\u2019t use child processes right?"}]}]}],"user":"U0WL6FA77","text":"asking differently: async don\u2019t use child processes right?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206438.042700","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"584cd459-75fa-476b-8c79-8b63c1bc7505","blocks":[{"type":"rich_text","block_id":"iNdKZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if so we don\u2019t have child processes unless AWS libraries have "},{"type":"emoji","name":"thinking_face"}]}]}],"user":"U0WL6FA77","text":"if so we don\u2019t have child processes unless AWS libraries have :thinking_face:"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206452.042900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"5c13661c-4089-4a3b-b154-e39b9cbfc6c6","blocks":[{"type":"rich_text","block_id":"AMg9A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That\u2019s probably a bit more than I can take the time to explain. It\u2019s a core concept in operating systems \u2013 I suggest googling \u201cchild process\u201d and just reading up a bit. But in a nutshell, it\u2019s another program outside of the JVM that the JVM is talking to."}]}]}],"user":"U029J729MUP","text":"That\u2019s probably a bit more than I can take the time to explain. It\u2019s a core concept in operating systems \u2013 I suggest googling \u201cchild process\u201d and just reading up a bit. But in a nutshell, it\u2019s another program outside of the JVM that the JVM is talking to."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206498.043100","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"d2f2c753-788e-4b90-bdbc-c3e06e62c68f","blocks":[{"type":"rich_text","block_id":"\/sUbA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It\u2019s not at all unlikely that the AWS libraries spawn child processes or do some unexpected shenanigans with native code"}]}]}],"user":"U029J729MUP","text":"It\u2019s not at all unlikely that the AWS libraries spawn child processes or do some unexpected shenanigans with native code"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/aws\/aws-sdk-java\/blob\/master\/aws-java-sdk-s3\/src\/main\/java\/com\/amazonaws\/services\/s3\/internal\/S3AbortableInputStream.java | S3AbortableInputStream.java>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/aws\/aws-sdk-java|aws\/aws-sdk-java>","title":"<https:\/\/github.com\/aws\/aws-sdk-java\/blob\/master\/aws-java-sdk-s3\/src\/main\/java\/com\/amazonaws\/services\/s3\/internal\/S3AbortableInputStream.java | S3AbortableInputStream.java>","id":1,"app_unfurl_url":"https:\/\/github.com\/aws\/aws-sdk-java\/blob\/master\/aws-java-sdk-s3\/src\/main\/java\/com\/amazonaws\/services\/s3\/internal\/S3AbortableInputStream.java#L174","text":"```\n    public void close() throws IOException {\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629203721.031900","ts":"1629206593.043300","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"ae8c6b65-2f9d-4828-89c7-9c351322ad00","blocks":[{"type":"rich_text","block_id":"c96","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The log message that you see occurs in the close method of that class, so it\u2019s probably not saying anything about the root cause of your error, just that the error interrupted the read "},{"type":"link","url":"https:\/\/github.com\/aws\/aws-sdk-java\/blob\/master\/aws-java-sdk-s3\/src\/main\/java\/com\/amazonaws\/services\/s3\/internal\/S3AbortableInputStream.java#L174"}]}]}],"user":"U029J729MUP","text":"The log message that you see occurs in the close method of that class, so it\u2019s probably not saying anything about the root cause of your error, just that the error interrupted the read <https:\/\/github.com\/aws\/aws-sdk-java\/blob\/master\/aws-java-sdk-s3\/src\/main\/java\/com\/amazonaws\/services\/s3\/internal\/S3AbortableInputStream.java#L174>"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206612.043500","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"96c52635-f6db-480b-81af-0c7beacec5dc","blocks":[{"type":"rich_text","block_id":"THw5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but that tells you something about when it\u2019s happening"}]}]}],"user":"U029J729MUP","text":"but that tells you something about when it\u2019s happening"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206689.043800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"4bf61c75-49a5-45e8-ac58-e1fa2413c8bc","blocks":[{"type":"rich_text","block_id":"rBK","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":". But in a nutshell, it\u2019s another program outside of the JVM that the JVM is talking to."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYes, but I don\u2019t think we have such one. I also didn\u2019t see it using "},{"type":"text","text":"jcmd","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U0WL6FA77","text":"&gt; . But in a nutshell, it\u2019s another program outside of the JVM that the JVM is talking to.\nYes, but I don\u2019t think we have such one. I also didn\u2019t see it using `jcmd`."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206764.044000","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"6d9d07e0-144a-461f-ae11-a789add0f631","blocks":[{"type":"rich_text","block_id":"XBG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But it is already progress, because I thought this exception is Java memory issue. Not outside Java memory (system memory)."}]}]}],"user":"U0WL6FA77","text":"But it is already progress, because I thought this exception is Java memory issue. Not outside Java memory (system memory)."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206831.044200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"094eaea7-7f9a-4111-98c8-49ebce1cde6f","blocks":[{"type":"rich_text","block_id":"zCgn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I will figure out this I will let you know "},{"type":"emoji","name":"wink"}]}]}],"user":"U0WL6FA77","text":"If I will figure out this I will let you know :wink:"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206837.044400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"865ae162-9df9-440e-b6a2-6123368b04c1","blocks":[{"type":"rich_text","block_id":"fa2w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah I\u2019m just speculating about it being a child process, but I\u2019m positive that it isn\u2019t the JVM running out of memory. This is native code somewhere. Maybe in a native system call in low-level library code. Do you have a full stack trace?"}]}]}],"user":"U029J729MUP","text":"Yeah I\u2019m just speculating about it being a child process, but I\u2019m positive that it isn\u2019t the JVM running out of memory. This is native code somewhere. Maybe in a native system call in low-level library code. Do you have a full stack trace?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629206892.044600","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"daa1fe05-aca4-4cfc-af6a-6b6a857039c0","blocks":[{"type":"rich_text","block_id":"qEVk","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"2021-06-22 18:19:33,837 [cli-planner thread] WARN  com.amazonaws.services.s3.internal.S3AbortableInputStream - Not all bytes were read from the S3ObjectInputStream, aborting HTTP connection. This is likely an error and may result in sub-optimal behavior. Request only the bytes you need via a ranged GET or drain the input stream after use.\nException in thread \"cli-planner thread\" java.io.IOException: Cannot allocate memory\n        at java.io.FileOutputStream.writeBytes(Native Method)\n        at java.io.FileOutputStream.write(FileOutputStream.java:326)\n        at clojure.java.io$fn__11002.invokeStatic(io.clj:307)\n        at clojure.java.io$fn__11002.invoke(io.clj:302)\n        at clojure.lang.MultiFn.invoke(MultiFn.java:238)\n        at clojure.java.io$fn__11006.invokeStatic(io.clj:321)\n        at clojure.java.io$fn__11006.invoke(io.clj:319)\n        at clojure.lang.MultiFn.invoke(MultiFn.java:238)\n        at clojure.java.io$copy.invokeStatic(io.clj:406)\n        at clojure.java.io$copy.doInvoke(io.clj:391)\n        at clojure.lang.RestFn.invoke(RestFn.java:425)\n        at personal_shopper.core$download_file$fn__20988.invoke(core.clj:801)\n        at personal_shopper.core$download_file.invokeStatic(core.clj:799)\n        at personal_shopper.core$download_file.invoke(core.clj:797)\n        at personal_shopper.core$plan_batches.invokeStatic(core.clj:853)\n        at personal_shopper.core$plan_batches.invoke(core.clj:849)\n        at personal_shopper.core$plan_supplier_BANG_.invokeStatic(core.clj:893)\n        at personal_shopper.core$plan_supplier_BANG_.invoke(core.clj:882)\n        at personal_shopper.core$shop_supplier_BANG_.invokeStatic(core.clj:903)\n        at personal_shopper.core$shop_supplier_BANG_.invoke(core.clj:899)\n        at personal_shopper.core$fn__21162$fn__21165.invoke(core.clj:1013)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at java.lang.Thread.run(Thread.java:748)"}]}]}],"user":"U0WL6FA77","text":"```2021-06-22 18:19:33,837 [cli-planner thread] WARN  com.amazonaws.services.s3.internal.S3AbortableInputStream - Not all bytes were read from the S3ObjectInputStream, aborting HTTP connection. This is likely an error and may result in sub-optimal behavior. Request only the bytes you need via a ranged GET or drain the input stream after use.\nException in thread \"cli-planner thread\" java.io.IOException: Cannot allocate memory\n        at java.io.FileOutputStream.writeBytes(Native Method)\n        at java.io.FileOutputStream.write(FileOutputStream.java:326)\n        at <http:\/\/clojure.java.io|clojure.java.io>$fn__11002.invokeStatic(io.clj:307)\n        at <http:\/\/clojure.java.io|clojure.java.io>$fn__11002.invoke(io.clj:302)\n        at clojure.lang.MultiFn.invoke(MultiFn.java:238)\n        at <http:\/\/clojure.java.io|clojure.java.io>$fn__11006.invokeStatic(io.clj:321)\n        at <http:\/\/clojure.java.io|clojure.java.io>$fn__11006.invoke(io.clj:319)\n        at clojure.lang.MultiFn.invoke(MultiFn.java:238)\n        at <http:\/\/clojure.java.io|clojure.java.io>$copy.invokeStatic(io.clj:406)\n        at <http:\/\/clojure.java.io|clojure.java.io>$copy.doInvoke(io.clj:391)\n        at clojure.lang.RestFn.invoke(RestFn.java:425)\n        at personal_shopper.core$download_file$fn__20988.invoke(core.clj:801)\n        at personal_shopper.core$download_file.invokeStatic(core.clj:799)\n        at personal_shopper.core$download_file.invoke(core.clj:797)\n        at personal_shopper.core$plan_batches.invokeStatic(core.clj:853)\n        at personal_shopper.core$plan_batches.invoke(core.clj:849)\n        at personal_shopper.core$plan_supplier_BANG_.invokeStatic(core.clj:893)\n        at personal_shopper.core$plan_supplier_BANG_.invoke(core.clj:882)\n        at personal_shopper.core$shop_supplier_BANG_.invokeStatic(core.clj:903)\n        at personal_shopper.core$shop_supplier_BANG_.invoke(core.clj:899)\n        at personal_shopper.core$fn__21162$fn__21165.invoke(core.clj:1013)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at java.lang.Thread.run(Thread.java:748)```"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629207256.044800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"a085df79-30c2-4851-9ea3-638f0afa36e5","blocks":[{"type":"rich_text","block_id":"avf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but you are right about cannot allocate memory. It means different thing. I was suggested previous out of memory with Java 8."}]}]}],"user":"U0WL6FA77","text":"but you are right about cannot allocate memory. It means different thing. I was suggested previous out of memory with Java 8."}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"U0VP19K6K","ts":"1629207329.000000"},"ts":"1629207267.045000","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"e076ed20-dd5e-4815-8ea2-006cc79aeb74","blocks":[{"type":"rich_text","block_id":"qJ7l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How big is the stream and how much memory does the machine have available?"}]}]}],"user":"U0VP19K6K","text":"How big is the stream and how much memory does the machine have available?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629207366.045300","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"f79c90dc-86a2-4566-8810-158f1c02239c","blocks":[{"type":"rich_text","block_id":"UKB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"about 150 MB if I remember"}]}]}],"user":"U0WL6FA77","text":"about 150 MB if I remember"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629207404.045500","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"015a3f08-3620-437d-b8f5-eab16f39f5ea","blocks":[{"type":"rich_text","block_id":"rnEK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but let\u2019s hold on. We changed memory limits yesterday. If it was really about system memory and there is no \u201cmemory leak\u201d in system, then maybe everything will work from yesterday."}]}]}],"user":"U0WL6FA77","text":"but let\u2019s hold on. We changed memory limits yesterday. If it was really about system memory and there is no \u201cmemory leak\u201d in system, then maybe everything will work from yesterday."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629207444.045700","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"0e649e90-0411-484f-a039-5638c7fa811a","blocks":[{"type":"rich_text","block_id":"XkR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have to just wait a couple of days"}]}]}],"user":"U0WL6FA77","text":"I have to just wait a couple of days"}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"U487Z32UF","ts":"1629208331.000000"},"ts":"1629207698.045900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"58ab8d59-cb3b-4333-912b-8bd3ae1c27da","blocks":[{"type":"rich_text","block_id":"R4LR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"besides heap, jvm needs off-heap memory to do gc and other management task, maybe all memory is being assigned to heap. Or heap memory is unbound(grows with workload), and none memory is left for housekeeping or OS tasks.\n\nwild guess is "},{"type":"text","text":"S3ObjectInputStream","style":{"strike":true}},{"type":"text","text":" something is using bytebuffer or native memory, and there's a contention with heap"}]}]}],"user":"U487Z32UF","text":"besides heap, jvm needs off-heap memory to do gc and other management task, maybe all memory is being assigned to heap. Or heap memory is unbound(grows with workload), and none memory is left for housekeeping or OS tasks.\n\nwild guess is ~S3ObjectInputStream~ something is using bytebuffer or native memory, and there's a contention with heap"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629208457.046900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"a3616db0-83b7-4f17-a010-374bde6ac79a","blocks":[{"type":"rich_text","block_id":"\/cOg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"at ","style":{"code":true}},{"type":"link","url":"http:\/\/java.io","text":"java.io","style":{"code":true}},{"type":"text","text":".FileOutputStream.writeBytes(Native Method)","style":{"code":true}},{"type":"text","text":" sounds like a malloc fail or something like that, which is definitely not managed by JVM memory options but is also beyond my knowledge (I\u2019m not really a native developer)"}]}]}],"user":"U029J729MUP","text":"`at <http:\/\/java.io|java.io>.FileOutputStream.writeBytes(Native Method)` sounds like a malloc fail or something like that, which is definitely not managed by JVM memory options but is also beyond my knowledge (I\u2019m not really a native developer)"}
{"attachments":[{"thumb_width":316,"thumb_height":316,"service_name":"Stack Overflow","title_link":"https:\/\/stackoverflow.com\/a\/57004096","fallback":"Stack Overflow: JVM crashes with error='Cannot allocate memory' (errno=12)","from_url":"https:\/\/stackoverflow.com\/a\/57004096","title":"JVM crashes with error='Cannot allocate memory' (errno=12)","id":1,"thumb_url":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded","service_icon":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a","original_url":"https:\/\/stackoverflow.com\/a\/57004096","text":"My code crashes with this error message Executing \"\/usr\/bin\/java com.utils.BotFilter\" OpenJDK 64-Bit Server VM warning: INFO: os::commit_memory(0x0000000357c80000, 2712666112, 0) failed; error='"},{"service_name":"archive.is","title_link":"https:\/\/archive.is\/aScEq","fallback":"archive.is: \u00b7 Pivotal Engineering Journal","from_url":"https:\/\/archive.is\/aScEq","title":"\u00b7 Pivotal Engineering Journal","ts":1557925885,"id":2,"service_icon":"https:\/\/www.google.com\/s2\/favicons?domain=engineering.pivotal.io","original_url":"https:\/\/archive.is\/aScEq","text":"archived 15 May 2019 13:11:25 UTC"}],"type":"message","thread_ts":"1629203721.031900","ts":"1629208747.047100","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"462555d0-531b-45cc-8ecd-b68848b82be2","blocks":[{"type":"rich_text","block_id":"i93TY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The stacktrace really piqued my curiosity...\n\nYou might have luck reproducing the problem in a production repl by performing the problematic copy of a large file.  Maybe 1000 times in a row. Seems better than waiting :)\n\n"},{"type":"link","url":"https:\/\/stackoverflow.com\/a\/57004096"},{"type":"text","text":" was a nice one. It links to this blog post (otherwise the link is dead) "},{"type":"link","url":"https:\/\/archive.is\/aScEq"}]}]}],"user":"U45T93RA6","text":"The stacktrace really piqued my curiosity...\n\nYou might have luck reproducing the problem in a production repl by performing the problematic copy of a large file.  Maybe 1000 times in a row. Seems better than waiting :)\n\n<https:\/\/stackoverflow.com\/a\/57004096> was a nice one. It links to this blog post (otherwise the link is dead) <https:\/\/archive.is\/aScEq>"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629210723.047900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"55b959ca-8bad-4395-b99c-b2f35913d94e","blocks":[{"type":"rich_text","block_id":"+8T\/S","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U45T93RA6"},{"type":"text","text":" yeah I would like to have full access to production "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U0WL6FA77","reactions":[{"name":"smile","users":["U45T93RA6"],"count":1}],"text":"<@U45T93RA6> yeah I would like to have full access to production :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629211180.048400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"104dfb4e-4241-43aa-a4c0-50aab598c993","blocks":[{"type":"rich_text","block_id":"5IYK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"same stackoverflow post provides another workarounds, like tweaking heap size, to make more memory available to the OS"}]}]}],"user":"U487Z32UF","text":"same stackoverflow post provides another workarounds, like tweaking heap size, to make more memory available to the OS"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629220539.050400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"370723c6-bd73-4475-8763-f543eac22b6e","blocks":[{"type":"rich_text","block_id":"tgV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it back "},{"type":"text","text":"java.lang.OutOfMemoryError: Java heap space","style":{"code":true}},{"type":"text","text":" "},{"type":"emoji","name":"scream"}]}]}],"user":"U0WL6FA77","reactions":[{"name":"cry","users":["U029J729MUP"],"count":1},{"name":"scream","users":["UGJE0MM0W"],"count":1},{"name":"scream_cat","users":["UGJE0MM0W"],"count":1}],"text":"it back `java.lang.OutOfMemoryError: Java heap space` :scream:"}
{"attachments":[{"thumb_width":316,"thumb_height":316,"service_name":"Stack Overflow","title_link":"https:\/\/stackoverflow.com\/a\/14763095","fallback":"Stack Overflow: What are the -Xms and -Xmx parameters when starting JVM?","from_url":"https:\/\/stackoverflow.com\/a\/14763095","title":"What are the -Xms and -Xmx parameters when starting JVM?","id":1,"thumb_url":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded","service_icon":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a","original_url":"https:\/\/stackoverflow.com\/a\/14763095","text":"Please explain the use of the Xms and Xmx parameters in JVMs. What are the default values for them?"},{"service_name":"eclipse.org","title_link":"https:\/\/www.eclipse.org\/openj9\/docs\/xxusecontainersupport\/","fallback":"-XX:[+|-]UseContainerSupport -  ","from_url":"https:\/\/www.eclipse.org\/openj9\/docs\/xxusecontainersupport\/","title":"-XX:[+|-]UseContainerSupport -  ","id":2,"service_icon":"https:\/\/www.eclipse.org\/favicon.ico","original_url":"https:\/\/www.eclipse.org\/openj9\/docs\/xxusecontainersupport\/","text":"Eclipse OpenJ9 documentation"}],"type":"message","thread_ts":"1629203721.031900","ts":"1629271683.139400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"7a19416d-77c9-4d8d-b05d-7536f4746981","blocks":[{"type":"rich_text","block_id":"y+J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you setting -Xmx (heap size) to the container\/(VM?) limit?\nTo about 14 GB?\n\nNote that -Xmx is for the "},{"type":"text","text":"heap","style":{"bold":true}},{"type":"text","text":", and that the JVM can and will use more memory than just the size allocated to the heap.\nSource:\n"},{"type":"link","url":"https:\/\/stackoverflow.com\/a\/14763095"},{"type":"text","text":"\n\nCould the problem go away by simply omitting -Xmx?\nYou should not need -Xmx: "},{"type":"link","url":"https:\/\/www.eclipse.org\/openj9\/docs\/xxusecontainersupport\/"},{"type":"text","text":"\n\nI could be totally wrong in suggesting this, but I've recently been battling an OOM and also setting a very high -Xmx."}]}]}],"user":"UGJE0MM0W","text":"Are you setting -Xmx (heap size) to the container\/(VM?) limit?\nTo about 14 GB?\n\nNote that -Xmx is for the *heap*, and that the JVM can and will use more memory than just the size allocated to the heap.\nSource:\n<https:\/\/stackoverflow.com\/a\/14763095>\n\nCould the problem go away by simply omitting -Xmx?\nYou should not need -Xmx: <https:\/\/www.eclipse.org\/openj9\/docs\/xxusecontainersupport\/>\n\nI could be totally wrong in suggesting this, but I've recently been battling an OOM and also setting a very high -Xmx."}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"UGJE0MM0W","ts":"1629272151.000000"},"ts":"1629272001.139900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"be345872-3473-4fcf-b4a0-e4e2d199b9b7","blocks":[{"type":"rich_text","block_id":"1j0pn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yesterday I launched my container with max memory 8 GB (to Azure) and Xmx8g to the JVM, and it has been restarting\/OOMing like crazy since then.\nEdit: This morning I redeployed without -Xmx --- and I'm waiting for the results."}]}]}],"user":"UGJE0MM0W","text":"Yesterday I launched my container with max memory 8 GB (to Azure) and Xmx8g to the JVM, and it has been restarting\/OOMing like crazy since then.\nEdit: This morning I redeployed without -Xmx --- and I'm waiting for the results."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629274996.144300","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"21922c99-70dc-44e7-a44f-e81a37a88e90","blocks":[{"type":"rich_text","block_id":"SQ9r6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Xmx and Xms is set to 14GB"}]}]}],"user":"U0WL6FA77","text":"Xmx and Xms is set to 14GB"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629276726.145200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"f30dfe6d-101c-41b9-8383-dc15bac1d165","blocks":[{"type":"rich_text","block_id":"2tGN7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And how much memory is available for the system\/container\/(vm?) as a whole?"}]}]}],"user":"UGJE0MM0W","text":"And how much memory is available for the system\/container\/(vm?) as a whole?"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629276985.145400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"11bc70dd-a17a-4679-8cfc-6c1a0473ff31","blocks":[{"type":"rich_text","block_id":"eexkj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"20GB"}]}]}],"user":"U0WL6FA77","text":"20GB"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629277047.145600","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"95e3fea1-bc44-43eb-8783-f2ce5d1995c9","blocks":[{"type":"rich_text","block_id":"OlfYw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK. You may want to think about simply dropping -Xmx, re my comment and links above.\n\nHow\/what are you deploying into?"}]}]}],"user":"UGJE0MM0W","text":"OK. You may want to think about simply dropping -Xmx, re my comment and links above.\n\nHow\/what are you deploying into?"}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"U45T93RA6","ts":"1629277095.000000"},"ts":"1629277087.145800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"e5132b45-873e-4d93-b26f-1240906eb49b","blocks":[{"type":"rich_text","block_id":"z+gFK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ivar, have you read the thread? This didn't smell like a vanilla OOM to most of us"}]}]}],"user":"U45T93RA6","text":"Ivar, have you read the thread? This didn't smell like a vanilla OOM to most of us"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629277138.146100","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"7f39c2f7-c97e-4048-b3ea-e238136da7bd","blocks":[{"type":"rich_text","block_id":"PTQeN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW dropping Xmx will leave it at its default, which is typically 1GB. Not good."}]}]}],"user":"U45T93RA6","text":"FWIW dropping Xmx will leave it at its default, which is typically 1GB. Not good."}
{"attachments":[{"image_bytes":107338,"service_name":"Docker Blog","title_link":"https:\/\/www.docker.com\/blog\/improved-docker-container-integration-with-java-10\/","fallback":"Docker Blog: Improved Docker Container Integration with Java 10 - Docker Blog","fields":[{"title":"Written by","value":"Sophia Parafina","short":true},{"title":"Est. reading time","value":"4 minutes","short":true}],"from_url":"https:\/\/www.docker.com\/blog\/improved-docker-container-integration-with-java-10\/","image_width":549,"image_url":"https:\/\/www.docker.com\/blog\/wp-content\/uploads\/Screen-Shot-2018-04-03-at-4.40.29-PM.png","title":"Improved Docker Container Integration with Java 10 - Docker Blog","ts":1522799580,"id":1,"service_icon":"https:\/\/www.docker.com\/favicon\/apple-icon-60x60.png","original_url":"https:\/\/www.docker.com\/blog\/improved-docker-container-integration-with-java-10\/","image_height":250,"text":"Learn from Docker experts to simplify and advance your app development and management with Docker. Stay up to date on Docker events and new version announcements!"}],"type":"message","thread_ts":"1629203721.031900","ts":"1629277546.146300","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"273a1db5-14b2-478e-8386-19a04e4f9666","blocks":[{"type":"rich_text","block_id":"8GNVt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I did read it vemv.\n\nI don't think Xmx is 1GB by default since java 10, re my links above.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"With the release of Java 10, the JVM now recognizes constraints set by container control groups (cgroups). Both memory and cpu constraints can be used manage Java applications directly in containers, these include:\n    adhering to memory limits set in the container\n..."}]},{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/www.docker.com\/blog\/improved-docker-container-integration-with-java-10\/"}]}]}],"user":"UGJE0MM0W","text":"I did read it vemv.\n\nI don't think Xmx is 1GB by default since java 10, re my links above.\n```With the release of Java 10, the JVM now recognizes constraints set by container control groups (cgroups). Both memory and cpu constraints can be used manage Java applications directly in containers, these include:\n    adhering to memory limits set in the container\n...```\n<https:\/\/www.docker.com\/blog\/improved-docker-container-integration-with-java-10\/>"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629277586.146600","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"c854bd30-3b0d-49e9-ade4-543a95d92178","blocks":[{"type":"rich_text","block_id":"wSG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"At least if he is deploying into a container"}]}]}],"user":"UGJE0MM0W","text":"At least if he is deploying into a container"}
{"attachments":[{"service_name":"Oracle Help Center","title_link":"https:\/\/docs.oracle.com\/en\/java\/javase\/11\/tools\/java.html#GUID-3B1CE181-CD30-4178-9602-230B800D4FAE","fallback":"Oracle Help Center: Tools Reference","from_url":"https:\/\/docs.oracle.com\/en\/java\/javase\/11\/tools\/java.html#GUID-3B1CE181-CD30-4178-9602-230B800D4FAE","title":"Tools Reference","id":1,"service_icon":"https:\/\/docs.oracle.com\/sp_common\/book-template\/ohc-common\/img\/favicon.ico","original_url":"https:\/\/docs.oracle.com\/en\/java\/javase\/11\/tools\/java.html#GUID-3B1CE181-CD30-4178-9602-230B800D4FAE","text":"You can use the java command to launch a Java application."}],"type":"message","thread_ts":"1629203721.031900","ts":"1629277890.146900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"b137cb9d-6b86-43e3-9779-4a2553f79087","blocks":[{"type":"rich_text","block_id":"yfG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Regarding -Xmx default value:\n"},{"type":"text","text":"The default value is chosen at runtime based on system configuration.","style":{"code":true}},{"type":"text","text":"\n"},{"type":"link","url":"https:\/\/docs.oracle.com\/en\/java\/javase\/11\/tools\/java.html#GUID-3B1CE181-CD30-4178-9602-230B800D4FAE"}]}]}],"user":"UGJE0MM0W","text":"Regarding -Xmx default value:\n`The default value is chosen at runtime based on system configuration.`\n<https:\/\/docs.oracle.com\/en\/java\/javase\/11\/tools\/java.html#GUID-3B1CE181-CD30-4178-9602-230B800D4FAE>"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629277914.147300","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"224ae7e9-e9ab-46b2-9ac5-7d952d3fb048","blocks":[{"type":"rich_text","block_id":"LKY","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" At least if he is deploying into a container"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nCertainly\n\nMy humble input would be to avoid going in circles, the error message \/ stacktrace is very specific and similar problems had a solution to be applied at Linux level, not JVM (see the "},{"type":"text","text":"archive.is","style":{"code":true}},{"type":"text","text":" link from yesterday)\n\nI'd still recommend to start the thread again and list the things you've googled and tried (such as, again, the archive.is one. Among a few other things). Else you have people shooting in the dark for you"}]}]}],"user":"U45T93RA6","text":"&gt;  At least if he is deploying into a container\nCertainly\n\nMy humble input would be to avoid going in circles, the error message \/ stacktrace is very specific and similar problems had a solution to be applied at Linux level, not JVM (see the `<http:\/\/archive.is|archive.is>` link from yesterday)\n\nI'd still recommend to start the thread again and list the things you've googled and tried (such as, again, the <http:\/\/archive.is|archive.is> one. Among a few other things). Else you have people shooting in the dark for you"}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629278405.149800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"b8646dda-edde-496a-885b-98eb16f7423b","blocks":[{"type":"rich_text","block_id":"kxqg","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"+1"}]}]}],"user":"U0WL6FA77","text":":+1:"}
{"type":"message","thread_ts":"1629203721.031900","edited":{"user":"U0WL6FA77","ts":"1629841066.000000"},"ts":"1629840908.306200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"54872492-aeb5-47a3-baad-36f31d50c9e8","blocks":[{"type":"rich_text","block_id":"YVNa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It was thread with async which didn\u2019t close properly and refer to data. Maybe just deadlock or maybe just very not optimal pipeline in async. I didn\u2019t analyse it further."}]}]}],"user":"U0WL6FA77","text":"It was thread with async which didn\u2019t close properly and refer to data. Maybe just deadlock or maybe just very not optimal pipeline in async. I didn\u2019t analyse it further."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629841153.306500","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"98e510ad-901a-4ac3-bad7-62f53cab4703","blocks":[{"type":"rich_text","block_id":"fI\/Gg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But all in all I have to wait longer to be really sure to confirm exception will not back."}]}]}],"user":"U0WL6FA77","text":"But all in all I have to wait longer to be really sure to confirm exception will not back."}
{"type":"message","thread_ts":"1629203721.031900","ts":"1629841187.306700","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"c23bc8d4-337f-49fc-a257-a1f222a7be38","blocks":[{"type":"rich_text","block_id":"GiDst","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am writing this, because maybe it will be useful for somebody."}]}]}],"user":"U0WL6FA77","text":"I am writing this, because maybe it will be useful for somebody."}
{"subscribed":false,"reply_users":["U04V4KLKC","U45T93RA6","U010VP3UY9X","U0P0TMEFJ"],"type":"message","thread_ts":"1629199522.025100","reply_users_count":4,"ts":"1629199522.025100","team":"T03RZGPFR","client_msg_id":"99449687-b408-4ec4-99d7-41086873ebdd","blocks":[{"type":"rich_text","block_id":"nw6IQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"trying to debug a stack overflow problem.  Is setting the maximum stack depth something I can change from clojure or do I have to add some flag to the `:ivm-opts` of my `project.clj` file?"}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":21,"latest_reply":"1629205168.035400","text":"trying to debug a stack overflow problem.  Is setting the maximum stack depth something I can change from clojure or do I have to add some flag to the `:ivm-opts` of my `project.clj` file?"}
{"subscribed":false,"reply_users":["U04V4KLKC","U45T93RA6","U010VP3UY9X","U0P0TMEFJ"],"type":"message","thread_ts":"1629199522.025100","reply_users_count":4,"ts":"1629199522.025100","team":"T03RZGPFR","client_msg_id":"99449687-b408-4ec4-99d7-41086873ebdd","blocks":[{"type":"rich_text","block_id":"nw6IQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"trying to debug a stack overflow problem.  Is setting the maximum stack depth something I can change from clojure or do I have to add some flag to the `:ivm-opts` of my `project.clj` file?"}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":21,"latest_reply":"1629205168.035400","text":"trying to debug a stack overflow problem.  Is setting the maximum stack depth something I can change from clojure or do I have to add some flag to the `:ivm-opts` of my `project.clj` file?"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629199877.025200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"77a7ab8f-0e10-4eea-90c1-1f612495aa3d","blocks":[{"type":"rich_text","block_id":"rEx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"stack size is a global JVM property. You can configure it passing "},{"type":"text","text":"-Xss100M","style":{"code":true}},{"type":"text","text":" as an example"}]}]}],"user":"U04V4KLKC","text":"stack size is a global JVM property. You can configure it passing `-Xss100M` as an example"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629200030.025400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"22a59dde-24eb-4fae-a625-e3c2463b0c6a","blocks":[{"type":"rich_text","block_id":"zSw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but instead of increasing stack size I can recommend change the code so it won\u2019t consume stack. There are some handy function in clojure core: "},{"type":"text","text":"trampoline","style":{"code":true}},{"type":"text","text":" as an example"}]}]}],"user":"U04V4KLKC","reactions":[{"name":"+1","users":["U45T93RA6"],"count":1}],"text":"but instead of increasing stack size I can recommend change the code so it won\u2019t consume stack. There are some handy function in clojure core: `trampoline` as an example"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629200408.025700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6fc0a761-8ba1-48fc-a782-9e868e170083","blocks":[{"type":"rich_text","block_id":"AYF=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Setting Xss100M is bonkers\n\nhere's a more reasonable Xss (plus a comment on how to figure out a good value for your machine) and XX:MaxJavaStackTraceDepth which also is relevant\n\n"},{"type":"link","url":"https:\/\/github.com\/reducecombine\/.lein\/blob\/e05d6a2d22c0990a88a660c25fe8c5e51a3c6b1a\/profiles.clj#L11-L43"}]}]}],"user":"U45T93RA6","text":"Setting Xss100M is bonkers\n\nhere's a more reasonable Xss (plus a comment on how to figure out a good value for your machine) and XX:MaxJavaStackTraceDepth which also is relevant\n\n<https:\/\/github.com\/reducecombine\/.lein\/blob\/e05d6a2d22c0990a88a660c25fe8c5e51a3c6b1a\/profiles.clj#L11-L43>"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629200580.026100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"92289c59-c777-46ef-95b7-b0618acade9c","blocks":[{"type":"rich_text","block_id":"EFpt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cool comments! "},{"type":"emoji","name":"thumbsup_all"},{"type":"text","text":" thanks!"}]}]}],"user":"U04V4KLKC","reactions":[{"name":"beers","users":["U45T93RA6"],"count":1}],"text":"cool comments! :thumbsup_all: thanks!"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629201075.026400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2a7fc784-aac6-4f52-8bbb-d994bba66d7f","blocks":[{"type":"rich_text","block_id":"dFE+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My suspicion is that the lazy functions are triggering the stack overflow.  I recently refactored lots of functions to return lazy lists.  This means that functions which do not appear to be heavy stack users, all of a sudden become compute intensive.  For example "},{"type":"text","text":"(first (rest ...))","style":{"code":true}},{"type":"text","text":" now has to compute the 2nd element of the sequence.\n\nAnyway, currently this is only a suspicion.  Maybe my bug is elsewhere, or maybe I really have introduced a logical bug in the lazy-list refactoring."}]}]}],"user":"U010VP3UY9X","text":"My suspicion is that the lazy functions are triggering the stack overflow.  I recently refactored lots of functions to return lazy lists.  This means that functions which do not appear to be heavy stack users, all of a sudden become compute intensive.  For example `(first (rest ...))` now has to compute the 2nd element of the sequence.\n\nAnyway, currently this is only a suspicion.  Maybe my bug is elsewhere, or maybe I really have introduced a logical bug in the lazy-list refactoring."}
{"attachments":[{"image_bytes":5253,"service_name":"Slack","title_link":"https:\/\/app.slack.com\/team\/U04V4KLKC","fallback":"Slack: Get Started","from_url":"https:\/\/app.slack.com\/team\/U04V4KLKC","image_width":250,"image_url":"https:\/\/a.slack-edge.com\/80588\/marketing\/img\/meta\/slack_hash_256.png","title":"Get Started","id":1,"service_icon":"https:\/\/a.slack-edge.com\/80588\/marketing\/img\/meta\/favicon-32.png","original_url":"https:\/\/app.slack.com\/team\/U04V4KLKC","image_height":250,"text":"Try Slack for free with your teammates. All it takes is an email address to get started."}],"type":"message","thread_ts":"1629199522.025100","ts":"1629201197.026600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"000d3c50-91d4-433a-8aa6-93aacee9f368","blocks":[{"type":"rich_text","block_id":"pEn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@"},{"type":"link","url":"https:\/\/app.slack.com\/team\/U04V4KLKC","text":"delaguardo","style":{"bold":true}},{"type":"text","text":", ","style":{"bold":true}},{"type":"text","text":"I haven't used trampolining yet.  It was my impression that is intended for direct recursion, not for meta-circular dependencies."}]}]}],"user":"U010VP3UY9X","text":"@*<https:\/\/app.slack.com\/team\/U04V4KLKC|delaguardo>,* I haven't used trampolining yet.  It was my impression that is intended for direct recursion, not for meta-circular dependencies."}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629201329.026900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"30e9b977-3f8d-4572-9336-00a024a08fc3","blocks":[{"type":"rich_text","block_id":"7Bce","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you're getting stack overflows with lazyness, have you seen this? "},{"type":"link","url":"https:\/\/stuartsierra.com\/2015\/04\/26\/clojure-donts-concat"}]}]}],"user":"U0P0TMEFJ","text":"if you're getting stack overflows with lazyness, have you seen this? <https:\/\/stuartsierra.com\/2015\/04\/26\/clojure-donts-concat>"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629201330.027100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6d6ad2cc-6db2-4402-b691-3b05b123f602","blocks":[{"type":"rich_text","block_id":"rsbPj","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/stuartsierra.com\/2015\/04\/26\/clojure-donts-concat"},{"type":"text","text":"\nyes, laziness might bring such problems. Here is a post about this"}]}]}],"user":"U04V4KLKC","reactions":[{"name":"+1","users":["U0P0TMEFJ"],"count":1},{"name":"sob","users":["U010VP3UY9X"],"count":1}],"text":"<https:\/\/stuartsierra.com\/2015\/04\/26\/clojure-donts-concat>\nyes, laziness might bring such problems. Here is a post about this"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629201367.027600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c3fb995f-eb69-40c1-ae9a-1650acdfed54","blocks":[{"type":"rich_text","block_id":"93I","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U45T93RA6"},{"type":"text","text":" is the intent of your post that I "},{"type":"text","text":":jvm-options","style":{"code":true}},{"type":"text","text":" section into my "},{"type":"text","text":"project.clj","style":{"code":true}},{"type":"text","text":" file?"}]}]}],"user":"U010VP3UY9X","text":"<@U45T93RA6> is the intent of your post that I `:jvm-options` section into my `project.clj` file?"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629201373.027800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"df3165e6-9530-4c1e-9993-164d922a81a1","blocks":[{"type":"rich_text","block_id":"spmNS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hahaha I was about to post that link too\n\ntalk about hive minds "},{"type":"emoji","name":"bee"}]}]}],"user":"U45T93RA6","reactions":[{"name":"heavy_plus_sign","users":["U883WCP5Z"],"count":1}],"text":"hahaha I was about to post that link too\n\ntalk about hive minds :bee:"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629201465.028000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"7795d81d-6022-4607-9047-8c8180b50f82","blocks":[{"type":"rich_text","block_id":"xDW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, profiles.clj has the same syntax as project.clj\n\nyou'd simply have to copy the Xss and XX:MaxJavaStackTraceDepth entries"}]}]}],"user":"U45T93RA6","reactions":[{"name":"heavy_check_mark","users":["U010VP3UY9X"],"count":1}],"text":"yes, profiles.clj has the same syntax as project.clj\n\nyou'd simply have to copy the Xss and XX:MaxJavaStackTraceDepth entries"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629201503.028200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"7fe848c8-72c9-4c88-82f5-d4f3e9515e87","blocks":[{"type":"rich_text","block_id":"mBlqx","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"It was my impression that is intended for direct recursion, not for meta-circular dependencies."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"not necessarily. look at this example - "},{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/trampoline#example-5552b71ee4b01ad59b65f4cf"}]}]}],"user":"U04V4KLKC","text":"&gt; It was my impression that is intended for direct recursion, not for meta-circular dependencies.\nnot necessarily. look at this example - <https:\/\/clojuredocs.org\/clojure.core\/trampoline#example-5552b71ee4b01ad59b65f4cf>"}
{"attachments":[{"thumb_width":200,"thumb_height":200,"service_name":"Digital Digressions by Stuart Sierra","title_link":"https:\/\/stuartsierra.com\/2015\/04\/26\/clojure-donts-concat","fallback":"Digital Digressions by Stuart Sierra: Clojure Don\u2019ts: Concat","from_url":"https:\/\/stuartsierra.com\/2015\/04\/26\/clojure-donts-concat","title":"Clojure Don\u2019ts: Concat","ts":1430063040,"id":1,"thumb_url":"https:\/\/s0.wp.com\/i\/blank.jpg","original_url":"https:\/\/stuartsierra.com\/2015\/04\/26\/clojure-donts-concat","text":"Welcome to what I hope will be an ongoing series of Clojure do\u2019s and don\u2019ts. I want to demonstrate not just good patterns to use, but also anti-patterns to avoid. Some of these will be personal pre\u2026"}],"type":"message","thread_ts":"1629199522.025100","ts":"1629201628.028400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"fc74b4fa-5253-4851-a67f-0b900d32c64f","blocks":[{"type":"rich_text","block_id":"kTDu4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the tldr of "},{"type":"link","url":"https:\/\/stuartsierra.com\/2015\/04\/26\/clojure-donts-concat"},{"type":"text","text":" is to avoid "},{"type":"text","text":"concat","style":{"code":true}},{"type":"text","text":", if I understand correctly.  I'm not really using "},{"type":"text","text":"concat","style":{"code":true}},{"type":"text","text":" directly, but I am using several calls to "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":" which internally uses concat.   And in my recent refactoring I created my own "},{"type":"text","text":"lazy\/mapcat","style":{"code":true}},{"type":"text","text":" which is based of my "},{"type":"text","text":"lazy\/concat","style":{"code":true}},{"type":"text","text":" ... with the goal of 1-chunking rather than Clojure's default 32-chunking."}]}]}],"user":"U010VP3UY9X","reactions":[{"name":"+1","users":["U45T93RA6"],"count":1}],"text":"the tldr of <https:\/\/stuartsierra.com\/2015\/04\/26\/clojure-donts-concat> is to avoid `concat`, if I understand correctly.  I'm not really using `concat` directly, but I am using several calls to `mapcat` which internally uses concat.   And in my recent refactoring I created my own `lazy\/mapcat` which is based of my `lazy\/concat` ... with the goal of 1-chunking rather than Clojure's default 32-chunking."}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629201668.028800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e2632f7f-6173-47a9-a886-251aa695285f","blocks":[{"type":"rich_text","block_id":"QVK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the motivation being that 32-chunking is intended to optimize long thin sequences.  In stead my application as short fat sequences."}]}]}],"user":"U010VP3UY9X","text":"the motivation being that 32-chunking is intended to optimize long thin sequences.  In stead my application as short fat sequences."}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629201969.029000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3f220009-ccf9-4bac-b408-bc04c5f00da0","blocks":[{"type":"rich_text","block_id":"IoP","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U04V4KLKC"},{"type":"text","text":", yes nice example.  But it still seems to me trampolining is when a closed set of functions need to call each other in a lexically concise way.  In my case I have several generic functions which operate on trees whose nodes are sequences of other trees.   Many operations are dependent on other operations,  and even some operations are defined in different namespaces.  So while it might be possible to refactor to use trampolining, it is not apparent to me how to do so."}]}]}],"user":"U010VP3UY9X","text":"<@U04V4KLKC>, yes nice example.  But it still seems to me trampolining is when a closed set of functions need to call each other in a lexically concise way.  In my case I have several generic functions which operate on trees whose nodes are sequences of other trees.   Many operations are dependent on other operations,  and even some operations are defined in different namespaces.  So while it might be possible to refactor to use trampolining, it is not apparent to me how to do so."}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629202042.029200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"474fda02-37e4-493d-941b-408bb2eddfb8","blocks":[{"type":"rich_text","block_id":"SK4q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That being said, it certainly would be nice if the clojure compiler knew how to efficiently compile tail calls of functions defined within the same "},{"type":"text","text":"letfn","style":{"code":true}},{"type":"text","text":" .   That's not the problem I'm facing here, but it would be an interesting optimization."}]}]}],"user":"U010VP3UY9X","text":"That being said, it certainly would be nice if the clojure compiler knew how to efficiently compile tail calls of functions defined within the same `letfn` .   That's not the problem I'm facing here, but it would be an interesting optimization."}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629202350.029400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"092e8ea6-8372-48b3-8f96-0f7be16ce71f","blocks":[{"type":"rich_text","block_id":"oh=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As a quick observation, sometimes a SO error doesn't really indicate a categorical flaw in your code... clojure programs are hungrier than Java programs, so the JVM default settings don't always fit\n\nThis expresses itself quite often in programs using "},{"type":"text","text":"walk","style":{"code":true}},{"type":"text","text":" , but also with various other functional patterns\n\nI've seen this in well-known libs, there was no bug one simply has to set Xss intentfully."}]}]}],"user":"U45T93RA6","reactions":[{"name":"+1::skin-tone-2","users":["U010VP3UY9X"],"count":1}],"text":"As a quick observation, sometimes a SO error doesn't really indicate a categorical flaw in your code... clojure programs are hungrier than Java programs, so the JVM default settings don't always fit\n\nThis expresses itself quite often in programs using `walk` , but also with various other functional patterns\n\nI've seen this in well-known libs, there was no bug one simply has to set Xss intentfully."}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629202786.029600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"decddcb4-bbc2-472c-92d4-1728bb29d3c1","blocks":[{"type":"rich_text","block_id":"qCJi","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U45T93RA6"},{"type":"text","text":" good to know.  In my case since I just did a big refactoring, I have to really consider whether I did in fact introduce subtle bugs into the program."}]}]}],"user":"U010VP3UY9X","reactions":[{"name":"+1","users":["U45T93RA6"],"count":1}],"text":"<@U45T93RA6> good to know.  In my case since I just did a big refactoring, I have to really consider whether I did in fact introduce subtle bugs into the program."}
{"attachments":[{"thumb_width":872,"thumb_height":742,"service_name":"GitLab","title_link":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/295d0a287eb5fed51bd37cbcc3c4fc82400c2310\/src\/clojure_rte\/lazy.clj","fallback":"GitLab: src\/clojure_rte\/lazy.clj \u00b7 295d0a287eb5fed51bd37cbcc3c4fc82400c2310 \u00b7 Jim Newton \/ clojure-rte","from_url":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/295d0a287eb5fed51bd37cbcc3c4fc82400c2310\/src\/clojure_rte\/lazy.clj","title":"src\/clojure_rte\/lazy.clj \u00b7 295d0a287eb5fed51bd37cbcc3c4fc82400c2310 \u00b7 Jim Newton \/ clojure-rte","id":1,"thumb_url":"https:\/\/gitlab.lrde.epita.fr\/uploads\/-\/system\/project\/avatar\/620\/symbolic-finite-automaton.png","service_icon":"https:\/\/gitlab.lrde.epita.fr\/assets\/touch-icon-iphone-5a9cee0e8a51212e70b90c87c12f382c428870c0ff67d1eb034d884b78d2dae7.png","original_url":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/295d0a287eb5fed51bd37cbcc3c4fc82400c2310\/src\/clojure_rte\/lazy.clj","text":"Clojure implementation of rational type expressions"}],"type":"message","thread_ts":"1629199522.025100","ts":"1629202963.029900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c161a262-07f7-4200-8b70-fba5d08bcb0b","blocks":[{"type":"rich_text","block_id":"wySD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here are the lazy functions I am using.  I have "},{"type":"text","text":"some","style":{"bold":true}},{"type":"text","text":" unit tests which do sanity checks to assure that the function behave the same semantics as the clojure.core functions they eclipse.   However, there may indeed be hidden greedy stack consumers hidden in there. "},{"type":"link","url":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/295d0a287eb5fed51bd37cbcc3c4fc82400c2310\/src\/clojure_rte\/lazy.clj"}]}]}],"user":"U010VP3UY9X","text":"Here are the lazy functions I am using.  I have *some* unit tests which do sanity checks to assure that the function behave the same semantics as the clojure.core functions they eclipse.   However, there may indeed be hidden greedy stack consumers hidden in there. <https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/295d0a287eb5fed51bd37cbcc3c4fc82400c2310\/src\/clojure_rte\/lazy.clj>"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629204949.035200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f052e9b9-82c4-4d52-954c-13301370ccc5","blocks":[{"type":"rich_text","block_id":"qdRD","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U45T93RA6"},{"type":"text","text":" with these changes you suggested, I'm still getting stack overflows, but now the stack traces are vvvvveeeeeeerrrrrrrryyyyyyyy long.  Is there a way to tell clojure to prune the stack trace it prints?"}]}]}],"user":"U010VP3UY9X","text":"<@U45T93RA6> with these changes you suggested, I'm still getting stack overflows, but now the stack traces are vvvvveeeeeeerrrrrrrryyyyyyyy long.  Is there a way to tell clojure to prune the stack trace it prints?"}
{"type":"message","thread_ts":"1629199522.025100","ts":"1629205168.035400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"aa0c272b-4c85-4b68-92f9-0eca93c44faa","blocks":[{"type":"rich_text","block_id":"EKFs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can undo or tweak XX:MaxJavaStackTraceDepth\n\nit only affects reported stacktraces, nothing else.\n\nI do find large sizes for it useful. Often with SOs the first few thousand entries will be repetitive and will hide the root ns that is invoking that code in the first place"}]}]}],"user":"U45T93RA6","reactions":[{"name":"+1::skin-tone-2","users":["U010VP3UY9X"],"count":1}],"text":"You can undo or tweak XX:MaxJavaStackTraceDepth\n\nit only affects reported stacktraces, nothing else.\n\nI do find large sizes for it useful. Often with SOs the first few thousand entries will be repetitive and will hide the root ns that is invoking that code in the first place"}
{"subscribed":false,"reply_users":["U11SSJP2A","U66G3SGP5"],"type":"message","thread_ts":"1629198467.022500","reply_users_count":2,"ts":"1629198467.022500","team":"T03RZGPFR","client_msg_id":"7dcedab7-ff04-4590-9998-100bd3698d85","blocks":[{"type":"rich_text","block_id":"OI4+6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What\u2019s the preferred EDN serialization\/deserialization ? "},{"type":"text","text":"pr-str","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"clojure.edn\/read-string","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"is_locked":false,"user":"U66G3SGP5","reply_count":3,"latest_reply":"1629299667.152500","text":"What\u2019s the preferred EDN serialization\/deserialization ? `pr-str` and `clojure.edn\/read-string` ?"}
{"subscribed":false,"reply_users":["U11SSJP2A","U66G3SGP5"],"type":"message","thread_ts":"1629198467.022500","reply_users_count":2,"ts":"1629198467.022500","team":"T03RZGPFR","client_msg_id":"7dcedab7-ff04-4590-9998-100bd3698d85","blocks":[{"type":"rich_text","block_id":"OI4+6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What\u2019s the preferred EDN serialization\/deserialization ? "},{"type":"text","text":"pr-str","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"clojure.edn\/read-string","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"is_locked":false,"user":"U66G3SGP5","reply_count":3,"latest_reply":"1629299667.152500","text":"What\u2019s the preferred EDN serialization\/deserialization ? `pr-str` and `clojure.edn\/read-string` ?"}
{"type":"message","thread_ts":"1629198467.022500","ts":"1629208165.046200","parent_user_id":"U66G3SGP5","team":"T03RZGPFR","client_msg_id":"6d51c55f-e1b6-41cc-9d2b-861a10878803","blocks":[{"type":"rich_text","block_id":"YUID","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's a fine combination; I tend to use "},{"type":"text","text":"pr-str","style":{"code":true}},{"type":"text","text":" together with "},{"type":"text","text":"clojure.tools.reader.edn\/read-string","style":{"code":true}}]}]}],"user":"U11SSJP2A","text":"that's a fine combination; I tend to use `pr-str` together with `clojure.tools.reader.edn\/read-string`"}
{"type":"message","thread_ts":"1629198467.022500","ts":"1629281713.150900","parent_user_id":"U66G3SGP5","team":"T03RZGPFR","client_msg_id":"4dcd15c4-3280-4c0f-955d-1e01d6786a25","blocks":[{"type":"rich_text","block_id":"iQM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why "},{"type":"text","text":"clojure.tools.reader.edn","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"clojure.edn","style":{"code":true}},{"type":"text","text":"?"}]}]}],"user":"U66G3SGP5","text":"why `clojure.tools.reader.edn` instead of `clojure.edn`?"}
{"attachments":[{"color":"24292f","fallback":"clojure\/tools.reader","fields":[{"title":"Stars","value":"197","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"clojure\/tools.reader","id":1,"app_unfurl_url":"https:\/\/github.com\/clojure\/tools.reader#rationale","text":"Clojure reader in Clojure","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629198467.022500","ts":"1629299667.152500","parent_user_id":"U66G3SGP5","team":"T03RZGPFR","client_msg_id":"d7c5a26b-744b-4f2f-9049-b405854f480f","blocks":[{"type":"rich_text","block_id":"QVISU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"tools.reader README has a nice rationale that says it better than I could rephrase it: "},{"type":"link","url":"https:\/\/github.com\/clojure\/tools.reader#rationale"}]}]}],"user":"U11SSJP2A","text":"tools.reader README has a nice rationale that says it better than I could rephrase it: <https:\/\/github.com\/clojure\/tools.reader#rationale>"}
{"subscribed":false,"reply_users":["U04V4KLKC","U11SSJP2A","U051SS2EU","U0K064KQV","U04V70XH6"],"type":"message","thread_ts":"1629197040.021000","reply_users_count":5,"edited":{"user":"U11SSJP2A","ts":"1629197117.000000"},"ts":"1629197040.021000","team":"T03RZGPFR","client_msg_id":"d94ae234-9795-429d-bf9c-eb6c2be2d3f7","blocks":[{"type":"rich_text","block_id":"CzNlq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Building a JAR for a Clojure library with tools.build, tools.deps; no "},{"type":"text","text":":deps","style":{"code":true}},{"type":"text","text":" in my project's "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" and no aliases engaged; running "},{"type":"text","text":"clojure -T:build jar","style":{"code":true}},{"type":"text","text":" with a stock jar task (copied from fogus' blog post), the final "},{"type":"text","text":"pom.xml","style":{"code":true}},{"type":"text","text":" file still has a dependency on "},{"type":"text","text":"org.clojure\/clojure","style":{"code":true}},{"type":"text","text":" (version 1.10.1, which isn't even the one in the "},{"type":"text","text":":deps","style":{"code":true}},{"type":"text","text":" of my root "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" file).\n\nI can manually dissoc "},{"type":"text","text":"org.clojure\/clojure","style":{"code":true}},{"type":"text","text":" from the "},{"type":"text","text":":libs","style":{"code":true}},{"type":"text","text":" from the basis to keep it out of the final pom, but I'm wondering if I'm overlooking something simple, or if there's an expectation that even libs now have a dependency on Clojure and consumers can just override deps (including Clojure) as they see fit."}]}]}],"is_locked":false,"user":"U11SSJP2A","reply_count":14,"latest_reply":"1629252101.124200","text":"Building a JAR for a Clojure library with tools.build, tools.deps; no `:deps` in my project's `deps.edn` and no aliases engaged; running `clojure -T:build jar` with a stock jar task (copied from fogus' blog post), the final `pom.xml` file still has a dependency on `org.clojure\/clojure` (version 1.10.1, which isn't even the one in the `:deps` of my root `deps.edn` file).\n\nI can manually dissoc `org.clojure\/clojure` from the `:libs` from the basis to keep it out of the final pom, but I'm wondering if I'm overlooking something simple, or if there's an expectation that even libs now have a dependency on Clojure and consumers can just override deps (including Clojure) as they see fit."}
{"subscribed":false,"reply_users":["U04V4KLKC","U11SSJP2A","U051SS2EU","U0K064KQV","U04V70XH6"],"type":"message","thread_ts":"1629197040.021000","reply_users_count":5,"edited":{"user":"U11SSJP2A","ts":"1629197117.000000"},"ts":"1629197040.021000","team":"T03RZGPFR","client_msg_id":"d94ae234-9795-429d-bf9c-eb6c2be2d3f7","blocks":[{"type":"rich_text","block_id":"CzNlq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Building a JAR for a Clojure library with tools.build, tools.deps; no "},{"type":"text","text":":deps","style":{"code":true}},{"type":"text","text":" in my project's "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" and no aliases engaged; running "},{"type":"text","text":"clojure -T:build jar","style":{"code":true}},{"type":"text","text":" with a stock jar task (copied from fogus' blog post), the final "},{"type":"text","text":"pom.xml","style":{"code":true}},{"type":"text","text":" file still has a dependency on "},{"type":"text","text":"org.clojure\/clojure","style":{"code":true}},{"type":"text","text":" (version 1.10.1, which isn't even the one in the "},{"type":"text","text":":deps","style":{"code":true}},{"type":"text","text":" of my root "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" file).\n\nI can manually dissoc "},{"type":"text","text":"org.clojure\/clojure","style":{"code":true}},{"type":"text","text":" from the "},{"type":"text","text":":libs","style":{"code":true}},{"type":"text","text":" from the basis to keep it out of the final pom, but I'm wondering if I'm overlooking something simple, or if there's an expectation that even libs now have a dependency on Clojure and consumers can just override deps (including Clojure) as they see fit."}]}]}],"is_locked":false,"user":"U11SSJP2A","reply_count":14,"latest_reply":"1629252101.124200","text":"Building a JAR for a Clojure library with tools.build, tools.deps; no `:deps` in my project's `deps.edn` and no aliases engaged; running `clojure -T:build jar` with a stock jar task (copied from fogus' blog post), the final `pom.xml` file still has a dependency on `org.clojure\/clojure` (version 1.10.1, which isn't even the one in the `:deps` of my root `deps.edn` file).\n\nI can manually dissoc `org.clojure\/clojure` from the `:libs` from the basis to keep it out of the final pom, but I'm wondering if I'm overlooking something simple, or if there's an expectation that even libs now have a dependency on Clojure and consumers can just override deps (including Clojure) as they see fit."}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629197383.021200","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"ec58ce02-2f0f-415e-b0e0-73aad74854c2","blocks":[{"type":"rich_text","block_id":"E0q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that is happening because "},{"type":"text","text":"org.clojure\/clojure","style":{"code":true}},{"type":"text","text":" listed as a dependency in the root deps.edn provided by clojure cli\nTo avoid using it you can specify option "},{"type":"text","text":":root nil","style":{"code":true}},{"type":"text","text":" for "},{"type":"text","text":"create-basis","style":{"code":true}},{"type":"text","text":" function\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(b\/create-basis {:project \"deps.edn\" :root nil})"}]},{"type":"rich_text_section","elements":[]}]}],"user":"U04V4KLKC","reactions":[{"name":"point_up","users":["U064X3EF3"],"count":1},{"name":"thanks3","users":["U11SSJP2A"],"count":1}],"text":"that is happening because `org.clojure\/clojure` listed as a dependency in the root deps.edn provided by clojure cli\nTo avoid using it you can specify option `:root nil` for `create-basis` function\n```(b\/create-basis {:project \"deps.edn\" :root nil})```\n"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629198969.023400","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"39c39a24-5399-453c-bfa3-26dd10eef4df","blocks":[{"type":"rich_text","block_id":"CkTA","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U04V4KLKC"},{"type":"text","text":" thank you! that solves my problem. I must be mistaken about which "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" is my root one, because the Clojure version being included isn't the same as the one specified at "},{"type":"text","text":"\/usr\/local\/lib\/clojure\/deps.edn","style":{"code":true}},{"type":"text","text":" but that's a different mystery to solve"}]}]}],"user":"U11SSJP2A","text":"<@U04V4KLKC> thank you! that solves my problem. I must be mistaken about which `deps.edn` is my root one, because the Clojure version being included isn't the same as the one specified at `\/usr\/local\/lib\/clojure\/deps.edn` but that's a different mystery to solve"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629199240.023900","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"60724e15-b345-4cb3-97a2-f533806e684a","blocks":[{"type":"rich_text","block_id":"Fa7nl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there are three \u201cmain\u201d deps.edn files:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"clojure cli specific"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"the one from user\u2019s home"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"your project\u2019s deps.edn"}]}],"style":"bullet","indent":0,"border":0},{"type":"rich_text_section","elements":[{"type":"text","text":"clj -Sdescribe","style":{"code":true}},{"type":"text","text":" and look at "},{"type":"text","text":":config-files","style":{"code":true}},{"type":"text","text":" you will see full paths to those files\n"},{"type":"text","text":"create-basis","style":{"code":true}},{"type":"text","text":" function allows you to override each of them: "},{"type":"link","url":"https:\/\/clojure.github.io\/tools.build\/clojure.tools.build.api.html#var-create-basis"}]}]}],"user":"U04V4KLKC","reactions":[{"name":"thanks3","users":["U11SSJP2A"],"count":1}],"text":"there are three \u201cmain\u201d deps.edn files:\n\u2022 clojure cli specific\n\u2022 the one from user\u2019s home\n\u2022 your project\u2019s deps.edn\n`clj -Sdescribe` and look at `:config-files` you will see full paths to those files\n`create-basis` function allows you to override each of them: <https:\/\/clojure.github.io\/tools.build\/clojure.tools.build.api.html#var-create-basis>"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629218081.049600","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"9e19e082-970e-4aa2-904d-2084dd46119a","blocks":[{"type":"rich_text","block_id":"t0A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd expect every library to have deps for the libraries it needs in order to work, I consider clojure one of those libraries"}]}]}],"user":"U051SS2EU","text":"I'd expect every library to have deps for the libraries it needs in order to work, I consider clojure one of those libraries"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629218402.049800","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"e3f6c01b-721e-42ec-bd68-8ec38c907bb6","blocks":[{"type":"rich_text","block_id":"KuTQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sure, but root deps.edn is declaring "},{"type":"text","text":"org.clojure\/clojure {:mvn\/version \"1.10.3\"}","style":{"code":true}},{"type":"text","text":" which could be too high version for distribution of some library"}]}]}],"user":"U04V4KLKC","text":"sure, but root deps.edn is declaring `org.clojure\/clojure {:mvn\/version \"1.10.3\"}` which could be too high version for distribution of some library"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629218552.050000","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"214d5c31-a5f8-436a-962f-c7aece0a0e9a","blocks":[{"type":"rich_text","block_id":"kfkq2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does clj really pick a higher versioned deeper dep over a lower versioned top level one?"}]}]}],"user":"U051SS2EU","text":"does clj really pick a higher versioned deeper dep over a lower versioned top level one?"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629218582.050200","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"0a3d267f-b886-4da6-bfbe-f8780ab562f3","blocks":[{"type":"rich_text","block_id":"\/be4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd consider any behavior other than using the version explicitly in your deps file a bug, and not declaring a version is asking for trouble"}]}]}],"user":"U051SS2EU","text":"I'd consider any behavior other than using the version explicitly in your deps file a bug, and not declaring a version is asking for trouble"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629221045.050600","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"6324dd05-2d72-4fa7-b266-54ef74c1b0b4","blocks":[{"type":"rich_text","block_id":"UrtU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hm\u2026 no, probably I had something different that influence which version to use for pom.xml"}]}]}],"user":"U04V4KLKC","text":"hm\u2026 no, probably I had something different that influence which version to use for pom.xml"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629222003.050900","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"4bedf2bb-d43c-4a06-8426-290978edd6ed","blocks":[{"type":"rich_text","block_id":"OLoDc","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"and not declaring a version is asking for trouble"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"in my head it was always expressed in the form - \u201cclojure is a library for java\u201d -> so it can load other \u201cclojure\u201d libraries -> so those libraries should not declare dependency on some version of clojure\ngot this impression after looking at a number of \u201ccontrib\u201d libraries such as data.json"}]}]}],"user":"U04V4KLKC","text":"&gt; and not declaring a version is asking for trouble\nin my head it was always expressed in the form - \u201cclojure is a library for java\u201d -&gt; so it can load other \u201cclojure\u201d libraries -&gt; so those libraries should not declare dependency on some version of clojure\ngot this impression after looking at a number of \u201ccontrib\u201d libraries such as data.json"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629222202.051500","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"2695a01d-bb07-4b01-984a-5a857ad59cb1","blocks":[{"type":"rich_text","block_id":"U1+","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I'd expect every library to have deps for the libraries it needs in order to work, I consider clojure one of those libraries"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI prefer not to include Clojure as a dependency for Clojure libraries I distribute, with the expectation that consumers will either use the Clojure version of their system or specific project. Every Clojure library specifying a Clojure dependency adds to the noise of dependency trees and their resolution.\n\nMaven's dependency scopes provide a story for \"indicate that my code uses this dependency, but expect the consumer to provide a concrete dependency on it downstream\", but I believe dependency scopes of this nature are intentionally not supported by tools.deps"}]}]}],"user":"U11SSJP2A","text":"&gt; I'd expect every library to have deps for the libraries it needs in order to work, I consider clojure one of those libraries\nI prefer not to include Clojure as a dependency for Clojure libraries I distribute, with the expectation that consumers will either use the Clojure version of their system or specific project. Every Clojure library specifying a Clojure dependency adds to the noise of dependency trees and their resolution.\n\nMaven's dependency scopes provide a story for \"indicate that my code uses this dependency, but expect the consumer to provide a concrete dependency on it downstream\", but I believe dependency scopes of this nature are intentionally not supported by tools.deps"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629223200.052800","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"9e410b35-64c1-406d-8230-3c52d4bdecaa","blocks":[{"type":"rich_text","block_id":"pr8Dg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya, tools.deps always pick (or (declared version in deps.edn) (highest version))"}]}]}],"user":"U0K064KQV","text":"Ya, tools.deps always pick (or (declared version in deps.edn) (highest version))"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629251808.123800","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"043c8005-0968-4048-a795-e42c2d3ded6e","blocks":[{"type":"rich_text","block_id":"XuCw","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U11SSJP2A"},{"type":"text","text":" Chiming in late here. It's fairly typical for Clojure libraries to list as a dependency the "},{"type":"text","text":"minimum","style":{"italic":true}},{"type":"text","text":" version of Clojure they work with. Sure, not all libraries do that -- some just assume Clojure will be \"provided\" -- but I think it's a good idea if there are (earlier) versions of Clojure a library will not work with."}]}]}],"user":"U04V70XH6","text":"<@U11SSJP2A> Chiming in late here. It's fairly typical for Clojure libraries to list as a dependency the _minimum_ version of Clojure they work with. Sure, not all libraries do that -- some just assume Clojure will be \"provided\" -- but I think it's a good idea if there are (earlier) versions of Clojure a library will not work with."}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629251876.124000","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"129c8fa4-8b9b-4a3a-b536-f0694e8ba1ec","blocks":[{"type":"rich_text","block_id":"xUj","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U04V70XH6"},{"type":"text","text":" That's certainly a fair reason and in my case applies. Thanks!"}]}]}],"user":"U11SSJP2A","text":"<@U04V70XH6> That's certainly a fair reason and in my case applies. Thanks!"}
{"type":"message","thread_ts":"1629197040.021000","ts":"1629252101.124200","parent_user_id":"U11SSJP2A","team":"T03RZGPFR","client_msg_id":"580cc5a9-292b-4a00-ae55-d1f11ba3d60d","blocks":[{"type":"rich_text","block_id":"iKhD","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U04V4KLKC"},{"type":"text","text":" The root "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" (built-in for t.d.a) declares a default dependency for whatever is the current version of Clojure when that version of t.d.a was released. So \"by default\" when using the CLI, you get a \"recent\" version of Clojure -- and that's reflected in the version of the CLI itself: 1.10.3.933 -- by default uses Clojure 1.10.3. See "},{"type":"link","url":"https:\/\/clojure.org\/releases\/tools"},{"type":"text","text":" -- there were a few 1.10.2.x versions earlier this year and it was 1.10.1.x all of last year."}]}]}],"user":"U04V70XH6","text":"<@U04V4KLKC> The root `deps.edn` (built-in for t.d.a) declares a default dependency for whatever is the current version of Clojure when that version of t.d.a was released. So \"by default\" when using the CLI, you get a \"recent\" version of Clojure -- and that's reflected in the version of the CLI itself: 1.10.3.933 -- by default uses Clojure 1.10.3. See <https:\/\/clojure.org\/releases\/tools> -- there were a few 1.10.2.x versions earlier this year and it was 1.10.1.x all of last year."}
{"subscribed":false,"reply_users":["U6JS7B99S","UHL84CDTP"],"type":"message","thread_ts":"1629194003.016300","reply_users_count":2,"ts":"1629194003.016300","team":"T03RZGPFR","client_msg_id":"587a6c5b-5727-4ec0-9914-6d58886c249c","blocks":[{"type":"rich_text","block_id":"rXg5v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I discovered something nice that seems to "},{"type":"text","text":"accidentally","style":{"bold":true}},{"type":"text","text":" work.  One of my randomly-generated test suites was causing a "},{"type":"text","text":"java.lang.StackOverflowError","style":{"code":true}},{"type":"text","text":" exception.  I wanted to know what input data was triggering the error.  So I set up the following, to catch, warn, and rethrow the exception\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    (try (unary-test-fun data)\n         (catch java.lang.StackOverflowError e\n           (cl-format true \"~&Stack overflow on ~A~%\" data)\n           (throw e)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I was half expecting it not to work, but it seems to work beautifully, at least in my case."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":3,"latest_reply":"1629250011.123200","text":"I discovered something nice that seems to *accidentally* work.  One of my randomly-generated test suites was causing a `java.lang.StackOverflowError` exception.  I wanted to know what input data was triggering the error.  So I set up the following, to catch, warn, and rethrow the exception\n```    (try (unary-test-fun data)\n         (catch java.lang.StackOverflowError e\n           (cl-format true \"~&amp;Stack overflow on ~A~%\" data)\n           (throw e)))```\nI was half expecting it not to work, but it seems to work beautifully, at least in my case."}
{"subscribed":false,"reply_users":["U6JS7B99S","UHL84CDTP"],"type":"message","thread_ts":"1629194003.016300","reply_users_count":2,"ts":"1629194003.016300","team":"T03RZGPFR","client_msg_id":"587a6c5b-5727-4ec0-9914-6d58886c249c","blocks":[{"type":"rich_text","block_id":"rXg5v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I discovered something nice that seems to "},{"type":"text","text":"accidentally","style":{"bold":true}},{"type":"text","text":" work.  One of my randomly-generated test suites was causing a "},{"type":"text","text":"java.lang.StackOverflowError","style":{"code":true}},{"type":"text","text":" exception.  I wanted to know what input data was triggering the error.  So I set up the following, to catch, warn, and rethrow the exception\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    (try (unary-test-fun data)\n         (catch java.lang.StackOverflowError e\n           (cl-format true \"~&Stack overflow on ~A~%\" data)\n           (throw e)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I was half expecting it not to work, but it seems to work beautifully, at least in my case."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":3,"latest_reply":"1629250011.123200","text":"I discovered something nice that seems to *accidentally* work.  One of my randomly-generated test suites was causing a `java.lang.StackOverflowError` exception.  I wanted to know what input data was triggering the error.  So I set up the following, to catch, warn, and rethrow the exception\n```    (try (unary-test-fun data)\n         (catch java.lang.StackOverflowError e\n           (cl-format true \"~&amp;Stack overflow on ~A~%\" data)\n           (throw e)))```\nI was half expecting it not to work, but it seems to work beautifully, at least in my case."}
{"type":"message","thread_ts":"1629194003.016300","ts":"1629236504.092200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"139806a3-56e9-4d40-9613-bc05bdfe9bd7","blocks":[{"type":"rich_text","block_id":"5cm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Try\/Catch->Rethrow is something commonly done in Java and C# as far as I remember "},{"type":"emoji","name":"thinking_face"}]}]}],"user":"U6JS7B99S","text":"Try\/Catch-&gt;Rethrow is something commonly done in Java and C# as far as I remember :thinking_face:"}
{"type":"message","thread_ts":"1629194003.016300","edited":{"user":"U6JS7B99S","ts":"1629236560.000000"},"ts":"1629236546.092400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9fe3641f-e033-4f26-8295-b16da3544e92","blocks":[{"type":"rich_text","block_id":"0ZI6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would say that is supposed to work (not only accidentally)"}]}]}],"user":"U6JS7B99S","text":"I would say that is supposed to work (not only accidentally)"}
{"type":"message","thread_ts":"1629194003.016300","ts":"1629250011.123200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2531a7fd-7a8a-4380-89a8-c88bc95d67cf","blocks":[{"type":"rich_text","block_id":"WXNK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is definitely supposed to work, and it's certainly common. One of the common uses of it (at least on my long term codebase at my job) is to log evidence of a certain problem (the exception) when you can't trust the calling code to properly deal with the exception."}]}]}],"user":"UHL84CDTP","text":"It is definitely supposed to work, and it's certainly common. One of the common uses of it (at least on my long term codebase at my job) is to log evidence of a certain problem (the exception) when you can't trust the calling code to properly deal with the exception."}
{"client_msg_id":"34e8059e-f658-4fe5-8111-3a958616d80f","type":"message","text":"I was hoping returning a (reduced) would do the trick, but it seems not","user":"U0K064KQV","ts":"1629181584.013000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"2ty","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was hoping returning a (reduced) would do the trick, but it seems not"}]}]}]}
{"subscribed":false,"reply_users":["U4ZDX466T","U0P0TMEFJ","U064X3EF3","U8QBZBHGD","U09LZR36F","U0K064KQV"],"type":"message","thread_ts":"1629181475.012600","reply_users_count":6,"ts":"1629181475.012600","team":"T03RZGPFR","client_msg_id":"8d7473a8-dfbc-41b0-bf4d-9cb53ac4b30e","blocks":[{"type":"rich_text","block_id":"fbuL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to short-circuit the keep-indexed transducer?"}]}]}],"is_locked":false,"user":"U0K064KQV","reply_count":40,"latest_reply":"1629226464.062600","text":"Is there a way to short-circuit the keep-indexed transducer?"}
{"subscribed":false,"reply_users":["U4ZDX466T","U0P0TMEFJ","U064X3EF3","U8QBZBHGD","U09LZR36F","U0K064KQV"],"type":"message","thread_ts":"1629181475.012600","reply_users_count":6,"ts":"1629181475.012600","team":"T03RZGPFR","client_msg_id":"8d7473a8-dfbc-41b0-bf4d-9cb53ac4b30e","blocks":[{"type":"rich_text","block_id":"fbuL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to short-circuit the keep-indexed transducer?"}]}]}],"is_locked":false,"user":"U0K064KQV","reply_count":40,"latest_reply":"1629226464.062600","text":"Is there a way to short-circuit the keep-indexed transducer?"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629182812.013100","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"22db3dfe-dfbd-4c43-ae2c-71f771f5856b","blocks":[{"type":"rich_text","block_id":"5dD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"halt-when","style":{"code":true}},{"type":"text","text":"?"}]}]}],"user":"U4ZDX466T","text":"`halt-when`?"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629193106.014200","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"72ab31ea-8fa4-4526-8e46-afe90e6c4498","blocks":[{"type":"rich_text","block_id":"Ko5F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do you mean like this?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(into [] (comp (keep-indexed vector) (take 5)) (range 100))"}]}]}],"user":"U0P0TMEFJ","reactions":[{"name":"+1","users":["U0K064KQV"],"count":1}],"text":"do you mean like this?\n```(into [] (comp (keep-indexed vector) (take 5)) (range 100))```"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629198973.023600","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"38A81D16-DDB9-47E1-8A48-F94F1C320AEB","blocks":[{"type":"rich_text","block_id":"esi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can use "},{"type":"text","text":"reduced","style":{"code":true}}]}]}],"user":"U064X3EF3","text":"You can use `reduced`"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629210254.047400","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"760fcd85-2b9a-4bfc-8a1a-bd05cd1fbcf3","blocks":[{"type":"rich_text","block_id":"DYO2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"wow, you can???"}]}]}],"user":"U8QBZBHGD","text":"wow, you can???"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629210683.047700","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"670f4334-8e16-4206-a41c-c803e423f25d","blocks":[{"type":"rich_text","block_id":"NVo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, that's how "},{"type":"text","text":"take","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"halt-when","style":{"code":true}},{"type":"text","text":" work. What you can't do is return something from the function you pass to "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"keep-indexed","style":{"code":true}},{"type":"text","text":" wrapped in reduce and expect it stop processing the rest of the data. So this won't stop at 3:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(into [] (map (fn [x] (if (< 3 x) (reduced x) x))) (range 10))"}]}]}],"user":"U0P0TMEFJ","text":"yes, that's how `take` and `halt-when` work. What you can't do is return something from the function you pass to `map` or `keep-indexed` wrapped in reduce and expect it stop processing the rest of the data. So this won't stop at 3:\n```(into [] (map (fn [x] (if (&lt; 3 x) (reduced x) x))) (range 10))```"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629210977.048200","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"0ac45e5d-2dce-457d-868a-78b26f916482","blocks":[{"type":"rich_text","block_id":"Oaug","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what functions does reduced work with??"}]}]}],"user":"U8QBZBHGD","text":"what functions does reduced work with??"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629211586.048600","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"20184ce5-16d9-49a7-b959-f0dfdb0822e2","blocks":[{"type":"rich_text","block_id":"zUAw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pretty much all the reduce looking things in core support reduced. Like "},{"type":"text","text":"transduce","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"reductions","style":{"code":true}},{"type":"text","text":" and so on ... so this will result in "},{"type":"text","text":"3","style":{"code":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(reduce (fn [r i] (if (< 3 i) (reduced r) i)) (range))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"rather than running through the infinite seq forever"}]}]}],"user":"U0P0TMEFJ","text":"pretty much all the reduce looking things in core support reduced. Like `transduce` and `reductions` and so on ... so this will result in `3`\n```(reduce (fn [r i] (if (&lt; 3 i) (reduced r) i)) (range))```\nrather than running through the infinite seq forever"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629213592.048900","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"af8ddf29-1641-4833-83d3-960712622fcc","blocks":[{"type":"rich_text","block_id":"PnV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I knew it worked with reduce, just didn't know it worked with other things"}]}]}],"user":"U8QBZBHGD","text":"I knew it worked with reduce, just didn't know it worked with other things"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629213599.049100","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"5559715c-1002-4b8c-93a8-965a3fe9c46a","blocks":[{"type":"rich_text","block_id":"JzZoC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and didn't see that in the documentation"}]}]}],"user":"U8QBZBHGD","text":"and didn't see that in the documentation"}
{"type":"message","thread_ts":"1629181475.012600","edited":{"user":"U8QBZBHGD","ts":"1629213617.000000"},"ts":"1629213609.049300","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"091b034f-d317-43a5-81c2-30770dd85bf5","blocks":[{"type":"rich_text","block_id":"ZfCJ6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's a "},{"type":"text","text":"really","style":{"italic":true}},{"type":"text","text":" handy thing to know"}]}]}],"user":"U8QBZBHGD","text":"that's a _really_ handy thing to know"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629222087.051100","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"46df0b5b-95d0-437b-a18d-4cbc6cc7a4a3","blocks":[{"type":"rich_text","block_id":"wnE","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"user=> (into [] (keep-indexed (fn [idx i] (reduced idx))) (range 3))\n[#object[clojure.lang.Reduced 0x7c6189d5 {:status :ready, :val 0}] #object[clojure.lang.Reduced 0x4248e66b {:status :ready, :val 1}] #object[clojure.lang.Reduced 0x3e6534e7 {:status :ready, :val 2}]]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I must be doing it wrong"}]}]}],"user":"U09LZR36F","text":"```user=&gt; (into [] (keep-indexed (fn [idx i] (reduced idx))) (range 3))\n[#object[clojure.lang.Reduced 0x7c6189d5 {:status :ready, :val 0}] #object[clojure.lang.Reduced 0x4248e66b {:status :ready, :val 1}] #object[clojure.lang.Reduced 0x3e6534e7 {:status :ready, :val 2}]]```\nI must be doing it wrong"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629222159.051300","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"d59653f5-160d-4cfc-b8ff-dea4b83e2098","blocks":[{"type":"rich_text","block_id":"27DRC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, "},{"type":"user","user_id":"U0P0TMEFJ"},{"type":"text","text":" already said that "},{"type":"emoji","name":"smile"}]}]}],"user":"U09LZR36F","text":"Oh, <@U0P0TMEFJ> already said that :smile:"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629222664.051700","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"fee3305d-4bc0-4489-85a4-be7c2f8f7b7a","blocks":[{"type":"rich_text","block_id":"zQB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure I'm following, nothing here seems to work for me"}]}]}],"user":"U0K064KQV","text":"I'm not sure I'm following, nothing here seems to work for me"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629222675.051900","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"75155a81-fc95-42f8-892d-ced67248e23a","blocks":[{"type":"rich_text","block_id":"xpq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, except for halt-when."}]}]}],"user":"U0K064KQV","text":"Well, except for halt-when."}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629222839.052400","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"061932a9-6598-440d-9762-76b763755bfa","blocks":[{"type":"rich_text","block_id":"CbZq","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(into []\n       (keep-indexed\n        (fn [idx item]\n          (println idx)\n          (when (= 3 item)\n            (reduced idx))))\n       (range 100))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThis prints all elements. So I can only assume the keep-indexed didn't short-circuit."}]}]}],"user":"U0K064KQV","text":"```(into []\n       (keep-indexed\n        (fn [idx item]\n          (println idx)\n          (when (= 3 item)\n            (reduced idx))))\n       (range 100))```\nThis prints all elements. So I can only assume the keep-indexed didn't short-circuit."}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629223063.052600","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"0a094116-9b45-4de4-ab05-b582860c09e5","blocks":[{"type":"rich_text","block_id":"SU4mT","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U064X3EF3"},{"type":"text","text":" Are you sure you are supposed to be able to use reduced with keep-indexed transducer? Is it a bug then?"}]}]}],"user":"U0K064KQV","text":"<@U064X3EF3> Are you sure you are supposed to be able to use reduced with keep-indexed transducer? Is it a bug then?"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629224321.053000","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"42f50482-b473-45a3-b509-5759fbdda037","blocks":[{"type":"rich_text","block_id":"pQ5Kx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes "},{"type":"user","user_id":"U0K064KQV"},{"type":"text","text":" that's exactly correct behaviour. You can't just return a "},{"type":"text","text":"reduced","style":{"code":true}},{"type":"text","text":" element into a collection, you have to return the whole collection via "},{"type":"text","text":"reduced","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U0P0TMEFJ","text":"yes <@U0K064KQV> that's exactly correct behaviour. You can't just return a `reduced` element into a collection, you have to return the whole collection via `reduced`."}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629224365.053200","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"9645f720-7e7f-4490-a029-2aebe1511566","blocks":[{"type":"rich_text","block_id":"4CTs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's what "},{"type":"text","text":"halt-when","style":{"code":true}},{"type":"text","text":" ,"},{"type":"text","text":"take","style":{"code":true}},{"type":"text","text":","},{"type":"text","text":"take-while","style":{"code":true}},{"type":"text","text":", etc do"}]}]}],"user":"U0P0TMEFJ","text":"that's what `halt-when` ,`take`,`take-while`, etc do"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629224848.053400","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"703cc026-d290-48bf-b87f-b84f93d54fda","blocks":[{"type":"rich_text","block_id":"7f4+Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you're trying to compose something like "},{"type":"text","text":"take-while","style":{"code":true}},{"type":"text","text":" after a "},{"type":"text","text":"keep","style":{"code":true}},{"type":"text","text":", remember that "},{"type":"text","text":"keep","style":{"code":true}},{"type":"text","text":" expands to a "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":"and a "},{"type":"text","text":"remove nil?","style":{"code":true}},{"type":"text","text":" so\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"  (into [] (comp (keep-indexed (fn [idx item] (prn idx) (when (< idx 3) item)))\n                 (take-while (complement nil?)))\n        (range 5)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"is the same as saying \"map all the elements, and when we've seen more than 3 return nil, then remove all the nils, then stop if we see nil\" ... which will consume the whole range ... right?"}]}]}],"user":"U0P0TMEFJ","text":"if you're trying to compose something like `take-while` after a `keep`, remember that `keep` expands to a `map`and a `remove nil?` so\n```  (into [] (comp (keep-indexed (fn [idx item] (prn idx) (when (&lt; idx 3) item)))\n                 (take-while (complement nil?)))\n        (range 5)```\nis the same as saying \"map all the elements, and when we've seen more than 3 return nil, then remove all the nils, then stop if we see nil\" ... which will consume the whole range ... right?"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225114.053700","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"67311812-f3db-4731-af0d-56248bf655d6","blocks":[{"type":"rich_text","block_id":"jR\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, right now keep-indexed work like: keep ALL indexed which match pred.\n\nBut it be nice to be able to say: keep UP-TO reduced indexed which match pred.\n\nBecause that's one downside when switching to the transducer, something like this:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(first\n  (keep-indexed\n   (fn [idx item]\n     (println idx)\n     (when (= 3 item)\n       idx))\n   (range 100)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nWill only consume up-to chunk-size until it finds the first non nil thing that is kept.\n\nBut the transducer will actually be consuming the full list no matter what."}]}]}],"user":"U0K064KQV","text":"Yes, right now keep-indexed work like: keep ALL indexed which match pred.\n\nBut it be nice to be able to say: keep UP-TO reduced indexed which match pred.\n\nBecause that's one downside when switching to the transducer, something like this:\n\n```(first\n  (keep-indexed\n   (fn [idx item]\n     (println idx)\n     (when (= 3 item)\n       idx))\n   (range 100)))```\nWill only consume up-to chunk-size until it finds the first non nil thing that is kept.\n\nBut the transducer will actually be consuming the full list no matter what."}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225331.054000","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"7f7d1f06-e1fd-4954-b9cf-916bc07889be","blocks":[{"type":"rich_text","block_id":"2A+s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum, ok actually maybe I'm wrong, this does seem to work, which I saw you had showed before but had missed:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(into []\n       (comp\n        (keep-indexed\n         (fn [idx item]\n           (println idx)\n           (when (= 3 item)\n             idx)))\n        (take 1))\n       (range 100))"}]}]}],"user":"U0K064KQV","text":"Hum, ok actually maybe I'm wrong, this does seem to work, which I saw you had showed before but had missed:\n\n```(into []\n       (comp\n        (keep-indexed\n         (fn [idx item]\n           (println idx)\n           (when (= 3 item)\n             idx)))\n        (take 1))\n       (range 100))```"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225400.054200","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"96677317-5da9-4120-8b38-5cde4a99fd64","blocks":[{"type":"rich_text","block_id":"5XNvS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah ... if I just wanted the first thing out of a list, with a transducer, I'd compose "},{"type":"text","text":"(take 1)","style":{"code":true}},{"type":"text","text":" in there, rather than adding "},{"type":"text","text":"first","style":{"code":true}},{"type":"text","text":" ..."}]}]}],"user":"U0P0TMEFJ","text":"yeah ... if I just wanted the first thing out of a list, with a transducer, I'd compose `(take 1)` in there, rather than adding `first` ..."}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225424.054400","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"1e89201f-806f-457a-b899-2edb630b5cd4","blocks":[{"type":"rich_text","block_id":"j=ge","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, that's what Alex meant by you can use reduced, like it will short-circtuit if a nested transducer returns reduced to it"}]}]}],"user":"U0K064KQV","text":"Ah, that's what Alex meant by you can use reduced, like it will short-circtuit if a nested transducer returns reduced to it"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225473.054600","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"d25f5bef-3b09-4988-82a5-38ef4e326c8b","blocks":[{"type":"rich_text","block_id":"bgixr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"user":"U0P0TMEFJ","text":"yes"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225498.054800","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"478ab3f2-4ec4-4482-a3ed-1f93d6e664fe","blocks":[{"type":"rich_text","block_id":"ZbCa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, with transducers, the lazyness is about how you apply that transducer"}]}]}],"user":"U0P0TMEFJ","text":"also, with transducers, the lazyness is about how you apply that transducer"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225539.055000","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"7370284a-f0b5-41db-9789-6050f41c8d72","blocks":[{"type":"rich_text","block_id":"toMf0","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(first (sequence (keep-indexed (fn [idx item] (prn idx) (when (< idx 40) item))) (range 50)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so that will behave like the lazy-seq version of "},{"type":"text","text":"keep-indexed","style":{"code":true}},{"type":"text","text":" and consume a chunk at a time"}]}]}],"user":"U0P0TMEFJ","text":"```(first (sequence (keep-indexed (fn [idx item] (prn idx) (when (&lt; idx 40) item))) (range 50)))```\nso that will behave like the lazy-seq version of `keep-indexed` and consume a chunk at a time"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225584.055200","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"7650bf35-1377-4f7b-b720-bdefa366c4c6","blocks":[{"type":"rich_text","block_id":"ZnDyt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you're using "},{"type":"text","text":"into","style":{"code":true}},{"type":"text","text":" you're producing a fully realised vector, then taking the "},{"type":"text","text":"first","style":{"code":true}},{"type":"text","text":" one, which is why it consumes the whole sequence"}]}]}],"user":"U0P0TMEFJ","text":"if you're using `into` you're producing a fully realised vector, then taking the `first` one, which is why it consumes the whole sequence"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225606.055400","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"50aad4bb-0950-4a21-9aa2-034ba9766a4a","blocks":[{"type":"rich_text","block_id":"8Xe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its not exactly the same, this is still iterating through each transducer 1 element at a time. Where as lazy-seq will iterate 32 at a time per sequence function"}]}]}],"user":"U0K064KQV","text":"Its not exactly the same, this is still iterating through each transducer 1 element at a time. Where as lazy-seq will iterate 32 at a time per sequence function"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225663.055600","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"7985dfbb-592b-4217-a658-44d8cf382d53","blocks":[{"type":"rich_text","block_id":"LBm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well ... it'll do enough work to produce 32 elements in the lazy seq being returned by "},{"type":"text","text":"sequence","style":{"code":true}}]}]}],"user":"U0P0TMEFJ","text":"well ... it'll do enough work to produce 32 elements in the lazy seq being returned by `sequence`"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225694.055800","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"c143a836-5525-43dc-a67d-a8797ce79f02","blocks":[{"type":"rich_text","block_id":"0q8H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but yes, it's not producing intermediate lazy-seqs in between each step"}]}]}],"user":"U0P0TMEFJ","text":"but yes, it's not producing intermediate lazy-seqs in between each step"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225705.056000","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"d1cd19b6-5fcf-4c6d-a2bd-efa6499779a8","blocks":[{"type":"rich_text","block_id":"7I7Tv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is that what you mean?"}]}]}],"user":"U0P0TMEFJ","text":"is that what you mean?"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225756.056300","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"99763ec6-2f43-47d1-a3d6-075bc67b1b59","blocks":[{"type":"rich_text","block_id":"3poZO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya, but it will still do a reduce like behavior. Like if you have (comp A B C) it takes ele1 and sends it through A, then B then C. Now it take ele2 and sends it through A, B and C, etc. Where as with lazy-seq if you have (->> coll A B C) it will take 32 elements and run them all through A, then send 32 result out of A to B, and then 32 out of B to C"}]}]}],"user":"U0K064KQV","text":"Ya, but it will still do a reduce like behavior. Like if you have (comp A B C) it takes ele1 and sends it through A, then B then C. Now it take ele2 and sends it through A, B and C, etc. Where as with lazy-seq if you have (-&gt;&gt; coll A B C) it will take 32 elements and run them all through A, then send 32 result out of A to B, and then 32 out of B to C"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225901.057700","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"ef20a9a3-c350-49c1-b221-95ee0ea43649","blocks":[{"type":"rich_text","block_id":"5gw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah ... which is why transducers are more efficient ... cos they're not producing all those lazy seqs ... right?"}]}]}],"user":"U0P0TMEFJ","text":"yeah ... which is why transducers are more efficient ... cos they're not producing all those lazy seqs ... right?"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629225974.057900","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"958a596b-0d74-4e28-a977-25124d0d76ad","blocks":[{"type":"rich_text","block_id":"ztC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Unless you use some special transducers that collect things, like partition-by.  And I thought keep-indexed did too, but I was wrong."}]}]}],"user":"U0K064KQV","text":"Unless you use some special transducers that collect things, like partition-by.  And I thought keep-indexed did too, but I was wrong."}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629226026.058100","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"87046458-5c0c-4aa2-837b-976472997be9","blocks":[{"type":"rich_text","block_id":"\/i8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya, because each batch of \"32\" is wrapped in an extra object container, and the creation of that object and garbage collection is what slows down lazy-seq"}]}]}],"user":"U0K064KQV","text":"Ya, because each batch of \"32\" is wrapped in an extra object container, and the creation of that object and garbage collection is what slows down lazy-seq"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629226053.058300","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"c6f2daa1-da27-4e52-90ab-4040fc74956a","blocks":[{"type":"rich_text","block_id":"VGFa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, its not just the batch, like even unchunked seq will wrap the single element in an extra object."}]}]}],"user":"U0K064KQV","text":"I mean, its not just the batch, like even unchunked seq will wrap the single element in an extra object."}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629226107.059700","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"903fdfdf-331b-4341-bfdb-ce9842a42096","blocks":[{"type":"rich_text","block_id":"X7L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So using "},{"type":"text","text":"(sequence ...)","style":{"code":true}},{"type":"text","text":" with transducers should still be more performant than lazy-seq. Because it will only create a chunk each 32 result of the full chain, not any of the intermediate ones"}]}]}],"user":"U0K064KQV","text":"So using `(sequence ...)` with transducers should still be more performant than lazy-seq. Because it will only create a chunk each 32 result of the full chain, not any of the intermediate ones"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629226289.062000","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"55e23e3d-d3d8-4dc0-8d9d-9183ce7a4932","blocks":[{"type":"rich_text","block_id":"lcCr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its what this sentence from the guide basically means:\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"The resulting sequence elements are incrementally computed. These sequences will consume input incrementally as needed and fully realize intermediate operations. This behavior differs from the equivalent operations on lazy sequences."}]}]}],"user":"U0K064KQV","reactions":[{"name":"heavy_plus_sign","users":["U0P0TMEFJ"],"count":1}],"text":"Its what this sentence from the guide basically means:\n\n&gt; The resulting sequence elements are incrementally computed. These sequences will consume input incrementally as needed and fully realize intermediate operations. This behavior differs from the equivalent operations on lazy sequences."}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629226448.062300","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"ff6fce67-5d0f-4553-a212-1020d8be0862","blocks":[{"type":"rich_text","block_id":"f\/rDm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyways, thanks! You gave me my answer"}]}]}],"user":"U0K064KQV","text":"Anyways, thanks! You gave me my answer"}
{"type":"message","thread_ts":"1629181475.012600","ts":"1629226464.062600","parent_user_id":"U0K064KQV","team":"T03RZGPFR","client_msg_id":"3655af2c-8be9-42fe-aeff-b74b15cba98c","blocks":[{"type":"rich_text","block_id":"sJtAE","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"+1"}]}]}],"user":"U0P0TMEFJ","text":":+1:"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U09LZR36F","U064X3EF3","U0NCTKEV8"],"type":"message","thread_ts":"1629141629.494200","reply_users_count":4,"ts":"1629141629.494200","team":"T03RZGPFR","client_msg_id":"6f3c20f5-cfc1-44cc-b132-d8986f634c46","blocks":[{"type":"rich_text","block_id":"SHl=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I have this code:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns test)\n\n(set! *warn-on-reflection* true)\n\n(definterface Foo\n  (methodA []))\n\n(defn make-foo\n  []\n  (proxy [Foo] []\n    (methodA [] 1)))\n\n(defn method-a\n  [^Foo foo]\n  (.methodA foo))\n\n(comment\n  (method-a (make-foo)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAnd then I re-evaluate the namespace, I get:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"class test.proxy$java.lang.Object$Foo$cf6fbe2b cannot be cast to class test.Foo (test.proxy$java.lang.Object$Foo$cf6fbe2b is in unnamed module of loader clojure.lang.DynamicClassLoader @1aa836af; test.Foo is in unnamed module of loader clojure.lang.DynamicClassLoader @63c807fb)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAm I using definterface or type hinting wrong?"}]}]}],"is_locked":false,"user":"U09LZR36F","reply_count":20,"latest_reply":"1629143150.001200","text":"If I have this code:\n\n```(ns test)\n\n(set! *warn-on-reflection* true)\n\n(definterface Foo\n  (methodA []))\n\n(defn make-foo\n  []\n  (proxy [Foo] []\n    (methodA [] 1)))\n\n(defn method-a\n  [^Foo foo]\n  (.methodA foo))\n\n(comment\n  (method-a (make-foo)))```\nAnd then I re-evaluate the namespace, I get:\n\n```class test.proxy$java.lang.Object$Foo$cf6fbe2b cannot be cast to class test.Foo (test.proxy$java.lang.Object$Foo$cf6fbe2b is in unnamed module of loader clojure.lang.DynamicClassLoader @1aa836af; test.Foo is in unnamed module of loader clojure.lang.DynamicClassLoader @63c807fb)```\nAm I using definterface or type hinting wrong?"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U09LZR36F","U064X3EF3","U0NCTKEV8"],"type":"message","thread_ts":"1629141629.494200","reply_users_count":4,"ts":"1629141629.494200","team":"T03RZGPFR","client_msg_id":"6f3c20f5-cfc1-44cc-b132-d8986f634c46","blocks":[{"type":"rich_text","block_id":"SHl=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I have this code:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns test)\n\n(set! *warn-on-reflection* true)\n\n(definterface Foo\n  (methodA []))\n\n(defn make-foo\n  []\n  (proxy [Foo] []\n    (methodA [] 1)))\n\n(defn method-a\n  [^Foo foo]\n  (.methodA foo))\n\n(comment\n  (method-a (make-foo)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAnd then I re-evaluate the namespace, I get:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"class test.proxy$java.lang.Object$Foo$cf6fbe2b cannot be cast to class test.Foo (test.proxy$java.lang.Object$Foo$cf6fbe2b is in unnamed module of loader clojure.lang.DynamicClassLoader @1aa836af; test.Foo is in unnamed module of loader clojure.lang.DynamicClassLoader @63c807fb)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAm I using definterface or type hinting wrong?"}]}]}],"is_locked":false,"user":"U09LZR36F","reply_count":20,"latest_reply":"1629143150.001200","text":"If I have this code:\n\n```(ns test)\n\n(set! *warn-on-reflection* true)\n\n(definterface Foo\n  (methodA []))\n\n(defn make-foo\n  []\n  (proxy [Foo] []\n    (methodA [] 1)))\n\n(defn method-a\n  [^Foo foo]\n  (.methodA foo))\n\n(comment\n  (method-a (make-foo)))```\nAnd then I re-evaluate the namespace, I get:\n\n```class test.proxy$java.lang.Object$Foo$cf6fbe2b cannot be cast to class test.Foo (test.proxy$java.lang.Object$Foo$cf6fbe2b is in unnamed module of loader clojure.lang.DynamicClassLoader @1aa836af; test.Foo is in unnamed module of loader clojure.lang.DynamicClassLoader @63c807fb)```\nAm I using definterface or type hinting wrong?"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629141728.494400","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"ff09dfd2-b1c8-4ae4-a7a3-de8e15a9a5fd","blocks":[{"type":"rich_text","block_id":"Wpu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My guess is that you have a reference to the result of "},{"type":"text","text":"(make-foo)","style":{"code":true}},{"type":"text","text":" somewhere and pass it to some place that expects "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":". You reload "},{"type":"text","text":"test","style":{"code":true}},{"type":"text","text":", you get new "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":", but the old reference remains, mentioning the old "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":". A pretty common problem."}]}]}],"user":"U2FRKM4TW","text":"My guess is that you have a reference to the result of `(make-foo)` somewhere and pass it to some place that expects `Foo`. You reload `test`, you get new `Foo`, but the old reference remains, mentioning the old `Foo`. A pretty common problem."}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629141752.495100","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"ab14f3e8-bff9-41bd-9b13-8c2307d25548","blocks":[{"type":"rich_text","block_id":"Hgog","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or is that "},{"type":"text","text":"method-a","style":{"code":true}},{"type":"text","text":" the only place where "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" is mentioned, apart from the proxy?"}]}]}],"user":"U2FRKM4TW","text":"Or is that `method-a` the only place where `Foo` is mentioned, apart from the proxy?"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629141787.495500","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"573a8548-b093-414b-8fd0-030a4aa27bc0","blocks":[{"type":"rich_text","block_id":"5sIw+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And you re-evaluate this namespace in its entirety, and without holding any references to "},{"type":"text","text":"method-a","style":{"code":true}},{"type":"text","text":"?"}]}]}],"user":"U2FRKM4TW","text":"And you re-evaluate this namespace in its entirety, and without holding any references to `method-a`?"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629141802.495700","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"8e9c2d98-dd72-49fd-8eeb-9d24c3724d83","blocks":[{"type":"rich_text","block_id":"62z","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":" "},{"type":"text","text":"method-a","style":{"code":true}},{"type":"text","text":" is the only place it's referenced and I'm re-evaluating the namespace in its entirety "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U09LZR36F","text":"<@U2FRKM4TW> `method-a` is the only place it's referenced and I'm re-evaluating the namespace in its entirety :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629141880.496100","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"dc7623a0-6af7-4f82-b21d-fe63994789b7","blocks":[{"type":"rich_text","block_id":"A6Y=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there some reason to use proxy here vs reify?"}]}]}],"user":"U064X3EF3","text":"is there some reason to use proxy here vs reify?"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629141990.496300","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"b45f2d97-6e91-4a86-9207-6c42b860e171","blocks":[{"type":"rich_text","block_id":"K7i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll try with reify."}]}]}],"user":"U09LZR36F","text":"I'll try with reify."}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142010.496500","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"ce8115eb-420b-499a-af91-576a21363843","blocks":[{"type":"rich_text","block_id":"kVNqe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also I think the proxy method impl needs to take an additional first \"this\" argument"}]}]}],"user":"U064X3EF3","text":"also I think the proxy method impl needs to take an additional first \"this\" argument"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142035.496700","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"9793a600-f31c-4649-b178-9b4bb3cbdf26","blocks":[{"type":"rich_text","block_id":"Y1P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reify doesn't have this problem "},{"type":"emoji","name":"open_mouth"},{"type":"text","text":" magic."}]}]}],"user":"U09LZR36F","text":"reify doesn't have this problem :open_mouth: magic."}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142106.497100","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"d059609c-eb9a-4beb-ad0c-1e8f9e5f6d15","blocks":[{"type":"rich_text","block_id":"\/ww","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U064X3EF3"},{"type":"text","text":" I thought proxy was anaphoric?"}]}]}],"user":"U09LZR36F","text":"<@U064X3EF3> I thought proxy was anaphoric?"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142151.497900","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"1508f90e-fc70-4638-bcad-b6984e8f3571","blocks":[{"type":"rich_text","block_id":"yMq+B","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/proxy"},{"type":"text","text":" examples here suggest so."}]}]}],"user":"U09LZR36F","text":"<https:\/\/clojuredocs.org\/clojure.core\/proxy> examples here suggest so."}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142218.498700","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"39c58d16-e37a-43f5-84dd-eac574d445b5","blocks":[{"type":"rich_text","block_id":"LTo=N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why doesn't reify have this problem?  Is the problem with Proxy referencing the wrong Foo?"}]}]}],"user":"U09LZR36F","text":"Why doesn't reify have this problem?  Is the problem with Proxy referencing the wrong Foo?"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142301.498900","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"f2e97ed8-118f-4328-862a-e772cd10ceae","blocks":[{"type":"rich_text","block_id":"IX8","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U064X3EF3"},{"type":"text","text":" Oh, I need "},{"type":"text","text":"proxy","style":{"code":true}},{"type":"text","text":" because I'm doing java.io.FilterInputStream and need to pass an InputStream."}]}]}],"user":"U09LZR36F","text":"<@U064X3EF3> Oh, I need `proxy` because I'm doing java.io.FilterInputStream and need to pass an InputStream."}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142361.499100","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"b220f15e-0631-4724-9506-016a81d07a83","blocks":[{"type":"rich_text","block_id":"bu0","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/clojure.atlassian.net\/browse\/CLJ-2379"},{"type":"text","text":" I've run into this I suppose?"}]}]}],"user":"U09LZR36F","text":"<https:\/\/clojure.atlassian.net\/browse\/CLJ-2379> I've run into this I suppose?"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142443.499300","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"15457020-f0aa-4114-b56a-38ad3ba485a1","blocks":[{"type":"rich_text","block_id":"eKmK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When doing input steam stuff it can be nicer to implement a channel interface and use one of the channel to input stream adapters nio ships with"}]}]}],"user":"U0NCTKEV8","text":"When doing input steam stuff it can be nicer to implement a channel interface and use one of the channel to input stream adapters nio ships with"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142517.499500","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"b25ecbc8-c211-4379-a0df-7ff7d3058d9b","blocks":[{"type":"rich_text","block_id":"y3tPX","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/nio\/channels\/ReadableByteChannel.html","text":"https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/nio\/channels\/ReadableByteChannel.html"},{"type":"text","text":" and "},{"type":"link","url":"https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/nio\/channels\/Channels.html#newInputStream-java.nio.channels.ReadableByteChannel-","text":"https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/nio\/channels\/Channels.html#newInputStream-java.nio.channels.ReadableByteChannel-"}]}]}],"user":"U0NCTKEV8","text":"<https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/nio\/channels\/ReadableByteChannel.html|https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/nio\/channels\/ReadableByteChannel.html> and <https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/nio\/channels\/Channels.html#newInputStream-java.nio.channels.ReadableByteChannel-|https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/nio\/channels\/Channels.html#newInputStream-java.nio.channels.ReadableByteChannel->"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142628.499900","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"f2bc3283-554e-4351-b788-ecbffebe2010","blocks":[{"type":"rich_text","block_id":"DXDY","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0NCTKEV8"},{"type":"text","text":" You mean, "},{"type":"link","url":"https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/nio\/channels\/Channels.html#newChannel-java.io.InputStream-"},{"type":"text","text":" right?  I'm starting with an InputStream."}]}]}],"user":"U09LZR36F","text":"<@U0NCTKEV8> You mean, <https:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/nio\/channels\/Channels.html#newChannel-java.io.InputStream-> right?  I'm starting with an InputStream."}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142660.000400","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"5c271a86-d346-4048-9e2d-1e07de60bb7f","blocks":[{"type":"rich_text","block_id":"Q1Kyy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd prefer to stay with an InputStream as I expect my users have one (e.g. to pass it to cheshire)"}]}]}],"user":"U09LZR36F","text":"I'd prefer to stay with an InputStream as I expect my users have one (e.g. to pass it to cheshire)"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142831.000600","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"9c4666b5-46d8-4bb1-8743-51a378b65169","blocks":[{"type":"rich_text","block_id":"9G+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The thing is, "},{"type":"link","url":"http:\/\/java.io","text":"java.io"},{"type":"text","text":" is a mess of concrete inheritance and things like filterinputsream which is basically an abstract base class, and every interface has too many methods"}]}]}],"user":"U0NCTKEV8","text":"The thing is, <http:\/\/java.io|java.io> is a mess of concrete inheritance and things like filterinputsream which is basically an abstract base class, and every interface has too many methods"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629142863.000800","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"51453133-e791-4d4c-bca8-707d11e2f6f3","blocks":[{"type":"rich_text","block_id":"eUI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Where java nio has some nice small interfaces"}]}]}],"user":"U0NCTKEV8","text":"Where java nio has some nice small interfaces"}
{"type":"message","thread_ts":"1629141629.494200","ts":"1629143150.001200","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"d32b411b-b087-430e-9273-66c2d8a7e18f","blocks":[{"type":"rich_text","block_id":"=+ADI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(sorry, "},{"type":"link","url":"http:\/\/java.io","text":"java.io"},{"type":"text","text":" has no interfaces, every abstract base class has too many methods)"}]}]}],"user":"U0NCTKEV8","text":"(sorry, <http:\/\/java.io|java.io> has no interfaces, every abstract base class has too many methods)"}
{"subscribed":false,"reply_users":["U083D6HK9","U01ML3G5WT0","U45T93RA6","U051SS2EU"],"type":"message","thread_ts":"1629128779.479700","reply_users_count":4,"ts":"1629128779.479700","team":"T03RZGPFR","client_msg_id":"873953df-a3b0-4e3d-8b82-fd6ac0a138c5","blocks":[{"type":"rich_text","block_id":"8iTU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm writing a blog post and want to showcase how Clojure is built from just a few \"keywords\", meaning that there's only a few built in definitions in the Clojure language, and the rest are from clojure\/core.\n\nI remember Rich Hickey telling the exact number of those base keywords in some talk but can't find it anywhere. Anyone know what it's at the moment?\n\nI mean words like "},{"type":"text","text":"class","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"interface","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"void","style":{"code":true}},{"type":"text","text":" etc."}]}]}],"is_locked":false,"user":"U01ML3G5WT0","reply_count":6,"latest_reply":"1629132892.481700","text":"I'm writing a blog post and want to showcase how Clojure is built from just a few \"keywords\", meaning that there's only a few built in definitions in the Clojure language, and the rest are from clojure\/core.\n\nI remember Rich Hickey telling the exact number of those base keywords in some talk but can't find it anywhere. Anyone know what it's at the moment?\n\nI mean words like `class` `interface` `void` etc."}
{"subscribed":false,"reply_users":["U083D6HK9","U01ML3G5WT0","U45T93RA6","U051SS2EU"],"type":"message","thread_ts":"1629128779.479700","reply_users_count":4,"ts":"1629128779.479700","team":"T03RZGPFR","client_msg_id":"873953df-a3b0-4e3d-8b82-fd6ac0a138c5","blocks":[{"type":"rich_text","block_id":"8iTU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm writing a blog post and want to showcase how Clojure is built from just a few \"keywords\", meaning that there's only a few built in definitions in the Clojure language, and the rest are from clojure\/core.\n\nI remember Rich Hickey telling the exact number of those base keywords in some talk but can't find it anywhere. Anyone know what it's at the moment?\n\nI mean words like "},{"type":"text","text":"class","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"interface","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"void","style":{"code":true}},{"type":"text","text":" etc."}]}]}],"is_locked":false,"user":"U01ML3G5WT0","reply_count":6,"latest_reply":"1629132892.481700","text":"I'm writing a blog post and want to showcase how Clojure is built from just a few \"keywords\", meaning that there's only a few built in definitions in the Clojure language, and the rest are from clojure\/core.\n\nI remember Rich Hickey telling the exact number of those base keywords in some talk but can't find it anywhere. Anyone know what it's at the moment?\n\nI mean words like `class` `interface` `void` etc."}
{"type":"message","thread_ts":"1629128779.479700","ts":"1629128818.479800","parent_user_id":"U01ML3G5WT0","team":"T03RZGPFR","client_msg_id":"b08d7d48-a829-41a0-a6cf-eaa4a887e198","blocks":[{"type":"rich_text","block_id":"\/zV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Check "},{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/special-symbol_q"}]}]}],"user":"U083D6HK9","text":"Check <https:\/\/clojuredocs.org\/clojure.core\/special-symbol_q>"}
{"type":"message","thread_ts":"1629128779.479700","ts":"1629128853.480000","parent_user_id":"U01ML3G5WT0","team":"T03RZGPFR","client_msg_id":"48762f7d-07db-488a-a5ba-da3f288cf5d5","blocks":[{"type":"rich_text","block_id":"yFe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cheers!\n\nSo 24 "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U01ML3G5WT0","text":"Cheers!\n\nSo 24 :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629128779.479700","ts":"1629128861.480200","parent_user_id":"U01ML3G5WT0","team":"T03RZGPFR","client_msg_id":"b627885b-10b7-4e3d-ad49-2c6cd608949f","blocks":[{"type":"rich_text","block_id":"ghO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's amazing"}]}]}],"user":"U01ML3G5WT0","text":"That's amazing"}
{"type":"message","thread_ts":"1629128779.479700","ts":"1629130602.480400","parent_user_id":"U01ML3G5WT0","team":"T03RZGPFR","client_msg_id":"865cc5a0-8e0a-4cd8-9906-cf52571f3aac","blocks":[{"type":"rich_text","block_id":"7UlM4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also "},{"type":"link","url":"https:\/\/clojure.org\/reference\/special_forms"}]}]}],"user":"U45T93RA6","reactions":[{"name":"white_check_mark","users":["U01ML3G5WT0"],"count":1}],"text":"Also <https:\/\/clojure.org\/reference\/special_forms>"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/jvm\/clojure\/lang\/Compiler.java | Compiler.java>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/clojure\/clojure|clojure\/clojure>","title":"<https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/jvm\/clojure\/lang\/Compiler.java | Compiler.java>","id":1,"app_unfurl_url":"https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/jvm\/clojure\/lang\/Compiler.java#L40","text":"```\nstatic final Symbol DEF = Symbol.intern(\"def\");\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629128779.479700","edited":{"user":"U051SS2EU","ts":"1629132755.000000"},"ts":"1629132701.481200","parent_user_id":"U01ML3G5WT0","team":"T03RZGPFR","client_msg_id":"4257c64b-a42b-4c9b-961b-e17e35a2b631","blocks":[{"type":"rich_text","block_id":"+eI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the source of truth: if it's interned to compiler state here, it is part of the compiler and not defined in clojure code "},{"type":"link","url":"https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/jvm\/clojure\/lang\/Compiler.java#L40"}]}]}],"user":"U051SS2EU","reactions":[{"name":"eyes","users":["U45T93RA6"],"count":1}],"text":"the source of truth: if it's interned to compiler state here, it is part of the compiler and not defined in clojure code <https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/jvm\/clojure\/lang\/Compiler.java#L40>"}
{"type":"message","thread_ts":"1629128779.479700","ts":"1629132892.481700","parent_user_id":"U01ML3G5WT0","team":"T03RZGPFR","client_msg_id":"6188dc76-fd6f-4df0-8dd0-b883d27f18c3","blocks":[{"type":"rich_text","block_id":"PLsW","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01ML3G5WT0"},{"type":"text","text":" out of \"Class, interface void etc.\" only Class"}]}]}],"user":"U051SS2EU","reactions":[{"name":"white_check_mark","users":["U01ML3G5WT0"],"count":1}],"text":"<@U01ML3G5WT0> out of \"Class, interface void etc.\" only Class"}
{"subscribed":false,"reply_users":["U083D6HK9","U0P0TMEFJ"],"type":"message","thread_ts":"1629128608.477400","reply_users_count":2,"ts":"1629128608.477400","team":"T03RZGPFR","client_msg_id":"1cb454f9-7575-4ffd-b501-89511b9954ff","blocks":[{"type":"rich_text","block_id":"JMjB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm curious why some reader tags throw when evaluated on their own. For example, take the "},{"type":"text","text":"#ordered\/map","style":{"code":true}},{"type":"text","text":" tag (reader kv defined "},{"type":"link","url":"https:\/\/github.com\/clj-commons\/ordered\/blob\/12044526cdda3f0ff08176666210022397621997\/src\/data_readers.clj#L2","text":"here"},{"type":"text","text":", "},{"type":"link","url":"https:\/\/github.com\/clj-commons\/ordered\/blob\/12044526cdda3f0ff08176666210022397621997\/src\/flatland\/ordered\/map.clj#L149","text":"data reader fn"},{"type":"text","text":"). If I eval the following code, I get an exception thrown (full stacktrace in thread).\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(do #ordered\/map ([:b 2] [:a 1] [:d 4]))\nSyntax error (IllegalArgumentException) compiling fn* at (src\/example.clj:6:3).\nUnable to resolve classname: IPersistentMap"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The map is read and the data reader fn is called as expected.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(def omap #ordered\/map ([:b 2] [:a 1] [:d 4]))\n=> #'example\/omap\n(type omap)\n=> flatland.ordered.map.OrderedMap"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It's only when evaling just the tagged literal that the ex is thrown. Any idea why this is happening?"}]}]}],"is_locked":false,"user":"U083D6HK9","reply_count":11,"latest_reply":"1629222738.052100","text":"I'm curious why some reader tags throw when evaluated on their own. For example, take the `#ordered\/map` tag (reader kv defined <https:\/\/github.com\/clj-commons\/ordered\/blob\/12044526cdda3f0ff08176666210022397621997\/src\/data_readers.clj#L2|here>, <https:\/\/github.com\/clj-commons\/ordered\/blob\/12044526cdda3f0ff08176666210022397621997\/src\/flatland\/ordered\/map.clj#L149|data reader fn>). If I eval the following code, I get an exception thrown (full stacktrace in thread).\n```(do #ordered\/map ([:b 2] [:a 1] [:d 4]))\nSyntax error (IllegalArgumentException) compiling fn* at (src\/example.clj:6:3).\nUnable to resolve classname: IPersistentMap```\nThe map is read and the data reader fn is called as expected.\n```(def omap #ordered\/map ([:b 2] [:a 1] [:d 4]))\n=&gt; #'example\/omap\n(type omap)\n=&gt; flatland.ordered.map.OrderedMap```\nIt's only when evaling just the tagged literal that the ex is thrown. Any idea why this is happening?"}
{"subscribed":false,"reply_users":["U083D6HK9","U0P0TMEFJ"],"type":"message","thread_ts":"1629128608.477400","reply_users_count":2,"ts":"1629128608.477400","team":"T03RZGPFR","client_msg_id":"1cb454f9-7575-4ffd-b501-89511b9954ff","blocks":[{"type":"rich_text","block_id":"JMjB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm curious why some reader tags throw when evaluated on their own. For example, take the "},{"type":"text","text":"#ordered\/map","style":{"code":true}},{"type":"text","text":" tag (reader kv defined "},{"type":"link","url":"https:\/\/github.com\/clj-commons\/ordered\/blob\/12044526cdda3f0ff08176666210022397621997\/src\/data_readers.clj#L2","text":"here"},{"type":"text","text":", "},{"type":"link","url":"https:\/\/github.com\/clj-commons\/ordered\/blob\/12044526cdda3f0ff08176666210022397621997\/src\/flatland\/ordered\/map.clj#L149","text":"data reader fn"},{"type":"text","text":"). If I eval the following code, I get an exception thrown (full stacktrace in thread).\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(do #ordered\/map ([:b 2] [:a 1] [:d 4]))\nSyntax error (IllegalArgumentException) compiling fn* at (src\/example.clj:6:3).\nUnable to resolve classname: IPersistentMap"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The map is read and the data reader fn is called as expected.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(def omap #ordered\/map ([:b 2] [:a 1] [:d 4]))\n=> #'example\/omap\n(type omap)\n=> flatland.ordered.map.OrderedMap"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It's only when evaling just the tagged literal that the ex is thrown. Any idea why this is happening?"}]}]}],"is_locked":false,"user":"U083D6HK9","reply_count":11,"latest_reply":"1629222738.052100","text":"I'm curious why some reader tags throw when evaluated on their own. For example, take the `#ordered\/map` tag (reader kv defined <https:\/\/github.com\/clj-commons\/ordered\/blob\/12044526cdda3f0ff08176666210022397621997\/src\/data_readers.clj#L2|here>, <https:\/\/github.com\/clj-commons\/ordered\/blob\/12044526cdda3f0ff08176666210022397621997\/src\/flatland\/ordered\/map.clj#L149|data reader fn>). If I eval the following code, I get an exception thrown (full stacktrace in thread).\n```(do #ordered\/map ([:b 2] [:a 1] [:d 4]))\nSyntax error (IllegalArgumentException) compiling fn* at (src\/example.clj:6:3).\nUnable to resolve classname: IPersistentMap```\nThe map is read and the data reader fn is called as expected.\n```(def omap #ordered\/map ([:b 2] [:a 1] [:d 4]))\n=&gt; #'example\/omap\n(type omap)\n=&gt; flatland.ordered.map.OrderedMap```\nIt's only when evaling just the tagged literal that the ex is thrown. Any idea why this is happening?"}
{"type":"message","thread_ts":"1629128608.477400","ts":"1629128629.477600","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"4d0affcc-6423-4bf8-bc7f-a6644c32ab60","blocks":[{"type":"rich_text","block_id":"oLk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Full stacktrace\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Syntax error compiling fn* at (\/src\/example.clj:6:3).\n\tat clojure.lang.Compiler.analyzeSeq(Compiler.java:7119)\njava.lang.IllegalArgumentException: Unable to resolve classname: IPersistentMap\n\tat clojure.lang.Compiler$HostExpr.tagToClass(Compiler.java:1129)\n\tat clojure.lang.Compiler.tagClass(Compiler.java:8693)\n\tat clojure.lang.Compiler$ObjExpr.emitValue(Compiler.java:4810)\n\tat clojure.lang.Compiler$ObjExpr.emitConstants(Compiler.java:4938)\n\tat clojure.lang.Compiler$ObjExpr.compile(Compiler.java:4616)\n\tat clojure.lang.Compiler$FnExpr.parse(Compiler.java:4110)\n\tat clojure.lang.Compiler.analyzeSeq(Compiler.java:7109)\n\tat clojure.lang.Compiler.analyze(Compiler.java:6793)\n\tat clojure.lang.Compiler.eval(Compiler.java:7178)\n\tat clojure.lang.Compiler.eval(Compiler.java:7171)\n\tat clojure.lang.Compiler.eval(Compiler.java:7136)\n\tat clojure.core$eval.invokeStatic(core.clj:3202)\n\tat clojure.core$eval.invoke(core.clj:3198)\n\tat nrepl.middleware.interruptible_eval$evaluate$fn__939.invoke(interruptible_eval.clj:91)\n\tat clojure.main$repl$read_eval_print__9110$fn__9113.invoke(main.clj:437)\n\tat clojure.main$repl$read_eval_print__9110.invoke(main.clj:437)\n\tat clojure.main$repl$fn__9119.invoke(main.clj:458)\n\tat clojure.main$repl.invokeStatic(main.clj:458)\n\tat clojure.main$repl.doInvoke(main.clj:368)\n\tat clojure.lang.RestFn.invoke(RestFn.java:1523)\n\tat nrepl.middleware.interruptible_eval$evaluate.invokeStatic(interruptible_eval.clj:84)\n\tat nrepl.middleware.interruptible_eval$evaluate.invoke(interruptible_eval.clj:56)\n\tat nrepl.middleware.interruptible_eval$interruptible_eval$fn__965$fn__969.invoke(interruptible_eval.clj:155)\n\tat clojure.lang.AFn.run(AFn.java:22)\n\tat nrepl.middleware.session$session_exec$main_loop__1067$fn__1071.invoke(session.clj:190)\n\tat nrepl.middleware.session$session_exec$main_loop__1067.invoke(session.clj:189)\n\tat clojure.lang.AFn.run(AFn.java:22)\n\tat java.base\/java.lang.Thread.run(Thread.java:829)"}]}]}],"user":"U083D6HK9","text":"Full stacktrace\n```Syntax error compiling fn* at (\/src\/example.clj:6:3).\n\tat clojure.lang.Compiler.analyzeSeq(Compiler.java:7119)\njava.lang.IllegalArgumentException: Unable to resolve classname: IPersistentMap\n\tat clojure.lang.Compiler$HostExpr.tagToClass(Compiler.java:1129)\n\tat clojure.lang.Compiler.tagClass(Compiler.java:8693)\n\tat clojure.lang.Compiler$ObjExpr.emitValue(Compiler.java:4810)\n\tat clojure.lang.Compiler$ObjExpr.emitConstants(Compiler.java:4938)\n\tat clojure.lang.Compiler$ObjExpr.compile(Compiler.java:4616)\n\tat clojure.lang.Compiler$FnExpr.parse(Compiler.java:4110)\n\tat clojure.lang.Compiler.analyzeSeq(Compiler.java:7109)\n\tat clojure.lang.Compiler.analyze(Compiler.java:6793)\n\tat clojure.lang.Compiler.eval(Compiler.java:7178)\n\tat clojure.lang.Compiler.eval(Compiler.java:7171)\n\tat clojure.lang.Compiler.eval(Compiler.java:7136)\n\tat clojure.core$eval.invokeStatic(core.clj:3202)\n\tat clojure.core$eval.invoke(core.clj:3198)\n\tat nrepl.middleware.interruptible_eval$evaluate$fn__939.invoke(interruptible_eval.clj:91)\n\tat clojure.main$repl$read_eval_print__9110$fn__9113.invoke(main.clj:437)\n\tat clojure.main$repl$read_eval_print__9110.invoke(main.clj:437)\n\tat clojure.main$repl$fn__9119.invoke(main.clj:458)\n\tat clojure.main$repl.invokeStatic(main.clj:458)\n\tat clojure.main$repl.doInvoke(main.clj:368)\n\tat clojure.lang.RestFn.invoke(RestFn.java:1523)\n\tat nrepl.middleware.interruptible_eval$evaluate.invokeStatic(interruptible_eval.clj:84)\n\tat nrepl.middleware.interruptible_eval$evaluate.invoke(interruptible_eval.clj:56)\n\tat nrepl.middleware.interruptible_eval$interruptible_eval$fn__965$fn__969.invoke(interruptible_eval.clj:155)\n\tat clojure.lang.AFn.run(AFn.java:22)\n\tat nrepl.middleware.session$session_exec$main_loop__1067$fn__1071.invoke(session.clj:190)\n\tat nrepl.middleware.session$session_exec$main_loop__1067.invoke(session.clj:189)\n\tat clojure.lang.AFn.run(AFn.java:22)\n\tat java.base\/java.lang.Thread.run(Thread.java:829)```"}
{"type":"message","thread_ts":"1629128608.477400","ts":"1629133232.482000","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"42c73d63-f4ea-4ec2-a284-a167a405f179","blocks":[{"type":"rich_text","block_id":"MAyd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure, but I think that in one scenario, the namespace context is being set correctly, and in the other it isn't? The "},{"type":"text","text":"OrderedType","style":{"code":true}},{"type":"text","text":" type has metadata with class information on it saying "},{"type":"text","text":"IPersistentMap","style":{"code":true}},{"type":"text","text":", and in the form that doesn't throw the error it's resolving that to "},{"type":"text","text":"clojure.lang.*","style":{"code":true}},{"type":"text","text":" ? But I think it has something to do with it being emitted, because the code successfully runs."}]}]}],"user":"U0P0TMEFJ","text":"I'm not sure, but I think that in one scenario, the namespace context is being set correctly, and in the other it isn't? The `OrderedType` type has metadata with class information on it saying `IPersistentMap`, and in the form that doesn't throw the error it's resolving that to `clojure.lang.*` ? But I think it has something to do with it being emitted, because the code successfully runs."}
{"type":"message","thread_ts":"1629128608.477400","ts":"1629133285.482200","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"1e0cd214-f7de-4555-8717-6a6d236722d8","blocks":[{"type":"rich_text","block_id":"Mx8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you redefine the "},{"type":"text","text":"ordered-map","style":{"code":true}},{"type":"text","text":"function like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn ordered-map\n  \"Return a map with the given keys and values, whose entries are\nsorted in the order that keys are added. assoc'ing a key that is\nalready in an ordered map leaves its order unchanged. dissoc'ing a\nkey and then later assoc'ing it puts it at the end, as if it were\nassoc'ed for the first time. Supports transient.\"\n  ([] empty-ordered-map)\n  ([coll]\n   (prn '->> coll (into empty-ordered-map coll))\n   (reduce #(assoc %1 (first %2) (second %2)) {} coll))\n  ([k v & more]\n     (apply assoc empty-ordered-map k v more)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"you get this output\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"flatland.ordered.map=> (do #ordered\/map ([:b 2] [:a 1] [:d 4]))\n->> ([:b 2] [:a 1] [:d 4]) #ordered\/map ([:b 2] [:a 1] [:d 4])\n->> ([:b 2] [:a 1] [:d 4]) #ordered\/map ([:b 2] [:a 1] [:d 4])\n{:b 2, :a 1, :d 4}"}]}]}],"user":"U0P0TMEFJ","text":"if you redefine the `ordered-map`function like this:\n```(defn ordered-map\n  \"Return a map with the given keys and values, whose entries are\nsorted in the order that keys are added. assoc'ing a key that is\nalready in an ordered map leaves its order unchanged. dissoc'ing a\nkey and then later assoc'ing it puts it at the end, as if it were\nassoc'ed for the first time. Supports transient.\"\n  ([] empty-ordered-map)\n  ([coll]\n   (prn '-&gt;&gt; coll (into empty-ordered-map coll))\n   (reduce #(assoc %1 (first %2) (second %2)) {} coll))\n  ([k v &amp; more]\n     (apply assoc empty-ordered-map k v more)))```\nyou get this output\n```flatland.ordered.map=&gt; (do #ordered\/map ([:b 2] [:a 1] [:d 4]))\n-&gt;&gt; ([:b 2] [:a 1] [:d 4]) #ordered\/map ([:b 2] [:a 1] [:d 4])\n-&gt;&gt; ([:b 2] [:a 1] [:d 4]) #ordered\/map ([:b 2] [:a 1] [:d 4])\n{:b 2, :a 1, :d 4}```"}
{"type":"message","thread_ts":"1629128608.477400","edited":{"user":"U0P0TMEFJ","ts":"1629133305.000000"},"ts":"1629133300.482400","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"6eeea8be-5754-40c9-8f59-67bb232bcc2e","blocks":[{"type":"rich_text","block_id":"up1E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I'm also interested that it get's called twice ...)"}]}]}],"user":"U0P0TMEFJ","text":"(I'm also interested that it get's called twice ...)"}
{"type":"message","thread_ts":"1629128608.477400","ts":"1629133434.482700","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"28c99543-c71f-40f1-b836-b88f3500e2b8","blocks":[{"type":"rich_text","block_id":"KoF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe if you define the "},{"type":"text","text":"OrderedMap","style":{"code":true}},{"type":"text","text":" with fully qualified tags the problem will go away???"}]}]}],"user":"U0P0TMEFJ","text":"maybe if you define the `OrderedMap` with fully qualified tags the problem will go away???"}
{"type":"message","thread_ts":"1629128608.477400","ts":"1629133662.482900","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"6b96350d-ad8f-4713-9144-a81b3381a479","blocks":[{"type":"rich_text","block_id":"uye","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, notice that you don't get the error if you eval from within the "},{"type":"text","text":"flatland.ordered.map","style":{"code":true}},{"type":"text","text":" namespace"}]}]}],"user":"U0P0TMEFJ","text":"also, notice that you don't get the error if you eval from within the `flatland.ordered.map` namespace"}
{"type":"message","thread_ts":"1629128608.477400","ts":"1629133681.483100","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"13565855-d930-447d-8382-bd10259503cd","blocks":[{"type":"rich_text","block_id":"uRN","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"flatland.ordered.map=> #ordered\/map ([:a 1] [:b 2])\n#ordered\/map ([:a 1] [:b 2])"}]}]}],"user":"U0P0TMEFJ","text":"```flatland.ordered.map=&gt; #ordered\/map ([:a 1] [:b 2])\n#ordered\/map ([:a 1] [:b 2])```"}
{"type":"message","thread_ts":"1629128608.477400","ts":"1629133700.483300","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"376c8c25-b828-4295-b5de-113ac131e919","blocks":[{"type":"rich_text","block_id":"WujDM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so, maybe just importing the correct classes will fix the problem?"}]}]}],"user":"U0P0TMEFJ","text":"so, maybe just importing the correct classes will fix the problem?"}
{"type":"message","thread_ts":"1629128608.477400","ts":"1629137892.483500","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"9bf1c1cc-03e0-4b51-a93d-6b6b9887c6e4","blocks":[{"type":"rich_text","block_id":"aXIz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting. That fix seems like it'd defeat the purpose of the tagged literal "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U083D6HK9","text":"Interesting. That fix seems like it'd defeat the purpose of the tagged literal :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629128608.477400","ts":"1629192720.013700","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"5668349a-333b-447c-8d15-946f5120ab05","blocks":[{"type":"rich_text","block_id":"d9o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh yeah ... I'm not saying it's not a bug ;)"}]}]}],"user":"U0P0TMEFJ","text":"oh yeah ... I'm not saying it's not a bug ;)"}
{"attachments":[{"service_name":"ask.clojure.org","title_link":"https:\/\/ask.clojure.org\/index.php\/10945\/why-do-some-reader-tags-throw-when-evaluated-on-their-own","fallback":"Why do some reader tags throw when evaluated on their own? - Clojure Q&amp;A","from_url":"https:\/\/ask.clojure.org\/index.php\/10945\/why-do-some-reader-tags-throw-when-evaluated-on-their-own","title":"Why do some reader tags throw when evaluated on their own? - Clojure Q&amp;A","id":1,"service_icon":"https:\/\/ask.clojure.org\/clojure-logo-icon-32.png","original_url":"https:\/\/ask.clojure.org\/index.php\/10945\/why-do-some-reader-tags-throw-when-evaluated-on-their-own","text":"For example, take the `#ordered\/map` tag (reader kv defined [here] ... blob\/12044526cdda3f0ff08176666210022397621997\/src\/flatland\/ordered\/map.clj#L149"}],"type":"message","thread_ts":"1629128608.477400","ts":"1629222738.052100","parent_user_id":"U083D6HK9","team":"T03RZGPFR","client_msg_id":"78b5dbc3-f44f-4598-a190-52ce6acff15b","blocks":[{"type":"rich_text","block_id":"vF6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"fyi, I opened an ask.clojure "},{"type":"link","url":"https:\/\/ask.clojure.org\/index.php\/10945\/why-do-some-reader-tags-throw-when-evaluated-on-their-own"}]}]}],"user":"U083D6HK9","reactions":[{"name":"+1","users":["U0P0TMEFJ"],"count":1}],"text":"fyi, I opened an ask.clojure <https:\/\/ask.clojure.org\/index.php\/10945\/why-do-some-reader-tags-throw-when-evaluated-on-their-own>"}
{"subscribed":false,"reply_users":["U0WL6FA77","U2FRKM4TW","U0AQ3HP9U"],"type":"message","display_as_bot":false,"thread_ts":"1629099114.468500","reply_users_count":3,"ts":"1629099114.468500","files":[{"thumb_1024_w":1024,"thumb_1024_h":414,"thumb_1024":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_1024.png","thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_80.png","thumb_360_h":146,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_160.png","thumb_960":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_960.png","thumb_960_w":960,"original_w":1048,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02BN3NT0MP\/download\/image.png","name":"image.png","permalink":"https:\/\/clojurians.slack.com\/files\/U2FRKM4TW\/F02BN3NT0MP\/image.png","username":"","mode":"hosted","thumb_480_h":194,"created":1629098981,"display_as_bot":false,"thumb_480":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_480.png","mimetype":"image\/png","size":96591,"title":"image.png","media_display_type":"unknown","thumb_800":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_800.png","is_public":true,"id":"F02BN3NT0MP","original_h":424,"external_type":"","thumb_480_w":480,"thumb_360_w":360,"thumb_720_h":291,"thumb_720_w":720,"thumb_tiny":"AwATADDQZB1ApBjuBUlNI7igAwPQUbR6CkBwadkUAMkA2HijAwOO1LL\/AKs0dh9KB9B9FFFAhjdaVR8opG605fuigBHGVxQe1K3T8aQ9qAP\/2Q==","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02BN3NT0MP\/image.png","thumb_720":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_720.png","thumb_960_h":388,"pretty_type":"PNG","has_rich_preview":false,"timestamp":1629098981,"thumb_800_w":800,"user":"U2FRKM4TW","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_64.png","thumb_800_h":324,"permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02BN3NT0MP-021fd722f3"}],"blocks":[{"type":"rich_text","block_id":"iTGr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A question about "},{"type":"text","text":"gen-class","style":{"code":true}},{"type":"text","text":". I'm trying to use Quil and I noticed that a huge amount of time is spent on... changing color of the lines.\nThe sampling results are on the screenshot. And here's the relevant code:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(gen-class\n :name \"quil.Applet\"\n :implements [clojure.lang.IMeta]\n :extends processing.core.PApplet\n :state state\n :init quil-applet-init\n :constructors {[java.util.Map] []}\n :exposes-methods {keyTyped keyTypedParent\n                   mouseDragged mouseDraggedParent\n                   keyPressed keyPressedParent\n                   mouseExited mouseExitedParent\n                   mouseClicked mouseClickedParent\n                   mouseEntered mouseEnteredParent\n                   mouseMoved mouseMovedParent\n                   keyReleased keyReleasedParent\n                   mousePressed mousePressedParent\n                   focusGained focusGainedParent\n                   frameRate frameRateParent\n                   mouseReleased mouseReleasedParent\n                   focusLost focusLostParent\n                   sketchFullScreen sketchFullScreenParent})\n\n(defn -meta [this]\n  (.state this))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"So it seems to me that Clojure doesn't know that "},{"type":"text","text":"this","style":{"code":true}},{"type":"text","text":" above is an instance of "},{"type":"text","text":"quil.Applet","style":{"code":true}},{"type":"text","text":". Is that observation correct? How should it be fixed?"}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":14,"upload":false,"latest_reply":"1629105818.472000","text":"A question about `gen-class`. I'm trying to use Quil and I noticed that a huge amount of time is spent on... changing color of the lines.\nThe sampling results are on the screenshot. And here's the relevant code:\n```(gen-class\n :name \"quil.Applet\"\n :implements [clojure.lang.IMeta]\n :extends processing.core.PApplet\n :state state\n :init quil-applet-init\n :constructors {[java.util.Map] []}\n :exposes-methods {keyTyped keyTypedParent\n                   mouseDragged mouseDraggedParent\n                   keyPressed keyPressedParent\n                   mouseExited mouseExitedParent\n                   mouseClicked mouseClickedParent\n                   mouseEntered mouseEnteredParent\n                   mouseMoved mouseMovedParent\n                   keyReleased keyReleasedParent\n                   mousePressed mousePressedParent\n                   focusGained focusGainedParent\n                   frameRate frameRateParent\n                   mouseReleased mouseReleasedParent\n                   focusLost focusLostParent\n                   sketchFullScreen sketchFullScreenParent})\n\n(defn -meta [this]\n  (.state this))```\nSo it seems to me that Clojure doesn't know that `this` above is an instance of `quil.Applet`. Is that observation correct? How should it be fixed?"}
{"subscribed":false,"reply_users":["U0WL6FA77","U2FRKM4TW","U0AQ3HP9U"],"type":"message","display_as_bot":false,"thread_ts":"1629099114.468500","reply_users_count":3,"ts":"1629099114.468500","files":[{"thumb_1024_w":1024,"thumb_1024_h":414,"thumb_1024":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_1024.png","thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_80.png","thumb_360_h":146,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_160.png","thumb_960":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_960.png","thumb_960_w":960,"original_w":1048,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02BN3NT0MP\/download\/image.png","name":"image.png","permalink":"https:\/\/clojurians.slack.com\/files\/U2FRKM4TW\/F02BN3NT0MP\/image.png","username":"","mode":"hosted","thumb_480_h":194,"created":1629098981,"display_as_bot":false,"thumb_480":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_480.png","mimetype":"image\/png","size":96591,"title":"image.png","media_display_type":"unknown","thumb_800":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_800.png","is_public":true,"id":"F02BN3NT0MP","original_h":424,"external_type":"","thumb_480_w":480,"thumb_360_w":360,"thumb_720_h":291,"thumb_720_w":720,"thumb_tiny":"AwATADDQZB1ApBjuBUlNI7igAwPQUbR6CkBwadkUAMkA2HijAwOO1LL\/AKs0dh9KB9B9FFFAhjdaVR8opG605fuigBHGVxQe1K3T8aQ9qAP\/2Q==","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02BN3NT0MP\/image.png","thumb_720":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_720.png","thumb_960_h":388,"pretty_type":"PNG","has_rich_preview":false,"timestamp":1629098981,"thumb_800_w":800,"user":"U2FRKM4TW","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02BN3NT0MP-c1d109d485\/image_64.png","thumb_800_h":324,"permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02BN3NT0MP-021fd722f3"}],"blocks":[{"type":"rich_text","block_id":"iTGr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A question about "},{"type":"text","text":"gen-class","style":{"code":true}},{"type":"text","text":". I'm trying to use Quil and I noticed that a huge amount of time is spent on... changing color of the lines.\nThe sampling results are on the screenshot. And here's the relevant code:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(gen-class\n :name \"quil.Applet\"\n :implements [clojure.lang.IMeta]\n :extends processing.core.PApplet\n :state state\n :init quil-applet-init\n :constructors {[java.util.Map] []}\n :exposes-methods {keyTyped keyTypedParent\n                   mouseDragged mouseDraggedParent\n                   keyPressed keyPressedParent\n                   mouseExited mouseExitedParent\n                   mouseClicked mouseClickedParent\n                   mouseEntered mouseEnteredParent\n                   mouseMoved mouseMovedParent\n                   keyReleased keyReleasedParent\n                   mousePressed mousePressedParent\n                   focusGained focusGainedParent\n                   frameRate frameRateParent\n                   mouseReleased mouseReleasedParent\n                   focusLost focusLostParent\n                   sketchFullScreen sketchFullScreenParent})\n\n(defn -meta [this]\n  (.state this))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"So it seems to me that Clojure doesn't know that "},{"type":"text","text":"this","style":{"code":true}},{"type":"text","text":" above is an instance of "},{"type":"text","text":"quil.Applet","style":{"code":true}},{"type":"text","text":". Is that observation correct? How should it be fixed?"}]}]}],"is_locked":false,"user":"U2FRKM4TW","reply_count":14,"upload":false,"latest_reply":"1629105818.472000","text":"A question about `gen-class`. I'm trying to use Quil and I noticed that a huge amount of time is spent on... changing color of the lines.\nThe sampling results are on the screenshot. And here's the relevant code:\n```(gen-class\n :name \"quil.Applet\"\n :implements [clojure.lang.IMeta]\n :extends processing.core.PApplet\n :state state\n :init quil-applet-init\n :constructors {[java.util.Map] []}\n :exposes-methods {keyTyped keyTypedParent\n                   mouseDragged mouseDraggedParent\n                   keyPressed keyPressedParent\n                   mouseExited mouseExitedParent\n                   mouseClicked mouseClickedParent\n                   mouseEntered mouseEnteredParent\n                   mouseMoved mouseMovedParent\n                   keyReleased keyReleasedParent\n                   mousePressed mousePressedParent\n                   focusGained focusGainedParent\n                   frameRate frameRateParent\n                   mouseReleased mouseReleasedParent\n                   focusLost focusLostParent\n                   sketchFullScreen sketchFullScreenParent})\n\n(defn -meta [this]\n  (.state this))```\nSo it seems to me that Clojure doesn't know that `this` above is an instance of `quil.Applet`. Is that observation correct? How should it be fixed?"}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629100024.468600","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"d62e3a6e-1875-407e-8461-394138f7b14f","blocks":[{"type":"rich_text","block_id":"s8d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am not sure but did you check reflections?"}]}]}],"user":"U0WL6FA77","text":"I am not sure but did you check reflections?"}
{"attachments":[{"service_name":"clojure.wladyka.eu","title_link":"https:\/\/clojure.wladyka.eu\/posts\/how-to-improve-algorithm-performance\/#avoid-reflections","fallback":"How to improve algorithm performance?","from_url":"https:\/\/clojure.wladyka.eu\/posts\/how-to-improve-algorithm-performance\/#avoid-reflections","title":"How to improve algorithm performance?","ts":1440374400,"id":1,"service_icon":"https:\/\/clojure.wladyka.eu\/img\/clojure-icon-32.png","original_url":"https:\/\/clojure.wladyka.eu\/posts\/how-to-improve-algorithm-performance\/#avoid-reflections","text":"I describe how to improve performance based on my real experience during chess challenge. No theory, real use case."}],"type":"message","thread_ts":"1629099114.468500","ts":"1629100042.468800","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"e715e9ba-a370-4fd4-bc82-d509996962be","blocks":[{"type":"rich_text","block_id":"az1t","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/clojure.wladyka.eu\/posts\/how-to-improve-algorithm-performance\/#avoid-reflections"}]}]}],"user":"U0WL6FA77","text":"<https:\/\/clojure.wladyka.eu\/posts\/how-to-improve-algorithm-performance\/#avoid-reflections>"}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629100202.469100","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"0262ce33-156f-4af7-a811-df3f3195370e","blocks":[{"type":"rich_text","block_id":"vJmX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The pic shows that the reflection happens inside Quil itself, right in that "},{"type":"text","text":"-meta","style":{"code":true}},{"type":"text","text":" function - assuming I'm reading the sampling results correctly.\nMeaning, that Clojure doesn't assume that "},{"type":"text","text":"this","style":{"code":true}},{"type":"text","text":" is an instance of "},{"type":"text","text":"quil.Applet","style":{"code":true}},{"type":"text","text":". I would like to confirm that."}]}]}],"user":"U2FRKM4TW","text":"The pic shows that the reflection happens inside Quil itself, right in that `-meta` function - assuming I'm reading the sampling results correctly.\nMeaning, that Clojure doesn't assume that `this` is an instance of `quil.Applet`. I would like to confirm that."}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629101480.469600","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"90c22ef1-5288-41ea-8bd6-c17849b7b83e","blocks":[{"type":"rich_text","block_id":"Ctav","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Try to add "},{"type":"text","text":"^quil.Applet","style":{"code":true}},{"type":"text","text":" to make it strong type for "},{"type":"text","text":"this","style":{"code":true}}]}]}],"user":"U0WL6FA77","text":"Try to add `^quil.Applet` to make it strong type for `this`"}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629101491.469800","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"a0c0e6ac-9a4f-4222-bf33-993c931fbed9","blocks":[{"type":"rich_text","block_id":"78Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like in the link with example"}]}]}],"user":"U0WL6FA77","text":"Like in the link with example"}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629102176.470000","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"1e824f79-f606-45d7-a828-895d3f0dd3a0","blocks":[{"type":"rich_text","block_id":"d=NTy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I do not control the source code of Quil. :) I'd have to learn how to build it first - and before going down that potentially complicated path, I'd like to confirm my guess."}]}]}],"user":"U2FRKM4TW","text":"I do not control the source code of Quil. :) I'd have to learn how to build it first - and before going down that potentially complicated path, I'd like to confirm my guess."}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629102281.470200","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"e7f240a4-0167-4b4a-8cb1-2aa592fa0aa5","blocks":[{"type":"rich_text","block_id":"lxr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Changing the color of a line is IO. IO is generally the most expensive part of your code, right? I\u2019ve no idea whether it\u2019s "},{"type":"text","text":"unreasonably","style":{"italic":true}},{"type":"text","text":" expensive in this case, though, or whether you\u2019ve got other, similar IO that\u2019s less expensive."}]}]}],"user":"U0AQ3HP9U","text":"Changing the color of a line is IO. IO is generally the most expensive part of your code, right? I\u2019ve no idea whether it\u2019s _unreasonably_ expensive in this case, though, or whether you\u2019ve got other, similar IO that\u2019s less expensive."}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629102392.470400","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"3db10604-9f8d-4c49-9cef-b6cd45e16ea0","blocks":[{"type":"rich_text","block_id":"DHz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I\u2019ve been annoyed with rendering times as well while tinkering with "},{"type":"text","text":"quil","style":{"code":true}},{"type":"text","text":", but I assume it\u2019s par for the course when you\u2019re used to iterating on mostly pure functions "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U0AQ3HP9U","text":"I\u2019ve been annoyed with rendering times as well while tinkering with `quil`, but I assume it\u2019s par for the course when you\u2019re used to iterating on mostly pure functions :slightly_smiling_face:"}
{"type":"message","thread_ts":"1629099114.468500","edited":{"user":"U2FRKM4TW","ts":"1629102500.000000"},"ts":"1629102494.470600","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"5e67288a-a156-4835-9336-61c41df5710e","blocks":[{"type":"rich_text","block_id":"n4td","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How is it IO? It's just storing a constant to be used for the following rendering operations.\nYou can see from the screenshot above that the vast majority of the time is spent in the reflection, not in some IO."}]}]}],"user":"U2FRKM4TW","text":"How is it IO? It's just storing a constant to be used for the following rendering operations.\nYou can see from the screenshot above that the vast majority of the time is spent in the reflection, not in some IO."}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629103261.471000","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"01def513-6594-4f01-8202-9d04469e524e","blocks":[{"type":"rich_text","block_id":"E4o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, sorry. I didn\u2019t look into the details "},{"type":"emoji","name":"confused"},{"type":"text","text":" I thought you were talking specifically about changing the image."}]}]}],"user":"U0AQ3HP9U","text":"Oh, sorry. I didn\u2019t look into the details :confused: I thought you were talking specifically about changing the image."}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629103300.471200","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"129a99ea-de01-46b5-9ec8-fc58eb751fa8","blocks":[{"type":"rich_text","block_id":"n\/yD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pardon the noise!"}]}]}],"user":"U0AQ3HP9U","text":"Pardon the noise!"}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629104943.471600","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"2977800f-b15b-4cf1-9291-2336023283b9","blocks":[{"type":"rich_text","block_id":"LSXNs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just check reflections. It will show you reflections issues also in dependencies."}]}]}],"user":"U0WL6FA77","text":"just check reflections. It will show you reflections issues also in dependencies."}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629105605.471800","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"44d0af43-5f17-49f0-9f71-c49903f5140a","blocks":[{"type":"rich_text","block_id":"GAX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is inside "},{"type":"text","text":"gen-class","style":{"code":true}},{"type":"text","text":". Which works only during AOT. So unless "},{"type":"text","text":"*warn-on-compile*","style":{"code":true}},{"type":"text","text":" was set when Quil was built, it won't show anything."}]}]}],"user":"U2FRKM4TW","text":"It is inside `gen-class`. Which works only during AOT. So unless `*warn-on-compile*` was set when Quil was built, it won't show anything."}
{"type":"message","thread_ts":"1629099114.468500","ts":"1629105818.472000","parent_user_id":"U2FRKM4TW","team":"T03RZGPFR","client_msg_id":"eae094b9-6852-46d2-b5a8-5a2a2b4a9894","blocks":[{"type":"rich_text","block_id":"MTa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Unless, of course, I misunderstand how it all works. Either way, there are no warnings. But that "},{"type":"text","text":"Reflector","style":{"code":true}},{"type":"text","text":" call is still there."}]}]}],"user":"U2FRKM4TW","text":"Unless, of course, I misunderstand how it all works. Either way, there are no warnings. But that `Reflector` call is still there."}
{"subscribed":false,"reply_users":["UGC0NEP4Y","U3JH98J4R","U064X3EF3"],"type":"message","thread_ts":"1629045160.456600","reply_users_count":3,"ts":"1629045160.456600","team":"T03RZGPFR","client_msg_id":"26b867b5-3250-4aa7-9461-65a82a6903eb","blocks":[{"type":"rich_text","block_id":"Ek3ag","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It\u2019s like defining an alias for a namespace but without importing it."}]}]}],"is_locked":false,"user":"UGC0NEP4Y","reply_count":7,"latest_reply":"1629047142.457900","text":"It\u2019s like defining an alias for a namespace but without importing it."}
{"subscribed":false,"reply_users":["UGC0NEP4Y","U3JH98J4R","U064X3EF3"],"type":"message","thread_ts":"1629045160.456600","reply_users_count":3,"ts":"1629045160.456600","team":"T03RZGPFR","client_msg_id":"26b867b5-3250-4aa7-9461-65a82a6903eb","blocks":[{"type":"rich_text","block_id":"Ek3ag","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It\u2019s like defining an alias for a namespace but without importing it."}]}]}],"is_locked":false,"user":"UGC0NEP4Y","reply_count":7,"latest_reply":"1629047142.457900","text":"It\u2019s like defining an alias for a namespace but without importing it."}
{"type":"message","thread_ts":"1629045160.456600","ts":"1629045281.456700","parent_user_id":"UGC0NEP4Y","team":"T03RZGPFR","client_msg_id":"ce53bd5b-339b-4f27-b316-a5efa34ab5b7","blocks":[{"type":"rich_text","block_id":"6tcYp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I will try the alias function first."}]}]}],"user":"UGC0NEP4Y","text":"I will try the alias function first."}
{"type":"message","thread_ts":"1629045160.456600","ts":"1629045723.456900","parent_user_id":"UGC0NEP4Y","team":"T03RZGPFR","client_msg_id":"4ac6cfb1-12c9-4dd1-9d04-aa6b400a8b84","blocks":[{"type":"rich_text","block_id":"9FdM4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know if something like that exists...BUT"}]}]}],"user":"U3JH98J4R","text":"I don't know if something like that exists...BUT"}
{"type":"message","thread_ts":"1629045160.456600","ts":"1629045976.457100","parent_user_id":"UGC0NEP4Y","team":"T03RZGPFR","client_msg_id":"7657c216-de82-4459-98c7-365acb63c340","blocks":[{"type":"rich_text","block_id":"M+wKU","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn to-namespaced [ns un-namespaced-thing]\n  (if (symbol? un-namespaced-thing)\n    (symbol ns (name un-namespaced-thing))\n    (keyword ns (name un-namespaced-thing)))))\n\n(def foo (partial to-namespaced \"some.path.to.bar.foo\"))\n\n(foo :abc) ; => :some.path.to.bar.foo\/abc"}]}]}],"user":"U3JH98J4R","text":"```(defn to-namespaced [ns un-namespaced-thing]\n  (if (symbol? un-namespaced-thing)\n    (symbol ns (name un-namespaced-thing))\n    (keyword ns (name un-namespaced-thing)))))\n\n(def foo (partial to-namespaced \"some.path.to.bar.foo\"))\n\n(foo :abc) ; =&gt; :some.path.to.bar.foo\/abc```"}
{"type":"message","thread_ts":"1629045160.456600","ts":"1629046011.457300","parent_user_id":"UGC0NEP4Y","team":"T03RZGPFR","client_msg_id":"28bd42c5-aac5-495c-8868-b0f91615f45b","blocks":[{"type":"rich_text","block_id":"iEm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and then convert to a macro to pay no runtime cost beyond startup"}]}]}],"user":"U3JH98J4R","text":"and then convert to a macro to pay no runtime cost beyond startup"}
{"type":"message","thread_ts":"1629045160.456600","ts":"1629047043.457500","parent_user_id":"UGC0NEP4Y","team":"T03RZGPFR","client_msg_id":"b0f1abaa-4210-4628-ad78-275973f60210","blocks":[{"type":"rich_text","block_id":"Ld3U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it really depends a lot on what you're actually trying to do"}]}]}],"user":"U064X3EF3","text":"it really depends a lot on what you're actually trying to do"}
{"type":"message","thread_ts":"1629045160.456600","ts":"1629047107.457700","parent_user_id":"UGC0NEP4Y","team":"T03RZGPFR","client_msg_id":"15c48b95-df28-46a2-bde3-b742366431b9","blocks":[{"type":"rich_text","block_id":"=9AS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you are getting hung up on aliasing namespaced keywords for namespaces that don't exist, the most common approach right now is to use "},{"type":"text","text":"create-ns","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"alias","style":{"code":true}},{"type":"text","text":" to construct a non-loaded runtime namespace"}]}]}],"user":"U064X3EF3","text":"if you are getting hung up on aliasing namespaced keywords for namespaces that don't exist, the most common approach right now is to use `create-ns` and `alias` to construct a non-loaded runtime namespace"}
{"type":"message","thread_ts":"1629045160.456600","ts":"1629047142.457900","parent_user_id":"UGC0NEP4Y","team":"T03RZGPFR","client_msg_id":"5e8dd5c7-4645-4267-9ed2-4c519cbb610d","blocks":[{"type":"rich_text","block_id":"ihvE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is actually exactly what I'm working on for Clojure 1.11 right now so there will be another option (at some point)"}]}]}],"user":"U064X3EF3","reactions":[{"name":"tada","users":["U11SSJP2A"],"count":1}],"text":"this is actually exactly what I'm working on for Clojure 1.11 right now so there will be another option (at some point)"}
{"client_msg_id":"efedaab5-49f0-4e71-8872-5a2a198e9333","type":"message","text":"in what context are you referring to it?","user":"U064X3EF3","ts":"1629044906.456200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"QMW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in what context are you referring to it?"}]}]}]}
{"client_msg_id":"f4a3b850-01f2-4e32-adcf-709d50bd8823","type":"message","text":"`'foo` ?","user":"U064X3EF3","ts":"1629044891.455900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"fbx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"'foo","style":{"code":true}},{"type":"text","text":" ?"}]}]}]}
{"client_msg_id":"67a95ac0-f39b-49f8-b49d-4d6aaea7ed49","type":"message","text":"Hi. How can I refer to an ns without loading it","user":"UGC0NEP4Y","ts":"1629043819.455700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"bs0u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi. How can I refer to an ns without loading it"}]}]}]}
{"subscribed":false,"reply_users":["U2FRKM4TW","U09LZR36F","U3JH98J4R","U04V15CAJ","U050SC7SV","U051N6TTC"],"type":"message","thread_ts":"1629032677.440700","reply_users_count":6,"edited":{"user":"U09LZR36F","ts":"1629032845.000000"},"ts":"1629032677.440700","team":"T03RZGPFR","client_msg_id":"e7efff20-04fe-4ce1-827d-fd55dc2dceae","blocks":[{"type":"rich_text","block_id":"lzvjl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone have recommendations for testing with sets but producing an order?  e.g. "},{"type":"text","text":"(string\/join \",\" #{\"a\" \"b\"})","style":{"code":true}},{"type":"text","text":" and you want to test that the result is either \"a,b\" or \"b,a\"? (but obviously the combinations get bigger if your set is 3, 4, etc.)"}]}]}],"is_locked":false,"user":"U09LZR36F","reply_count":28,"latest_reply":"1629070705.464300","text":"Does anyone have recommendations for testing with sets but producing an order?  e.g. `(string\/join \",\" #{\"a\" \"b\"})` and you want to test that the result is either \"a,b\" or \"b,a\"? (but obviously the combinations get bigger if your set is 3, 4, etc.)"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U09LZR36F","U3JH98J4R","U04V15CAJ","U050SC7SV","U051N6TTC"],"type":"message","thread_ts":"1629032677.440700","reply_users_count":6,"edited":{"user":"U09LZR36F","ts":"1629032845.000000"},"ts":"1629032677.440700","team":"T03RZGPFR","client_msg_id":"e7efff20-04fe-4ce1-827d-fd55dc2dceae","blocks":[{"type":"rich_text","block_id":"lzvjl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone have recommendations for testing with sets but producing an order?  e.g. "},{"type":"text","text":"(string\/join \",\" #{\"a\" \"b\"})","style":{"code":true}},{"type":"text","text":" and you want to test that the result is either \"a,b\" or \"b,a\"? (but obviously the combinations get bigger if your set is 3, 4, etc.)"}]}]}],"is_locked":false,"user":"U09LZR36F","reply_count":28,"latest_reply":"1629070705.464300","text":"Does anyone have recommendations for testing with sets but producing an order?  e.g. `(string\/join \",\" #{\"a\" \"b\"})` and you want to test that the result is either \"a,b\" or \"b,a\"? (but obviously the combinations get bigger if your set is 3, 4, etc.)"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629032992.441000","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"3a33ee7e-4dc3-45a5-a821-4fbc9af52056","blocks":[{"type":"rich_text","block_id":"2INK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, for a set of size "},{"type":"text","text":"N","style":{"code":true}},{"type":"text","text":" it would test for all "},{"type":"text","text":"N!","style":{"code":true}},{"type":"text","text":" permutations?\nCan you give an example for a larger "},{"type":"text","text":"N","style":{"code":true}},{"type":"text","text":" where you define the expected results? I imagine it won't be hard-coding values like "},{"type":"text","text":"\"a,b\"","style":{"code":true}},{"type":"text","text":" but instead would be something generative. And if so, it might either become an obvious case of testing "},{"type":"text","text":"1 = 1","style":{"code":true}},{"type":"text","text":" or provide some additional useful information."}]}]}],"user":"U2FRKM4TW","text":"So, for a set of size `N` it would test for all `N!` permutations?\nCan you give an example for a larger `N` where you define the expected results? I imagine it won't be hard-coding values like `\"a,b\"` but instead would be something generative. And if so, it might either become an obvious case of testing `1 = 1` or provide some additional useful information."}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629033215.441200","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"dd4c545b-d6cf-4fef-beed-6011b935d716","blocks":[{"type":"rich_text","block_id":"Uvw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not interested in generative testing here.  I mean only that for:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(is (= \"a,b\" (string\/join \",\" #{\"a\" \"b\"})))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIs an invalid test.  It should instead be:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(is (#{\"a,b\" \"b,a\"} (string\/join ...)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nBut for "},{"type":"text","text":"#{\"a\", \"b\", \"c\"}","style":{"code":true}},{"type":"text","text":", etc. it gets annoying."}]}]}],"user":"U09LZR36F","text":"I'm not interested in generative testing here.  I mean only that for:\n\n```(is (= \"a,b\" (string\/join \",\" #{\"a\" \"b\"})))```\nIs an invalid test.  It should instead be:\n\n```(is (#{\"a,b\" \"b,a\"} (string\/join ...)))```\nBut for `#{\"a\", \"b\", \"c\"}`, etc. it gets annoying."}
{"type":"message","thread_ts":"1629032677.440700","edited":{"user":"U2FRKM4TW","ts":"1629033464.000000"},"ts":"1629033457.441400","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"d8c3dab7-9253-4165-88df-ce7ebea9b6a3","blocks":[{"type":"rich_text","block_id":"Azq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"By \"generative\" I meant that you would write some code to generate "},{"type":"text","text":"\"a,b\"","style":{"code":true}},{"type":"text","text":" and not that you would generate random data."}]}]}],"user":"U2FRKM4TW","text":"By \"generative\" I meant that you would write some code to generate `\"a,b\"` and not that you would generate random data."}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629033523.441700","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"b2c74c3c-6af3-49ea-857a-6c1dd8bcbc88","blocks":[{"type":"rich_text","block_id":"u6G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the case of "},{"type":"text","text":"string\/join","style":{"code":true}},{"type":"text","text":" it 100% feels like testing "},{"type":"text","text":"1 = 1","style":{"code":true}},{"type":"text","text":" , because I imagine such "},{"type":"text","text":"\"a,b\"","style":{"code":true}},{"type":"text","text":" value generation would use "},{"type":"text","text":"string\/join","style":{"code":true}},{"type":"text","text":" itself."}]}]}],"user":"U2FRKM4TW","text":"In the case of `string\/join` it 100% feels like testing `1 = 1` , because I imagine such `\"a,b\"` value generation would use `string\/join` itself."}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629033764.441900","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"1e223395-6a51-4f2a-aee9-0a8eeb33c050","blocks":[{"type":"rich_text","block_id":"yfcxh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, I see.  I'm quite tired, apologies.\n\nI suppose I could implement a version of the tested function which could combine with combinatorics to generate ordered results.  That might not be a useful function for testing though."}]}]}],"user":"U09LZR36F","text":"Ah, I see.  I'm quite tired, apologies.\n\nI suppose I could implement a version of the tested function which could combine with combinatorics to generate ordered results.  That might not be a useful function for testing though."}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629033803.442100","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"b7e31514-ba20-4cf0-a61e-09524e957919","blocks":[{"type":"rich_text","block_id":"mUvwF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe I could use a sorted-set for testing?  That makes sense."}]}]}],"user":"U09LZR36F","text":"Maybe I could use a sorted-set for testing?  That makes sense."}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629033844.442300","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"700ada42-36ad-4aa4-adf8-e6a1475636ad","blocks":[{"type":"rich_text","block_id":"d7o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hum, except my values aren't comparable "},{"type":"text","text":"#{:none \"ws:\"}","style":{"code":true}},{"type":"text","text":" "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U09LZR36F","text":"hum, except my values aren't comparable `#{:none \"ws:\"}` :slightly_smiling_face:"}
{"attachments":[{"color":"24292f","fallback":"clj-commons\/ordered","fields":[{"title":"Stars","value":"200","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"clj-commons\/ordered","id":1,"app_unfurl_url":"https:\/\/github.com\/clj-commons\/ordered","text":"Ordered sets and maps, implemented in pure clojure","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1629032677.440700","ts":"1629033891.442500","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"f05cda40-da55-4f8b-87bd-b2d40373fe7e","blocks":[{"type":"rich_text","block_id":"A=0aY","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/github.com\/clj-commons\/ordered"},{"type":"text","text":" is my only other idea."}]}]}],"user":"U09LZR36F","text":"<https:\/\/github.com\/clj-commons\/ordered> is my only other idea."}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629034125.442800","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"957c98f2-b5c7-4a89-a683-963ccf32802c","blocks":[{"type":"rich_text","block_id":"ADL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know a thing about what code you currently have, so it's just a random guess, but perhaps that functionality that you want to test could be split into two - one that deals with something ordered, like vectors and lists, and the other that processes sets, turns them into something ordered that's intended to be fed into that first part? That way, you could test these two things separately - it should make testing much simpler."}]}]}],"user":"U2FRKM4TW","text":"I don't know a thing about what code you currently have, so it's just a random guess, but perhaps that functionality that you want to test could be split into two - one that deals with something ordered, like vectors and lists, and the other that processes sets, turns them into something ordered that's intended to be fed into that first part? That way, you could test these two things separately - it should make testing much simpler."}
{"type":"message","thread_ts":"1629032677.440700","edited":{"user":"U09LZR36F","ts":"1629034355.000000"},"ts":"1629034328.443000","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"fda48073-8987-40b0-86f0-dd0c87772d7a","blocks":[{"type":"rich_text","block_id":"dbz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The idea was to have a consistent data-structure for performing operations on.  I'm representing CSPs as data.  One of the operations is merging, which requires sets.  High performance is a goal though, so switching between data types isn't something I'm keen on."}]}]}],"user":"U09LZR36F","text":"The idea was to have a consistent data-structure for performing operations on.  I'm representing CSPs as data.  One of the operations is merging, which requires sets.  High performance is a goal though, so switching between data types isn't something I'm keen on."}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629034608.443400","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"436bc2fd-4a6a-4563-a380-de17b16e6291","blocks":[{"type":"rich_text","block_id":"=Qq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just sort the set you get back"}]}]}],"user":"U3JH98J4R","text":"just sort the set you get back"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629034629.443600","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"162e810c-1325-48c6-b81e-f3eb2407c7a6","blocks":[{"type":"rich_text","block_id":"DoEl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1st assert it is a set"}]}]}],"user":"U3JH98J4R","text":"1st assert it is a set"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629034654.443800","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"8d8bf467-4de8-42b7-a6de-2b1c06fa33b7","blocks":[{"type":"rich_text","block_id":"PsOn8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then assert the contents are correct via ="}]}]}],"user":"U3JH98J4R","text":"then assert the contents are correct via ="}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629034703.444000","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"40fbe3ad-2b63-47e9-9282-65f18127df12","blocks":[{"type":"rich_text","block_id":"JkI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then sort before passing it to a function OR reverse the rsult of that function back into a set (like splitting on commas in a string\/join("}]}]}],"user":"U3JH98J4R","text":"then sort before passing it to a function OR reverse the rsult of that function back into a set (like splitting on commas in a string\/join("}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629034889.444200","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"ba8246af-83a1-43c6-9aa4-38e147eb24e9","blocks":[{"type":"rich_text","block_id":"Cay1H","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U3JH98J4R"},{"type":"text","text":" it's set->string not set->set."}]}]}],"user":"U09LZR36F","text":"<@U3JH98J4R> it's set-&gt;string not set-&gt;set."}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629035298.444600","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"274751df-e790-450f-bff2-d8ebc0c034b0","blocks":[{"type":"rich_text","block_id":"Kbe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"parse the string, then sort?"}]}]}],"user":"U04V15CAJ","text":"parse the string, then sort?"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629036351.446900","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"6d6b673b-e38a-4249-8f37-e7dc9961cffe","blocks":[{"type":"rich_text","block_id":"9o2Gj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or use (into (sorted-set) s) on input"}]}]}],"user":"U050SC7SV","text":"Or use (into (sorted-set) s) on input"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629036396.447100","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"6673c06f-9cf7-48fd-bb15-8dffdf9cfe11","blocks":[{"type":"rich_text","block_id":"Umc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh... just read about comparable issue with your values"}]}]}],"user":"U050SC7SV","text":"Oh... just read about comparable issue with your values"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629036875.448000","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"60a5d0bc-75a1-4f02-95d3-a3f87e52db50","blocks":[{"type":"rich_text","block_id":"YuG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OR"}]}]}],"user":"U3JH98J4R","text":"OR"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629036897.448200","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"2874e79d-6be8-41ea-b0de-2ebb6d42e390","blocks":[{"type":"rich_text","block_id":"4qgS","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(sorted-set-by #(compare (str %1) (str %2)))"}]}]}],"user":"U3JH98J4R","text":"```(sorted-set-by #(compare (str %1) (str %2)))```"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629037030.448400","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"0ddf859f-d7a4-4fb3-a2e5-b38114d56b8b","blocks":[{"type":"rich_text","block_id":"h\/Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would try to improve that comparator though:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"user=> (sorted-set-by #(compare (str %1) (str %2)) 1 \"1\")\n#{1}"}]}]}],"user":"U2FRKM4TW","text":"I would try to improve that comparator though:\n```user=&gt; (sorted-set-by #(compare (str %1) (str %2)) 1 \"1\")\n#{1}```"}
{"type":"message","thread_ts":"1629032677.440700","edited":{"user":"U3JH98J4R","ts":"1629037243.000000"},"ts":"1629037186.448800","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"a511c9fa-2fd5-4c50-8595-db1784a97e21","blocks":[{"type":"rich_text","block_id":"bWm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"depends on their input data - but there should be "},{"type":"text","text":"something","style":{"italic":true}},{"type":"text","text":" that can make it work"}]}]}],"user":"U3JH98J4R","text":"depends on their input data - but there should be _something_ that can make it work"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629037258.449300","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"af8477e0-dd3a-4dd6-8236-fcad0678f1f4","blocks":[{"type":"rich_text","block_id":"gJ5m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Data which we know nothing about. ;) My intention was to only point out that the comparator is not to be used as is blindly."}]}]}],"user":"U2FRKM4TW","text":"Data which we know nothing about. ;) My intention was to only point out that the comparator is not to be used as is blindly."}
{"type":"message","thread_ts":"1629032677.440700","edited":{"user":"U3JH98J4R","ts":"1629037727.000000"},"ts":"1629037703.449500","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"3e7cd5d5-05fb-463a-85ba-cc5570d10dd1","blocks":[{"type":"rich_text","block_id":"hUk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well their example was "},{"type":"text","text":"#{:none \"ws:\"}","style":{"code":true}},{"type":"text","text":" - thats what i was going off of - still technically nondeterministic for strings starting with :, but "},{"type":"emoji","name":"shrug"}]}]}],"user":"U3JH98J4R","text":"well their example was `#{:none \"ws:\"}` - thats what i was going off of - still technically nondeterministic for strings starting with :, but :shrug:"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629038462.450600","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"9bb4adb7-d115-4d8d-872f-02b6c135a282","blocks":[{"type":"rich_text","block_id":"nSqP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the past I\u2019ve liked to compare by type, then by value:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(def cmp\n  (reify java.util.Comparator\n    (compare [_ a b]\n      (if (= (class a) (class b))\n        (compare a b)\n        (compare (str (class a)) (str (class b)))))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Then I use "},{"type":"text","text":"sort-by","style":{"code":true}},{"type":"text","text":" on the set, though a "},{"type":"text","text":"sorted-set-by","style":{"code":true}},{"type":"text","text":" can also be used:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(is (= \"a,b\" (string\/join \",\" (sort-by identity cmp #{\"a\" \"b\"}))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(it\u2019s a little annoying to start with "},{"type":"text","text":"(sort-by identity...)","style":{"code":true}},{"type":"text","text":", but than can be turned into a function easily)"}]}]}],"user":"U051N6TTC","text":"In the past I\u2019ve liked to compare by type, then by value:\n```(def cmp\n  (reify java.util.Comparator\n    (compare [_ a b]\n      (if (= (class a) (class b))\n        (compare a b)\n        (compare (str (class a)) (str (class b)))))))```\nThen I use `sort-by` on the set, though a `sorted-set-by` can also be used:\n```(is (= \"a,b\" (string\/join \",\" (sort-by identity cmp #{\"a\" \"b\"}))))```\n(it\u2019s a little annoying to start with `(sort-by identity...)`, but than can be turned into a function easily)"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629038593.450800","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"59bed577-b90d-4c9f-a01a-d02d12f67217","blocks":[{"type":"rich_text","block_id":"jyx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Asami actually needs to sort like this, since it has a tree structure (on disk) that can contain various types, and so I have to sort by type first. (supported types have a bit-pattern, and so I sort on that, and not by type names)"}]}]}],"user":"U051N6TTC","text":"Asami actually needs to sort like this, since it has a tree structure (on disk) that can contain various types, and so I have to sort by type first. (supported types have a bit-pattern, and so I sort on that, and not by type names)"}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629059075.463300","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"615abfbc-26cf-4986-999e-8ae137745d3c","blocks":[{"type":"rich_text","block_id":"nM84O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"heh, I like the idea of a custom comparator."}]}]}],"user":"U09LZR36F","text":"heh, I like the idea of a custom comparator."}
{"type":"message","thread_ts":"1629032677.440700","ts":"1629070705.464300","parent_user_id":"U09LZR36F","team":"T03RZGPFR","client_msg_id":"9e0d08a6-69c9-4896-aa99-d22f14cc89e9","blocks":[{"type":"rich_text","block_id":"rGjxx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They\u2019re a little verbose (as shown), but flexible, and you only need to define it the once."}]}]}],"user":"U051N6TTC","text":"They\u2019re a little verbose (as shown), but flexible, and you only need to define it the once."}
{"subscribed":false,"reply_users":["UGC0NEP4Y","U04V15CAJ"],"type":"message","thread_ts":"1628942607.431100","reply_users_count":2,"ts":"1628942607.431100","team":"T03RZGPFR","client_msg_id":"1D9A4176-7DB2-44E4-B67A-BE645A7C7342","blocks":[{"type":"rich_text","block_id":"m3FsE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"After read they are the identical keyword in the runtime, so it\u2019s really more about managing what you write in your code. :: is of course shorter but can lead to surprises if you copy paste code or change the name of the namespace containing it"}]}]}],"is_locked":false,"user":"U064X3EF3","reply_count":2,"latest_reply":"1629035455.444800","text":"After read they are the identical keyword in the runtime, so it\u2019s really more about managing what you write in your code. :: is of course shorter but can lead to surprises if you copy paste code or change the name of the namespace containing it"}
{"subscribed":false,"reply_users":["UGC0NEP4Y","U04V15CAJ"],"type":"message","thread_ts":"1628942607.431100","reply_users_count":2,"ts":"1628942607.431100","team":"T03RZGPFR","client_msg_id":"1D9A4176-7DB2-44E4-B67A-BE645A7C7342","blocks":[{"type":"rich_text","block_id":"m3FsE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"After read they are the identical keyword in the runtime, so it\u2019s really more about managing what you write in your code. :: is of course shorter but can lead to surprises if you copy paste code or change the name of the namespace containing it"}]}]}],"is_locked":false,"user":"U064X3EF3","reply_count":2,"latest_reply":"1629035455.444800","text":"After read they are the identical keyword in the runtime, so it\u2019s really more about managing what you write in your code. :: is of course shorter but can lead to surprises if you copy paste code or change the name of the namespace containing it"}
{"type":"message","thread_ts":"1628942607.431100","ts":"1628951052.433600","parent_user_id":"U064X3EF3","team":"T03RZGPFR","client_msg_id":"a1e17342-6716-4d09-b585-a3f7d1a652b8","blocks":[{"type":"rich_text","block_id":"vrnD5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. I just learned the trick of ::ns\/keyword where ns is some imported ns name.  Given this, I will go with the ::keyword pattern, and access it in other ns with the ::ns\/keyword way."}]}]}],"user":"UGC0NEP4Y","text":"Thanks. I just learned the trick of ::ns\/keyword where ns is some imported ns name.  Given this, I will go with the ::keyword pattern, and access it in other ns with the ::ns\/keyword way."}
{"type":"message","thread_ts":"1628942607.431100","ts":"1629035455.444800","parent_user_id":"U064X3EF3","team":"T03RZGPFR","client_msg_id":"a262d71f-99e2-471f-948d-c89896214487","blocks":[{"type":"rich_text","block_id":"uN3xA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've made a script here to \"normalize\" those double-colon keywords:\n"},{"type":"link","url":"https:\/\/github.com\/babashka\/babashka\/blob\/master\/examples\/README.md#normalize-keywordsclj"}]}]}],"user":"U04V15CAJ","text":"I've made a script here to \"normalize\" those double-colon keywords:\n<https:\/\/github.com\/babashka\/babashka\/blob\/master\/examples\/README.md#normalize-keywordsclj>"}
{"client_msg_id":"447d804f-3e75-4aa7-be75-96b336926814","type":"message","text":"Is there any practical difference between using an implicit namespaced  keyword such as ::bar and explicitly stating out the namespace such as :foo\/bar? I am mostly interested in the refactoring perspective.","user":"UGC0NEP4Y","ts":"1628941615.427900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"cecL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any practical difference between using an implicit namespaced  keyword such as ::bar and explicitly stating out the namespace such as :foo\/bar? I am mostly interested in the refactoring perspective."}]}]}]}
{"subscribed":false,"reply_users":["U6JS7B99S","U010VP3UY9X"],"type":"message","thread_ts":"1628937835.419600","reply_users_count":2,"edited":{"user":"U010VP3UY9X","ts":"1628937986.000000"},"ts":"1628937835.419600","team":"T03RZGPFR","client_msg_id":"fc4b61b5-54a0-4e04-a69d-8ceed09a76f6","blocks":[{"type":"rich_text","block_id":"+feOp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've been trying to read the "},{"type":"link","url":"https:\/\/clojure.org\/reference\/transducers","text":"clojure page about transducers"},{"type":"text","text":", and finally something dawned on me that I've been reading wrong.   It first defines a "},{"type":"text","text":"reducing function","style":{"italic":true}},{"type":"text","text":" and thereafter defines a "},{"type":"text","text":"transducer","style":{"italic":true}},{"type":"text","text":" in terms of "},{"type":"text","text":"reducing function","style":{"italic":true}},{"type":"text","text":".   It says a reducing function is a function like you pass to "},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" and it gives a signature whatever, input -> whatever.   But that's wrong I definitely do not give "},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" a pair whose first component is a "},{"type":"text","text":"whatever","style":{"code":true}},{"type":"text","text":" and and whose second component is an "},{"type":"text","text":"input -> whatever","style":{"code":true}},{"type":"text","text":".    Finally I realized that what it means to say is "},{"type":"text","text":"(whatever,input)->whatever","style":{"code":true}},{"type":"text","text":" not "},{"type":"text","text":"whatever,(input->whatever)","style":{"code":true}},{"type":"text","text":".     Am I the only person who was confused because of the lack of parentheses?"}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":3,"latest_reply":"1629104038.471400","text":"I've been trying to read the <https:\/\/clojure.org\/reference\/transducers|clojure page about transducers>, and finally something dawned on me that I've been reading wrong.   It first defines a _reducing function_ and thereafter defines a _transducer_ in terms of _reducing function_.   It says a reducing function is a function like you pass to `reduce` and it gives a signature whatever, input -&gt; whatever.   But that's wrong I definitely do not give `reduce` a pair whose first component is a `whatever` and and whose second component is an `input -&gt; whatever`.    Finally I realized that what it means to say is `(whatever,input)-&gt;whatever` not `whatever,(input-&gt;whatever)`.     Am I the only person who was confused because of the lack of parentheses?"}
{"subscribed":false,"reply_users":["U6JS7B99S","U010VP3UY9X"],"type":"message","thread_ts":"1628937835.419600","reply_users_count":2,"edited":{"user":"U010VP3UY9X","ts":"1628937986.000000"},"ts":"1628937835.419600","team":"T03RZGPFR","client_msg_id":"fc4b61b5-54a0-4e04-a69d-8ceed09a76f6","blocks":[{"type":"rich_text","block_id":"+feOp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've been trying to read the "},{"type":"link","url":"https:\/\/clojure.org\/reference\/transducers","text":"clojure page about transducers"},{"type":"text","text":", and finally something dawned on me that I've been reading wrong.   It first defines a "},{"type":"text","text":"reducing function","style":{"italic":true}},{"type":"text","text":" and thereafter defines a "},{"type":"text","text":"transducer","style":{"italic":true}},{"type":"text","text":" in terms of "},{"type":"text","text":"reducing function","style":{"italic":true}},{"type":"text","text":".   It says a reducing function is a function like you pass to "},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" and it gives a signature whatever, input -> whatever.   But that's wrong I definitely do not give "},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" a pair whose first component is a "},{"type":"text","text":"whatever","style":{"code":true}},{"type":"text","text":" and and whose second component is an "},{"type":"text","text":"input -> whatever","style":{"code":true}},{"type":"text","text":".    Finally I realized that what it means to say is "},{"type":"text","text":"(whatever,input)->whatever","style":{"code":true}},{"type":"text","text":" not "},{"type":"text","text":"whatever,(input->whatever)","style":{"code":true}},{"type":"text","text":".     Am I the only person who was confused because of the lack of parentheses?"}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":3,"latest_reply":"1629104038.471400","text":"I've been trying to read the <https:\/\/clojure.org\/reference\/transducers|clojure page about transducers>, and finally something dawned on me that I've been reading wrong.   It first defines a _reducing function_ and thereafter defines a _transducer_ in terms of _reducing function_.   It says a reducing function is a function like you pass to `reduce` and it gives a signature whatever, input -&gt; whatever.   But that's wrong I definitely do not give `reduce` a pair whose first component is a `whatever` and and whose second component is an `input -&gt; whatever`.    Finally I realized that what it means to say is `(whatever,input)-&gt;whatever` not `whatever,(input-&gt;whatever)`.     Am I the only person who was confused because of the lack of parentheses?"}
{"type":"message","thread_ts":"1628937835.419600","ts":"1628938836.426000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"eb48c414-05df-4e5f-9ab9-88f95d0a45e2","blocks":[{"type":"rich_text","block_id":"6iFvO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I just chose to read it like "},{"type":"text","text":"(whatever, input)->whatever","style":{"code":true}},{"type":"text","text":" because it says that they talk about a reducing function - and thats how I know reducing functions "},{"type":"emoji","name":"smile"}]}]}],"user":"U6JS7B99S","text":"I guess I just chose to read it like `(whatever, input)-&gt;whatever` because it says that they talk about a reducing function - and thats how I know reducing functions :smile:"}
{"type":"message","thread_ts":"1628937835.419600","edited":{"user":"U010VP3UY9X","ts":"1629101334.000000"},"ts":"1629101312.469300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"48a7441b-a8f1-473b-892f-277ece5e0182","blocks":[{"type":"rich_text","block_id":"2BBh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is omission of the parens common notation in modern literature?"}]}]}],"user":"U010VP3UY9X","text":"is omission of the parens common notation in modern literature?"}
{"type":"message","thread_ts":"1628937835.419600","ts":"1629104038.471400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1d8dcf51-650c-4db7-9f34-d5dcb958a9b8","blocks":[{"type":"rich_text","block_id":"ZbjJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Im not very familiar with this kind of notation but I think ive seen it before without parens. I too think its confusing though."}]}]}],"user":"U6JS7B99S","text":"Im not very familiar with this kind of notation but I think ive seen it before without parens. I too think its confusing though."}
{"subscribed":false,"reply_users":["U05224H0W","U04V5V0V4","U4ZDX466T","U06QSF3BK"],"type":"message","thread_ts":"1628937810.419200","reply_users_count":4,"ts":"1628937810.419200","team":"T03RZGPFR","client_msg_id":"2A069F50-B13A-484A-9BFD-26E6710CB121","blocks":[{"type":"rich_text","block_id":"6D0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Clojure vars "}]}]}],"is_locked":false,"user":"U04V5V0V4","reply_count":57,"latest_reply":"1629192003.013500","text":"Clojure vars "}
{"subscribed":false,"reply_users":["U05224H0W","U04V5V0V4","U4ZDX466T","U06QSF3BK"],"type":"message","thread_ts":"1628937810.419200","reply_users_count":4,"ts":"1628937810.419200","team":"T03RZGPFR","client_msg_id":"2A069F50-B13A-484A-9BFD-26E6710CB121","blocks":[{"type":"rich_text","block_id":"6D0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Clojure vars "}]}]}],"is_locked":false,"user":"U04V5V0V4","reply_count":57,"latest_reply":"1629192003.013500","text":"Clojure vars "}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628937871.419700","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"b26f8c8b-52d1-400d-92ff-654dcb9329ce","blocks":[{"type":"rich_text","block_id":"RTN8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you mean by cloning then? the JVM doesn't exit when you intterupt the thread so all state is preserved? no need to clone anything?"}]}]}],"user":"U05224H0W","text":"what do you mean by cloning then? the JVM doesn't exit when you intterupt the thread so all state is preserved? no need to clone anything?"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628937914.419900","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"9da4032c-c1eb-4dcd-bd5e-ea0d982cd234","blocks":[{"type":"rich_text","block_id":"yxIb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in theory the initial prepl just needs to sound out a message \"hey I'm starting to eval, this is my thread id\""}]}]}],"user":"U05224H0W","text":"in theory the initial prepl just needs to sound out a message \"hey I'm starting to eval, this is my thread id\""}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628937936.420100","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"8e67e1a8-9874-479e-8f17-8c7d50c163e5","blocks":[{"type":"rich_text","block_id":"ND9PF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and over the other connection you can then later send an eval to kill that thread if you want"}]}]}],"user":"U05224H0W","text":"and over the other connection you can then later send an eval to kill that thread if you want"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628937981.420300","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"994d3cc8-f4ea-4530-91b4-6c484c1456a7","blocks":[{"type":"rich_text","block_id":"kI8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting .. not sure if I can get the thread ID from io-prepl directly"}]}]}],"user":"U04V5V0V4","text":"interesting .. not sure if I can get the thread ID from io-prepl directly"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628937983.420500","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"c02825da-948a-4d26-af2c-13fb375be407","blocks":[{"type":"rich_text","block_id":"Bf48P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"depending on how the kill actually happened the first connection might just loop again and let you eval again"}]}]}],"user":"U05224H0W","text":"depending on how the kill actually happened the first connection might just loop again and let you eval again"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938011.420800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"d5cfaf9d-a55a-4253-b50d-bcb910cbf5ed","blocks":[{"type":"rich_text","block_id":"mPTf0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW, that's pretty much what I do in an editor plugin I'm making, and it works well. I just call "},{"type":"text","text":".interrupt","style":{"code":true}},{"type":"text","text":" on the eval thread, so it won't help you if you do things like eval "},{"type":"text","text":"(range)","style":{"code":true}},{"type":"text","text":", but for me, at least, it's enough to be able to cancel a deref etc."}]}]}],"user":"U4ZDX466T","text":"FWIW, that's pretty much what I do in an editor plugin I'm making, and it works well. I just call `.interrupt` on the eval thread, so it won't help you if you do things like eval `(range)`, but for me, at least, it's enough to be able to cancel a deref etc."}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938012.421000","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"c0467d88-ec98-4369-8b32-acedb76654bf","blocks":[{"type":"rich_text","block_id":"kOMo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"more likely though the kill makes the thread unusable so you might as well kill that socket"}]}]}],"user":"U05224H0W","text":"more likely though the kill makes the thread unusable so you might as well kill that socket"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938126.421200","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"551b492e-f799-4287-8bcb-2368f12e7c1d","blocks":[{"type":"rich_text","block_id":"Qgnp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah but then how to restore state?"}]}]}],"user":"U04V5V0V4","text":"yeah but then how to restore state?"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938153.421400","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"369c1286-4fd1-4f85-a3ff-ae756d0698bf","blocks":[{"type":"rich_text","block_id":"RFNJ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what state? "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":" clojure vars are global, they don't care about threads. they'll continue to exist as long as the JVM lives"}]}]}],"user":"U05224H0W","text":"what state? :stuck_out_tongue: clojure vars are global, they don't care about threads. they'll continue to exist as long as the JVM lives"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938159.421600","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"684b67a7-aeb6-46e3-8d10-6e1509ed32ed","blocks":[{"type":"rich_text","block_id":"xBUl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just thread bindings are lost"}]}]}],"user":"U05224H0W","text":"just thread bindings are lost"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938184.421800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"2f6b13de-f4f8-460f-a031-cdc7c6b0dd78","blocks":[{"type":"rich_text","block_id":"Vvgwi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"huh, fuck that's too obvious "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U04V5V0V4","text":"huh, fuck that's too obvious :slightly_smiling_face:"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938232.422000","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"a5df23aa-5a85-4af4-a53d-486787c8db65","blocks":[{"type":"rich_text","block_id":"YnE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"don't really need to modify "},{"type":"text","text":"io-prepl","style":{"code":true}},{"type":"text","text":" at all I think"}]}]}],"user":"U05224H0W","text":"don't really need to modify `io-prepl` at all I think"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938238.422200","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"6942a8f5-768c-41f7-b9d5-3093fc6c1caa","blocks":[{"type":"rich_text","block_id":"\/aL4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll try it out later - nice"}]}]}],"user":"U04V5V0V4","text":"I'll try it out later - nice"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938247.422400","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"258c90b0-23d0-47d6-b04d-2ab539632570","blocks":[{"type":"rich_text","block_id":"Fxqq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just eval something when you connect to get the thread and store it somewhere"}]}]}],"user":"U05224H0W","reactions":[{"name":"+1::skin-tone-2","users":["U4ZDX466T"],"count":1}],"text":"just eval something when you connect to get the thread and store it somewhere"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938269.422600","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"e5344751-6149-49c7-95cb-c3b0fde2fd13","blocks":[{"type":"rich_text","block_id":"WMl+o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"indeed, makes total sense"}]}]}],"user":"U04V5V0V4","text":"indeed, makes total sense"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj | session.clj>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/nrepl\/nrepl|nrepl\/nrepl>","title":"<https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj | session.clj>","id":1,"app_unfurl_url":"https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L136-L156","text":"```\n(defn- create-session\n  \"Returns a new atom containing a map of bindings as per\n  `clojure.core\/get-thread-bindings`. *in* is obtained using `session-in`, *ns*\n  defaults to 'user, and other bindings as optionally provided in\n  `session` are merged in.\"\n  ([{:keys [transport session out-limit]}]\n   (let [id (uuid)\n         {:keys [input-queue stdin-reader]} (session-in id transport)\n         the-session (atom (into (or (some-&gt; session deref) {})\n                                 {#'*in* stdin-reader\n                                  #'*ns* (create-ns 'user)})\n                           :meta {:id id\n                                  :out-limit (or out-limit (:out-limit (meta session)))\n                                  :stdin-reader stdin-reader\n                                  :input-queue input-queue\n                                  :exec default-exec})\n         msg {:code \"\" :session the-session}]\n     ;; to fully initialize bindings\n     (binding [*msg* msg]\n       (evaluate msg))\n     the-session)))\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1628937810.419200","ts":"1628938288.422900","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"af2a3099-ca14-461d-a906-c43a9f899033","blocks":[{"type":"rich_text","block_id":"5KYJh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reading around nrepl, it does some things to resurrect thread bindings "},{"type":"link","url":"https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L136-L156","text":"https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L136-L156"}]}]}],"user":"U06QSF3BK","text":"reading around nrepl, it does some things to resurrect thread bindings <https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L136-L156|https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L136-L156>"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938313.423200","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"b6fd9c84-9091-42e2-9ee8-8ae22e39a093","blocks":[{"type":"rich_text","block_id":"izXx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in my case I don't care about thread bindings"}]}]}],"user":"U04V5V0V4","text":"in my case I don't care about thread bindings"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938321.423400","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"460012d9-9cc7-411d-ae6f-e0e1b560630f","blocks":[{"type":"rich_text","block_id":"mfA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok"}]}]}],"user":"U06QSF3BK","text":"ok"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938345.423600","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"af665191-4eea-4e43-8a21-014d70b78d7f","blocks":[{"type":"rich_text","block_id":"sLE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not yet at least ... famous last words"}]}]}],"user":"U04V5V0V4","text":"not yet at least ... famous last words"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938361.423800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"44cef03c-dce5-4b3a-a815-bcb1693c09f3","blocks":[{"type":"rich_text","block_id":"BkC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":":D"}]}]}],"user":"U06QSF3BK","text":":D"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938373.424000","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"a022e708-00f1-45b9-8a0d-a2db509099d0","blocks":[{"type":"rich_text","block_id":"51c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"io-prepl gets its own blocking thread so most of the stuff nrepl does you don't need"}]}]}],"user":"U05224H0W","text":"io-prepl gets its own blocking thread so most of the stuff nrepl does you don't need"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938399.424200","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"5addf8fa-8fa5-48f8-8995-953afa8e88ab","blocks":[{"type":"rich_text","block_id":"9AD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the thread evaling is always the same for each connection"}]}]}],"user":"U05224H0W","text":"the thread evaling is always the same for each connection"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938448.424400","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"814a48b4-ee9c-4636-a821-a797b27e04c9","blocks":[{"type":"rich_text","block_id":"LgHz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, somehow I didn't think to do the obvious thing of just pushing the evalled state on an atom"}]}]}],"user":"U04V5V0V4","text":"yes, somehow I didn't think to do the obvious thing of just pushing the evalled state on an atom"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938489.424600","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"abc1bb2c-202f-4207-b4a1-78167e122b7f","blocks":[{"type":"rich_text","block_id":"08OT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what eval'd state? "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":" "},{"type":"text","text":"(def my-state \"thing\")","style":{"code":true}},{"type":"text","text":" you can access directly over the other connection, no work needed"}]}]}],"user":"U05224H0W","text":"what eval'd state? :stuck_out_tongue: `(def my-state \"thing\")` you can access directly over the other connection, no work needed"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938525.424800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"29871c1c-3257-447d-a936-187ab4f29657","blocks":[{"type":"rich_text","block_id":"Y=V0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lol even better, no work is the best "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U04V5V0V4","text":"lol even better, no work is the best :slightly_smiling_face:"}
{"type":"message","thread_ts":"1628937810.419200","edited":{"user":"U05224H0W","ts":"1628938728.000000"},"ts":"1628938673.425000","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"f4eb65d1-adf0-4e34-a2ae-564b06d7582b","blocks":[{"type":"rich_text","block_id":"ljFC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the thread-bindings are also pretty much nrepl specific since it keeps all its own state in there. prepl is prettty much stateless so you probably won't need it"}]}]}],"user":"U05224H0W","text":"the thread-bindings are also pretty much nrepl specific since it keeps all its own state in there. prepl is prettty much stateless so you probably won't need it"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628938705.425200","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"1f0c4793-93fb-461f-b197-df1d57ce77d2","blocks":[{"type":"rich_text","block_id":"Pej","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"unless you care about "},{"type":"text","text":"*1, *2, *3, *e","style":{"code":true}},{"type":"text","text":" which are the only bindings it maintains"}]}]}],"user":"U05224H0W","text":"unless you care about `*1, *2, *3, *e` which are the only bindings it maintains"}
{"type":"message","thread_ts":"1628937810.419200","edited":{"user":"U05224H0W","ts":"1628938767.000000"},"ts":"1628938757.425500","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"15b97574-84d1-4b59-8a52-dd655899ea46","blocks":[{"type":"rich_text","block_id":"PKT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"+ "},{"type":"text","text":"*out*, *err*, *in*","style":{"code":true}},{"type":"text","text":" of course but those you definitely don't care about "},{"type":"emoji","name":"wink"}]}]}],"user":"U05224H0W","reactions":[{"name":"+1::skin-tone-3","users":["U04V5V0V4"],"count":1},{"name":"stuck_out_tongue_closed_eyes","users":["U04V5V0V4"],"count":1}],"text":"+ `*out*, *err*, *in*` of course but those you definitely don't care about :wink:"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628942936.432200","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"B4F68DE3-48F5-4A8A-AC5A-9DB990301B3C","blocks":[{"type":"rich_text","block_id":"MnVX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"*1 etc might be interesting."}]}]}],"user":"U04V5V0V4","text":"*1 etc might be interesting."}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628943258.433200","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"FBA8576D-4A0D-489E-8A1C-142AF6C96885","blocks":[{"type":"rich_text","block_id":"SaSnH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you let me use an atom now ;-)"}]}]}],"user":"U04V5V0V4","reactions":[{"name":"upside_down_face","users":["U05224H0W"],"count":1}],"text":"Can you let me use an atom now ;-)"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628980354.434600","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"3cdeba34-e363-411e-a89c-099cba542908","blocks":[{"type":"rich_text","block_id":"N7Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"*1 etc are still available so not a problem"}]}]}],"user":"U04V5V0V4","text":"*1 etc are still available so not a problem"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1628980412.434800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"ed62689b-805d-45af-a04c-0af6c92964c7","blocks":[{"type":"rich_text","block_id":"t8Ig","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(range)","style":{"code":true}},{"type":"text","text":" will not die though \u2026 thread keeps running even after closing the socket"}]}]}],"user":"U04V5V0V4","text":"`(range)` will not die though \u2026 thread keeps running even after closing the socket"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629007293.435800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"c6b65d03-640f-4549-913d-44107133ddb7","blocks":[{"type":"rich_text","block_id":"gxpR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it should die once it fails to write to the socket? otherwise yes, "},{"type":"text","text":"(range)","style":{"code":true}},{"type":"text","text":" itself never checks the interrupt flag and happily keeps going"}]}]}],"user":"U05224H0W","text":"it should die once it fails to write to the socket? otherwise yes, `(range)` itself never checks the interrupt flag and happily keeps going"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629007326.436000","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"44e16865-9844-4ef2-a2cc-c3736afcba8b","blocks":[{"type":"rich_text","block_id":"uQO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the write to the socket however does so it should fail eventually"}]}]}],"user":"U05224H0W","text":"the write to the socket however does so it should fail eventually"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629007362.436200","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"b0765870-dad6-4f23-9ffe-e922aa1c0d40","blocks":[{"type":"rich_text","block_id":"aB+WH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh .. nevermind just checked. it uses "},{"type":"text","text":"pr-str","style":{"code":true}},{"type":"text","text":" so it stops once it runs out of memory "},{"type":"emoji","name":"wink"}]}]}],"user":"U05224H0W","reactions":[{"name":"grimacing","users":["U04V5V0V4"],"count":1}],"text":"oh .. nevermind just checked. it uses `pr-str` so it stops once it runs out of memory :wink:"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629015755.437900","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"27a9632c-95b1-4fe7-8d4d-79b4d608ffe7","blocks":[{"type":"rich_text","block_id":"t5uP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pr-str","style":{"code":true}},{"type":"text","text":" is the default "},{"type":"text","text":"valf","style":{"code":true}},{"type":"text","text":" but could be replaced "},{"type":"emoji","name":"thinking_face"}]}]}],"user":"U04V5V0V4","text":"`pr-str` is the default `valf` but could be replaced :thinking_face:"}
{"type":"message","thread_ts":"1628937810.419200","edited":{"user":"U04V5V0V4","ts":"1629023808.000000"},"ts":"1629023349.438700","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"17F2C4DA-8E96-4AF4-A496-DCA4A904EC46","blocks":[{"type":"rich_text","block_id":"K4L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you can bind a limited "},{"type":"text","text":"*out*","style":{"code":true}}]}]}],"user":"U04V5V0V4","text":"I think you can bind a limited `*out*`"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/Unrepl\/unrepl\/blob\/master\/SPEC.md | SPEC.md>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/Unrepl\/unrepl|Unrepl\/unrepl>","title":"<https:\/\/github.com\/Unrepl\/unrepl\/blob\/master\/SPEC.md | SPEC.md>","id":1,"app_unfurl_url":"https:\/\/github.com\/Unrepl\/unrepl\/blob\/master\/SPEC.md#ellipsis-or-elisions","text":"*unrepl specification*\n*Status*\n\nThis document is a work in progress but is mostly stable at this point (few breakings change to expect). A companion implementation is available in the `unrepl.repl` namespace.\n\nYou can ask questions and share feedback on the `#unrepl` channel on the Clojurians Slack.\n\n*Breaking Changes*\n\n2017-11-23: change in map elisions, now the key is always `#unrepl\/... nil` and the value contains the actual elision.\n\n*Interaction model*\n\nThe client may setup several connections with the server.\n\nConnections usually starts as plain REPLs and are subsequently upgraded to something else.\n\nThe first connection created is typically meant for user input (and exclusively for user input, it must not be used for commands) and is upgraded by sending a piece of code colloquially referred to as \"the blob\". Upon successful upgrade the client receives a `:unrepl\/hello` message which describes how to set up other connections. This connection is generally called the user connection or the user repl or even just `user`.\n\nThere are two other common types of connections:\n\n\u2022 repl connections meant for control of the user repls, most often referred to as `aux` or auxiliary\/ancillary connections;\n\u2022 sideloader connections meant to allow the client to provide local clojure code, resources and java classes for dynamic loading by the (potentially remote) server.\n\n*Spec*\n*Reserved keywords and extensions*\n\nAll simple (not qualified) keywords, the `unrepl` namespace, and all namespaces starting by `unrepl.` are reserved.\n\nThis protocol is designed to be extended, extensions just have to be namespaced and designed in a way that a client can ignore messages from unknown extensions.\n\n*Streams format*\n\nThe input is expected to be free form (a character stream)\n\nThe output is a stream of EDN datastructures.\n\nTo be more precise it's a stream of 2\/3-item tuples, e.g. `[:read {:some :payload} 1]`, where:\n\n1. First component is a tag (keyword). Its purpose is to allow demultiplexing things that are usually intermingled in a repl display.\n2. Second component is the payload.\n3. Third (optional) component is a group id, meant to group together messages.\n\nTen core tags are defined: `:unrepl\/hello`, `:prompt`, `:read`, `:started-eval`, `:eval`, `:out`, `:err`, `:log`, and `:exception`. More tags are defined in standard <#actions|actions>.\n\nMessages not understood by a client should be ignored.\n\n*`:unrepl\/hello`*\n\nThe first message must be a `:unrepl\/hello`. It's the only message whose tag is qualified. It's namespaced to make sniffing the protocol easier. For example, when connecting to a socket you may either get an existing unrepl repl or a standard repl that you are going to upgrade.\n\nIts payload is a map which may have a `:actions` key mapping to another map of &lt;#actions|action ids&gt; (keywords) to &lt;#message-templates|template messages&gt;. All those actions should be specific to the session.\n\nThis is how an unrepl implementation advertises its capabilities: by listing them along a machine-readable specification of the message needed to be sent to trigger them.\n\nThe hello map may also have a `:session` key which is just an identifier (any type) allowing a client to recognize a session it has already visited.\n\nThe hello map may also have a `:about` key mapped to a map. The intent of the `:about` map is to contain information about the REPL implementation, supported language, running environment (VM, OS etc.).\n\n*`:prompt`*\n\n`:prompt` messages constitute the main punctuation of the output stream: each `:prompt` is the header of an iteration of the REP loop. There can't be an evaluation without a `:prompt`. `:prompt` messages are the most basic way of synchronizing the client states with the REPL.\n\nThe payload provides general information about the unrepl session, covering two topics:\n\n\u2022 Information about the current input state.\n\u2022 Qualified symbols (var names) mapped to their respective values.\n\ne.g.\n\n```\n[:prompt {:file \"unrepl-session\", :line 1, :column 1, :offset 0, clojure.core\/*warn-on-reflection* nil, clojure.core\/*ns* #unrepl\/ns user} 42]\n```\n\nWhere `:offset` is the number of characters (well UTF-16 code units) from the start of the unrepl session. _Line-delimiting sequences are normalized to one character_ (`\\n`) -- so if the client sends a `CRLF` the offset is only increased by 1.\n\nThe group-id is the one that will be used for the next evaluation, if any.\n\nIt's possible to get iterations with no evaluation (for example after skippable top-level input: comment and whitespace).\n\nClients willing to display a user prompt in the way traditionally done by `clojure.main` should only consider `:prompt` message whose `:column` is `1`.\n\n*`:exception`*\n\nThe payload is a map with a required key `:ex` which maps to the exception, and a second optional key `:phase` which can take 5 values:\n\n\u2022 `:unknown`, (default) no indication on the source of the exception.\n\u2022 `:read`, the exception occured during `read` and is more likely a syntax error. (May be an IO or any exception when `*read-eval*` is used.)\n\u2022 `:eval`, the exception occured during `eval`.\n\u2022 `:print`, the exception occured during `print`.\n\u2022 `:repl`, the exception occured in the repl code itself, fill an issue.\n\n*`:log`*\n\n```\n(spec\/def :unrepl\/log-msg\n  (spec\/cat :level keyword? :key string? :inst inst? :args (spec\/* any?)))\n```\n\nThe arguments will be machine-printed and as such could be elided.\n\n*`:read`*\n\nSimilar to `:prompt`, `:read` is meant to help tools to relate outputs to inputs by providing information regarding the latest stream sent to the reader. It can be especially useful when several forms are sent in a batch or when syntax errors happen and the reader resumes reading.\n\n```\n[:read {:from [line col] :to [line col] :offset N :len N} 1]\n```\n\n`:offset` works exactly as in `:prompt`.\n\n*Machine printing*\n\nPretty printing is meant for humans and should be performed on the client.\n\nClojure values are machine-printed to EDN.\n\n*Filling the gap*\n\n\u2022 Vars (e.g. `#'map`) are printed as `#clojure\/var clojure.core\/map`.\n\u2022 Ratios (e.g. `4\/3`) are printed as `#unrepl\/ratio [4 3]`.\n\u2022 Classes are printed as `#unrepl.java\/class ClassName` or `#unrepl.java\/class [ClassName]` for arrays (with no bounds on the nesting).\n\u2022 Namespaces are printed as `#unrepl\/ns name.sp.ace`.\n\u2022 Metadata is printed as `#unrepl\/meta [{meta data} value]`.\n\u2022 Patterns (regexes) are printed as `#unrepl\/pattern \"[0-9]+\"`.\n\u2022 Objects are printed as `#unrepl\/object [class \"id\" representation]`. The representation is implementation dependent. One may use an elided map representation to allow browsing the object graph.\n\u2022 Unreadable keywords and symbols are printed as `#unrepl\/bad-keyword [\"ns-or-nil\" \"name\"]\"` (resp. `unrepl\/bad-symbol`).\n\n*Ellipsis or elisions*\n\nPrinting should be bound in length and depth. When the printer decides to elide a sequence of values, it should emit a tagged literal `#unrepl\/... m`, where `m` is either `nil` or a map. This map may contain a `:get` key associated to a &lt;#message-templates|template message&gt;. All simple (non qualified) keywords (and those with `unrepl` namespace) are reserved for future revisions of these specification.\n\nExample: machine printing `(range)`\n\n```\n(0 1 2 3 4 5 6 7 8 9 #unrepl\/... {:get (tmp1234\/get :G__8391)})\n```\n\n*Rendering*\n\nClients may render a `#unrepl\/... {}` literal as `...` and when `:get` is present offers the user the ability to expand this elision.\n\n*Expansion*\n\nTo expand the elision the client send to the repl the value associated to the `:get` key. The repl answers (in the `:eval` channel) with either:\n\n\u2022 a collection that should be spliced in lieu of the `...`\n\u2022 a `#unrepl\/...` value with no `:get` key (for example when the elided values are not reachable anymore), including (but not limited to) `#unrepl\/... nil`.\n\nSo continuing the `(range)` example:\n\n```\n&gt; (range)\n&lt; (0 1 2 3 4 5 6 7 8 9 #unrepl\/... {:get (tmp1234\/get :G__8391)})\n&gt; (tmp1234\/get :G__8391)\n&lt; (10 11\u2026","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1628937810.419200","ts":"1629026119.439000","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"5596f0f7-459b-4c0a-bf50-f06f3aba06ed","blocks":[{"type":"rich_text","block_id":"zbqBE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this reminds me of unrepl by cgrand "},{"type":"link","url":"https:\/\/github.com\/Unrepl\/unrepl\/blob\/master\/SPEC.md#ellipsis-or-elisions","text":"https:\/\/github.com\/Unrepl\/unrepl\/blob\/master\/SPEC.md#ellipsis-or-elisions"}]}]}],"user":"U06QSF3BK","text":"this reminds me of unrepl by cgrand <https:\/\/github.com\/Unrepl\/unrepl\/blob\/master\/SPEC.md#ellipsis-or-elisions|https:\/\/github.com\/Unrepl\/unrepl\/blob\/master\/SPEC.md#ellipsis-or-elisions>"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629026146.439300","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"a96f6c36-442f-4089-8709-05eb8329b034","blocks":[{"type":"rich_text","block_id":"W3Ys","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"didn't read the implementation though"}]}]}],"user":"U06QSF3BK","text":"didn't read the implementation though"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629031912.439500","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"f4832b2c-788d-4f00-b311-bcd987d4d350","blocks":[{"type":"rich_text","block_id":"YMwv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I only remember the famous blob "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U04V5V0V4","text":"I only remember the famous blob :slightly_smiling_face:"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629035201.444400","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"5ab4f60a-a601-4532-b2b5-55abcf3fc297","blocks":[{"type":"rich_text","block_id":"EAm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"me too :D"}]}]}],"user":"U06QSF3BK","text":"me too :D"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629036132.446700","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"D156E2DF-80D4-47AD-930C-136AA81CCBFE","blocks":[{"type":"rich_text","block_id":"3\/uUE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I wrap pr-str in a Thread it could be killable"}]}]}],"user":"U04V5V0V4","text":"If I wrap pr-str in a Thread it could be killable"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629036771.447800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"47B537ED-61C8-47C4-BE17-5BED92EF6148","blocks":[{"type":"rich_text","block_id":"DCnbQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or maybe a core.async channel "}]}]}],"user":"U04V5V0V4","text":"Or maybe a core.async channel "}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629037179.448600","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"a6f77431-c348-4e1b-90cd-b7d99fec29a5","blocks":[{"type":"rich_text","block_id":"ee\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"could the printer be made to check for interrupt"}]}]}],"user":"U06QSF3BK","text":"could the printer be made to check for interrupt"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629037227.449000","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"b911f247-5d9f-41ad-bf63-73520fbd6618","blocks":[{"type":"rich_text","block_id":"19A+8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thinking "},{"type":"text","text":"*print-length*","style":{"code":true}},{"type":"text","text":", but for interrupt (might not work nice work arbitrary data)"}]}]}],"user":"U06QSF3BK","reactions":[{"name":"+1::skin-tone-3","users":["U04V5V0V4"],"count":1}],"text":"thinking `*print-length*`, but for interrupt (might not work nice work arbitrary data)"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629040436.451900","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"30487F20-720B-4527-A950-853A87751507","blocks":[{"type":"rich_text","block_id":"yQGp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah print-length of 1mb is probably fine for a REPL"}]}]}],"user":"U04V5V0V4","text":"Yeah print-length of 1mb is probably fine for a REPL"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629040482.452800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"CC555935-BD78-4AF1-9127-188932484D93","blocks":[{"type":"rich_text","block_id":"uSe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"could be tuneable by the user too"}]}]}],"user":"U04V5V0V4","text":"could be tuneable by the user too"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629040540.453800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"247264B4-95F3-4E50-85C7-DD3F1726B938","blocks":[{"type":"rich_text","block_id":"dkI9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Main thing is that you avoid the dumb fu"}]}]}],"user":"U04V5V0V4","text":"Main thing is that you avoid the dumb fu"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629040559.454400","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"145FFD17-014D-452F-AE67-EA3531B8C110","blocks":[{"type":"rich_text","block_id":"Dwk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But you can always insist :)"}]}]}],"user":"U04V5V0V4","text":"But you can always insist :)"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629041812.454600","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"aa53b58c-e9c5-47fb-a25f-4ce288807e11","blocks":[{"type":"rich_text","block_id":"5ww","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"even a max tuneable length of 512Mb would still be way less than main memory "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U04V5V0V4","text":"even a max tuneable length of 512Mb would still be way less than main memory :slightly_smiling_face:"}
{"type":"message","thread_ts":"1628937810.419200","edited":{"user":"U04V5V0V4","ts":"1629041951.000000"},"ts":"1629041932.454800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"8b0740e1-9a8c-4396-9f6f-aee02d1e2a8f","blocks":[{"type":"rich_text","block_id":"MJkR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so yeah "},{"type":"user","user_id":"U06QSF3BK"},{"type":"text","text":" I'll give binding to a tuneable "},{"type":"text","text":"*print-length*","style":{"code":true}},{"type":"text","text":" a go. I'm already using a mix of core.async and futures so that the read part of the repl is not blocking ie the cancellation can occur immediately"}]}]}],"user":"U04V5V0V4","reactions":[{"name":"+1","users":["U06QSF3BK"],"count":1}],"text":"so yeah <@U06QSF3BK> I'll give binding to a tuneable `*print-length*` a go. I'm already using a mix of core.async and futures so that the read part of the repl is not blocking ie the cancellation can occur immediately"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629050724.459900","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"4AD78438-4C95-4F5E-ADB8-BA0E5EE25DE9","blocks":[{"type":"rich_text","block_id":"PTF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It works. The size of elements in range is small but the concept seems decent "}]}]}],"user":"U04V5V0V4","text":"It works. The size of elements in range is small but the concept seems decent "}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629050763.460900","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"0417B072-38B3-4B97-A837-A4E6802B6BC2","blocks":[{"type":"rich_text","block_id":"3PlHO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just means that cancelled threads will waste some resources "}]}]}],"user":"U04V5V0V4","text":"Just means that cancelled threads will waste some resources "}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629064282.463800","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"c3b05d52-37e3-4dac-9550-c6d70f197fd4","blocks":[{"type":"rich_text","block_id":"Yr1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"correction the "},{"type":"text","text":"*print-length*","style":{"code":true}},{"type":"text","text":" thing makes no difference\u2026 it just let me wait for the task to get killed, which - good news - it does get killed ,,,, just takes a while"}]}]}],"user":"U04V5V0V4","text":"correction the `*print-length*` thing makes no difference\u2026 it just let me wait for the task to get killed, which - good news - it does get killed ,,,, just takes a while"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629064359.464000","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"9b090e50-63f6-4558-8ade-888d309dae4c","blocks":[{"type":"rich_text","block_id":"8ij","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I\u2019m gonna play with the "},{"type":"text","text":"core.async","style":{"code":true}},{"type":"text","text":" option as a replacement for directly using "},{"type":"text","text":"pr-str","style":{"code":true}}]}]}],"user":"U04V5V0V4","reactions":[{"name":"+1","users":["U06QSF3BK"],"count":1}],"text":"so I\u2019m gonna play with the `core.async` option as a replacement for directly using `pr-str`"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629146345.008300","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"fec0be7e-8181-46ca-9edc-4ff771bb1600","blocks":[{"type":"rich_text","block_id":"lkoxp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"urgh, no luck \u2026 maybe I just don\u2019t have enough "},{"type":"text","text":"core.async","style":{"code":true}},{"type":"text","text":" chops. It works even if sub-optimally, so I\u2019m going to move on until my frustration abates "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U04V5V0V4","text":"urgh, no luck \u2026 maybe I just don\u2019t have enough `core.async` chops. It works even if sub-optimally, so I\u2019m going to move on until my frustration abates :slightly_smiling_face:"}
{"type":"message","thread_ts":"1628937810.419200","ts":"1629192003.013500","parent_user_id":"U04V5V0V4","team":"T03RZGPFR","client_msg_id":"451ec60f-b135-4f3b-a17c-3a17351c4080","blocks":[{"type":"rich_text","block_id":"jKV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just one battle in the war "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U06QSF3BK","reactions":[{"name":"heart_eyes","users":["U04V5V0V4"],"count":1}],"text":"just one battle in the war :slightly_smiling_face:"}
{"client_msg_id":"ca07f639-6dc4-4d68-8cbd-a68e5f291b97","type":"message","text":"define \"state\". thread bindings? or just clojure vars?","user":"U05224H0W","ts":"1628937762.418300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"\/mH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"define \"state\". thread bindings? or just clojure vars?"}]}]}]}
{"client_msg_id":"9C1C63BF-3FB6-46A5-A059-3560F0738A6C","type":"message","text":"With io-prepl the prepl is attached to a socket. One can close the socket and clone state","user":"U04V5V0V4","ts":"1628937708.416600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"GWl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With io-prepl the prepl is attached to a socket. One can close the socket and clone state"}]}]}]}
{"client_msg_id":"b02410b9-5564-474d-822f-90d6d23d76d8","type":"message","text":"also interrupts on the JVM are kinda tricky, almost nothing is actually checking the interrupt flag","user":"U05224H0W","ts":"1628937654.414500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"81QL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also interrupts on the JVM are kinda tricky, almost nothing is actually checking the interrupt flag"}]}]}]}
{"client_msg_id":"FB8CF321-2E8B-48C7-AE56-332051D89B98","type":"message","text":"That\u2019s what I aim to build - multiprepl","user":"U04V5V0V4","ts":"1628937624.413900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"D10HV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That\u2019s what I aim to build - multiprepl"}]}]}]}
{"client_msg_id":"90476DD3-6D82-4C28-923D-B8C147780AD1","type":"message","text":"Yes","user":"U04V5V0V4","ts":"1628937586.412200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"cheMG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes"}]}]}]}
{"client_msg_id":"a58f7240-4182-4372-b23c-d697a150173e","type":"message","text":"can't do interrupt with one prepl alone anyways, need a second connection since the first one is eval'ing and not reading","user":"U05224H0W","ts":"1628937572.411800","team":"T03RZGPFR","edited":{"user":"U05224H0W","ts":"1628937580.000000"},"blocks":[{"type":"rich_text","block_id":"aOnF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can't do interrupt with one prepl alone anyways, need a second connection since the first one is eval'ing and not reading"}]}]}]}
{"client_msg_id":"6EF99979-7376-4055-81FA-8FC60CDEB1C6","type":"message","text":"Thanks <@U06QSF3BK>. What\u2019s not clear to me is how state is retained after cancellation. So probably I don\u2019t understand how state is shared across the thread pool.","user":"U04V5V0V4","ts":"1628937517.411000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"yYPBN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks "},{"type":"user","user_id":"U06QSF3BK"},{"type":"text","text":". What\u2019s not clear to me is how state is retained after cancellation. So probably I don\u2019t understand how state is shared across the thread pool."}]}]}]}
{"client_msg_id":"0a4f98d5-b8c6-4804-8c72-e89172249503","type":"message","text":"here are the tricks that nrepl does <https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L158-L180|https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L158-L180>, probably there's more to read then those highlighted lines :)","user":"U06QSF3BK","ts":"1628936838.408600","team":"T03RZGPFR","attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj | session.clj>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/nrepl\/nrepl|nrepl\/nrepl>","title":"<https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj | session.clj>","id":1,"app_unfurl_url":"https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L158-L180","text":"```\n(defn- interrupt-stop\n  \"This works as follows\n\n  1. Calls interrupt\n  2. Wait 100ms. This is mainly to allow thread that respond quickly to\n     interrupts to send a message back in response to the interrupt. Significantly,\n     this includes an exception thrown by `Thread\/sleep`.\n  3. Asynchronously: wait another 5000ms for the thread to cleanly terminate.\n     Only calls `.stop` if it fails to do so (and risk state corruption)\n\n  This set of behaviours strikes a balance between allowing a thread to respond\n  to an interrupt, but also ensuring we actually kill runaway processes.\n\n  If required, a future feature could make both timeouts configurable, either\n  as a server config or parameters provided by the `interrupt` message.\"\n  [^Thread t]\n  (.interrupt t)\n  (Thread\/sleep 100)\n  (noisy-future\n   (Thread\/sleep 5000)\n   (when-not (= (Thread$State\/TERMINATED)\n                (.getState t))\n     (.stop t))))\n```","bot_id":"B0213V66QKT"}],"blocks":[{"type":"rich_text","block_id":"Dc1xN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"here are the tricks that nrepl does "},{"type":"link","url":"https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L158-L180","text":"https:\/\/github.com\/nrepl\/nrepl\/blob\/master\/src\/clojure\/nrepl\/middleware\/session.clj#L158-L180"},{"type":"text","text":", probably there's more to read then those highlighted lines :)"}]}]}]}
{"client_msg_id":"60EC908D-4B34-41A4-BBFB-297BAFFA5BAC","type":"message","text":"I\u2019ll check it out. Was thinking specifically about work on prepls but maybe that will inspire too :) thanks","user":"U04V5V0V4","ts":"1628936783.408400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"psSt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I\u2019ll check it out. Was thinking specifically about work on prepls but maybe that will inspire too :) thanks"}]}]}]}
{"client_msg_id":"9f24eaa6-9418-49aa-a1dd-3a86c4a1e75b","type":"message","text":"nrepl interruptible-eval I guess","user":"U05224H0W","ts":"1628936439.406600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"8NUF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nrepl interruptible-eval I guess"}]}]}],"reactions":[{"name":"+1::skin-tone-3","users":["U04V5V0V4"],"count":1}]}
{"client_msg_id":"45B4194A-6305-488C-84DB-0C3076D4F285","type":"message","text":"Am gonna make a lib for PREPL to enable cancellation of long running form evaluation. Anyone know of previous work on this?","user":"U04V5V0V4","ts":"1628936104.405000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"rvHI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Am gonna make a lib for PREPL to enable cancellation of long running form evaluation. Anyone know of previous work on this?"}]}]}]}
{"client_msg_id":"a1247d5a-c441-4a18-b458-296979c98ed7","type":"message","text":"In case anyone here is interested in <#C02B5GHQWP4|tools-build> but not in the minutiae of <#C6QH853H8|tools-deps> and\/or the CLI itself, Alex created a channel to talk about `build.clj` etc :slightly_smiling_face:","user":"U04V70XH6","ts":"1628905078.401500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"\/KF+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In case anyone here is interested in "},{"type":"channel","channel_id":"C02B5GHQWP4"},{"type":"text","text":" but not in the minutiae of "},{"type":"channel","channel_id":"C6QH853H8"},{"type":"text","text":" and\/or the CLI itself, Alex created a channel to talk about "},{"type":"text","text":"build.clj","style":{"code":true}},{"type":"text","text":" etc "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]}
{"client_msg_id":"74d3a3fb-0017-4aec-bb20-ad1d780cbf58","type":"message","text":"shoot, I thought it was the opposite. we've talked about this in the past","user":"U064X3EF3","ts":"1628884766.400400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"9GqY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"shoot, I thought it was the opposite. we've talked about this in the past"}]}]}]}
{"client_msg_id":"e44047ec-19de-4217-afc6-7469fd1ff57d","type":"message","text":"double-in generates them by default though","user":"U02954X0GM8","ts":"1628884251.400100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"U60","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"double-in generates them by default though"}]}]}]}
{"client_msg_id":"11fef49a-a889-4f29-8960-1b26fd4b60ac","type":"message","text":"as a matter of fact, i was using <https:\/\/github.com\/stathissideris\/spec-provider>","user":"U02954X0GM8","ts":"1628882276.399500","team":"T03RZGPFR","attachments":[{"color":"24292f","fallback":"stathissideris\/spec-provider","fields":[{"title":"Stars","value":"497","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"stathissideris\/spec-provider","id":1,"app_unfurl_url":"https:\/\/github.com\/stathissideris\/spec-provider","text":"Infer Clojure specs from sample data. Inspired by F#'s type providers.","bot_id":"B0213V66QKT"}],"blocks":[{"type":"rich_text","block_id":"d4=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as a matter of fact, i was using "},{"type":"link","url":"https:\/\/github.com\/stathissideris\/spec-provider"}]}]}]}
{"client_msg_id":"3c9dfaa1-f112-481e-9bfd-bf2cdf4e2b20","type":"message","text":"double-in does it thanks","user":"U02954X0GM8","ts":"1628882149.398700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"jlQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"double-in does it thanks"}]}]}]}
{"client_msg_id":"d62fe515-33d7-4b9c-9812-fc54f6d0c60c","type":"message","text":"(spec\/gen float?)","user":"U02954X0GM8","ts":"1628882055.398400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"gcQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(spec\/gen float?)"}]}]}]}
{"client_msg_id":"320547a4-3cf9-4525-b51c-c9ab667cfbdc","type":"message","text":"(btw, there is <#C1B1BB2Q3|clojure-spec> for future q's)","user":"U064X3EF3","ts":"1628880546.398100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ciw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(btw, there is "},{"type":"channel","channel_id":"C1B1BB2Q3"},{"type":"text","text":" for future q's)"}]}]}],"reactions":[{"name":"heavy_plus_sign","users":["U02954X0GM8"],"count":1}]}
{"client_msg_id":"71561c7b-df16-4327-9f7a-2de53cc88e3d","type":"message","text":"the `double-in` generator does not generate them by default. what spec\/generator are you using when you see them?","user":"U064X3EF3","ts":"1628880525.397800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"QFx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the "},{"type":"text","text":"double-in","style":{"code":true}},{"type":"text","text":" generator does not generate them by default. what spec\/generator are you using when you see them?"}]}]}],"reactions":[{"name":"white_check_mark","users":["U02954X0GM8"],"count":1}]}
{"client_msg_id":"9b6b51e2-6c4b-4e8d-be16-fb49f39274e8","type":"message","text":"Look at a custom generator.  In particular, the `double*` generator.  See <https:\/\/clojure.github.io\/test.check\/clojure.test.check.generators.html#var-double*>","user":"U0AT6MBUL","ts":"1628880488.397300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"slz4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Look at a custom generator.  In particular, the "},{"type":"text","text":"double*","style":{"code":true}},{"type":"text","text":" generator.  See "},{"type":"link","url":"https:\/\/clojure.github.io\/test.check\/clojure.test.check.generators.html#var-double*"}]}]}],"reactions":[{"name":"pray","users":["U02954X0GM8"],"count":1}]}
{"client_msg_id":"a6f0a1cd-90c0-4e4d-a853-ccffb4b9c5de","type":"message","text":"how do i prevent spec from generating ##NaN, ##Inf and such?","user":"U02954X0GM8","ts":"1628880309.396500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"sDO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how do i prevent spec from generating ##NaN, ##Inf and such?"}]}]}]}
{"type":"message","edited":{"user":"U7ZL911B3","ts":"1628868465.000000"},"ts":"1628868437.392000","team":"T03RZGPFR","client_msg_id":"48cce2d1-9f68-4533-9082-842845ca9191","blocks":[{"type":"rich_text","block_id":"Hnd","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U1YTC9FU5"},{"type":"text","text":" To add a little color to \"you should not want to do that\": many people find that this kind of shortcut is a savings only in the very short term. It is extremely valuable to have the source of each of your functions be obvious by inspecting the source. This is the same reason that explicit "},{"type":"text","text":":refer","style":{"code":true}},{"type":"text","text":" is encouraged over "},{"type":"text","text":":use","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"ns","style":{"code":true}},{"type":"text","text":" forms."}]}]}],"user":"U7ZL911B3","reactions":[{"name":"+1","users":["U1YTC9FU5","U02412EF494","U0232JK38BZ"],"count":3}],"text":"<@U1YTC9FU5> To add a little color to \"you should not want to do that\": many people find that this kind of shortcut is a savings only in the very short term. It is extremely valuable to have the source of each of your functions be obvious by inspecting the source. This is the same reason that explicit `:refer` is encouraged over `:use` in `ns` forms."}
{"client_msg_id":"012ec6d3-919b-4da8-8c73-fcab8b8b3c4b","type":"message","text":"good to know, thanks <@U050B88UR> <@U04V15CAJ>","user":"U08JKUHA9","ts":"1628868226.388900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"3QySN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"good to know, thanks "},{"type":"user","user_id":"U050B88UR"},{"type":"text","text":" "},{"type":"user","user_id":"U04V15CAJ"}]}]}]}
{"client_msg_id":"4df805cf-2192-4a0e-8873-c505469bde71","type":"message","text":"so just not going to do it","user":"U050B88UR","ts":"1628868130.388600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"PqY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so just not going to do it"}]}]}]}
{"client_msg_id":"081cb588-e579-47a3-be41-babc88535f6e","type":"message","text":"there might be something that could work - but the code started getting ugly immediately once the bug reports flowed in","user":"U050B88UR","ts":"1628868123.388300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"qdeC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there might be something that could work - but the code started getting ugly immediately once the bug reports flowed in"}]}]}]}
{"client_msg_id":"d8a7bc58-152c-4d7f-a5a2-fdaee4592ea9","type":"message","text":"but if you put something behind a macro you cannot figure this out in any sensible way","user":"U050B88UR","ts":"1628868039.387700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"+Jn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but if you put something behind a macro you cannot figure this out in any sensible way"}]}]}]}
{"client_msg_id":"bb145192-1837-4ace-86e3-e9ab71cec95c","type":"message","text":"hard requirement to feed everything into Closure etc.","user":"U050B88UR","ts":"1628868026.387300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"Dni","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hard requirement to feed everything into Closure etc."}]}]}]}
{"client_msg_id":"05e49f0f-8379-480f-955f-ce1b180f4234","type":"message","text":"short story is that ClojureScript is an AOT variant of Clojure - you must know the whole graph of deps","user":"U050B88UR","ts":"1628868017.386900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"WI3R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"short story is that ClojureScript is an AOT variant of Clojure - you must know the whole graph of deps"}]}]}]}
{"client_msg_id":"1a7ace0f-3325-49cc-a1f0-7bcf479d97f5","type":"message","text":"and Canary, all our tests, etc. didn't catch it","user":"U050B88UR","ts":"1628867903.385600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"hhWh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and Canary, all our tests, etc. didn't catch it"}]}]}]}
{"client_msg_id":"0415a8a7-5755-4caa-9738-b67452b03fe9","type":"message","text":"just cannot work","user":"U050B88UR","ts":"1628867890.385200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"IGxbV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just cannot work"}]}]}],"reactions":[{"name":"ok_hand::skin-tone-2","users":["U08JKUHA9"],"count":1}]}
{"client_msg_id":"97385af0-027b-4180-aec5-757a1c5cf724","type":"message","text":"Ah I see. What was the problem with it?","user":"U08JKUHA9","ts":"1628867885.384900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"AGX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah I see. What was the problem with it?"}]}]}]}
{"client_msg_id":"55de96c3-067d-42f9-b0db-5b7f61355a7e","type":"message","text":"the feature never worked to be clear","user":"U050B88UR","ts":"1628867885.384800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"0a7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the feature never worked to be clear"}]}]}]}
{"client_msg_id":"3557e63c-9395-4937-a11f-64fb8a17b865","type":"message","text":"and we'll update the old post as well","user":"U050B88UR","ts":"1628867861.384300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"pgIr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and we'll update the old post as well"}]}]}]}
{"client_msg_id":"ac341f5c-13c7-474e-bb60-3d40ae42b943","type":"message","text":"trying to re-sync with Closure Compiler and Library - and there'll be another release and we'll mention it's been removed","user":"U050B88UR","ts":"1628867846.383800","team":"T03RZGPFR","edited":{"user":"U050B88UR","ts":"1628867870.000000"},"blocks":[{"type":"rich_text","block_id":"U1+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"trying to re-sync with Closure Compiler and Library - and there'll be another release and we'll mention it's been removed"}]}]}]}
{"client_msg_id":"44053105-5160-410d-9c99-8088fac7efb4","type":"message","text":"yes it's already been rolled back","user":"U050B88UR","ts":"1628867813.383000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"OJ8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes it's already been rolled back"}]}]}]}
{"subscribed":false,"reply_users":["U07FP7QJ0"],"type":"message","thread_ts":"1628867718.382600","reply_users_count":1,"edited":{"user":"U04V15CAJ","ts":"1628867728.000000"},"ts":"1628867718.382600","team":"T03RZGPFR","client_msg_id":"24b31b64-7614-4535-bbc8-f476f075f232","blocks":[{"type":"rich_text","block_id":"WGZ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U08JKUHA9"},{"type":"text","text":" unfortunately that won't be supported anymore in the future, if I understood a conversation between "},{"type":"user","user_id":"U07FP7QJ0"},{"type":"text","text":" and "},{"type":"user","user_id":"U050B88UR"},{"type":"text","text":" in "},{"type":"channel","channel_id":"C07UQ678E"},{"type":"text","text":" correctly"}]}]}],"is_locked":false,"user":"U04V15CAJ","reply_count":1,"latest_reply":"1628917553.402100","text":"<@U08JKUHA9> unfortunately that won't be supported anymore in the future, if I understood a conversation between <@U07FP7QJ0> and <@U050B88UR> in <#C07UQ678E|cljs-dev> correctly"}
{"subscribed":false,"reply_users":["U07FP7QJ0"],"type":"message","thread_ts":"1628867718.382600","reply_users_count":1,"edited":{"user":"U04V15CAJ","ts":"1628867728.000000"},"ts":"1628867718.382600","team":"T03RZGPFR","client_msg_id":"24b31b64-7614-4535-bbc8-f476f075f232","blocks":[{"type":"rich_text","block_id":"WGZ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U08JKUHA9"},{"type":"text","text":" unfortunately that won't be supported anymore in the future, if I understood a conversation between "},{"type":"user","user_id":"U07FP7QJ0"},{"type":"text","text":" and "},{"type":"user","user_id":"U050B88UR"},{"type":"text","text":" in "},{"type":"channel","channel_id":"C07UQ678E"},{"type":"text","text":" correctly"}]}]}],"is_locked":false,"user":"U04V15CAJ","reply_count":1,"latest_reply":"1628917553.402100","text":"<@U08JKUHA9> unfortunately that won't be supported anymore in the future, if I understood a conversation between <@U07FP7QJ0> and <@U050B88UR> in <#C07UQ678E|cljs-dev> correctly"}
{"type":"message","thread_ts":"1628867718.382600","ts":"1628917553.402100","parent_user_id":"U04V15CAJ","team":"T03RZGPFR","client_msg_id":"472d5e49-9c76-4a38-b56a-c67c813749c3","blocks":[{"type":"rich_text","block_id":"Niu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is correct, there's no good way to make it work without breaking existing functionality"}]}]}],"user":"U07FP7QJ0","reactions":[{"name":"ok_hand::skin-tone-2","users":["U08JKUHA9"],"count":1}],"text":"That is correct, there's no good way to make it work without breaking existing functionality"}
{"subscribed":false,"reply_users":["U1YTC9FU5","U07FP7QJ0"],"type":"message","thread_ts":"1628866284.381700","reply_users_count":2,"ts":"1628866284.381700","team":"T03RZGPFR","client_msg_id":"b3fcd083-0996-44e4-9cae-6b75f90bc1b5","blocks":[{"type":"rich_text","block_id":"RC9z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you wanted to avoid repeating yourself too much in your requires, I think this would be the way:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns foo.bar\n  (:require-macros [foo.baz :refer [macro-that-expands-to-require]]))\n(macro-that-expands-to-require)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(From the May 24 ClojureScript "},{"type":"link","url":"https:\/\/clojurescript.org\/news\/2021-05-24-release","text":"release notes"},{"type":"text","text":")"}]}]}],"is_locked":false,"user":"U08JKUHA9","reply_count":2,"reactions":[{"name":"+1","users":["U1YTC9FU5"],"count":1}],"latest_reply":"1628916479.401900","text":"If you wanted to avoid repeating yourself too much in your requires, I think this would be the way:\n```(ns foo.bar\n  (:require-macros [foo.baz :refer [macro-that-expands-to-require]]))\n(macro-that-expands-to-require)```\n(From the May 24 ClojureScript <https:\/\/clojurescript.org\/news\/2021-05-24-release|release notes>)"}
{"subscribed":false,"reply_users":["U1YTC9FU5","U07FP7QJ0"],"type":"message","thread_ts":"1628866284.381700","reply_users_count":2,"ts":"1628866284.381700","team":"T03RZGPFR","client_msg_id":"b3fcd083-0996-44e4-9cae-6b75f90bc1b5","blocks":[{"type":"rich_text","block_id":"RC9z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you wanted to avoid repeating yourself too much in your requires, I think this would be the way:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns foo.bar\n  (:require-macros [foo.baz :refer [macro-that-expands-to-require]]))\n(macro-that-expands-to-require)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(From the May 24 ClojureScript "},{"type":"link","url":"https:\/\/clojurescript.org\/news\/2021-05-24-release","text":"release notes"},{"type":"text","text":")"}]}]}],"is_locked":false,"user":"U08JKUHA9","reply_count":2,"reactions":[{"name":"+1","users":["U1YTC9FU5"],"count":1}],"latest_reply":"1628916479.401900","text":"If you wanted to avoid repeating yourself too much in your requires, I think this would be the way:\n```(ns foo.bar\n  (:require-macros [foo.baz :refer [macro-that-expands-to-require]]))\n(macro-that-expands-to-require)```\n(From the May 24 ClojureScript <https:\/\/clojurescript.org\/news\/2021-05-24-release|release notes>)"}
{"type":"message","thread_ts":"1628866284.381700","ts":"1628868672.392300","parent_user_id":"U08JKUHA9","team":"T03RZGPFR","client_msg_id":"24cb9fec-786e-4d84-9a4b-e11429337723","blocks":[{"type":"rich_text","block_id":"8BbWa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nice, just what I needed, thank you!"}]}]}],"user":"U1YTC9FU5","text":"nice, just what I needed, thank you!"}
{"type":"message","thread_ts":"1628866284.381700","ts":"1628916479.401900","parent_user_id":"U08JKUHA9","team":"T03RZGPFR","client_msg_id":"1825af25-8588-4a3f-b954-91172e1ad6ea","blocks":[{"type":"rich_text","block_id":"Dn3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That feature is going to be dropped again, there is no good way to make it work without breaking other things"}]}]}],"user":"U07FP7QJ0","text":"That feature is going to be dropped again, there is no good way to make it work without breaking other things"}
{"type":"message","edited":{"user":"U064X3EF3","ts":"1628864103.000000"},"ts":"1628864077.377000","team":"T03RZGPFR","client_msg_id":"41ec7826-13d3-4b7c-8528-9133a187ba17","blocks":[{"type":"rich_text","block_id":"WUco","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you should not want to do that :) just make functions in a namespace and require that namespace when you want to use it."}]}]}],"user":"U064X3EF3","reactions":[{"name":"+1","users":["U1YTC9FU5"],"count":1}],"text":"you should not want to do that :) just make functions in a namespace and require that namespace when you want to use it."}
{"client_msg_id":"ff7f9eda-abbf-4678-9570-9470bdd6dabe","type":"message","text":"Hi all! Can I extend the clojure.core functions with own functions, without needing to re-import them in every namespace? For example utils like:\n```(defn concat-vec [&amp; rest] (vec (apply concat rest)))```\nI tried to use\n```(in-ns 'clojure.core)```\nand define my functions, but how should I compile them after clojure.core?","user":"U1YTC9FU5","ts":"1628863862.376100","team":"T03RZGPFR","edited":{"user":"U1YTC9FU5","ts":"1628863978.000000"},"blocks":[{"type":"rich_text","block_id":"OxLKc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all! Can I extend the clojure.core functions with own functions, without needing to re-import them in every namespace? For example utils like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn concat-vec [& rest] (vec (apply concat rest)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I tried to use\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(in-ns 'clojure.core)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and define my functions, but how should I compile them after clojure.core?"}]}]}]}
{"client_msg_id":"a2db1d7e-3323-4668-a6a4-c0ba69c61703","type":"message","text":"I think `key` is a great and descriptive verb for this: `key-state-by-id`. I'm glad I asked :slightly_smiling_face:","user":"U0232JK38BZ","ts":"1628862460.372500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"LyG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think "},{"type":"text","text":"key","style":{"code":true}},{"type":"text","text":" is a great and descriptive verb for this: "},{"type":"text","text":"key-state-by-id","style":{"code":true}},{"type":"text","text":". I'm glad I asked "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]}
{"client_msg_id":"010C8D66-1B19-403B-8B2D-944AC22E27F5","type":"message","text":"If you have watched Stu halloways debugging videos, you can see why shadowing names can be annoying. For instance, you can just def a value with the same name as the locals and evaluate expressions in your source. But if a local shadows a function you can inadvertently break things","user":"U11BV7MTK","ts":"1628862386.371700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"HlQDx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you have watched Stu halloways debugging videos, you can see why shadowing names can be annoying. For instance, you can just def a value with the same name as the locals and evaluate expressions in your source. But if a local shadows a function you can inadvertently break things"}]}]}],"reactions":[{"name":"+1","users":["U0232JK38BZ"],"count":1}]}
{"client_msg_id":"ee10ce5f-a3a1-4e5c-830d-1a9d5bbb521e","type":"message","text":"I think would probably rename the function to say what it does (key-by-id or index-state or something)","user":"U064X3EF3","ts":"1628862017.368700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"4VEcF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think would probably rename the function to say what it does (key-by-id or index-state or something)"}]}]}],"reactions":[{"name":"pray","users":["U0232JK38BZ"],"count":1}]}
{"client_msg_id":"11c17df3-9fbb-4e03-9c75-618fd75fc6f3","type":"message","text":"Yes, so my question is kinda subjective and about semantics. If no-one here would object to the above let I guess I am good.","user":"U0232JK38BZ","ts":"1628861827.367900","team":"T03RZGPFR","edited":{"user":"U0232JK38BZ","ts":"1628861837.000000"},"blocks":[{"type":"rich_text","block_id":"utO5L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, so my question is kinda subjective and about semantics. If no-one here would object to the above let I guess I am good."}]}]}]}
{"client_msg_id":"7af44c56-22a8-4734-bab5-e48e87f4edbe","type":"message","text":"it's not a problem syntactically - that local binding will shadow the var","user":"U064X3EF3","ts":"1628861567.365900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"JbWa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's not a problem syntactically - that local binding will shadow the var"}]}]}]}
{"client_msg_id":"b38c2887-9c35-4aaf-886b-81bb1e4691c4","type":"message","text":"Another naming question:\n\nI have a function that creates a map from `id` to `state`. So a good name for the function is perhaps `id-&gt;state`. However, that also seems like the best name for the map created by the function. Is this a problem?\n\n```(let [id-&gt;state (id-&gt;state args)] ...```\nAnother alternative would be `-&gt;id-&gt;state` since it creates maps of `id` to `state`, but that might look weird and not be idiomatic.","user":"U0232JK38BZ","ts":"1628860296.363300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"fLLt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Another naming question:\n\nI have a function that creates a map from "},{"type":"text","text":"id","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"state","style":{"code":true}},{"type":"text","text":". So a good name for the function is perhaps "},{"type":"text","text":"id->state","style":{"code":true}},{"type":"text","text":". However, that also seems like the best name for the map created by the function. Is this a problem?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [id->state (id->state args)] ..."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAnother alternative would be "},{"type":"text","text":"->id->state","style":{"code":true}},{"type":"text","text":" since it creates maps of "},{"type":"text","text":"id","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"state","style":{"code":true}},{"type":"text","text":", but that might look weird and not be idiomatic."}]}]}]}
{"client_msg_id":"9b33af56-4ef1-424f-a3a8-f854719ee56a","type":"message","text":"Even though I can use those same credentials to copy bucket contents with the AWS cli","user":"U6SUWNB9N","ts":"1628859861.360400","team":"T03RZGPFR","edited":{"user":"U6SUWNB9N","ts":"1628859880.000000"},"blocks":[{"type":"rich_text","block_id":"lZN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Even though I can use those same credentials to copy bucket contents with the AWS cli"}]}]}]}
{"client_msg_id":"04d52c7d-d8f4-44dd-97e0-89838e354072","type":"message","text":"From some more digging, it appears that when I use credentials that are directly for the account in question it works, but when I use credentials from _another_ account, which still have access to the bucket, it fails","user":"U6SUWNB9N","ts":"1628859850.360000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"xr\/wy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From some more digging, it appears that when I use credentials that are directly for the account in question it works, but when I use credentials from "},{"type":"text","text":"another","style":{"italic":true}},{"type":"text","text":" account, which still have access to the bucket, it fails"}]}]}]}
{"subscribed":false,"reply_users":["U064X3EF3","U6SUWNB9N"],"type":"message","thread_ts":"1628859798.359100","reply_users_count":2,"edited":{"user":"U6SUWNB9N","ts":"1628861024.000000"},"ts":"1628859798.359100","team":"T03RZGPFR","client_msg_id":"ce435db0-407d-4500-ae6f-7a831e563ea7","blocks":[{"type":"rich_text","block_id":"7T5c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Gaaaah! Does anyone know how to get debug information out of "},{"type":"text","text":"clj","style":{"code":true}},{"type":"text","text":" as to how it is trying to access a maven repo that's in an AWS S3 bucket? I've got a repo that I can "},{"type":"text","text":"aws s3 [ls|cp]","style":{"code":true}},{"type":"text","text":" on no problem, but "},{"type":"text","text":"clj","style":{"code":true}},{"type":"text","text":" is refusing to get deps from it"}]}]}],"is_locked":false,"user":"U6SUWNB9N","reply_count":9,"latest_reply":"1628861343.365300","text":"Gaaaah! Does anyone know how to get debug information out of `clj` as to how it is trying to access a maven repo that's in an AWS S3 bucket? I've got a repo that I can `aws s3 [ls|cp]` on no problem, but `clj` is refusing to get deps from it"}
{"subscribed":false,"reply_users":["U064X3EF3","U6SUWNB9N"],"type":"message","thread_ts":"1628859798.359100","reply_users_count":2,"edited":{"user":"U6SUWNB9N","ts":"1628861024.000000"},"ts":"1628859798.359100","team":"T03RZGPFR","client_msg_id":"ce435db0-407d-4500-ae6f-7a831e563ea7","blocks":[{"type":"rich_text","block_id":"7T5c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Gaaaah! Does anyone know how to get debug information out of "},{"type":"text","text":"clj","style":{"code":true}},{"type":"text","text":" as to how it is trying to access a maven repo that's in an AWS S3 bucket? I've got a repo that I can "},{"type":"text","text":"aws s3 [ls|cp]","style":{"code":true}},{"type":"text","text":" on no problem, but "},{"type":"text","text":"clj","style":{"code":true}},{"type":"text","text":" is refusing to get deps from it"}]}]}],"is_locked":false,"user":"U6SUWNB9N","reply_count":9,"latest_reply":"1628861343.365300","text":"Gaaaah! Does anyone know how to get debug information out of `clj` as to how it is trying to access a maven repo that's in an AWS S3 bucket? I've got a repo that I can `aws s3 [ls|cp]` on no problem, but `clj` is refusing to get deps from it"}
{"type":"message","thread_ts":"1628859798.359100","ts":"1628860483.363600","parent_user_id":"U6SUWNB9N","team":"T03RZGPFR","client_msg_id":"23a49a0d-b9d9-49ab-868d-c6a0ac6012f2","blocks":[{"type":"rich_text","block_id":"IN1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the reason for this is almost always creds related"}]}]}],"user":"U064X3EF3","text":"the reason for this is almost always creds related"}
{"type":"message","thread_ts":"1628859798.359100","ts":"1628860559.363800","parent_user_id":"U6SUWNB9N","team":"T03RZGPFR","client_msg_id":"1c0b410d-647c-40c8-b477-59f3129369aa","blocks":[{"type":"rich_text","block_id":"TFtW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the most common thing I run into is when the creds do not have grants for s3 GetObject etc operations (even though they have access to the bucket)"}]}]}],"user":"U064X3EF3","text":"the most common thing I run into is when the creds do not have grants for s3 GetObject etc operations (even though they have access to the bucket)"}
{"type":"message","thread_ts":"1628859798.359100","ts":"1628860814.364000","parent_user_id":"U6SUWNB9N","team":"T03RZGPFR","client_msg_id":"58c314e9-27f0-417d-bd60-994cb57bb82f","blocks":[{"type":"rich_text","block_id":"ZcMN=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I pulled the stuff down using "},{"type":"text","text":"aws s3 cp","style":{"code":true}},{"type":"text","text":", so that's fine. Worked it out in the end, but haven't worked out how to fix"}]}]}],"user":"U6SUWNB9N","text":"I pulled the stuff down using `aws s3 cp`, so that's fine. Worked it out in the end, but haven't worked out how to fix"}
{"type":"message","thread_ts":"1628859798.359100","ts":"1628860835.364200","parent_user_id":"U6SUWNB9N","team":"T03RZGPFR","client_msg_id":"9694e22c-4f17-4118-b92e-aa63ffb79616","blocks":[{"type":"rich_text","block_id":"o+GI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The maven plugin for "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" tries to lookup the location for the bucket using the S3 API"}]}]}],"user":"U6SUWNB9N","text":"The maven plugin for `deps.edn` tries to lookup the location for the bucket using the S3 API"}
{"type":"message","thread_ts":"1628859798.359100","ts":"1628860884.364400","parent_user_id":"U6SUWNB9N","team":"T03RZGPFR","client_msg_id":"bc8d2233-0573-476b-9a7e-b12e63f1bcda","blocks":[{"type":"rich_text","block_id":"ckFE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The S3 API "},{"type":"text","text":"GetBucketLocation","style":{"code":true}},{"type":"text","text":" command "},{"type":"text","text":"cannot","style":{"italic":true}},{"type":"text","text":", via AWS IAM, be granted to a user\/role not in the same account as the bucket"}]}]}],"user":"U6SUWNB9N","text":"The S3 API `GetBucketLocation` command _cannot_, via AWS IAM, be granted to a user\/role not in the same account as the bucket"}
{"type":"message","thread_ts":"1628859798.359100","ts":"1628860938.364600","parent_user_id":"U6SUWNB9N","team":"T03RZGPFR","client_msg_id":"1f80d564-a728-4a53-ae01-09908425e37d","blocks":[{"type":"rich_text","block_id":"0h5Fi","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If the bucket is  owned by  a  different  account,  the  request  will fail with an HTTP 403 (Access Denied) error."}]}]}],"user":"U6SUWNB9N","text":"&gt; If the bucket is  owned by  a  different  account,  the  request  will fail with an HTTP 403 (Access Denied) error."}
{"type":"message","thread_ts":"1628859798.359100","ts":"1628860986.364800","parent_user_id":"U6SUWNB9N","team":"T03RZGPFR","client_msg_id":"ca5ecb9c-b272-401a-982c-8d10883dbc9e","blocks":[{"type":"rich_text","block_id":"lzDe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the "},{"type":"text","text":"deps.edn","style":{"code":true}},{"type":"text","text":" maven stuff has an option to specify the repo as "},{"type":"text","text":"{:url \"","style":{"code":true}},{"type":"link","url":"s3:\/\/BUCKET_NAME?region=REGION","style":{"code":true}},{"type":"text","text":"\"}","style":{"code":true}},{"type":"text","text":", which works fine"}]}]}],"user":"U6SUWNB9N","text":"So the `deps.edn` maven stuff has an option to specify the repo as `{:url \"<s3:\/\/BUCKET_NAME?region=REGION>\"}`, which works fine"}
{"type":"message","thread_ts":"1628859798.359100","ts":"1628861008.365000","parent_user_id":"U6SUWNB9N","team":"T03RZGPFR","client_msg_id":"faa6dfc2-95e2-4048-9af2-96afc903e771","blocks":[{"type":"rich_text","block_id":"Dr4Cz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Unfortunately we're "},{"type":"text","text":"also","style":{"italic":true}},{"type":"text","text":" doing stuff with "},{"type":"text","text":"lein","style":{"code":true}},{"type":"text","text":", and the same option doesn't seem to work there"}]}]}],"user":"U6SUWNB9N","text":"Unfortunately we're _also_ doing stuff with `lein`, and the same option doesn't seem to work there"}
{"type":"message","thread_ts":"1628859798.359100","ts":"1628861343.365300","parent_user_id":"U6SUWNB9N","team":"T03RZGPFR","client_msg_id":"582c71ef-d9fd-4ef3-9588-2ae5d95650bb","blocks":[{"type":"rich_text","block_id":"eRF4c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that is a feature specific to the Clojure CLI implementation"}]}]}],"user":"U064X3EF3","text":"that is a feature specific to the Clojure CLI implementation"}
{"client_msg_id":"91b0182f-8fbd-44fb-9b50-0efbe373bcc8","type":"message","text":"good to know :slightly_smiling_face:","user":"U010VP3UY9X","ts":"1628858592.357700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"sG7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"good to know "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]}
{"subscribed":false,"reply_users":["U3JH98J4R","U010VP3UY9X"],"type":"message","thread_ts":"1628858432.357300","reply_users_count":2,"edited":{"user":"U010VP3UY9X","ts":"1628858541.000000"},"ts":"1628858432.357300","team":"T03RZGPFR","client_msg_id":"2e64e6e7-8b94-48d2-8124-2d983cc3f56b","blocks":[{"type":"rich_text","block_id":"1M3p3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmmm. this behavior is different than I imagined.  I thought the following would recur to the loop.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(loop [x 1]\n  (letfn [(y [z] ... do-something (recur (inc z)))]\n     ...))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but apparently "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" recurs to "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" not to "},{"type":"text","text":"loop","style":{"code":true}},{"type":"text","text":"."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":4,"latest_reply":"1628874600.394700","text":"hmmm. this behavior is different than I imagined.  I thought the following would recur to the loop.\n```(loop [x 1]\n  (letfn [(y [z] ... do-something (recur (inc z)))]\n     ...))```\nbut apparently `recur` recurs to `y` not to `loop`."}
{"subscribed":false,"reply_users":["U3JH98J4R","U010VP3UY9X"],"type":"message","thread_ts":"1628858432.357300","reply_users_count":2,"edited":{"user":"U010VP3UY9X","ts":"1628858541.000000"},"ts":"1628858432.357300","team":"T03RZGPFR","client_msg_id":"2e64e6e7-8b94-48d2-8124-2d983cc3f56b","blocks":[{"type":"rich_text","block_id":"1M3p3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmmm. this behavior is different than I imagined.  I thought the following would recur to the loop.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(loop [x 1]\n  (letfn [(y [z] ... do-something (recur (inc z)))]\n     ...))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but apparently "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" recurs to "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" not to "},{"type":"text","text":"loop","style":{"code":true}},{"type":"text","text":"."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":4,"latest_reply":"1628874600.394700","text":"hmmm. this behavior is different than I imagined.  I thought the following would recur to the loop.\n```(loop [x 1]\n  (letfn [(y [z] ... do-something (recur (inc z)))]\n     ...))```\nbut apparently `recur` recurs to `y` not to `loop`."}
{"type":"message","thread_ts":"1628858432.357300","ts":"1628863038.372600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"99434236-033b-4449-a397-acce0d3f6cbf","blocks":[{"type":"rich_text","block_id":"CbH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Once you get complicated like that you are into the realm of "},{"type":"text","text":"trampoline","style":{"code":true}}]}]}],"user":"U3JH98J4R","text":"Once you get complicated like that you are into the realm of `trampoline`"}
{"type":"message","thread_ts":"1628858432.357300","ts":"1628874403.394300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6a4bb0dc-9c23-4728-b375-f343603e5668","blocks":[{"type":"rich_text","block_id":"kJdPv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This problem happened to me once in Scala, but I think it has never happened to me in clojure.  In Scala, we have tail call optimization, but it is somewhat limited.   A function can call itself in tail position, and a local function can call itself in tail position, but if a local function is called in tail position, and that function calls the parent function in tail position, the scala compiler does not consider this a tail call.   Why is that important?  because if you refactor code into a local function, it might cease being tail-call-optimizable, even though it is 100% equivalent.\nSame for clojure theoretically, If I have a piece of code calling "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" in tail position, and I refactor that code into a local function, then the "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" call changes semantics.  If the local function happens to have the same arity as the parent function, it won't even be caught as a compiler error--it will just be a bug."}]}]}],"user":"U010VP3UY9X","text":"This problem happened to me once in Scala, but I think it has never happened to me in clojure.  In Scala, we have tail call optimization, but it is somewhat limited.   A function can call itself in tail position, and a local function can call itself in tail position, but if a local function is called in tail position, and that function calls the parent function in tail position, the scala compiler does not consider this a tail call.   Why is that important?  because if you refactor code into a local function, it might cease being tail-call-optimizable, even though it is 100% equivalent.\nSame for clojure theoretically, If I have a piece of code calling `recur` in tail position, and I refactor that code into a local function, then the `recur` call changes semantics.  If the local function happens to have the same arity as the parent function, it won't even be caught as a compiler error--it will just be a bug."}
{"type":"message","thread_ts":"1628858432.357300","ts":"1628874573.394500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"b9c5662a-3d9c-48bc-b374-acb1897c6ec6","blocks":[{"type":"rich_text","block_id":"cp7S9","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(loop [x 1]\n  (something)\n  (something-else)\n  (recur (inc x)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"ought to be (in my option) the same as the following in terms of referential transparency.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(loop [x 1]\n  (something)\n  (letfn [(f [x]\n            (something-else)\n            (recur (inc x)))]\n   (f x)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but lo and behold it is not."}]}]}],"user":"U010VP3UY9X","text":"```(loop [x 1]\n  (something)\n  (something-else)\n  (recur (inc x)))```\nought to be (in my option) the same as the following in terms of referential transparency.\n```(loop [x 1]\n  (something)\n  (letfn [(f [x]\n            (something-else)\n            (recur (inc x)))]\n   (f x)))```\nbut lo and behold it is not."}
{"type":"message","thread_ts":"1628858432.357300","ts":"1628874600.394700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"ed86274d-b671-41a7-9c5c-6d6525773b91","blocks":[{"type":"rich_text","block_id":"Hmm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we have the same problem of course with "},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" \/ "},{"type":"text","text":"reduced","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U010VP3UY9X","text":"we have the same problem of course with `reduce` \/ `reduced`."}
{"client_msg_id":"c0d1192e-8c73-427a-9603-41ca8dd92845","type":"message","text":"The docstrung of recur suggest to visit <https:\/\/clojure.org\/reference\/special_forms|https:\/\/clojure.org\/reference\/special_forms> where it's explained","user":"U04V4KLKC","ts":"1628858157.355500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"LPNv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The docstrung of recur suggest to visit "},{"type":"link","url":"https:\/\/clojure.org\/reference\/special_forms","text":"https:\/\/clojure.org\/reference\/special_forms"},{"type":"text","text":" where it's explained"}]}]}],"reactions":[{"name":"+1::skin-tone-2","users":["U010VP3UY9X"],"count":1}]}
{"client_msg_id":"351c21b9-8e5e-477a-9030-d32ce5c0561f","type":"message","text":"```\nuser=&gt; @(future (recur))```\n(won't finish)","user":"U04V15CAJ","ts":"1628858112.354600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"ip0E","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\nuser=> @(future (recur))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n(won't finish)"}]}]}]}
{"client_msg_id":"c1588206-fde5-47ba-9b6d-8cdd110eb5de","type":"message","text":"OK, where is this precisely defined?  only in the source code?","user":"U010VP3UY9X","ts":"1628858110.354400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"2Rb1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, where is this precisely defined?  only in the source code?"}]}]}]}
{"client_msg_id":"3bf421d1-be7d-4a0e-84d0-3475d7b537ac","type":"message","text":"yes, e.g. `future` has this: `(future (recur))`","user":"U04V15CAJ","ts":"1628858082.354000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"rXQZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, e.g. "},{"type":"text","text":"future","style":{"code":true}},{"type":"text","text":" has this: "},{"type":"text","text":"(future (recur))","style":{"code":true}}]}]}]}
{"client_msg_id":"c60bd528-e786-41b2-a868-d09e061193dd","type":"message","text":"if a macro introduces an `fn` might that change the semantics of a captured `recur` without `loop` ?","user":"U010VP3UY9X","ts":"1628858068.353700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"05R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if a macro introduces an "},{"type":"text","text":"fn","style":{"code":true}},{"type":"text","text":" might that change the semantics of a captured "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" without "},{"type":"text","text":"loop","style":{"code":true}},{"type":"text","text":" ?"}]}]}]}
{"client_msg_id":"413494cc-a4cf-468d-bd9f-ed7994a56f25","type":"message","text":"so if you look at the macroexpansion you will see that the recur applies to `fn`, `defn` is just syntactic sugar","user":"U04V15CAJ","ts":"1628858067.353500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"jiDLw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so if you look at the macroexpansion you will see that the recur applies to "},{"type":"text","text":"fn","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"defn","style":{"code":true}},{"type":"text","text":" is just syntactic sugar"}]}]}]}
{"client_msg_id":"f2abc643-e990-4b1b-ae63-53fc81dafd8e","type":"message","text":"yes, `defn` expands into a call to `fn`","user":"U04V15CAJ","ts":"1628858043.352600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"A2N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, "},{"type":"text","text":"defn","style":{"code":true}},{"type":"text","text":" expands into a call to "},{"type":"text","text":"fn","style":{"code":true}}]}]}]}
{"client_msg_id":"a22cf23b-a3a7-4e7d-a4d9-f183f9f952fd","type":"message","text":"`(defn foo [] (recur))` is the non-stack consuming version of `(defn foo [] (foo))`","user":"U04V15CAJ","ts":"1628858012.351900","team":"T03RZGPFR","edited":{"user":"U04V15CAJ","ts":"1628858025.000000"},"blocks":[{"type":"rich_text","block_id":"wXvv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(defn foo [] (recur))","style":{"code":true}},{"type":"text","text":" is the non-stack consuming version of "},{"type":"text","text":"(defn foo [] (foo))","style":{"code":true}}]}]}]}
{"client_msg_id":"fbbe4a5b-d8b0-4338-ab23-0ead29fc96ea","type":"message","text":"yes obviously in that example.  but if `recur` is found within an unnamed `(fn ...)` does that count or not?","user":"U010VP3UY9X","ts":"1628858010.351800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"MU7Zy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes obviously in that example.  but if "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" is found within an unnamed "},{"type":"text","text":"(fn ...)","style":{"code":true}},{"type":"text","text":" does that count or not?"}]}]}]}
{"client_msg_id":"658bc6a7-c91e-4816-9d55-b2bfeaaaef78","type":"message","text":"in your above example that function is `some`","user":"U04V15CAJ","ts":"1628857961.350800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"J9La","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in your above example that function is "},{"type":"text","text":"some","style":{"code":true}}]}]}]}
{"client_msg_id":"f628f9de-f868-4221-b511-d70aa621bf1d","type":"message","text":"sounds vague to me.","user":"U010VP3UY9X","ts":"1628857954.350500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"WOJo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sounds vague to me."}]}]}]}
{"client_msg_id":"65cfe3f3-3712-48d9-9406-1f017e58cd42","type":"message","text":"is \"the function you are in\" always an unambiguous description?","user":"U010VP3UY9X","ts":"1628857945.350300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"aMt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is \"the function you are in\" always an unambiguous description?"}]}]}]}
{"client_msg_id":"d5ea7693-de35-4cfa-94e9-8c5223de607e","type":"message","text":"<@U010VP3UY9X> The `recur` can also be used to recursively call the function you are in","user":"U04V15CAJ","ts":"1628857921.349900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"g3K","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U010VP3UY9X"},{"type":"text","text":" The "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" can also be used to recursively call the function you are in"}]}]}]}
{"subscribed":false,"reply_users":["U051N6TTC"],"type":"message","thread_ts":"1628857874.349400","reply_users_count":1,"edited":{"user":"U010VP3UY9X","ts":"1628857901.000000"},"ts":"1628857874.349400","team":"T03RZGPFR","client_msg_id":"289790cf-a256-49aa-a385-499ed05604d8","blocks":[{"type":"rich_text","block_id":"trNQZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"QUESTION: what precisely does "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" do when not within a "},{"type":"text","text":"loop","style":{"code":true}},{"type":"text","text":" ?\n\nI have just discovered that "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" can be used outside of loop.  I suppose that in a function such as "},{"type":"text","text":"clojure.core\/some","style":{"code":true}},{"type":"text","text":" the meaning is obvious, i.e., to call the "},{"type":"text","text":"obvious","style":{"bold":true}},{"type":"text","text":" function.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn some\n  \"Returns the first logical true value of (pred x) for any x in coll,\n  else nil.  One common idiom is to use a set as pred, for example\n  this will return :fred if :fred is in the sequence, otherwise nil:\n  (some #{:fred} coll)\"\n  {:added \"1.0\"\n   :static true}\n  [pred coll]\n    (when-let [s (seq coll)]\n      (or (pred (first s)) (recur pred (next s)))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"However, the docstring of "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" does not seem to describe this behavior.  There is also an "},{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/recur#example-55ff3cd4e4b08e404b6c1c7f","text":"example in the documentation"},{"type":"text","text":" this implies this behavior, again without explaining it precisely."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":3,"latest_reply":"1628968386.434200","text":"QUESTION: what precisely does `recur` do when not within a `loop` ?\n\nI have just discovered that `recur` can be used outside of loop.  I suppose that in a function such as `clojure.core\/some` the meaning is obvious, i.e., to call the *obvious* function.\n```(defn some\n  \"Returns the first logical true value of (pred x) for any x in coll,\n  else nil.  One common idiom is to use a set as pred, for example\n  this will return :fred if :fred is in the sequence, otherwise nil:\n  (some #{:fred} coll)\"\n  {:added \"1.0\"\n   :static true}\n  [pred coll]\n    (when-let [s (seq coll)]\n      (or (pred (first s)) (recur pred (next s)))))```\nHowever, the docstring of `recur` does not seem to describe this behavior.  There is also an <https:\/\/clojuredocs.org\/clojure.core\/recur#example-55ff3cd4e4b08e404b6c1c7f|example in the documentation> this implies this behavior, again without explaining it precisely."}
{"subscribed":false,"reply_users":["U051N6TTC"],"type":"message","thread_ts":"1628857874.349400","reply_users_count":1,"edited":{"user":"U010VP3UY9X","ts":"1628857901.000000"},"ts":"1628857874.349400","team":"T03RZGPFR","client_msg_id":"289790cf-a256-49aa-a385-499ed05604d8","blocks":[{"type":"rich_text","block_id":"trNQZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"QUESTION: what precisely does "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" do when not within a "},{"type":"text","text":"loop","style":{"code":true}},{"type":"text","text":" ?\n\nI have just discovered that "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" can be used outside of loop.  I suppose that in a function such as "},{"type":"text","text":"clojure.core\/some","style":{"code":true}},{"type":"text","text":" the meaning is obvious, i.e., to call the "},{"type":"text","text":"obvious","style":{"bold":true}},{"type":"text","text":" function.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn some\n  \"Returns the first logical true value of (pred x) for any x in coll,\n  else nil.  One common idiom is to use a set as pred, for example\n  this will return :fred if :fred is in the sequence, otherwise nil:\n  (some #{:fred} coll)\"\n  {:added \"1.0\"\n   :static true}\n  [pred coll]\n    (when-let [s (seq coll)]\n      (or (pred (first s)) (recur pred (next s)))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"However, the docstring of "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" does not seem to describe this behavior.  There is also an "},{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/recur#example-55ff3cd4e4b08e404b6c1c7f","text":"example in the documentation"},{"type":"text","text":" this implies this behavior, again without explaining it precisely."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":3,"latest_reply":"1628968386.434200","text":"QUESTION: what precisely does `recur` do when not within a `loop` ?\n\nI have just discovered that `recur` can be used outside of loop.  I suppose that in a function such as `clojure.core\/some` the meaning is obvious, i.e., to call the *obvious* function.\n```(defn some\n  \"Returns the first logical true value of (pred x) for any x in coll,\n  else nil.  One common idiom is to use a set as pred, for example\n  this will return :fred if :fred is in the sequence, otherwise nil:\n  (some #{:fred} coll)\"\n  {:added \"1.0\"\n   :static true}\n  [pred coll]\n    (when-let [s (seq coll)]\n      (or (pred (first s)) (recur pred (next s)))))```\nHowever, the docstring of `recur` does not seem to describe this behavior.  There is also an <https:\/\/clojuredocs.org\/clojure.core\/recur#example-55ff3cd4e4b08e404b6c1c7f|example in the documentation> this implies this behavior, again without explaining it precisely."}
{"type":"message","thread_ts":"1628857874.349400","ts":"1628968255.433800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e91bb517-f376-489a-86b3-c11f1636aaa1","blocks":[{"type":"rich_text","block_id":"np90+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I know this was already resolved, but I\u2019ll add to it anyway\u2026\nI always think of a "},{"type":"text","text":"loop","style":{"code":true}},{"type":"text","text":" as being like a \u03bb that gets called immediately. Sort of like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmacro my-loop\n  [form & body]\n  (let [forms (partition 2 form)\n        args (map first forms)\n        vs (map second forms)]\n    `((fn [~@args] ~@body) ~@vs)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"That way you can think of all calls to "},{"type":"text","text":"recur","style":{"code":true}},{"type":"text","text":" as going to the nearest function entry point."}]}]}],"user":"U051N6TTC","text":"I know this was already resolved, but I\u2019ll add to it anyway\u2026\nI always think of a `loop` as being like a \u03bb that gets called immediately. Sort of like:\n```(defmacro my-loop\n  [form &amp; body]\n  (let [forms (partition 2 form)\n        args (map first forms)\n        vs (map second forms)]\n    `((fn [~@args] ~@body) ~@vs)))```\nThat way you can think of all calls to `recur` as going to the nearest function entry point."}
{"type":"message","thread_ts":"1628857874.349400","ts":"1628968295.434000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c6696ef2-5cbd-4348-83b6-e5dd0c28df81","blocks":[{"type":"rich_text","block_id":"VyTt3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Loops really are a different kind of thing ("},{"type":"text","text":"loop*","style":{"code":true}},{"type":"text","text":" is a special form handled by the parser), but thinking of them as a consistent thing has helped me sometimes"}]}]}],"user":"U051N6TTC","text":"Loops really are a different kind of thing (`loop*` is a special form handled by the parser), but thinking of them as a consistent thing has helped me sometimes"}
{"type":"message","thread_ts":"1628857874.349400","edited":{"user":"U051N6TTC","ts":"1628968437.000000"},"ts":"1628968386.434200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8278618b-6a8e-472e-b59d-691cacb6c67f","blocks":[{"type":"rich_text","block_id":"=nZ+f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And it\u2019s always the nearest loop\/fn that it jumps to. That\u2019s similar to how "},{"type":"text","text":"break","style":{"code":true}},{"type":"text","text":"\/"},{"type":"text","text":"continue","style":{"code":true}},{"type":"text","text":" work in Java, except that there\u2019s no "},{"type":"text","text":"label","style":{"italic":true}},{"type":"text","text":" option to jump out to a higher level"}]}]}],"user":"U051N6TTC","text":"And it\u2019s always the nearest loop\/fn that it jumps to. That\u2019s similar to how `break`\/`continue` work in Java, except that there\u2019s no _label_ option to jump out to a higher level"}
{"client_msg_id":"89b2629e-5d32-469a-97f0-d97e5a14e636","type":"message","text":"Study sessions this weekend: dtype-next.\n<https:\/\/clojureverse.org\/t\/scicloj-ml-study-16-high-performance-array-processing-with-dtype-next\/8032?u=daslu|https:\/\/clojureverse.org\/t\/scicloj-ml-study-16-high-performance-array-processing-with-dtype-next\/8032?u=daslu>","user":"U066L8B18","ts":"1628855488.346200","team":"T03RZGPFR","attachments":[{"thumb_width":512,"thumb_height":512,"service_name":"ClojureVerse","title_link":"https:\/\/clojureverse.org\/t\/scicloj-ml-study-16-high-performance-array-processing-with-dtype-next\/8032?u=daslu","fallback":"ClojureVerse: Scicloj ml-study 16: high-performance array processing with dtype-next","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"1 :heart:","short":true}],"from_url":"https:\/\/clojureverse.org\/t\/scicloj-ml-study-16-high-performance-array-processing-with-dtype-next\/8032?u=daslu","title":"Scicloj ml-study 16: high-performance array processing with dtype-next","ts":1628718797,"id":1,"thumb_url":"https:\/\/clojureverse.org\/uploads\/default\/original\/2X\/0\/05328734cba366c9983ba813acf85033eac594b8.png","service_icon":"https:\/\/clojureverse.org\/uploads\/default\/optimized\/2X\/0\/05328734cba366c9983ba813acf85033eac594b8_2_180x180.png","original_url":"https:\/\/clojureverse.org\/t\/scicloj-ml-study-16-high-performance-array-processing-with-dtype-next\/8032?u=daslu","text":"This weekend at the Scicloj ml-study group we will have basic learning sessions about the dtype-next library for high-performance array-processing by @cnuernber. Session times: Saturday, 12:00-14:00 UTC Sunday, 04:00-06:00 UTC Sunday, 18:00-20:00 UTC The 3 sessions will be self-contained, independent, and probably overlapping in content. As usual, we will record the sessions but share the recording only here, for the friends who miss the session. For more information, please follow the ml-..."}],"blocks":[{"type":"rich_text","block_id":"xdJMu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Study sessions this weekend: dtype-next.\n"},{"type":"link","url":"https:\/\/clojureverse.org\/t\/scicloj-ml-study-16-high-performance-array-processing-with-dtype-next\/8032?u=daslu","text":"https:\/\/clojureverse.org\/t\/scicloj-ml-study-16-high-performance-array-processing-with-dtype-next\/8032?u=daslu"}]}]}]}
{"subscribed":false,"reply_users":["U04V4KLKC","U010VP3UY9X","U0K064KQV","U051SS2EU"],"type":"message","thread_ts":"1628843344.337300","reply_users_count":4,"ts":"1628843344.337300","team":"T03RZGPFR","client_msg_id":"8d3a28ea-1bad-4086-9ff5-c60b0cdc5970","blocks":[{"type":"rich_text","block_id":"aP2b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can someone help me understand how this works\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn seq1 [#^clojure.lang.ISeq s]\n  (reify clojure.lang.ISeq\n    (first [_] (.first s))\n    (more [_] (seq1 (.more s)))\n    (next [_] (let [sn (.next s)] (and sn (seq1 sn))))\n    (seq [_] (let [ss (.seq s)] (and ss (seq1 ss))))\n    (count [_] (.count s))\n    (cons [_ o] (.cons s o))\n    (empty [_] (.empty s))\n    (equiv [_ o] (.equiv s o))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"the code is taken from "},{"type":"link","url":"http:\/\/blog.fogus.me\/2010\/01\/22\/de-chunkifying-sequences-in-clojure\/comment-page-1\/?unapproved=1391028&moderation-hash=034bf1cd8870d627d36fd727b298df79#comment-1391028","text":"this blog post by Fogus"},{"type":"text","text":".    Which functions can I put in this list?   Can I put "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"filter","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":", and thus allow my object to work with "},{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":" comprehensions?"}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":140,"latest_reply":"1629153232.011500","text":"can someone help me understand how this works\n```(defn seq1 [#^clojure.lang.ISeq s]\n  (reify clojure.lang.ISeq\n    (first [_] (.first s))\n    (more [_] (seq1 (.more s)))\n    (next [_] (let [sn (.next s)] (and sn (seq1 sn))))\n    (seq [_] (let [ss (.seq s)] (and ss (seq1 ss))))\n    (count [_] (.count s))\n    (cons [_ o] (.cons s o))\n    (empty [_] (.empty s))\n    (equiv [_ o] (.equiv s o))))```\nthe code is taken from <http:\/\/blog.fogus.me\/2010\/01\/22\/de-chunkifying-sequences-in-clojure\/comment-page-1\/?unapproved=1391028&amp;moderation-hash=034bf1cd8870d627d36fd727b298df79#comment-1391028|this blog post by Fogus>.    Which functions can I put in this list?   Can I put `map`, `filter`, and `mapcat`, and thus allow my object to work with `for` comprehensions?"}
{"subscribed":false,"reply_users":["U04V4KLKC","U010VP3UY9X","U0K064KQV","U051SS2EU"],"type":"message","thread_ts":"1628843344.337300","reply_users_count":4,"ts":"1628843344.337300","team":"T03RZGPFR","client_msg_id":"8d3a28ea-1bad-4086-9ff5-c60b0cdc5970","blocks":[{"type":"rich_text","block_id":"aP2b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can someone help me understand how this works\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn seq1 [#^clojure.lang.ISeq s]\n  (reify clojure.lang.ISeq\n    (first [_] (.first s))\n    (more [_] (seq1 (.more s)))\n    (next [_] (let [sn (.next s)] (and sn (seq1 sn))))\n    (seq [_] (let [ss (.seq s)] (and ss (seq1 ss))))\n    (count [_] (.count s))\n    (cons [_ o] (.cons s o))\n    (empty [_] (.empty s))\n    (equiv [_ o] (.equiv s o))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"the code is taken from "},{"type":"link","url":"http:\/\/blog.fogus.me\/2010\/01\/22\/de-chunkifying-sequences-in-clojure\/comment-page-1\/?unapproved=1391028&moderation-hash=034bf1cd8870d627d36fd727b298df79#comment-1391028","text":"this blog post by Fogus"},{"type":"text","text":".    Which functions can I put in this list?   Can I put "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"filter","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":", and thus allow my object to work with "},{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":" comprehensions?"}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":140,"latest_reply":"1629153232.011500","text":"can someone help me understand how this works\n```(defn seq1 [#^clojure.lang.ISeq s]\n  (reify clojure.lang.ISeq\n    (first [_] (.first s))\n    (more [_] (seq1 (.more s)))\n    (next [_] (let [sn (.next s)] (and sn (seq1 sn))))\n    (seq [_] (let [ss (.seq s)] (and ss (seq1 ss))))\n    (count [_] (.count s))\n    (cons [_ o] (.cons s o))\n    (empty [_] (.empty s))\n    (equiv [_ o] (.equiv s o))))```\nthe code is taken from <http:\/\/blog.fogus.me\/2010\/01\/22\/de-chunkifying-sequences-in-clojure\/comment-page-1\/?unapproved=1391028&amp;moderation-hash=034bf1cd8870d627d36fd727b298df79#comment-1391028|this blog post by Fogus>.    Which functions can I put in this list?   Can I put `map`, `filter`, and `mapcat`, and thus allow my object to work with `for` comprehensions?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628843682.337400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"4b75ca55-0657-4011-9637-0d33571186a5","blocks":[{"type":"rich_text","block_id":"Gst","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"look at this definition first - "},{"type":"link","url":"https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/jvm\/clojure\/lang\/ISeq.java"},{"type":"text","text":"\nthis interface is extending "},{"type":"link","url":"https:\/\/github.com\/clojure\/clojure\/blob\/a29f9b911b569b0a4890f320ec8f946329bbe0fd\/src\/jvm\/clojure\/lang\/IPersistentCollection.java#L14"},{"type":"text","text":"\nwhich is also an extension of "},{"type":"link","url":"https:\/\/github.com\/clojure\/clojure\/blob\/a29f9b911b569b0a4890f320ec8f946329bbe0fd\/src\/jvm\/clojure\/lang\/Seqable.java#L15"},{"type":"text","text":"\nso to implement a custom ISeq you need to provide implementation of methods defined for those interfaces only.\n"},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" , "},{"type":"text","text":"filter","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":" are just functions"}]}]}],"user":"U04V4KLKC","text":"look at this definition first - <https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/jvm\/clojure\/lang\/ISeq.java>\nthis interface is extending <https:\/\/github.com\/clojure\/clojure\/blob\/a29f9b911b569b0a4890f320ec8f946329bbe0fd\/src\/jvm\/clojure\/lang\/IPersistentCollection.java#L14>\nwhich is also an extension of <https:\/\/github.com\/clojure\/clojure\/blob\/a29f9b911b569b0a4890f320ec8f946329bbe0fd\/src\/jvm\/clojure\/lang\/Seqable.java#L15>\nso to implement a custom ISeq you need to provide implementation of methods defined for those interfaces only.\n`map` , `filter`, `mapcat` are just functions"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628843945.337600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9e73eaeb-9bda-4974-8af9-e21debbc654e","blocks":[{"type":"rich_text","block_id":"0fFJo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ahh and "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"filter","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":" are not methods on any of those interfaces, so I can't influence the "},{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":" comprehension for my object?"}]}]}],"user":"U010VP3UY9X","text":"ahh and `map`, `filter`, and `mapcat` are not methods on any of those interfaces, so I can't influence the `for` comprehension for my object?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628844053.337800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9db6d9b8-204f-4757-859e-d8acd316c2a3","blocks":[{"type":"rich_text","block_id":"j\/o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"influence how?"}]}]}],"user":"U04V4KLKC","text":"influence how?"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U04V4KLKC","ts":"1628844276.000000"},"ts":"1628844270.338000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e7386ef3-3d66-4394-b768-1b8903cb9e05","blocks":[{"type":"rich_text","block_id":"\/ExM","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"  (defn seq1 [#^clojure.lang.ISeq s]\n    (reify clojure.lang.ISeq\n      (first [_] (.first s))\n      (more [_] (seq1 (.more s)))\n      ; (next [_] (let [sn (.next s)] (and sn (seq1 sn))))\n      (seq [_] (let [ss (.seq s)] (and ss (seq1 ss))))\n      ; (count [_] (.count s))\n      ; (cons [_ o] (.cons s o))\n      ; (empty [_] (.empty s))\n      ; (equiv [_ o] (.equiv s o))\n      ))\n\n  (for [x (seq1 '(1 2 3))]\n    x)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"after some experiments to influence "},{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":" behavior you have to implement "},{"type":"text","text":"first","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"more","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"seq","style":{"code":true}},{"type":"text","text":" methods only"}]}]}],"user":"U04V4KLKC","text":"```  (defn seq1 [#^clojure.lang.ISeq s]\n    (reify clojure.lang.ISeq\n      (first [_] (.first s))\n      (more [_] (seq1 (.more s)))\n      ; (next [_] (let [sn (.next s)] (and sn (seq1 sn))))\n      (seq [_] (let [ss (.seq s)] (and ss (seq1 ss))))\n      ; (count [_] (.count s))\n      ; (cons [_ o] (.cons s o))\n      ; (empty [_] (.empty s))\n      ; (equiv [_ o] (.equiv s o))\n      ))\n\n  (for [x (seq1 '(1 2 3))]\n    x)```\nafter some experiments to influence `for` behavior you have to implement `first`, `more` and `seq` methods only"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628844323.338300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"670fa041-ffaf-47c5-a1c2-8dc7c76dc7a7","blocks":[{"type":"rich_text","block_id":"Oeb3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what I mean by influence is that I can write "},{"type":"text","text":"my-map","style":{"code":true}},{"type":"text","text":" which when given a particular type of object, returns a particular type, in particular returns the same type.   However, I can't force "},{"type":"text","text":"clojure.core\/map","style":{"code":true}},{"type":"text","text":" to return this particular type.   And I can't "},{"type":"text","text":"influence","style":{"bold":true}},{"type":"text","text":" "},{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":" to expand to a call to "},{"type":"text","text":"my-map","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U010VP3UY9X","text":"what I mean by influence is that I can write `my-map` which when given a particular type of object, returns a particular type, in particular returns the same type.   However, I can't force `clojure.core\/map` to return this particular type.   And I can't *influence* `for` to expand to a call to `my-map`."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628844340.338500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"b684e273-5e89-488f-a8bb-7b2c1088a16b","blocks":[{"type":"rich_text","block_id":"zqc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where "},{"type":"text","text":"first","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"more","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"seq","style":{"code":true}},{"type":"text","text":" are methods, not functions"}]}]}],"user":"U04V4KLKC","text":"where `first`, `more` and `seq` are methods, not functions"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U010VP3UY9X","ts":"1628844455.000000"},"ts":"1628844373.338700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e02085c9-df53-4dbd-923d-0f33262c15d2","blocks":[{"type":"rich_text","block_id":"jXKx5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As I understand (correct me if I'm wrong) "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" always returns a chunked lazy sequence.   if I give it an unchunked lazy sequence which I have created, it will still returned a chunked lazy sequence.  right?"}]}]}],"user":"U010VP3UY9X","text":"As I understand (correct me if I'm wrong) `map` always returns a chunked lazy sequence.   if I give it an unchunked lazy sequence which I have created, it will still returned a chunked lazy sequence.  right?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628844652.339000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"b74bdcdb-5c2b-490b-a698-b3dc0786dc3f","blocks":[{"type":"rich_text","block_id":"BbR7h","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"  (defn re-chunk [n xs]\n    (lazy-seq\n      (when-let [s (seq (take n xs))]\n        (let [cb (chunk-buffer n)]\n          (doseq [x s] (chunk-append cb x))\n          (chunk-cons (chunk cb) (re-chunk n (drop n xs)))))))\n\n  (first (map #(doto % (prn \"!\"))\n           (map #(doto % (prn \"@\"))\n             (re-chunk 1 (range 100)))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"quick way to check"}]}]}],"user":"U04V4KLKC","text":"```  (defn re-chunk [n xs]\n    (lazy-seq\n      (when-let [s (seq (take n xs))]\n        (let [cb (chunk-buffer n)]\n          (doseq [x s] (chunk-append cb x))\n          (chunk-cons (chunk cb) (re-chunk n (drop n xs)))))))\n\n  (first (map #(doto % (prn \"!\"))\n           (map #(doto % (prn \"@\"))\n             (re-chunk 1 (range 100)))))```\nquick way to check"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628844999.339200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"cab91573-ec9e-4cdc-ade5-8082644537e1","blocks":[{"type":"rich_text","block_id":"qAlY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I really don't understand what is happening.   I was trying to implement a 1-chunked lazy sequence using things I understand.    Your example seems to work for map.  but not for mapcat.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(first (mapcat #(doto [%] (prn \"!\"))\n           (mapcat #(doto [%] (prn \"@\"))\n             (re-chunk 1 (range 100)))))"}]}]}],"user":"U010VP3UY9X","text":"I really don't understand what is happening.   I was trying to implement a 1-chunked lazy sequence using things I understand.    Your example seems to work for map.  but not for mapcat.\n```(first (mapcat #(doto [%] (prn \"!\"))\n           (mapcat #(doto [%] (prn \"@\"))\n             (re-chunk 1 (range 100)))))```"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628845018.339400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"efc58c3a-4beb-4f84-9e0e-7c5eb1807c25","blocks":[{"type":"rich_text","block_id":"1aUZ3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"returns 0 but prints\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[0] \"@\"\n[1] \"@\"\n[2] \"@\"\n[3] \"@\"\n[0] \"!\"\n[1] \"!\"\n[2] \"!\"\n[4] \"@\"\n[3] \"!\""}]}]}],"user":"U010VP3UY9X","text":"returns 0 but prints\n```[0] \"@\"\n[1] \"@\"\n[2] \"@\"\n[3] \"@\"\n[0] \"!\"\n[1] \"!\"\n[2] \"!\"\n[4] \"@\"\n[3] \"!\"```"}
{"attachments":[{"thumb_width":872,"thumb_height":742,"service_name":"GitLab","title_link":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/6fc3b41204a109bcde0ead0e0a69551e1bc47faa\/src\/clojure_rte\/lazy.clj","fallback":"GitLab: src\/clojure_rte\/lazy.clj \u00b7 6fc3b41204a109bcde0ead0e0a69551e1bc47faa \u00b7 Jim Newton \/ clojure-rte","from_url":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/6fc3b41204a109bcde0ead0e0a69551e1bc47faa\/src\/clojure_rte\/lazy.clj","title":"src\/clojure_rte\/lazy.clj \u00b7 6fc3b41204a109bcde0ead0e0a69551e1bc47faa \u00b7 Jim Newton \/ clojure-rte","id":1,"thumb_url":"https:\/\/gitlab.lrde.epita.fr\/uploads\/-\/system\/project\/avatar\/620\/symbolic-finite-automaton.png","service_icon":"https:\/\/gitlab.lrde.epita.fr\/assets\/touch-icon-iphone-5a9cee0e8a51212e70b90c87c12f382c428870c0ff67d1eb034d884b78d2dae7.png","original_url":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/6fc3b41204a109bcde0ead0e0a69551e1bc47faa\/src\/clojure_rte\/lazy.clj","text":"Clojure implementation of rational type expressions"}],"type":"message","thread_ts":"1628843344.337300","ts":"1628845165.339600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"75993e1f-5df0-4096-9c1b-797a46d91d70","blocks":[{"type":"rich_text","block_id":"FbNi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So what I was doing, was to implement filter, map, mapcat, and concat in a simple enough way to enforce the type.\n"},{"type":"link","url":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/6fc3b41204a109bcde0ead0e0a69551e1bc47faa\/src\/clojure_rte\/lazy.clj"}]}]}],"user":"U010VP3UY9X","text":"So what I was doing, was to implement filter, map, mapcat, and concat in a simple enough way to enforce the type.\n<https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/6fc3b41204a109bcde0ead0e0a69551e1bc47faa\/src\/clojure_rte\/lazy.clj>"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628846292.339900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"697f1756-da7d-46e4-9e13-84ad187cec3f","blocks":[{"type":"rich_text","block_id":"97m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"whereas my implementation of "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":" does not seem to have a hidden chunkiness\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\nclojure-rte.rte-core> (first (lazy\/mapcat #(doto [%] (prn \"!\"))\n                                          (lazy\/mapcat #(doto [%] (prn \"@\"))\n                                                       (range 100))))\n[0] \"@\"\n[0] \"!\"\n0\nclojure-rte.rte-core> "}]}]}],"user":"U010VP3UY9X","text":"whereas my implementation of `mapcat` does not seem to have a hidden chunkiness\n```\nclojure-rte.rte-core&gt; (first (lazy\/mapcat #(doto [%] (prn \"!\"))\n                                          (lazy\/mapcat #(doto [%] (prn \"@\"))\n                                                       (range 100))))\n[0] \"@\"\n[0] \"!\"\n0\nclojure-rte.rte-core&gt; ```"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628846816.340100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"4ed1ff23-95b0-4164-906c-5c0ef69b72e7","blocks":[{"type":"rich_text","block_id":"ZVK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"whoever mine fails sometimes.   still debugging.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"clojure-rte.rte-core> (first (lazy\/map (fn [x] (prn [:outer x]) x)\n                                       (lazy\/map (fn [x] (prn [:inner x]) x)\n                                                 '(1 2 3))))\n[:inner 1]\n[:outer 1]\n[:inner 2]\n1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"the inner function is called twice.  Not yet sure why."}]}]}],"user":"U010VP3UY9X","text":"whoever mine fails sometimes.   still debugging.\n```clojure-rte.rte-core&gt; (first (lazy\/map (fn [x] (prn [:outer x]) x)\n                                       (lazy\/map (fn [x] (prn [:inner x]) x)\n                                                 '(1 2 3))))\n[:inner 1]\n[:outer 1]\n[:inner 2]\n1```\nthe inner function is called twice.  Not yet sure why."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628851409.341100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f3191d86-d78f-4b22-97ee-663d2d275396","blocks":[{"type":"rich_text","block_id":"jlxI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"out of curiosity - why so complex?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns clojure-rte.lazy ...)\n\n(alias 'lazy 'clojure-rte.lazy)\n\n(def lazy\/concat ...)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"even if you have alias defined you still can define all the functions using "},{"type":"text","text":"(defn concat \u2026","style":{"code":true}}]}]}],"user":"U04V4KLKC","text":"out of curiosity - why so complex?\n```(ns clojure-rte.lazy ...)\n\n(alias 'lazy 'clojure-rte.lazy)\n\n(def lazy\/concat ...)```\neven if you have alias defined you still can define all the functions using `(defn concat \u2026`"}
{"attachments":[{"color":"24292f","footer_icon":"https:\/\/slack.github.com\/static\/img\/favicon-neutral.png","fallback":"<https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/IChunkedSeq.java | IChunkedSeq.java>","mrkdwn_in":["text"],"is_app_unfurl":true,"footer":"<https:\/\/github.com\/clojure\/clojure|clojure\/clojure>","title":"<https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/IChunkedSeq.java | IChunkedSeq.java>","id":1,"app_unfurl_url":"https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/IChunkedSeq.java","text":"```\n\/**\n *   Copyright (c) Rich Hickey. All rights reserved.\n *   The use and distribution terms for this software are covered by the\n *   Eclipse Public License 1.0 (<http:\/\/opensource.org\/licenses\/eclipse-1.0.php>)\n *   which can be found in the file epl-v10.html at the root of this distribution.\n *   By using this software in any fashion, you are agreeing to be bound by\n * \t the terms of this license.\n *   You must not remove this notice, or any other, from this software.\n **\/\n\n\/* rich May 24, 2009 *\/\n\npackage clojure.lang;\n\npublic interface IChunkedSeq extends ISeq, Sequential {\n\nIChunk chunkedFirst() ;\n\nISeq chunkedNext() ;\n\nISeq chunkedMore() ;\n\n}\n\n```","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1628843344.337300","ts":"1628851612.341300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6ffc04c6-d421-44bf-8b3c-ade8b7e9ce8d","blocks":[{"type":"rich_text","block_id":"rR4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and back to the topic -\nthe problem with mapcat is that it internally uses  concat which itself is checking input sequences to be "},{"type":"text","text":"chunked-seq?","style":{"code":true}},{"type":"text","text":" and if it is not chunked (effectively not implementing this interface - "},{"type":"link","url":"https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/IChunkedSeq.java"},{"type":"text","text":")\nthen the sequences will be treated as normal sequence."}]}]}],"user":"U04V4KLKC","text":"and back to the topic -\nthe problem with mapcat is that it internally uses  concat which itself is checking input sequences to be `chunked-seq?` and if it is not chunked (effectively not implementing this interface - <https:\/\/github.com\/clojure\/clojure\/blob\/b1b88dd25373a86e41310a525a21b497799dbbf2\/src\/jvm\/clojure\/lang\/IChunkedSeq.java>)\nthen the sequences will be treated as normal sequence."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628851615.341500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"554809fd-0a86-4970-8b07-29f80667f7ff","blocks":[{"type":"rich_text","block_id":"fOoX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's just a convention I have started using for myself.   whenever I define a function whose name is likely to conflict accidentally with another function either in clojure.core or in another one of my own namespaces, I completely avoid using the unqualified name.\n\nthe danger is that if I use something like grep the output won't be clear which function name is in the output."}]}]}],"user":"U010VP3UY9X","text":"that's just a convention I have started using for myself.   whenever I define a function whose name is likely to conflict accidentally with another function either in clojure.core or in another one of my own namespaces, I completely avoid using the unqualified name.\n\nthe danger is that if I use something like grep the output won't be clear which function name is in the output."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628851786.341800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"cc44a17e-9bc3-4c9e-9e02-a041a677e6dc","blocks":[{"type":"rich_text","block_id":"vKB3L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"of course there are many advantages to "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":" , "},{"type":"text","text":"concat","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"filter","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" being normal functions.  However, this is one disadvantage.  If they were methods then when "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":" internally used "},{"type":"text","text":"concat","style":{"code":true}},{"type":"text","text":", it would dispatch to the appropriate user defined "},{"type":"text","text":"concat","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U010VP3UY9X","text":"of course there are many advantages to `mapcat` , `concat`, `filter`, and `map` being normal functions.  However, this is one disadvantage.  If they were methods then when `mapcat` internally used `concat`, it would dispatch to the appropriate user defined `concat`."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628851822.342000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"7297800f-2597-4bc2-9d26-f3a0776530e7","blocks":[{"type":"rich_text","block_id":"cFWt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but "},{"type":"text","text":"defn","style":{"code":true}},{"type":"text","text":" requires the name to be simple symbol. and I think that\u2019s why you have to have "},{"type":"text","text":"(def lazy\/concat (fn ...","style":{"code":true}},{"type":"text","text":" so other tools like clj-kondo might not identify such symbols as functions anymore."}]}]}],"user":"U04V4KLKC","text":"but `defn` requires the name to be simple symbol. and I think that\u2019s why you have to have `(def lazy\/concat (fn ...` so other tools like clj-kondo might not identify such symbols as functions anymore."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628851850.342200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2dec06ea-6c21-4d99-a50f-c911a97a6ba2","blocks":[{"type":"rich_text","block_id":"ht7M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW, I'm not even sure if my final experiment will work.   I'm trying to see whether in my particular application 1-chunking is advantageous."}]}]}],"user":"U010VP3UY9X","text":"BTW, I'm not even sure if my final experiment will work.   I'm trying to see whether in my particular application 1-chunking is advantageous."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628851930.342400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"df164b95-958f-4406-855d-a39a08ee0611","blocks":[{"type":"rich_text","block_id":"kzYj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes indeed.  "},{"type":"text","text":"defn","style":{"code":true}},{"type":"text","text":" requires a simple symbol (I think that is a bug in the spec-based syntax check for "},{"type":"text","text":"defn","style":{"code":true}},{"type":"text","text":" ), while "},{"type":"text","text":"def","style":{"code":true}},{"type":"text","text":" allows the prefix.  it is annoying that the "},{"type":"text","text":"defn","style":{"code":true}},{"type":"text","text":" check is overzealous."}]}]}],"user":"U010VP3UY9X","text":"yes indeed.  `defn` requires a simple symbol (I think that is a bug in the spec-based syntax check for `defn` ), while `def` allows the prefix.  it is annoying that the `defn` check is overzealous."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628851967.342600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6852ab7a-6d7a-4dd9-956e-dfc81b7ae5e2","blocks":[{"type":"rich_text","block_id":"510","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would not be surprised if certain tools get confused.  But clj-kondo (the one I'm using) is happy with it."}]}]}],"user":"U010VP3UY9X","text":"I would not be surprised if certain tools get confused.  But clj-kondo (the one I'm using) is happy with it."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628852202.342800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c3631aa7-5c14-477b-9bd0-c3372b99dce4","blocks":[{"type":"rich_text","block_id":"YhtF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think main intention was to disallow defining function for some another namespace"}]}]}],"user":"U04V4KLKC","text":"I think main intention was to disallow defining function for some another namespace"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628852236.343000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"223e0dc6-b549-4cd0-9b4e-41ce801ad193","blocks":[{"type":"rich_text","block_id":"=RNT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I remember Alex talking about this in some thread."}]}]}],"user":"U04V4KLKC","text":"I remember Alex talking about this in some thread."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628852285.343200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5aa65ddd-ac97-4277-a433-ad0226c02c1e","blocks":[{"type":"rich_text","block_id":"RyQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and giving that allowing qualified symbols for "},{"type":"text","text":"def","style":{"code":true}},{"type":"text","text":" looks like a bug to me"}]}]}],"user":"U04V4KLKC","text":"and giving that allowing qualified symbols for `def` looks like a bug to me"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628852318.343400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"109840d9-00ae-43cd-a4d7-4e2789ede2b7","blocks":[{"type":"rich_text","block_id":"8MtSC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if that was the intent, then indeed the check is overzealous.  it also disallows using the current namespace as prefix."}]}]}],"user":"U010VP3UY9X","text":"if that was the intent, then indeed the check is overzealous.  it also disallows using the current namespace as prefix."}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U04V4KLKC","ts":"1628852470.000000"},"ts":"1628852466.343600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"b6c98b68-ba80-4eaa-bfb5-abb75e466fa0","blocks":[{"type":"rich_text","block_id":"SXd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not sure if this is bad thou"}]}]}],"user":"U04V4KLKC","text":"not sure if this is bad thou"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U010VP3UY9X","ts":"1628852528.000000"},"ts":"1628852508.343900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5f5067d2-afaa-4594-9247-279de564a93b","blocks":[{"type":"rich_text","block_id":"nsX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it seems strange to me (my own personal opinion, others may freely disagree) that I use a name like "},{"type":"text","text":"gns\/foo","style":{"code":true}},{"type":"text","text":" everywhere in my application "},{"type":"text","text":"except ","style":{"bold":true}},{"type":"text","text":"in the file where it is defined, where I must use "},{"type":"text","text":"foo","style":{"code":true}},{"type":"text","text":" .  it is a potential source of errors if I have multiple "},{"type":"text","text":"foo","style":{"code":true}},{"type":"text","text":"s defined and I copy code around during refactoring."}]}]}],"user":"U010VP3UY9X","text":"it seems strange to me (my own personal opinion, others may freely disagree) that I use a name like `gns\/foo` everywhere in my application *except* in the file where it is defined, where I must use `foo` .  it is a potential source of errors if I have multiple `foo`s defined and I copy code around during refactoring."}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U010VP3UY9X","ts":"1628852564.000000"},"ts":"1628852553.344200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"cdf9375d-ebbd-42a8-a856-e17f2953e4f4","blocks":[{"type":"rich_text","block_id":"Y+iV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"of course 99.99% of the time I don't have multiple identifiers of the same name.  but it does happen from time to time."}]}]}],"user":"U010VP3UY9X","text":"of course 99.99% of the time I don't have multiple identifiers of the same name.  but it does happen from time to time."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628852581.344500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5782030e-b111-4acd-8a5a-eee4aa0e8ed1","blocks":[{"type":"rich_text","block_id":"5WJn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"true, but this depends on you personal choice of picking alias name"}]}]}],"user":"U04V4KLKC","text":"true, but this depends on you personal choice of picking alias name"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U04V4KLKC","ts":"1628852649.000000"},"ts":"1628852625.344700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"7e2f3f98-7422-4dd2-ae98-dc0914e36502","blocks":[{"type":"rich_text","block_id":"4fQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it is completely fine to have different aliases for the same ns in different other namespaces"}]}]}],"user":"U04V4KLKC","text":"it is completely fine to have different aliases for the same ns in different other namespaces"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628852770.345000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6b423d2a-6e83-4ff2-b56a-a31704ca80be","blocks":[{"type":"rich_text","block_id":"utv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I recently defined two slightly different extensions of Boolean algebra in an application.  So I had 3 different "},{"type":"text","text":"and","style":{"code":true}},{"type":"text","text":"s.  the one from clojure.core and then the two from my application.  at the beginning I had a hard bug to find.  I was afraid I had misused "},{"type":"text","text":"and","style":{"code":true}},{"type":"text","text":" somewhere.  Turned out the bug was something else, but in the end I renamed all "},{"type":"text","text":"and","style":{"code":true}},{"type":"text","text":"s to include prefixes during my debugging."}]}]}],"user":"U010VP3UY9X","text":"I recently defined two slightly different extensions of Boolean algebra in an application.  So I had 3 different `and`s.  the one from clojure.core and then the two from my application.  at the beginning I had a hard bug to find.  I was afraid I had misused `and` somewhere.  Turned out the bug was something else, but in the end I renamed all `and`s to include prefixes during my debugging."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628852911.345200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"ef922cd8-b704-404d-a27d-3cdab8ca4c88","blocks":[{"type":"rich_text","block_id":"n\/L13","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"two different aliases for the same namespace?  I hadn't considered that.  but yes you are right."}]}]}],"user":"U010VP3UY9X","text":"two different aliases for the same namespace?  I hadn't considered that.  but yes you are right."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1628852951.345400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"eec6d57b-d705-489e-a401-c825928aa617","blocks":[{"type":"rich_text","block_id":"01A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've probably done that in some of my test cases come to think of it.  Because I don't always force myself to be consistent in test cases files."}]}]}],"user":"U010VP3UY9X","text":"I've probably done that in some of my test cases come to think of it.  Because I don't always force myself to be consistent in test cases files."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629050850.461100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c1056a47-a73a-4ca6-9034-edb5b8146528","blocks":[{"type":"rich_text","block_id":"Tu2J4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the reason it doesn't work for mapcat is because it uses varargs"}]}]}],"user":"U0K064KQV","text":"I think the reason it doesn't work for mapcat is because it uses varargs"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U0K064KQV","ts":"1629079948.000000"},"ts":"1629078621.464800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"04b4dba6-14a5-4167-ae48-c9984e71e020","blocks":[{"type":"rich_text","block_id":"jtEM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because mapcat will use apply and apply always realizes the first 4 elements, nothing to do with chunking."}]}]}],"user":"U0K064KQV","text":"Because mapcat will use apply and apply always realizes the first 4 elements, nothing to do with chunking."}
{"attachments":[{"thumb_width":316,"thumb_height":316,"service_name":"Stack Overflow","title_link":"https:\/\/stackoverflow.com\/questions\/51959298\/clojure-apply-that-does-not-realize-the-first-four-elements-of-a-lazy-sequence","fallback":"Stack Overflow: Clojure apply that does not realize the first four elements of a lazy sequence?","from_url":"https:\/\/stackoverflow.com\/questions\/51959298\/clojure-apply-that-does-not-realize-the-first-four-elements-of-a-lazy-sequence","title":"Clojure apply that does not realize the first four elements of a lazy sequence?","id":1,"thumb_url":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded","service_icon":"https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a","original_url":"https:\/\/stackoverflow.com\/questions\/51959298\/clojure-apply-that-does-not-realize-the-first-four-elements-of-a-lazy-sequence","text":"It appears that apply forces the realization of four elements given a lazy sequence. (take 1 (apply concat (repeatedly #(do (println \"called\") ..."}],"type":"message","thread_ts":"1628843344.337300","ts":"1629079102.465000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f69edfa0-164e-43d4-9dc4-dcdc6a2d5c93","blocks":[{"type":"rich_text","block_id":"QxAeK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"See: "},{"type":"link","url":"https:\/\/stackoverflow.com\/questions\/51959298\/clojure-apply-that-does-not-realize-the-first-four-elements-of-a-lazy-sequence"}]}]}],"user":"U0K064KQV","text":"See: <https:\/\/stackoverflow.com\/questions\/51959298\/clojure-apply-that-does-not-realize-the-first-four-elements-of-a-lazy-sequence>"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629079793.465300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2f44ae42-1e08-45d3-9e5f-fe317ac8c210","blocks":[{"type":"rich_text","block_id":"8gbH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is the other problem that not all sequence functions are implemented in a way that is maximally lazy, iregardless of chunking."}]}]}],"user":"U0K064KQV","text":"This is the other problem that not all sequence functions are implemented in a way that is maximally lazy, iregardless of chunking."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629132028.481000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6ab3b1e8-0911-4b7b-9644-2fdefa0cd75d","blocks":[{"type":"rich_text","block_id":"V+0c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which is why the \"canonical\" answer is always: if your code correctness \/ suitability is changed by chunking vs. not chunking, you shouldn't be using lazy seqs for that code"}]}]}],"user":"U051SS2EU","text":"which is why the \"canonical\" answer is always: if your code correctness \/ suitability is changed by chunking vs. not chunking, you shouldn't be using lazy seqs for that code"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U0K064KQV","ts":"1629138878.000000"},"ts":"1629138777.483700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"efc5d10a-d7c7-4f33-896b-2a61ec426a81","blocks":[{"type":"rich_text","block_id":"ehX3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, you shouldn't be using any sequence function at all, and I think that includes apply or anything using apply since it'll call seq on the args. And honestly I think that's a wart of Clojure, like it's unsatisfactory to think you have all this lazy machinery, but can't actually use it to implement lazy behavior."}]}]}],"user":"U0K064KQV","text":"Well, you shouldn't be using any sequence function at all, and I think that includes apply or anything using apply since it'll call seq on the args. And honestly I think that's a wart of Clojure, like it's unsatisfactory to think you have all this lazy machinery, but can't actually use it to implement lazy behavior."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629138865.484000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3f7b628d-adcc-482c-bdda-057c984b0245","blocks":[{"type":"rich_text","block_id":"GLf=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but that isn't a problem until you care about lazy realization, without laziness it's just putting four fully realized objects on the stack which is nearly free"}]}]}],"user":"U051SS2EU","text":"but that isn't a problem until you care about lazy realization, without laziness it's just putting four fully realized objects on the stack which is nearly free"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629138886.484300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f593a53f-7a00-4884-af5b-beaa01527097","blocks":[{"type":"rich_text","block_id":"jfG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the problem isn't apply \/ seq\/ etc\/ which cannot be avoided, it's the laziness"}]}]}],"user":"U051SS2EU","text":"the problem isn't apply \/ seq\/ etc\/ which cannot be avoided, it's the laziness"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629138910.484500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"34616a43-2736-4d56-94f3-b9a0a926632b","blocks":[{"type":"rich_text","block_id":"=cX6E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The problem is Clojure's lazy implementation not being truly lazy."}]}]}],"user":"U0K064KQV","text":"The problem is Clojure's lazy implementation not being truly lazy."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629138926.484700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1e865242-7b00-4350-821f-8082785ec040","blocks":[{"type":"rich_text","block_id":"tVrWG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But also being pervasive enough that it's hard to avoid."}]}]}],"user":"U0K064KQV","text":"But also being pervasive enough that it's hard to avoid."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629138933.484900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f07c35eb-f0cc-4c3e-94b3-977677ef066f","blocks":[{"type":"rich_text","block_id":"2hg5T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's plenty lazy, it just isn't an execution timing control mechanism"}]}]}],"user":"U051SS2EU","text":"it's plenty lazy, it just isn't an execution timing control mechanism"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629138958.485100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"4c7d1136-d4bb-4b9a-8ae2-f6fff30a8470","blocks":[{"type":"rich_text","block_id":"8W9l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you avoid it by not using lazy functions to create expensive calculations or side effecting operations"}]}]}],"user":"U051SS2EU","text":"you avoid it by not using lazy functions to create expensive calculations or side effecting operations"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629139002.485300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"69c302d8-bd42-4d31-8c92-57170300c9c3","blocks":[{"type":"rich_text","block_id":"kyb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The only reason to use lazyness is to avoid expensive calculations though."}]}]}],"user":"U0K064KQV","text":"The only reason to use lazyness is to avoid expensive calculations though."}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U0K064KQV","ts":"1629139065.000000"},"ts":"1629139045.485500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"bdba03a2-2c2d-4b5e-83eb-127ce39b15df","blocks":[{"type":"rich_text","block_id":"RqPQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well.. okay I guess there is also to deal with sets larger that fits memory."}]}]}],"user":"U0K064KQV","text":"Well.. okay I guess there is also to deal with sets larger that fits memory."}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U051SS2EU","ts":"1629139111.000000"},"ts":"1629139099.485800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6e26e952-e099-4376-9cd5-524ed46ce508","blocks":[{"type":"rich_text","block_id":"9qC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, but there's a boundary point, where if the difference between realizing 32  items and 1 item breaks your program, using laziness is probably a waste of your time (no matter how many hacks might be able to make it work...)"}]}]}],"user":"U051SS2EU","text":"right, but there's a boundary point, where if the difference between realizing 32  items and 1 item breaks your program, using laziness is probably a waste of your time (no matter how many hacks might be able to make it work...)"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629139218.486100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"60c0294b-53ec-48bc-8907-ecd87a0fee84","blocks":[{"type":"rich_text","block_id":"PEL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It doesn't break his program, it just slows it down.\n\nI don't think anything would prevent Clojure to take better care in making sure that chunk-size can be controlled and that all sequence functions take great care in being maximally lazy. Beyond that there's not been the time and effort by the core team to do so."}]}]}],"user":"U0K064KQV","text":"It doesn't break his program, it just slows it down.\n\nI don't think anything would prevent Clojure to take better care in making sure that chunk-size can be controlled and that all sequence functions take great care in being maximally lazy. Beyond that there's not been the time and effort by the core team to do so."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629139254.486300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"15222183-33ca-4c0b-b103-7cb9dc364ac1","blocks":[{"type":"rich_text","block_id":"3b+Vr","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"it's unsatisfactory to think you have all this lazy machinery, but can't actually use it to implement lazy behavior"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"we have LazySeq (and the various sequential functions that generate it), "},{"type":"text","text":"delay","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"promise","style":{"code":true}},{"type":"text","text":", and even "},{"type":"text","text":"fn","style":{"code":true}},{"type":"text","text":" - all of them are ways of defering evaluation to a later time, none of them give you a lazy language a-la haskell"}]}]}],"user":"U051SS2EU","text":"&gt; it's unsatisfactory to think you have all this lazy machinery, but can't actually use it to implement lazy behavior\nwe have LazySeq (and the various sequential functions that generate it), `delay`, `promise`, and even `fn` - all of them are ways of defering evaluation to a later time, none of them give you a lazy language a-la haskell"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629139265.486500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9c7dcdf3-ca4e-4e44-9fd7-559e48725aa6","blocks":[{"type":"rich_text","block_id":"YNox","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and even haskell is full of gotchas around lazy behavior"}]}]}],"user":"U051SS2EU","text":"and even haskell is full of gotchas around lazy behavior"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U0K064KQV","ts":"1629139370.000000"},"ts":"1629139323.486700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e7c76733-c5f9-49aa-a560-c0b76b3b3658","blocks":[{"type":"rich_text","block_id":"=ub","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's already almost there, most sequence functions are implemented so if not given a chunked-seq they won't chunk their return either. And that if given a chunked seq of n size chunk, they'll return similar sized chunks.\n\nIt's just that maybe there's some places where it's not done or done properly to be depended on.\n\nAnd then you have the issue of a few other functions that just are greedier then they could be."}]}]}],"user":"U0K064KQV","text":"It's already almost there, most sequence functions are implemented so if not given a chunked-seq they won't chunk their return either. And that if given a chunked seq of n size chunk, they'll return similar sized chunks.\n\nIt's just that maybe there's some places where it's not done or done properly to be depended on.\n\nAnd then you have the issue of a few other functions that just are greedier then they could be."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629139466.487000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"80ef955b-2b88-40df-9b07-7e549765690e","blocks":[{"type":"rich_text","block_id":"=u9Mh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I suspect that if the language maintainers made any promises about controlling laziness in a granular way they'd be painting themselves into an error prone and brittle corner"}]}]}],"user":"U051SS2EU","text":"I suspect that if the language maintainers made any promises about controlling laziness in a granular way they'd be painting themselves into an error prone and brittle corner"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629139489.487200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e98e0222-1daa-479c-a149-6ffc81e548dc","blocks":[{"type":"rich_text","block_id":"9m9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that implicit chunking is speeding up a lot of real world code currently"}]}]}],"user":"U051SS2EU","text":"that implicit chunking is speeding up a lot of real world code currently"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629139788.487400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"12422e7f-f77f-436f-868c-96d760b6f902","blocks":[{"type":"rich_text","block_id":"KlIOQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, that's possible. I'm not saying that guaranteeing a correct control over the level of lazyness wouldn't come with a maintainance burden. I'm sure there'd be some. They'd promise to fix every function that doesn't respect chunk-size and to re-implement everything that uses lazy-seqs in a not maximally lazy way into a lazier variant.\n\nAnd every time they add something new, they'd need to make sure to take that into account for it as well.\n\nBut if say they had the man-power and will to do it, it would be really nice as a user."}]}]}],"user":"U0K064KQV","text":"Well, that's possible. I'm not saying that guaranteeing a correct control over the level of lazyness wouldn't come with a maintainance burden. I'm sure there'd be some. They'd promise to fix every function that doesn't respect chunk-size and to re-implement everything that uses lazy-seqs in a not maximally lazy way into a lazier variant.\n\nAnd every time they add something new, they'd need to make sure to take that into account for it as well.\n\nBut if say they had the man-power and will to do it, it would be really nice as a user."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629139969.487600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f03e1ccb-5d73-494e-a7e4-d45c1bfdf9cb","blocks":[{"type":"rich_text","block_id":"MpXR\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the meantime, I think either using transducers if possible, or using delay with sequence functions is probably the simplest way for a user to have more control."}]}]}],"user":"U0K064KQV","text":"In the meantime, I think either using transducers if possible, or using delay with sequence functions is probably the simplest way for a user to have more control."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140192.487800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"fb7650ea-3912-4fde-a271-6b6786a43d22","blocks":[{"type":"rich_text","block_id":"mMW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's interesting though is Fogus's post hints that Rich might have wanted to do so:\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Bear in mind, that the code for seq1 is in no way official and should not be used for production code. Clojure will one day provide an official version of the function above, but for now I simply took a rough sketch posted by Rich Hickey and made it work with the \u201cmaster\u201d branch as an exercise and to hopefully gain more insight into the whole matter of chunkiness in general. Hopefully, it can serve the same purposes for you.\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nMaybe never got around to it."}]}]}],"user":"U0K064KQV","text":"What's interesting though is Fogus's post hints that Rich might have wanted to do so:\n\n&gt; Bear in mind, that the code for seq1 is in no way official and should not be used for production code. Clojure will one day provide an official version of the function above, but for now I simply took a rough sketch posted by Rich Hickey and made it work with the \u201cmaster\u201d branch as an exercise and to hopefully gain more insight into the whole matter of chunkiness in general. Hopefully, it can serve the same purposes for you.\n&gt; \nMaybe never got around to it."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140438.488000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"40e10173-13ba-454c-b396-5c1099cb5f4b","blocks":[{"type":"rich_text","block_id":"NssO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I also think to fix apply, maybe you'd need to add a new function to sequence, something like peek, which can see if there's something without realizing it. Otherwise not sure how it could figure out the correct arity."}]}]}],"user":"U0K064KQV","text":"I also think to fix apply, maybe you'd need to add a new function to sequence, something like peek, which can see if there's something without realizing it. Otherwise not sure how it could figure out the correct arity."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140555.488200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"20faf573-def5-4259-83f4-049468207f95","blocks":[{"type":"rich_text","block_id":"gLmZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lazy-seq is literally chaining arbitrary method invocations under the hood, asking \"is there a next item\" is turing complete"}]}]}],"user":"U051SS2EU","text":"lazy-seq is literally chaining arbitrary method invocations under the hood, asking \"is there a next item\" is turing complete"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140570.488400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a96c9808-5076-4a35-8de5-89a20f3f71f2","blocks":[{"type":"rich_text","block_id":"eYu4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the only reliable way to get an answer is to realize an item"}]}]}],"user":"U051SS2EU","text":"the only reliable way to get an answer is to realize an item"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140679.488600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5c6e4dc5-11b7-41b5-9d0d-07b3fc4bd492","blocks":[{"type":"rich_text","block_id":"xyXfK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It depends, I think you could provide a test for a given seq.\n\nSay I have a lazy-seqs getting data from a remote queue, you could provide a test function that checks with the remote system if the queue has info.\n\nSay you have a lazy-seqs but know the count of elements, you could provide a test that checks if we're at the end.\n\nEtc."}]}]}],"user":"U0K064KQV","text":"It depends, I think you could provide a test for a given seq.\n\nSay I have a lazy-seqs getting data from a remote queue, you could provide a test function that checks with the remote system if the queue has info.\n\nSay you have a lazy-seqs but know the count of elements, you could provide a test that checks if we're at the end.\n\nEtc."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140756.488800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"cddbf1f3-de97-478f-9c20-bc26feb4f33c","blocks":[{"type":"rich_text","block_id":"kEzh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why not use a data type that's designed for answering these kinds of questions in the first place?"}]}]}],"user":"U051SS2EU","text":"why not use a data type that's designed for answering these kinds of questions in the first place?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140784.489000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"bb6272f7-7c48-4e1f-91a0-24246c076992","blocks":[{"type":"rich_text","block_id":"NIaO0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like what?"}]}]}],"user":"U0K064KQV","text":"Like what?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140788.489200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"10270caf-4bb0-4015-9997-b1694502b970","blocks":[{"type":"rich_text","block_id":"QBh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, pretending the state of a remote machine is a piece of data is reinventing the worst parts of OO"}]}]}],"user":"U051SS2EU","text":"also, pretending the state of a remote machine is a piece of data is reinventing the worst parts of OO"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140838.489400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"303b574d-d6c1-4886-ae51-9cf314c32af2","blocks":[{"type":"rich_text","block_id":"Nsk5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like for example a queue (you can ask if there are items ready) a channel (you can ask if there's an item ready, and if the input is closed), a vector (it has a precise count known at creation time)"}]}]}],"user":"U051SS2EU","text":"like for example a queue (you can ask if there are items ready) a channel (you can ask if there's an item ready, and if the input is closed), a vector (it has a precise count known at creation time)"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140919.489600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c056ae5b-8245-4b17-9929-e0eadb6caf18","blocks":[{"type":"rich_text","block_id":"QRnkt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What I'm saying is a lot of lazy-seqs could answer of they have a next element, or even N next elements. But it would be specific to each one.\n\n"},{"type":"text","text":"(range 100)","style":{"code":true}},{"type":"text","text":"knows exactly.\n\n"},{"type":"text","text":"(filter even? seq)","style":{"code":true}},{"type":"text","text":" may not."}]}]}],"user":"U0K064KQV","text":"What I'm saying is a lot of lazy-seqs could answer of they have a next element, or even N next elements. But it would be specific to each one.\n\n`(range 100)`knows exactly.\n\n`(filter even? seq)` may not."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140966.489800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8cbf9fae-5e8a-4484-9488-5534aa689795","blocks":[{"type":"rich_text","block_id":"Hgy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure, but I need it to work with apply "},{"type":"emoji","name":"joy"}]}]}],"user":"U0K064KQV","text":"Sure, but I need it to work with apply :joy:"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629140974.490000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6dfc5679-99a9-4564-98d3-c5d3a0290ef7","blocks":[{"type":"rich_text","block_id":"N\/ZB\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"code that uses things that might or might not provide relevant information gets complicated, I don't think this improves anything"}]}]}],"user":"U051SS2EU","text":"code that uses things that might or might not provide relevant information gets complicated, I don't think this improves anything"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141003.490200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"4c3fb150-397d-4f8d-a540-cf88461aedfe","blocks":[{"type":"rich_text","block_id":"D+U2m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"isn't it simpler to just not use lazy code to wrap expensive or time sensitive operations?"}]}]}],"user":"U051SS2EU","text":"isn't it simpler to just not use lazy code to wrap expensive or time sensitive operations?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141143.490400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"247f198f-6df6-4522-b9fb-092e076590c9","blocks":[{"type":"rich_text","block_id":"9NEn1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, it depends what you mean by simpler. An algorithm that does lots of compute and benefit heavily from short-circuiting exactly when it's done and no more are often easier to implement in a lazy way. You pull and pull until you're done."}]}]}],"user":"U0K064KQV","text":"Well, it depends what you mean by simpler. An algorithm that does lots of compute and benefit heavily from short-circuiting exactly when it's done and no more are often easier to implement in a lazy way. You pull and pull until you're done."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141218.490600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"12d0174a-0588-4168-8641-9d7092eaeccd","blocks":[{"type":"rich_text","block_id":"=52p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"surely the version that uses a queue isn't that much more complex?"}]}]}],"user":"U051SS2EU","text":"surely the version that uses a queue isn't that much more complex?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141247.490800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"75d754b6-c0a2-48aa-8644-3c093c03c9de","blocks":[{"type":"rich_text","block_id":"RGMM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you have one ugly driver, and the function called on each item inside that driver"}]}]}],"user":"U051SS2EU","text":"you have one ugly driver, and the function called on each item inside that driver"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141310.491000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"d815111c-2b7a-455a-aabb-1544425f7c57","blocks":[{"type":"rich_text","block_id":"pGTQ9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd argue the complexity introduced is intrinsic: the complexity inherent in explicitly controlling when things are evaluated and when you stop, and that's exactly what you want"}]}]}],"user":"U051SS2EU","text":"I'd argue the complexity introduced is intrinsic: the complexity inherent in explicitly controlling when things are evaluated and when you stop, and that's exactly what you want"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141362.491200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c200d4be-82ca-4b33-96c4-cecf2e405545","blocks":[{"type":"rich_text","block_id":"Z3mP\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, ya I guess. Say you have a prime number generator, I guess you can make it into a blocking process that pushes 1 at a time to a channel. But even then it's 1 more then needed, you'd need the consumer to signal saying ok I want one more (and that's back to a pull model)"}]}]}],"user":"U0K064KQV","text":"Well, ya I guess. Say you have a prime number generator, I guess you can make it into a blocking process that pushes 1 at a time to a channel. But even then it's 1 more then needed, you'd need the consumer to signal saying ok I want one more (and that's back to a pull model)"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141379.491400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"20ef9fc6-225d-4cff-9b13-c00b327fb6f5","blocks":[{"type":"rich_text","block_id":"8Xw=i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it simplifies things like retries \/ restarts \/ cleanup which are all garbage when using laziness"}]}]}],"user":"U051SS2EU","text":"and it simplifies things like retries \/ restarts \/ cleanup which are all garbage when using laziness"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141439.491600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f3932de1-6609-4cac-bf39-a2807cbc821c","blocks":[{"type":"rich_text","block_id":"isTWp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you can use iterator maybe... I've heard their Clojure implementation short-circuits properly, but I'm not sure if that's true if used with apply as well"}]}]}],"user":"U0K064KQV","text":"I think you can use iterator maybe... I've heard their Clojure implementation short-circuits properly, but I'm not sure if that's true if used with apply as well"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141453.491800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a6a57adb-4249-410d-90a4-6b5898a7038c","blocks":[{"type":"rich_text","block_id":"MR74","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well you did say channel instead of queue, and being able to choose between push and pull is one of the advantages channels offer"}]}]}],"user":"U051SS2EU","text":"well you did say channel instead of queue, and being able to choose between push and pull is one of the advantages channels offer"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141488.492000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"63651306-3a8f-4bba-9d64-e06e5260bb30","blocks":[{"type":"rich_text","block_id":"14H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you don't buffer there's no reason for it to be ahead of the consumer"}]}]}],"user":"U051SS2EU","text":"if you don't buffer there's no reason for it to be ahead of the consumer"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141503.492200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"4ab1e31c-a93d-4705-96e4-da26a803864d","blocks":[{"type":"rich_text","block_id":"VX3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I said channel because you need a queue that has back-pressure. Like if the consumers have what they need, don't produce more things in the queue."}]}]}],"user":"U0K064KQV","text":"I said channel because you need a queue that has back-pressure. Like if the consumers have what they need, don't produce more things in the queue."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141517.492600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6907942f-2a96-4318-afc5-fbf96b8968d5","blocks":[{"type":"rich_text","block_id":"ECNm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, we are in agreement there"}]}]}],"user":"U051SS2EU","text":"right, we are in agreement there"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141543.493100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1faad05b-60c5-473c-babe-74e79b9174c5","blocks":[{"type":"rich_text","block_id":"q2CxY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum, is that true? Will a unbuffered channel only produce something after the consumer take from it?"}]}]}],"user":"U0K064KQV","text":"Hum, is that true? Will a unbuffered channel only produce something after the consumer take from it?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141562.493500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"60dcaa86-8d31-4e9f-979e-f1cfec90c450","blocks":[{"type":"rich_text","block_id":"p+u4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"one moment, firing up a core.async repl"}]}]}],"user":"U051SS2EU","reactions":[{"name":"+1","users":["U0K064KQV"],"count":1}],"text":"one moment, firing up a core.async repl"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141750.494900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"ae18d0c3-0b16-44cf-b3b2-e59c2a038cfa","blocks":[{"type":"rich_text","block_id":"8jp","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(cmd)user=> (require '[clojure.core.async :as >])\nnil\n(cmd)user=> (def c (>\/chan))\n#'user\/c\n(cmd)user=> (>\/go (>\/>! c :a) (println \"wrote\"))\n#object[clojure.core.async.impl.channels.ManyToManyChannel 0x7ef570be \"clojure.core.async.impl.channels.ManyToManyChannel@7ef570be\"]\n(cmd)user=> (>\/<!! c)\n:a\nuser=> wrote"}]}]}],"user":"U051SS2EU","text":"```(cmd)user=&gt; (require '[clojure.core.async :as &gt;])\nnil\n(cmd)user=&gt; (def c (&gt;\/chan))\n#'user\/c\n(cmd)user=&gt; (&gt;\/go (&gt;\/&gt;! c :a) (println \"wrote\"))\n#object[clojure.core.async.impl.channels.ManyToManyChannel 0x7ef570be \"clojure.core.async.impl.channels.ManyToManyChannel@7ef570be\"]\n(cmd)user=&gt; (&gt;\/&lt;!! c)\n:a\nuser=&gt; wrote```"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141772.495300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"85287a02-3aba-4e07-86d4-f79e53a193c4","blocks":[{"type":"rich_text","block_id":"emPJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"of course you need more machinery than that to control when \":a\" is evaluated"}]}]}],"user":"U051SS2EU","text":"of course you need more machinery than that to control when \":a\" is evaluated"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629141807.495900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"95333d8a-2e39-43fa-81e1-536d46c243a3","blocks":[{"type":"rich_text","block_id":"Iue","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I think that shows clearly that the put does not complete until the value is read"}]}]}],"user":"U051SS2EU","text":"but I think that shows clearly that the put does not complete until the value is read"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629142061.496900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"566fe76a-e0d1-403b-bcc9-cd453bc02de6","blocks":[{"type":"rich_text","block_id":"8lSk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you try:\n\n(>! (println \"produced\"))"}]}]}],"user":"U0K064KQV","text":"Can you try:\n\n(&gt;! (println \"produced\"))"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629142136.497300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"96e27c59-5e97-487a-8472-36cf0ad67b4d","blocks":[{"type":"rich_text","block_id":"i13","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well that blows up because println returns nil"}]}]}],"user":"U051SS2EU","text":"well that blows up because println returns nil"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629142136.497500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a16f984c-0a55-48fe-804f-80048a317058","blocks":[{"type":"rich_text","block_id":"PCmtB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because arguably you'd have println replaced with (compute-next-prime curr-prime) or something."}]}]}],"user":"U0K064KQV","text":"Because arguably you'd have println replaced with (compute-next-prime curr-prime) or something."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629142148.497700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"bb1d175b-9d4c-43f6-b9a7-24fee45b2663","blocks":[{"type":"rich_text","block_id":"g4v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but yeah, >! doesn't evaluate args lazily"}]}]}],"user":"U051SS2EU","text":"but yeah, &gt;! doesn't evaluate args lazily"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629142171.498100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a17131c1-e852-46f0-ae89-b881664d9f3f","blocks":[{"type":"rich_text","block_id":"\/jW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum, so I'm not sure you can use it, unless again you wrap it in a delay."}]}]}],"user":"U0K064KQV","text":"Hum, so I'm not sure you can use it, unless again you wrap it in a delay."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629142179.498300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"ecbb3452-f660-4eac-a0bd-ee3d1b92f3a1","blocks":[{"type":"rich_text","block_id":"CEhfg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems it will be 1 ahead at all times"}]}]}],"user":"U0K064KQV","text":"It seems it will be 1 ahead at all times"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629142215.498500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"691540de-e987-4d39-b0d1-20163723a661","blocks":[{"type":"rich_text","block_id":"RAOs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's what I meant by \"needing more machinery\" - I think there's a couple of ways to do it, but it can be done with idiomatic and clear core.async code"}]}]}],"user":"U051SS2EU","text":"that's what I meant by \"needing more machinery\" - I think there's a couple of ways to do it, but it can be done with idiomatic and clear core.async code"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629142569.499700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8dc1c452-777b-4a85-8d8c-21c3bf225a23","blocks":[{"type":"rich_text","block_id":"zHS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What are you thinking?"}]}]}],"user":"U0K064KQV","text":"What are you thinking?"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U0K064KQV","ts":"1629142642.000000"},"ts":"1629142634.000000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6f899cc2-b4e5-4c0c-af19-ff3e65ca98ba","blocks":[{"type":"rich_text","block_id":"Nqb5J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Only thing I can think of would become pull again.\n\nSomething like the consumer will push a message saying :need-more which the producer will block on, and when it sees one it will produce another one and push it."}]}]}],"user":"U0K064KQV","text":"Only thing I can think of would become pull again.\n\nSomething like the consumer will push a message saying :need-more which the producer will block on, and when it sees one it will produce another one and push it."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629143129.001000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5024ce56-0aea-48ab-9706-dbea41bc7c33","blocks":[{"type":"rich_text","block_id":"S2f=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is also an interesting read: "},{"type":"link","url":"https:\/\/clojure.org\/reference\/lazy","text":"https:\/\/clojure.org\/reference\/lazy"}]}]}],"user":"U0K064KQV","text":"This is also an interesting read: <https:\/\/clojure.org\/reference\/lazy|https:\/\/clojure.org\/reference\/lazy>"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144144.001400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"47116267-becf-493d-9774-1d55a67e7ccc","blocks":[{"type":"rich_text","block_id":"ley2","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(cmd)user=> (load-file \"\/home\/justin\/clojure-experiments\/on-demand-async.clj\")\n#'user\/generate\n(cmd)user=> (def c (>\/chan))\n#'user\/c\n(cmd)user=> (generate c)\n#object[clojure.core.async.impl.channels.ManyToManyChannel 0x1a632663 \"clojure.core.async.impl.channels.ManyToManyChannel@1a632663\"]\n(ins)user=> @(>\/<!! c)\n0\n(cmd)user=> @(>\/<!! c)\ngenerated 2\n2\n(cmd)user=> @(>\/<!! c)\ngenerated 3\n3\n(cmd)user=> @(>\/<!! c)\ngenerated 5\n5\n(cmd)user=> @(>\/<!! c)\ngenerated 7\n7\n(cmd)user=> @(>\/<!! c)\ngenerated 11\n11\n(cmd)user=> @(>\/<!! c)\ngenerated 13\n13\n(cmd)user=> @(>\/<!! c)\ngenerated 17\n17"}]}]}],"user":"U051SS2EU","text":"```(cmd)user=&gt; (load-file \"\/home\/justin\/clojure-experiments\/on-demand-async.clj\")\n#'user\/generate\n(cmd)user=&gt; (def c (&gt;\/chan))\n#'user\/c\n(cmd)user=&gt; (generate c)\n#object[clojure.core.async.impl.channels.ManyToManyChannel 0x1a632663 \"clojure.core.async.impl.channels.ManyToManyChannel@1a632663\"]\n(ins)user=&gt; @(&gt;\/&lt;!! c)\n0\n(cmd)user=&gt; @(&gt;\/&lt;!! c)\ngenerated 2\n2\n(cmd)user=&gt; @(&gt;\/&lt;!! c)\ngenerated 3\n3\n(cmd)user=&gt; @(&gt;\/&lt;!! c)\ngenerated 5\n5\n(cmd)user=&gt; @(&gt;\/&lt;!! c)\ngenerated 7\n7\n(cmd)user=&gt; @(&gt;\/&lt;!! c)\ngenerated 11\n11\n(cmd)user=&gt; @(&gt;\/&lt;!! c)\ngenerated 13\n13\n(cmd)user=&gt; @(&gt;\/&lt;!! c)\ngenerated 17\n17```"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144172.001600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c96759a2-b99c-45ce-9e02-ff68d6edab2f","blocks":[{"type":"rich_text","block_id":"kjm","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(require '[clojure.core.async :as >])\n\n(defn big-inc\n  [b]\n  (.add b (BigInteger. \"1\")))\n\n(defn next-prime\n  [b]\n  (let [b' (big-inc b)]\n    (if (.isProbablePrime b' 1)\n      (do (println \"generated\" b')\n          b')\n      (recur b'))))\n\n(defn generate\n  [c]\n  (>\/go (loop [v (delay (BigInteger. \"0\"))]\n          (>\/>! c v)\n          (recur (delay (next-prime (force v)))))))"}]}]}],"user":"U051SS2EU","text":"```(require '[clojure.core.async :as &gt;])\n\n(defn big-inc\n  [b]\n  (.add b (BigInteger. \"1\")))\n\n(defn next-prime\n  [b]\n  (let [b' (big-inc b)]\n    (if (.isProbablePrime b' 1)\n      (do (println \"generated\" b')\n          b')\n      (recur b'))))\n\n(defn generate\n  [c]\n  (&gt;\/go (loop [v (delay (BigInteger. \"0\"))]\n          (&gt;\/&gt;! c v)\n          (recur (delay (next-prime (force v)))))))```"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144222.001800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5c165a75-9432-4b19-adc6-f25fcc1934ff","blocks":[{"type":"rich_text","block_id":"ceFrF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's probably a more elegant solution (in terms of a consumer needing to both consume a chan and deref...), but probably not much more concise(?)"}]}]}],"user":"U051SS2EU","text":"there's probably a more elegant solution (in terms of a consumer needing to both consume a chan and deref...), but probably not much more concise(?)"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144302.002000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8daa33df-9c73-4e4d-bcde-2618b9de061e","blocks":[{"type":"rich_text","block_id":"eKVt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also that prime generating code is crap but I figure it's a decent placeholder :D"}]}]}],"user":"U051SS2EU","text":"also that prime generating code is crap but I figure it's a decent placeholder :D"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144469.002200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"0500b663-86bd-4ef8-b44d-80a2e2570d54","blocks":[{"type":"rich_text","block_id":"IRqB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it might be more correct to move the force call outside the delay to avoid a stack bomb if a consumer repeatedly reads without dereffing..."}]}]}],"user":"U051SS2EU","text":"it might be more correct to move the force call outside the delay to avoid a stack bomb if a consumer repeatedly reads without dereffing..."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144590.002400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3da3237e-6084-4f42-ad39-d6e8e67214dd","blocks":[{"type":"rich_text","block_id":"cXpe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum, I don't know, not sure there's benefits to core.async if you add delay into it.\n\nCause now you can also do a lazy-seq or an iterate that wraps in a delay as well."}]}]}],"user":"U0K064KQV","text":"Hum, I don't know, not sure there's benefits to core.async if you add delay into it.\n\nCause now you can also do a lazy-seq or an iterate that wraps in a delay as well."}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U0K064KQV","ts":"1629144661.000000"},"ts":"1629144646.002600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"25903fc1-6a4b-416c-b3df-e6728f56b412","blocks":[{"type":"rich_text","block_id":"15tO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hum... maybe if you deref inside a transducer on the channel?"}]}]}],"user":"U0K064KQV","text":"Hum... maybe if you deref inside a transducer on the channel?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144678.002900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1486cd9a-c640-46ad-bc10-5eb2dcfecb4c","blocks":[{"type":"rich_text","block_id":"\/Xk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but using a lazy-seq wouldn't have the fine grained control of execution that a go block \/ channel combo has"}]}]}],"user":"U051SS2EU","text":"but using a lazy-seq wouldn't have the fine grained control of execution that a go block \/ channel combo has"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144682.003100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a497968b-9a58-4141-bd5d-ff2a99967edf","blocks":[{"type":"rich_text","block_id":"Pz5ZO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or in fact, what if you generate the prime as a transducer on the channel?"}]}]}],"user":"U0K064KQV","text":"Or in fact, what if you generate the prime as a transducer on the channel?"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U051SS2EU","ts":"1629144712.000000"},"ts":"1629144698.003300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"889cede6-3da0-467e-bd36-ff65f7cc5abf","blocks":[{"type":"rich_text","block_id":"T9V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, a transducer that does a force or deref would work"}]}]}],"user":"U051SS2EU","text":"yes, a transducer that does a force or deref would work"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144735.003600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2b35f04c-ba94-4004-a265-9c51d9bf413d","blocks":[{"type":"rich_text","block_id":"UT5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could even do something like put the current prime, transducer on channel takes the current prime and return the next one."}]}]}],"user":"U0K064KQV","text":"You could even do something like put the current prime, transducer on channel takes the current prime and return the next one."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144745.003800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3f536606-87c1-4ed0-a526-52fad31e3852","blocks":[{"type":"rich_text","block_id":"sQr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And avoid the need for a delay (I think less GC)"}]}]}],"user":"U0K064KQV","text":"And avoid the need for a delay (I think less GC)"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144748.004000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"51dfa38f-7935-45b5-991a-6018a3600e64","blocks":[{"type":"rich_text","block_id":"lE9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think doing the actual work inside a transducer undoes some of what is being attempted here, where the semantics of execution are explicitly controlled"}]}]}],"user":"U051SS2EU","text":"I think doing the actual work inside a transducer undoes some of what is being attempted here, where the semantics of execution are explicitly controlled"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144847.004200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3d759c94-501e-4f57-91dd-6688f733f68e","blocks":[{"type":"rich_text","block_id":"zuD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"another option would be a \"generator\" macro that yields calculations as they are consumed from a channel"}]}]}],"user":"U051SS2EU","text":"another option would be a \"generator\" macro that yields calculations as they are consumed from a channel"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629144932.004400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"86ef1357-01f1-4926-a764-5a4bf55b3060","blocks":[{"type":"rich_text","block_id":"9ePYL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The idea is to have consumers be able to pull elements one at a time through a chain of transforms. I think the thread of execution doesn't really matter. Like even ideally it's all done from the thread of the consumer doing the pull."}]}]}],"user":"U0K064KQV","text":"The idea is to have consumers be able to pull elements one at a time through a chain of transforms. I think the thread of execution doesn't really matter. Like even ideally it's all done from the thread of the consumer doing the pull."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145077.004600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"fecbb52d-9cc5-4e63-9cf6-ae5b97f55a04","blocks":[{"type":"rich_text","block_id":"IZvNU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel there's also probably a way to implement a more lower level "},{"type":"text","text":">!","style":{"code":true}},{"type":"text","text":"that's lazy on its arguments."}]}]}],"user":"U0K064KQV","text":"I feel there's also probably a way to implement a more lower level `&gt;!`that's lazy on its arguments."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145232.004800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6e3a3057-f72b-4692-9834-e69fcba20cac","blocks":[{"type":"rich_text","block_id":"2BR9f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But still, with core.async, you're also reinventing the wheel for map, partition, mapcat, filter, remove, etc."}]}]}],"user":"U0K064KQV","text":"But still, with core.async, you're also reinventing the wheel for map, partition, mapcat, filter, remove, etc."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145325.005000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"14e60832-4e92-4b2b-b5f1-f21103b55d59","blocks":[{"type":"rich_text","block_id":"upb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what I meant by \"semantics of execution are explicitly controlled\" is that you'd see which thread did the calculation, or what constraints were around it, by seeing it explicitly in the code in question"}]}]}],"user":"U051SS2EU","text":"what I meant by \"semantics of execution are explicitly controlled\" is that you'd see which thread did the calculation, or what constraints were around it, by seeing it explicitly in the code in question"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145349.005200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"7294293d-a1c6-4613-ae5a-3a4cf6c284be","blocks":[{"type":"rich_text","block_id":"zUNW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could compromise with a transducer, but I think that undermines the goal here"}]}]}],"user":"U051SS2EU","text":"you could compromise with a transducer, but I think that undermines the goal here"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145427.005400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c42fe2af-7f74-4f32-9b18-c61aa1902712","blocks":[{"type":"rich_text","block_id":"DNea","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and even if you add a transducer to the channel, you introduce a non-negotiable 1 element write ahead buffer"}]}]}],"user":"U051SS2EU","text":"and even if you add a transducer to the channel, you introduce a non-negotiable 1 element write ahead buffer"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U0K064KQV","ts":"1629145540.000000"},"ts":"1629145535.005600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e3092d91-4c2d-4e82-86a5-f2fddf224e6b","blocks":[{"type":"rich_text","block_id":"dAcnr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For applying the transducer? I remember asking when the transducer ran and on what thread and being told it's undefined"}]}]}],"user":"U0K064KQV","text":"For applying the transducer? I remember asking when the transducer ran and on what thread and being told it's undefined"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145563.005900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1aee35a9-d7f3-4fcc-b23e-2396f92f8152","blocks":[{"type":"rich_text","block_id":"KOYh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can't have a buffer of 0 on a channel with a transducer"}]}]}],"user":"U051SS2EU","text":"you can't have a buffer of 0 on a channel with a transducer"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145585.006100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"047b4add-cb18-455d-9f03-9446ea9f52f3","blocks":[{"type":"rich_text","block_id":"DTP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I didn't know that"}]}]}],"user":"U0K064KQV","text":"I didn't know that"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145622.006300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8b961320-22e2-4a2c-936b-d8413f01d6f9","blocks":[{"type":"rich_text","block_id":"S0as","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I guess you can't introduce anything between the put and the take"}]}]}],"user":"U0K064KQV","text":"So I guess you can't introduce anything between the put and the take"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145732.006500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"57b09482-5769-49a3-9bf7-8abccaa7680d","blocks":[{"type":"rich_text","block_id":"DtmNN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(buffer 0) doesn't work "},{"type":"emoji","name":"stuck_out_tongue_closed_eyes"}]}]}],"user":"U0K064KQV","text":"(buffer 0) doesn't work :stuck_out_tongue_closed_eyes:"}
{"attachments":[{"color":"24292f","fallback":"clj-commons\/manifold","fields":[{"title":"Stars","value":"862","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"clj-commons\/manifold","id":1,"app_unfurl_url":"https:\/\/github.com\/clj-commons\/manifold","text":"a compatibility layer for event-driven abstractions","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1628843344.337300","ts":"1629145859.006700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f4f88f49-2372-4e33-85fa-bf865f4b23fd","blocks":[{"type":"rich_text","block_id":"f8gaG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it might be easier to experiment with these things in ztellman's manifold lib, IIRC one of the motivations was having easier and more explicit backpressure controls than core.async\n"},{"type":"link","url":"https:\/\/github.com\/clj-commons\/manifold"}]}]}],"user":"U051SS2EU","text":"it might be easier to experiment with these things in ztellman's manifold lib, IIRC one of the motivations was having easier and more explicit backpressure controls than core.async\n<https:\/\/github.com\/clj-commons\/manifold>"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145930.007000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"94906691-b386-41e0-97a4-2ece9c138fd9","blocks":[{"type":"rich_text","block_id":"oayZ","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/aleph.io\/manifold\/rationale.html"}]}]}],"user":"U051SS2EU","text":"<https:\/\/aleph.io\/manifold\/rationale.html>"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629145999.007200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"53b40b49-894d-4c10-be6d-71e90ad4193e","blocks":[{"type":"rich_text","block_id":"nKOj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I think this is the right direction for the speculation to be going here - by dropping the pretense that the events are data we get simpler, less confusing or error prone means of controlling execution"}]}]}],"user":"U051SS2EU","text":"but I think this is the right direction for the speculation to be going here - by dropping the pretense that the events are data we get simpler, less confusing or error prone means of controlling execution"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629146065.007400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f11ae3bf-670b-468c-924b-0bcb5f34f759","blocks":[{"type":"rich_text","block_id":"bMM3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(to be clear, in "},{"type":"text","text":"most","style":{"bold":true}},{"type":"text","text":" cases it's better to reify events as data, we are talking about the cases where this goes wrong as the initial premise of this particular thread of discussion)"}]}]}],"user":"U051SS2EU","text":"(to be clear, in *most* cases it's better to reify events as data, we are talking about the cases where this goes wrong as the initial premise of this particular thread of discussion)"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629146095.007600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"4ca16c1e-e28d-4dda-9e5d-03b842ad0e24","blocks":[{"type":"rich_text","block_id":"qEiB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and I'd argue there's always an edge case where data fails, so it's good to invest in having a least-bad failure state"}]}]}],"user":"U051SS2EU","text":"and I'd argue there's always an edge case where data fails, so it's good to invest in having a least-bad failure state"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U0K064KQV","ts":"1629146147.000000"},"ts":"1629146141.007800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"fbe62182-12f8-49a0-8c26-a93fa08d7f27","blocks":[{"type":"rich_text","block_id":"OL=IS","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(def c\n (chan\n  (buffer 1)\n  (map\n   (let [p (volatile! (BigInteger. \"0\")]\n    (fn [_] (vswap! p next-prime))))))\n(go-loop []\n (>! c :next-prime)\n (recur))\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nWhat about something like that? Not at a repl currently to try."}]}]}],"user":"U0K064KQV","text":"```(def c\n (chan\n  (buffer 1)\n  (map\n   (let [p (volatile! (BigInteger. \"0\")]\n    (fn [_] (vswap! p next-prime))))))\n(go-loop []\n (&gt;! c :next-prime)\n (recur))\n```\nWhat about something like that? Not at a repl currently to try."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629146333.008100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"888355c9-aab5-4856-85f9-bcc922bef0c3","blocks":[{"type":"rich_text","block_id":"eolNb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya, but that's where the Rich text I linked is interesting, cause he explored streams, but says:\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"In working on streams a few things became evident:\n\nstream code is ugly and imperative\n\neven when made safe, still ugly, stateful\n\nstreams support full laziness\n\nthis ends up being extremely nice\n\nIntegrating streams transparently (i.e. not having both map and map-stream) would require a change, to relax the contract of the core sequence functions (map, filter etc)\n\nIf I am going to do that, could I achieve the same full laziness while keeping the beautiful recursive style of Clojure?\n\nwhile being substantially compatible with existing code\n\nYes!\n\nbut - ideally some names should change"}]}]}],"user":"U0K064KQV","text":"Ya, but that's where the Rich text I linked is interesting, cause he explored streams, but says:\n\n&gt; In working on streams a few things became evident:\n&gt; \n&gt; stream code is ugly and imperative\n&gt; \n&gt; even when made safe, still ugly, stateful\n&gt; \n&gt; streams support full laziness\n&gt; \n&gt; this ends up being extremely nice\n&gt; \n&gt; Integrating streams transparently (i.e. not having both map and map-stream) would require a change, to relax the contract of the core sequence functions (map, filter etc)\n&gt; \n&gt; If I am going to do that, could I achieve the same full laziness while keeping the beautiful recursive style of Clojure?\n&gt; \n&gt; while being substantially compatible with existing code\n&gt; \n&gt; Yes!\n&gt; \n&gt; but - ideally some names should change"}
{"type":"message","thread_ts":"1628843344.337300","edited":{"user":"U0K064KQV","ts":"1629146529.000000"},"ts":"1629146486.008500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"80387046-42a2-4740-96cd-f612049bdb45","blocks":[{"type":"rich_text","block_id":"gvY0V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But then... It's like they stopped short, like at some point they were like... Ok well it's lazy enough.\n\nAnd like, it seems so close. Maybe that's what I mean that it's kind of unfortunate.\n\nIt's not even chunkiness that's the issue. You can have chunks of 1 or unchunked fully lazy even on their first element lazy-seqs. And I've not encountered anything that doesn't respect that yet.\n\nNow it's only a matter of a few functions like apply, and I think there might be a few more that are a little greedier then they could be."}]}]}],"user":"U0K064KQV","text":"But then... It's like they stopped short, like at some point they were like... Ok well it's lazy enough.\n\nAnd like, it seems so close. Maybe that's what I mean that it's kind of unfortunate.\n\nIt's not even chunkiness that's the issue. You can have chunks of 1 or unchunked fully lazy even on their first element lazy-seqs. And I've not encountered anything that doesn't respect that yet.\n\nNow it's only a matter of a few functions like apply, and I think there might be a few more that are a little greedier then they could be."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629146543.008800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"dcd2e6dd-dd88-4cc9-95a0-c41d1bdaf991","blocks":[{"type":"rich_text","block_id":"DJqU","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Integrating streams transparently (i.e. not having both map and map-stream) "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"to me that's the dividing line - the streams solution is for when data no longer works as your abstraction, so having \"map-stream\" or worse, having \"map\" work on streams, is counterproductive, it spreads the problem to the entire language instead of solving it"}]}]}],"user":"U051SS2EU","text":"&gt; Integrating streams transparently (i.e. not having both map and map-stream) \nto me that's the dividing line - the streams solution is for when data no longer works as your abstraction, so having \"map-stream\" or worse, having \"map\" work on streams, is counterproductive, it spreads the problem to the entire language instead of solving it"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629146655.009000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c1acde83-3f02-40d6-96e6-6876f6f27a94","blocks":[{"type":"rich_text","block_id":"jBB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm arguing that in practice the cleanest thing is to have a line with process on the one side and data on the other, and treat the attempts to treat process as data as source of bugs, and attempts to treat data as process as a waste of programmer effort \/ time"}]}]}],"user":"U051SS2EU","text":"I'm arguing that in practice the cleanest thing is to have a line with process on the one side and data on the other, and treat the attempts to treat process as data as source of bugs, and attempts to treat data as process as a waste of programmer effort \/ time"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629146700.009200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"af75ee5c-f3c5-4d89-9168-cb8441734124","blocks":[{"type":"rich_text","block_id":"tkK5I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and in clojure, lazy-seqs, as the thing we currently have, are on the data side"}]}]}],"user":"U051SS2EU","text":"and in clojure, lazy-seqs, as the thing we currently have, are on the data side"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629146828.009400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"14700390-8579-44d3-a5d9-79f34f935dfc","blocks":[{"type":"rich_text","block_id":"3KH8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I'm not following what you mean by process and data here?"}]}]}],"user":"U0K064KQV","text":"I think I'm not following what you mean by process and data here?"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629146897.009600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"75f7e602-f95a-43a2-b356-e8d5095a1c40","blocks":[{"type":"rich_text","block_id":"r+W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"by data I mean a value you can retrieve, by process I mean a calculation you can make"}]}]}],"user":"U051SS2EU","text":"by data I mean a value you can retrieve, by process I mean a calculation you can make"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629147000.009800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"00817abd-105f-42e0-bef6-131731c60f60","blocks":[{"type":"rich_text","block_id":"Bh1E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we gain a lot of power by blurring that distinction, but there are places (however narrow \/ niche) where you gain a lot by preserving it and building up barriers around it"}]}]}],"user":"U051SS2EU","text":"we gain a lot of power by blurring that distinction, but there are places (however narrow \/ niche) where you gain a lot by preserving it and building up barriers around it"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629147083.010000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8a318832-6b1a-4e90-9051-18071e0bf675","blocks":[{"type":"rich_text","block_id":"lK59","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"going back to our starting point again, someone wanted more control of lazy values because chunking effectively made their program incorrect. in my description that means they are operating in the area where the data \/ process distinction is needed and a problem was caused by blurring that distinction"}]}]}],"user":"U051SS2EU","text":"going back to our starting point again, someone wanted more control of lazy values because chunking effectively made their program incorrect. in my description that means they are operating in the area where the data \/ process distinction is needed and a problem was caused by blurring that distinction"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629147179.010200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c7831d20-c9b5-41d3-ac36-795881dc8e79","blocks":[{"type":"rich_text","block_id":"YTyp4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"one way to fix that is to have more complexity (or less utility) on our lazy types, but another one is to have idioms and conventions for things that need to distinguish process from data (in order to have more fine grained control of process)"}]}]}],"user":"U051SS2EU","text":"one way to fix that is to have more complexity (or less utility) on our lazy types, but another one is to have idioms and conventions for things that need to distinguish process from data (in order to have more fine grained control of process)"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629150108.010700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a665608c-de54-4d09-a3cc-937be2b48760","blocks":[{"type":"rich_text","block_id":"HubZN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya, but isn't that just a consequence of the abstraction not being good enough? Like if it was simple to control chunk-size, and everything had a truly lazy mode, then we could answer: oh ya, just go "},{"type":"text","text":"(chunk-resize s 1)","style":{"code":true}},{"type":"text","text":" and you're done. Now you know that everything will be maximally lazy."}]}]}],"user":"U0K064KQV","text":"Ya, but isn't that just a consequence of the abstraction not being good enough? Like if it was simple to control chunk-size, and everything had a truly lazy mode, then we could answer: oh ya, just go `(chunk-resize s 1)` and you're done. Now you know that everything will be maximally lazy."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629150213.010900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"0eb0e414-7953-487e-beab-12c54db0b312","blocks":[{"type":"rich_text","block_id":"hI0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"only if you do it in the right place and something else in between didn't do some other call increasing the size"}]}]}],"user":"U051SS2EU","text":"only if you do it in the right place and something else in between didn't do some other call increasing the size"}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629151158.011300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"d40cda36-aab2-4346-843f-b2aab2e163dc","blocks":[{"type":"rich_text","block_id":"XLxc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya, but I think that be a given, Like sure if I hand-off my thing to some third party lib. But if you can leverage Clojure core in a maximally lazy way, well, then that be great. Its pretty easy to just create a generating seq of something and then run a mapcat, or a filter on it.\n\nIts a lot more annoying to generate a custom thing using some abstraction I need to invent myself using core.async or manifold, and then re-build my own filter, mapcat and all that over it."}]}]}],"user":"U0K064KQV","text":"Ya, but I think that be a given, Like sure if I hand-off my thing to some third party lib. But if you can leverage Clojure core in a maximally lazy way, well, then that be great. Its pretty easy to just create a generating seq of something and then run a mapcat, or a filter on it.\n\nIts a lot more annoying to generate a custom thing using some abstraction I need to invent myself using core.async or manifold, and then re-build my own filter, mapcat and all that over it."}
{"type":"message","thread_ts":"1628843344.337300","ts":"1629153232.011500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"0a7bf0be-81a5-4633-92fb-6cbc6bb949a3","blocks":[{"type":"rich_text","block_id":"xdr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you're right in that as it stands, its a more reliable approach. Just it would be cool if lazy seqs could be relied on for this as well."}]}]}],"user":"U0K064KQV","text":"I think you're right in that as it stands, its a more reliable approach. Just it would be cool if lazy seqs could be relied on for this as well."}
{"subscribed":false,"reply_users":["U04V70XH6","U02AY0CR9CM","U050ECB92","U064X3EF3","U1QJACBUM"],"type":"message","thread_ts":"1628784716.330200","reply_users_count":5,"edited":{"user":"U02AY0CR9CM","ts":"1628785251.000000"},"ts":"1628784716.330200","team":"T03RZGPFR","client_msg_id":"1cff5add-166f-4774-8db1-936ce4933cd8","blocks":[{"type":"rich_text","block_id":"E1EXk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know why Datomic Cloud does not have the d\/entity function. I found myself implementing a map like interface to datomic, then I realized such a thing already existed for On-Prem. Is there a reason why this is a bad idea on Datomic Cloud? Thanks! FYI, my goal is to be able to work with data stored in datomic as a map, so I write homogenous functions that don\u2019t need to know about where the data is\u2026. it\u2019s just a map."}]}]}],"is_locked":false,"user":"U02AY0CR9CM","reply_count":9,"latest_reply":"1628786490.333200","text":"Does anyone know why Datomic Cloud does not have the d\/entity function. I found myself implementing a map like interface to datomic, then I realized such a thing already existed for On-Prem. Is there a reason why this is a bad idea on Datomic Cloud? Thanks! FYI, my goal is to be able to work with data stored in datomic as a map, so I write homogenous functions that don\u2019t need to know about where the data is\u2026. it\u2019s just a map."}
{"subscribed":false,"reply_users":["U04V70XH6","U02AY0CR9CM","U050ECB92","U064X3EF3","U1QJACBUM"],"type":"message","thread_ts":"1628784716.330200","reply_users_count":5,"edited":{"user":"U02AY0CR9CM","ts":"1628785251.000000"},"ts":"1628784716.330200","team":"T03RZGPFR","client_msg_id":"1cff5add-166f-4774-8db1-936ce4933cd8","blocks":[{"type":"rich_text","block_id":"E1EXk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know why Datomic Cloud does not have the d\/entity function. I found myself implementing a map like interface to datomic, then I realized such a thing already existed for On-Prem. Is there a reason why this is a bad idea on Datomic Cloud? Thanks! FYI, my goal is to be able to work with data stored in datomic as a map, so I write homogenous functions that don\u2019t need to know about where the data is\u2026. it\u2019s just a map."}]}]}],"is_locked":false,"user":"U02AY0CR9CM","reply_count":9,"latest_reply":"1628786490.333200","text":"Does anyone know why Datomic Cloud does not have the d\/entity function. I found myself implementing a map like interface to datomic, then I realized such a thing already existed for On-Prem. Is there a reason why this is a bad idea on Datomic Cloud? Thanks! FYI, my goal is to be able to work with data stored in datomic as a map, so I write homogenous functions that don\u2019t need to know about where the data is\u2026. it\u2019s just a map."}
{"attachments":[{"thumb_width":160,"thumb_height":128,"service_name":"forum.datomic.com","title_link":"https:\/\/forum.datomic.com\/","fallback":"Datomic Developers","from_url":"https:\/\/forum.datomic.com\/","title":"Datomic Developers","id":1,"thumb_url":"https:\/\/aws1.discourse-cdn.com\/business6\/uploads\/cognitect\/original\/1X\/521825616a9c5f7958bd40c46045d077c2d9d93d.png","service_icon":"https:\/\/aws1.discourse-cdn.com\/business6\/uploads\/cognitect\/optimized\/1X\/51d8cd75c578c96d7588ba74be3e847e54d608d5_2_180x180.png","original_url":"https:\/\/forum.datomic.com\/","text":"Discussion forum for developers working with Datomic."}],"type":"message","thread_ts":"1628784716.330200","ts":"1628785378.330600","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"108bd05a-ef45-4879-b0a2-a7d890e50bd3","blocks":[{"type":"rich_text","block_id":"JJp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you don't get an answer here you might ask in "},{"type":"channel","channel_id":"C03RZMDSH"},{"type":"text","text":" (although I think nearly all the support is done via their Discourse server "},{"type":"link","url":"https:\/\/forum.datomic.com\/"},{"type":"text","text":" ?)"}]}]}],"user":"U04V70XH6","reactions":[{"name":"+1","users":["U02AY0CR9CM"],"count":1}],"text":"If you don't get an answer here you might ask in <#C03RZMDSH|datomic> (although I think nearly all the support is done via their Discourse server <https:\/\/forum.datomic.com\/> ?)"}
{"type":"message","thread_ts":"1628784716.330200","edited":{"user":"U02AY0CR9CM","ts":"1628785447.000000"},"ts":"1628785417.330900","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"b7bbca1a-7590-4c83-869d-ec2d58e646a4","blocks":[{"type":"rich_text","block_id":"8FzG5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, I\u2019ll cross post over there if nothing comes of this."}]}]}],"user":"U02AY0CR9CM","text":"Thanks, I\u2019ll cross post over there if nothing comes of this."}
{"type":"message","thread_ts":"1628784716.330200","ts":"1628785892.331700","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"93995cf2-cd9e-4a31-95ba-803d0fbc8d40","blocks":[{"type":"rich_text","block_id":"1ccTX","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/docs.datomic.com\/on-prem\/overview\/clients-and-peers.html"}]}]}],"user":"U050ECB92","text":"<https:\/\/docs.datomic.com\/on-prem\/overview\/clients-and-peers.html>"}
{"attachments":[{"service_name":"ask.datomic.com","title_link":"https:\/\/ask.datomic.com\/","fallback":"Datomic Knowledgebase","from_url":"https:\/\/ask.datomic.com\/","title":"Datomic Knowledgebase","id":1,"service_icon":"https:\/\/ask.datomic.com\/apple-icon-57x57.png","original_url":"https:\/\/ask.datomic.com","text":"Forum for Datomic Q&amp;A"}],"type":"message","thread_ts":"1628784716.330200","ts":"1628785909.331900","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"f82f3461-d50d-474b-8753-bb1179ac704c","blocks":[{"type":"rich_text","block_id":"sk1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think "},{"type":"link","url":"https:\/\/ask.datomic.com"},{"type":"text","text":" is the preferred forum now"}]}]}],"user":"U064X3EF3","reactions":[{"name":"grin","users":["U1QJACBUM"],"count":1}],"text":"I think <https:\/\/ask.datomic.com> is the preferred forum now"}
{"type":"message","thread_ts":"1628784716.330200","ts":"1628785919.332100","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"2fda4d50-3671-489c-8e0b-91270e47081a","blocks":[{"type":"rich_text","block_id":"3ox","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"should cover some of it -- Datomic cloud uses the client API, which is a wire protocol"}]}]}],"user":"U050ECB92","text":"should cover some of it -- Datomic cloud uses the client API, which is a wire protocol"}
{"type":"message","thread_ts":"1628784716.330200","ts":"1628785923.332300","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"957a4258-b4bf-48ae-8d47-a4e4cba2ab34","blocks":[{"type":"rich_text","block_id":"RT=Ov","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The reason is essentially entity api over the wire is poor performing.  It's lazy and a poor fit for client-cloud.  Query and pull should do the job for you and if you run into any issues I am always happy to help via support."}]}]}],"user":"U1QJACBUM","text":"The reason is essentially entity api over the wire is poor performing.  It's lazy and a poor fit for client-cloud.  Query and pull should do the job for you and if you run into any issues I am always happy to help via support."}
{"type":"message","thread_ts":"1628784716.330200","ts":"1628785942.332600","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"4fee08e0-4cd0-497d-a866-79f83b73908a","blocks":[{"type":"rich_text","block_id":"JPX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow, everyone just responded at the same time "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U1QJACBUM","text":"Wow, everyone just responded at the same time :slightly_smiling_face:"}
{"type":"message","thread_ts":"1628784716.330200","ts":"1628785945.332800","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"e5e8bd4f-5a33-4f9f-95a0-9324dd6525a6","blocks":[{"type":"rich_text","block_id":"Exe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Datomic on-prem uses .... not a wire proto"}]}]}],"user":"U050ECB92","text":"Datomic on-prem uses .... not a wire proto"}
{"type":"message","thread_ts":"1628784716.330200","ts":"1628786490.333200","parent_user_id":"U02AY0CR9CM","team":"T03RZGPFR","client_msg_id":"5cb437dc-587c-49ef-aee0-38ee1b204e73","blocks":[{"type":"rich_text","block_id":"5Bi","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U050ECB92"},{"type":"text","text":" thanks for the link. The sections in Reads is interesting, since it looks like, depending on the access pattern, the data being access my very well be cached locally or in memcache, eliminating, to some degree, the \u201cover the wire\u201d cost. I think I am going to explore implementing this further\u2026 since I can always switch to using d\/pull."}]}]}],"user":"U02AY0CR9CM","text":"<@U050ECB92> thanks for the link. The sections in Reads is interesting, since it looks like, depending on the access pattern, the data being access my very well be cached locally or in memcache, eliminating, to some degree, the \u201cover the wire\u201d cost. I think I am going to explore implementing this further\u2026 since I can always switch to using d\/pull."}
{"subscribed":false,"reply_users":["UMPJRJU9E","U0WL6FA77","U0BBFDED7"],"type":"message","thread_ts":"1628768649.319900","reply_users_count":3,"ts":"1628768649.319900","team":"T03RZGPFR","client_msg_id":"94737af3-457f-4447-842c-ee0e79ad3587","blocks":[{"type":"rich_text","block_id":"oHdFa","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn -main [& args]\n  (let [iterations (Integer\/parseInt\n                     (or (System\/getenv \"NLOOP\") \"10\"))]\n    (println \"Start memory leak with\" iterations \"iterations\")\n    (doall\n      (for [n (range iterations)]\n        (do\n          (print n \",\")\n          [n (range 100)])))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"},{"type":"text","text":"(tutorials.memory-leak\/-main)","style":{"code":true}},{"type":"text","text":" do ` (print n \",\")` but if I am running it from jar file it doesn\u2019t ` (print n \",\")` unless I wrap "},{"type":"text","text":"doall","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"println","style":{"code":true}},{"type":"text","text":".\n\nIt looks like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(doall\n      (for [n (range iterations)]\n        (do\n          (print n \",\")\n          [n (range 100)])))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nbehave differently in REPL and in JAR file. It doesn\u2019t make sense, does it?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(tutorials.memory-leak\/-main)\nStart memory leak with 10 iterations\n0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,=> nil"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":" ~\/L\/M\/c\/s\/p\/t\/memory-leak \ue0b0 docker run --rm -it -m 128M --memory-swap 128M --memory-swappiness 0 -e NLOOP=100 -e SLEEP=3 --name test test\nStart memory leak with 100 iterations\n ~\/L\/M\/c\/s\/p\/t\/memory-leak"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"CMD [\"java\", \"-XX:InitialRAMPercentage=70\", \"-XX:MaxRAMPercentage=70\", \"-jar\", \"memory-leak.jar\"]","style":{"code":true}}]}]}],"is_locked":false,"user":"U0WL6FA77","reply_count":9,"latest_reply":"1628788303.333900","text":"```(defn -main [&amp; args]\n  (let [iterations (Integer\/parseInt\n                     (or (System\/getenv \"NLOOP\") \"10\"))]\n    (println \"Start memory leak with\" iterations \"iterations\")\n    (doall\n      (for [n (range iterations)]\n        (do\n          (print n \",\")\n          [n (range 100)])))))```\n`(tutorials.memory-leak\/-main)` do ` (print n \",\")` but if I am running it from jar file it doesn\u2019t ` (print n \",\")` unless I wrap `doall` with `println`.\n\nIt looks like\n```(doall\n      (for [n (range iterations)]\n        (do\n          (print n \",\")\n          [n (range 100)])))```\nbehave differently in REPL and in JAR file. It doesn\u2019t make sense, does it?\n\n```(tutorials.memory-leak\/-main)\nStart memory leak with 10 iterations\n0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,=&gt; nil```\n``` ~\/L\/M\/c\/s\/p\/t\/memory-leak \ue0b0 docker run --rm -it -m 128M --memory-swap 128M --memory-swappiness 0 -e NLOOP=100 -e SLEEP=3 --name test test\nStart memory leak with 100 iterations\n ~\/L\/M\/c\/s\/p\/t\/memory-leak```\n`CMD [\"java\", \"-XX:InitialRAMPercentage=70\", \"-XX:MaxRAMPercentage=70\", \"-jar\", \"memory-leak.jar\"]`"}
{"subscribed":false,"reply_users":["UMPJRJU9E","U0WL6FA77","U0BBFDED7"],"type":"message","thread_ts":"1628768649.319900","reply_users_count":3,"ts":"1628768649.319900","team":"T03RZGPFR","client_msg_id":"94737af3-457f-4447-842c-ee0e79ad3587","blocks":[{"type":"rich_text","block_id":"oHdFa","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn -main [& args]\n  (let [iterations (Integer\/parseInt\n                     (or (System\/getenv \"NLOOP\") \"10\"))]\n    (println \"Start memory leak with\" iterations \"iterations\")\n    (doall\n      (for [n (range iterations)]\n        (do\n          (print n \",\")\n          [n (range 100)])))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"},{"type":"text","text":"(tutorials.memory-leak\/-main)","style":{"code":true}},{"type":"text","text":" do ` (print n \",\")` but if I am running it from jar file it doesn\u2019t ` (print n \",\")` unless I wrap "},{"type":"text","text":"doall","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"println","style":{"code":true}},{"type":"text","text":".\n\nIt looks like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(doall\n      (for [n (range iterations)]\n        (do\n          (print n \",\")\n          [n (range 100)])))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nbehave differently in REPL and in JAR file. It doesn\u2019t make sense, does it?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(tutorials.memory-leak\/-main)\nStart memory leak with 10 iterations\n0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,=> nil"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":" ~\/L\/M\/c\/s\/p\/t\/memory-leak \ue0b0 docker run --rm -it -m 128M --memory-swap 128M --memory-swappiness 0 -e NLOOP=100 -e SLEEP=3 --name test test\nStart memory leak with 100 iterations\n ~\/L\/M\/c\/s\/p\/t\/memory-leak"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"CMD [\"java\", \"-XX:InitialRAMPercentage=70\", \"-XX:MaxRAMPercentage=70\", \"-jar\", \"memory-leak.jar\"]","style":{"code":true}}]}]}],"is_locked":false,"user":"U0WL6FA77","reply_count":9,"latest_reply":"1628788303.333900","text":"```(defn -main [&amp; args]\n  (let [iterations (Integer\/parseInt\n                     (or (System\/getenv \"NLOOP\") \"10\"))]\n    (println \"Start memory leak with\" iterations \"iterations\")\n    (doall\n      (for [n (range iterations)]\n        (do\n          (print n \",\")\n          [n (range 100)])))))```\n`(tutorials.memory-leak\/-main)` do ` (print n \",\")` but if I am running it from jar file it doesn\u2019t ` (print n \",\")` unless I wrap `doall` with `println`.\n\nIt looks like\n```(doall\n      (for [n (range iterations)]\n        (do\n          (print n \",\")\n          [n (range 100)])))```\nbehave differently in REPL and in JAR file. It doesn\u2019t make sense, does it?\n\n```(tutorials.memory-leak\/-main)\nStart memory leak with 10 iterations\n0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,=&gt; nil```\n``` ~\/L\/M\/c\/s\/p\/t\/memory-leak \ue0b0 docker run --rm -it -m 128M --memory-swap 128M --memory-swappiness 0 -e NLOOP=100 -e SLEEP=3 --name test test\nStart memory leak with 100 iterations\n ~\/L\/M\/c\/s\/p\/t\/memory-leak```\n`CMD [\"java\", \"-XX:InitialRAMPercentage=70\", \"-XX:MaxRAMPercentage=70\", \"-jar\", \"memory-leak.jar\"]`"}
{"type":"message","thread_ts":"1628768649.319900","ts":"1628769029.320400","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"1a5be528-810f-4c6a-aff1-bbd9ffe8d5d3","blocks":[{"type":"rich_text","block_id":"FUd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The P in the REPL will realize the lazy sequence and print it while in the jar the lazyseq is just returned as is."}]}]}],"user":"UMPJRJU9E","text":"The P in the REPL will realize the lazy sequence and print it while in the jar the lazyseq is just returned as is."}
{"type":"message","thread_ts":"1628768649.319900","ts":"1628769119.320800","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"91bb051d-a649-4f2f-b9bb-156f20398e5f","blocks":[{"type":"rich_text","block_id":"Zok8z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So indeed there is a difference! Do you know why REPL keep this difference?"}]}]}],"user":"U0WL6FA77","text":"So indeed there is a difference! Do you know why REPL keep this difference?"}
{"type":"message","thread_ts":"1628768649.319900","ts":"1628769133.321000","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"5c981c10-aebd-4690-898d-c8b69f87443b","blocks":[{"type":"rich_text","block_id":"KBDK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW I use "},{"type":"text","text":"doall","style":{"code":true}}]}]}],"user":"U0WL6FA77","text":"BTW I use `doall`"}
{"type":"message","thread_ts":"1628768649.319900","ts":"1628769188.321200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"0a7be7e2-3509-48c5-bca4-3e23f632951b","blocks":[{"type":"rich_text","block_id":"scr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would like to hear extended answer "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U0WL6FA77","text":"I would like to hear extended answer :slightly_smiling_face:"}
{"type":"message","thread_ts":"1628768649.319900","ts":"1628770107.321700","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"d8a14ebd-c33c-4791-923a-b5dd4af0e70c","blocks":[{"type":"rich_text","block_id":"P=+e9","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/flush","text":"https:\/\/clojuredocs.org\/clojure.core\/flush"}]}]}],"user":"U0BBFDED7","text":"<https:\/\/clojuredocs.org\/clojure.core\/flush|https:\/\/clojuredocs.org\/clojure.core\/flush>"}
{"type":"message","thread_ts":"1628768649.319900","edited":{"user":"UMPJRJU9E","ts":"1628770171.000000"},"ts":"1628770135.321900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"721d20dc-fe6e-4fe0-9225-adf45dd209ab","blocks":[{"type":"rich_text","block_id":"idTp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Printing is a realizing operation, in the sense, the operation will go through the whole collection and send it to the writer.\n\nThe implementation of print can be found here "},{"type":"link","url":"https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/core_print.clj"},{"type":"text","text":"\n\n"},{"type":"text","text":"print-method","style":{"code":true}},{"type":"text","text":" is the multi method that eventually gets called and you can see how it is implemented for different types of values. Take a look at "},{"type":"text","text":"print-sequential","style":{"code":true}},{"type":"text","text":" for how it is realizing the sequences in order to print them."}]}]}],"user":"UMPJRJU9E","reactions":[{"name":"+1","users":["U0WL6FA77"],"count":1}],"text":"Printing is a realizing operation, in the sense, the operation will go through the whole collection and send it to the writer.\n\nThe implementation of print can be found here <https:\/\/github.com\/clojure\/clojure\/blob\/master\/src\/clj\/clojure\/core_print.clj>\n\n`print-method` is the multi method that eventually gets called and you can see how it is implemented for different types of values. Take a look at `print-sequential` for how it is realizing the sequences in order to print them."}
{"type":"message","thread_ts":"1628768649.319900","ts":"1628770556.323200","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"7e2a974c-1d12-406d-92cd-4962df1eb2fa","blocks":[{"type":"rich_text","block_id":"4zU4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh it is about "},{"type":"text","text":"flush","style":{"code":true}},{"type":"text","text":", I see"}]}]}],"user":"U0WL6FA77","text":"oh it is about `flush`, I see"}
{"type":"message","thread_ts":"1628768649.319900","ts":"1628770628.323500","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"ed194de2-c734-40fb-bc83-618a8e379798","blocks":[{"type":"rich_text","block_id":"c6av","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you"}]}]}],"user":"U0WL6FA77","text":"thank you"}
{"type":"message","thread_ts":"1628768649.319900","ts":"1628788303.333900","parent_user_id":"U0WL6FA77","team":"T03RZGPFR","client_msg_id":"1292633c-152b-4cdd-905b-9c4fa63f5bc7","blocks":[{"type":"rich_text","block_id":"rRBvA","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"wink"}]}]}],"user":"U0BBFDED7","text":":wink:"}
{"subscribed":false,"reply_users":["U47G49KHQ","U010VP3UY9X","U7RJTCH6J","U2FRKM4TW"],"type":"message","thread_ts":"1628757245.305200","reply_users_count":4,"ts":"1628757245.305200","team":"T03RZGPFR","client_msg_id":"341b68fc-93ec-443a-a4cf-b499008a4330","blocks":[{"type":"rich_text","block_id":"XTX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I have two lazy sequences which were created with something like "},{"type":"text","text":"(for [x some-input] (f x y))","style":{"code":true}},{"type":"text","text":" and I want to compare them for equality.   My intuition is that the equality search stops as soon as it finds a difference.   Is that intuition correct?   Or are there gotchas which I need to know about?   The important feature being the "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" function need not be called on any element after the ones that fail to be equal."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":58,"latest_reply":"1628771513.324500","text":"If I have two lazy sequences which were created with something like `(for [x some-input] (f x y))` and I want to compare them for equality.   My intuition is that the equality search stops as soon as it finds a difference.   Is that intuition correct?   Or are there gotchas which I need to know about?   The important feature being the `f` function need not be called on any element after the ones that fail to be equal."}
{"subscribed":false,"reply_users":["U47G49KHQ","U010VP3UY9X","U7RJTCH6J","U2FRKM4TW"],"type":"message","thread_ts":"1628757245.305200","reply_users_count":4,"ts":"1628757245.305200","team":"T03RZGPFR","client_msg_id":"341b68fc-93ec-443a-a4cf-b499008a4330","blocks":[{"type":"rich_text","block_id":"XTX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I have two lazy sequences which were created with something like "},{"type":"text","text":"(for [x some-input] (f x y))","style":{"code":true}},{"type":"text","text":" and I want to compare them for equality.   My intuition is that the equality search stops as soon as it finds a difference.   Is that intuition correct?   Or are there gotchas which I need to know about?   The important feature being the "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" function need not be called on any element after the ones that fail to be equal."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":58,"latest_reply":"1628771513.324500","text":"If I have two lazy sequences which were created with something like `(for [x some-input] (f x y))` and I want to compare them for equality.   My intuition is that the equality search stops as soon as it finds a difference.   Is that intuition correct?   Or are there gotchas which I need to know about?   The important feature being the `f` function need not be called on any element after the ones that fail to be equal."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757631.305300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e722b9e4-c22e-4289-9966-e3524a1c1a33","blocks":[{"type":"rich_text","block_id":"PD+Og","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(= [0] (range)) ;; stuck forever\n(= (range) [1]) => false"}]}]}],"user":"U47G49KHQ","text":"```(= [0] (range)) ;; stuck forever\n(= (range) [1]) =&gt; false```"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757635.305500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8129b52b-0a6b-45a7-9b4c-9a7c9d6672da","blocks":[{"type":"rich_text","block_id":"pkrs3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess it depends"}]}]}],"user":"U47G49KHQ","text":"I guess it depends"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757705.307000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"37b3f1cf-56dc-4e56-a8dc-4d392912d6de","blocks":[{"type":"rich_text","block_id":"XsT9W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For example:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"clojure-rte.rte-core> (defn f [x] (prn [:x x]) (* x x))\n#'clojure-rte.rte-core\/f\nclojure-rte.rte-core> (= (map f (range 10 20)) (map f (range 50 60)))\n[:x 10]\n[:x 11]\n[:x 12]\n[:x 13]\n[:x 14]\n[:x 15]\n[:x 16]\n[:x 17]\n[:x 18]\n[:x 19]\n[:x 50]\n[:x 51]\n[:x 52]\n[:x 53]\n[:x 54]\n[:x 55]\n[:x 56]\n[:x 57]\n[:x 58]\n[:x 59]\nfalse\nclojure-rte.rte-core> "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" gets called on more than just the first elements."}]}]}],"user":"U010VP3UY9X","text":"For example:\n```clojure-rte.rte-core&gt; (defn f [x] (prn [:x x]) (* x x))\n#'clojure-rte.rte-core\/f\nclojure-rte.rte-core&gt; (= (map f (range 10 20)) (map f (range 50 60)))\n[:x 10]\n[:x 11]\n[:x 12]\n[:x 13]\n[:x 14]\n[:x 15]\n[:x 16]\n[:x 17]\n[:x 18]\n[:x 19]\n[:x 50]\n[:x 51]\n[:x 52]\n[:x 53]\n[:x 54]\n[:x 55]\n[:x 56]\n[:x 57]\n[:x 58]\n[:x 59]\nfalse\nclojure-rte.rte-core&gt; ```\n`f` gets called on more than just the first elements."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757711.307200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6ab09f82-b27a-4fa8-a87d-d843fe7b9bd8","blocks":[{"type":"rich_text","block_id":"zwkYC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there is also chunking on some coll types, not sure it applies to lazy sequences produced by "},{"type":"text","text":"for","style":{"code":true}}]}]}],"user":"U47G49KHQ","text":"there is also chunking on some coll types, not sure it applies to lazy sequences produced by `for`"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757770.308500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"0C0BFBC1-8304-4BE5-8AC2-F05B00716FC4","blocks":[{"type":"rich_text","block_id":"zJNn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"additionally, lazy sequences will realize values based on chunking. relying on specific chunk sizes is not a good idea. if you care about the number of items realized, then you should not use lazy sequences."}]}]}],"user":"U7RJTCH6J","reactions":[{"name":"heavy_plus_sign","users":["U47G49KHQ"],"count":1}],"text":"additionally, lazy sequences will realize values based on chunking. relying on specific chunk sizes is not a good idea. if you care about the number of items realized, then you should not use lazy sequences."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757772.308700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a2a912cc-5233-4649-be01-ce6cfa139635","blocks":[{"type":"rich_text","block_id":"yVE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" does chunking"}]}]}],"user":"U47G49KHQ","text":"yeah, `map` does chunking"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757840.309600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"7823dceb-baaa-4895-910a-0d1282bd9a52","blocks":[{"type":"rich_text","block_id":"OXw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"chunking is a bit mysterious to me.  of course I understand the basic idea, but how to reason about performance in the presence of chunking is something I'm bad at"}]}]}],"user":"U010VP3UY9X","text":"chunking is a bit mysterious to me.  of course I understand the basic idea, but how to reason about performance in the presence of chunking is something I'm bad at"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757840.309700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9B27FB28-0CF3-4F9C-953F-4085BC35CC5C","blocks":[{"type":"rich_text","block_id":"Ysk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"instead, you can use transducers"}]}]}],"user":"U7RJTCH6J","reactions":[{"name":"heavy_plus_sign","users":["U47G49KHQ"],"count":1}],"text":"instead, you can use transducers"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757881.310100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1207637d-2f96-4001-a9d8-7d08ed3605a6","blocks":[{"type":"rich_text","block_id":"i9Bhw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've seen this word lots of times, but I've never investigated actually what they are."}]}]}],"user":"U010VP3UY9X","text":"I've seen this word lots of times, but I've never investigated actually what they are."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757892.310300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"53479916-89d1-4e1b-9c2b-bac6ef31831f","blocks":[{"type":"rich_text","block_id":"Sszni","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Reasoning about performance when everything is lazy is also hard. :)"}]}]}],"user":"U2FRKM4TW","text":"Reasoning about performance when everything is lazy is also hard. :)"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757925.310500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9d0b875c-a729-48f9-a063-00e45dc32304","blocks":[{"type":"rich_text","block_id":"ZZ9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a one sentence definition of transducer somewhere, or does someone have to read a phd thesis to understand them?"}]}]}],"user":"U010VP3UY9X","text":"is there a one sentence definition of transducer somewhere, or does someone have to read a phd thesis to understand them?"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757964.310700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a2712d6f-1169-4661-985e-0258fa1a42d6","blocks":[{"type":"rich_text","block_id":"XYF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or you could rethink your solution to the problem you are solving in a way so it does not have this problem with lazy collections performing too much computation"}]}]}],"user":"U47G49KHQ","text":"or you could rethink your solution to the problem you are solving in a way so it does not have this problem with lazy collections performing too much computation"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628757986.310900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"461ade85-af6c-4054-a819-937bd0e55bb9","blocks":[{"type":"rich_text","block_id":"jmG","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U010VP3UY9X"},{"type":"text","text":" "},{"type":"link","url":"https:\/\/clojure.org\/reference\/transducers"}]}]}],"user":"U2FRKM4TW","text":"<@U010VP3UY9X> <https:\/\/clojure.org\/reference\/transducers>"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758168.311100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"0091b6d9-fd3b-4a58-afb5-f0a467925403","blocks":[{"type":"rich_text","block_id":"YZS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the transducer docs are a little dense. At a high level, I like to think of a transducers as a way to deal with items that arrive one a at a time. You can reuse transducers in a number of \"contexts\": building sequences, reading\/writing to streams\/channels, etc."}]}]}],"user":"U7RJTCH6J","text":"I think the transducer docs are a little dense. At a high level, I like to think of a transducers as a way to deal with items that arrive one a at a time. You can reuse transducers in a number of \"contexts\": building sequences, reading\/writing to streams\/channels, etc."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758213.311300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"4dd30bd1-2dfa-406f-9d69-2c9a150ba074","blocks":[{"type":"rich_text","block_id":"QYX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and how do transducers solve the problem of chunking?"}]}]}],"user":"U010VP3UY9X","text":"and how do transducers solve the problem of chunking?"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758287.311500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5c5f4422-5708-433d-9ec1-0580e26bef68","blocks":[{"type":"rich_text","block_id":"oOk1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a more technical definition (from "},{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":"\u2019s link) is\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"A "},{"type":"text","text":"transducer","style":{"italic":true}},{"type":"text","text":" (sometimes referred to as xform or xf) is a transformation from one reducing function to another"}]}]}],"user":"U7RJTCH6J","text":"a more technical definition (from <@U2FRKM4TW>\u2019s link) is\n&gt; A _transducer_ (sometimes referred to as xform or xf) is a transformation from one reducing function to another"}
{"type":"message","thread_ts":"1628757245.305200","edited":{"user":"U7RJTCH6J","ts":"1628758397.000000"},"ts":"1628758357.311700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"7346cc98-b404-49e8-9b05-622b1a71ace0","blocks":[{"type":"rich_text","block_id":"RYlDX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lazy sequences will implicitly chunk processing for performance. transducers will not. you can explicitly chunk if you want, but usually you don't unless that's the explicit purpose (using something like "},{"type":"text","text":"partition-all","style":{"code":true}},{"type":"text","text":")"}]}]}],"user":"U7RJTCH6J","text":"lazy sequences will implicitly chunk processing for performance. transducers will not. you can explicitly chunk if you want, but usually you don't unless that's the explicit purpose (using something like `partition-all`)"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758483.312000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"36190a77-82b3-439c-8794-0c048b2c8058","blocks":[{"type":"rich_text","block_id":"lY9u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do I still have to build laziness into my transducers or does it come automagically?"}]}]}],"user":"U010VP3UY9X","text":"do I still have to build laziness into my transducers or does it come automagically?"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758691.312200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2ac7971e-67c7-47ee-90d1-20ca06f58c30","blocks":[{"type":"rich_text","block_id":"2qf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Transducers and laziness are orthogonal concepts. Laziness comes from the sequence that you use and from the function that ends up using the transducers.\n"},{"type":"text","text":"into","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"transduce","style":{"code":true}},{"type":"text","text":" will not be lazy, "},{"type":"text","text":"sequence","style":{"code":true}},{"type":"text","text":" will be."}]}]}],"user":"U2FRKM4TW","text":"Transducers and laziness are orthogonal concepts. Laziness comes from the sequence that you use and from the function that ends up using the transducers.\n`into` and `transduce` will not be lazy, `sequence` will be."}
{"type":"message","thread_ts":"1628757245.305200","edited":{"user":"U7RJTCH6J","ts":"1628758744.000000"},"ts":"1628758693.312400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"16dbd0e0-f6e8-4a59-b8fa-2e5321d38d79","blocks":[{"type":"rich_text","block_id":"3OC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"transducers aren't lazy","style":{"strike":true}},{"type":"text","text":", but a lot of the time, the code will look similar to using lazy sequences:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(into [] (comp (map inc) (take-while #(< % 100))) (range))\n;; vs\n(->> (range) (map inc) (take-while #(< % 100)))"}]}]}],"user":"U7RJTCH6J","text":"~transducers aren't lazy~, but a lot of the time, the code will look similar to using lazy sequences:\n```(into [] (comp (map inc) (take-while #(&lt; % 100))) (range))\n;; vs\n(-&gt;&gt; (range) (map inc) (take-while #(&lt; % 100)))```"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758711.312600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"46598e95-58f8-41a8-8108-df3c99b01f5a","blocks":[{"type":"rich_text","block_id":"Rvn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"aside the proposal of transducers for the moment.   it seems "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" returned a lazy sequence susceptible to chunking.    Can I write my own "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" using "},{"type":"text","text":"cons","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"lazy-seq","style":{"code":true}},{"type":"text","text":" which a chunkable resolution of 1?"}]}]}],"user":"U010VP3UY9X","text":"aside the proposal of transducers for the moment.   it seems `map` returned a lazy sequence susceptible to chunking.    Can I write my own `map` using `cons` and `lazy-seq` which a chunkable resolution of 1?"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758730.312800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9338e71e-bbd5-416b-9158-8cf39587c83f","blocks":[{"type":"rich_text","block_id":"FP5x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"actually, "},{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":" is right. tranducers can be used in lazy contexts"}]}]}],"user":"U7RJTCH6J","text":"actually, <@U2FRKM4TW> is right. tranducers can be used in lazy contexts"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758761.313100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"be1a494c-bebd-4361-899f-3ae46620c2eb","blocks":[{"type":"rich_text","block_id":"MOM","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U010VP3UY9X"},{"type":"text","text":" You can, but if you often process many items then the performance will likely suffer."}]}]}],"user":"U2FRKM4TW","text":"<@U010VP3UY9X> You can, but if you often process many items then the performance will likely suffer."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758807.313300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"bdc1f3f8-93a3-4dca-be71-f17e390c8898","blocks":[{"type":"rich_text","block_id":"C2Lls","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Chunking is there specifically for the performance reason."}]}]}],"user":"U2FRKM4TW","text":"Chunking is there specifically for the performance reason."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758828.313500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"780abf30-3499-4f94-ad99-16aa4ec4d6d0","blocks":[{"type":"rich_text","block_id":"XxT67","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But it of course depends on many factors."}]}]}],"user":"U2FRKM4TW","text":"But it of course depends on many factors."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628758925.313700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"71eaedde-772e-47db-a111-05eb14725601","blocks":[{"type":"rich_text","block_id":"eDkZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems to me that there's a false assumption many people make dealing with lazy sequences.   in particular people (seem to) assume that realizing n elements of a lazy sequence has linear complexity.   In reality it has linear complexity multiplied by the complexity of the generator function in question.\nMy generator function has exponential (or at least quadratic complexity).   So I can potentially get a big performance gain by having a chunk granularity of 1."}]}]}],"user":"U010VP3UY9X","text":"It seems to me that there's a false assumption many people make dealing with lazy sequences.   in particular people (seem to) assume that realizing n elements of a lazy sequence has linear complexity.   In reality it has linear complexity multiplied by the complexity of the generator function in question.\nMy generator function has exponential (or at least quadratic complexity).   So I can potentially get a big performance gain by having a chunk granularity of 1."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759049.313900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"d4345270-3601-4aea-9a17-69f5a4823654","blocks":[{"type":"rich_text","block_id":"=0rM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's one of those factors, yes."}]}]}],"user":"U2FRKM4TW","text":"That's one of those factors, yes."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759084.314100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c08f4332-8b4d-4649-9ee1-cbf14ec27c07","blocks":[{"type":"rich_text","block_id":"TwZz","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/blog.fogus.me\/2010\/01\/22\/de-chunkifying-sequences-in-clojure\/"}]}]}],"user":"U2FRKM4TW","text":"<https:\/\/blog.fogus.me\/2010\/01\/22\/de-chunkifying-sequences-in-clojure\/>"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759141.314300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a0ccf00f-aafb-450a-ad8d-54e58f7b34d4","blocks":[{"type":"rich_text","block_id":"j+w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are a few articles like this one, they're quite easy to find. Some offer completely different solutions."}]}]}],"user":"U2FRKM4TW","text":"There are a few articles like this one, they're quite easy to find. Some offer completely different solutions."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759153.314500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c5eef843-bf17-4795-ad7b-fa0bbb62ad97","blocks":[{"type":"rich_text","block_id":"EQ6a9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here is an example:  Hoping to keep it simple.\nSupport I have an expression tree A.   each node of the A contains a list of expression trees and an n-ary operators such as and\/or\/etc...\nnow suppose f and g are tree transformations. Now imagine the question is f(A) == g(A) ?\nideally you'd like to avoid generating any parts of the tree unless necessary.   I.e., if the first generated nodes are different, then stop the generation and stop the equivalence check."}]}]}],"user":"U010VP3UY9X","text":"Here is an example:  Hoping to keep it simple.\nSupport I have an expression tree A.   each node of the A contains a list of expression trees and an n-ary operators such as and\/or\/etc...\nnow suppose f and g are tree transformations. Now imagine the question is f(A) == g(A) ?\nideally you'd like to avoid generating any parts of the tree unless necessary.   I.e., if the first generated nodes are different, then stop the generation and stop the equivalence check."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759343.314700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"27a2f8f6-a5c7-4b9d-b55d-a816f3753aea","blocks":[{"type":"rich_text","block_id":"hz6+Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"compound that with the problem in my application.  I not only want to find f(A). I really want to find the fixed-point of "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" when applied to A.   So I want to keep calling "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" on the previous output of "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" until it returns the same thing as it is given."}]}]}],"user":"U010VP3UY9X","text":"compound that with the problem in my application.  I not only want to find f(A). I really want to find the fixed-point of `f` when applied to A.   So I want to keep calling `f` on the previous output of `f` until it returns the same thing as it is given."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759483.314900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"14f87fb6-5641-4c07-b4ec-92ecb1c12af7","blocks":[{"type":"rich_text","block_id":"F6+3y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that does sound like a challenge. I would probably reach for zippers, since that's a fairly general tool for dealing with trees."}]}]}],"user":"U7RJTCH6J","text":"that does sound like a challenge. I would probably reach for zippers, since that's a fairly general tool for dealing with trees."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759604.315100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3312d274-5260-4e15-994f-2a2fa2e577d1","blocks":[{"type":"rich_text","block_id":"ytZrc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure how motivated I am to solve this problem though.   I have 3 implementations: one in python, one in Scala, and one in clojure.   I am somewhat motivated to keep the implementations similar enough so that bugs found and fixed in one can be propagated to another."}]}]}],"user":"U010VP3UY9X","text":"I'm not sure how motivated I am to solve this problem though.   I have 3 implementations: one in python, one in Scala, and one in clojure.   I am somewhat motivated to keep the implementations similar enough so that bugs found and fixed in one can be propagated to another."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759604.315300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"82d79fc4-c4aa-49f5-ba7e-3beab4b38d88","blocks":[{"type":"rich_text","block_id":"WlHV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can write preorder edit\/traversal with trees in about a dozen lines of code while keeping control of how much work you do."}]}]}],"user":"U7RJTCH6J","text":"you can write preorder edit\/traversal with trees in about a dozen lines of code while keeping control of how much work you do."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759648.315500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5606c479-3a62-4e7e-ae05-f39256ed419f","blocks":[{"type":"rich_text","block_id":"wAZc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you have a scala\/python solution, it might translate better by just using "},{"type":"text","text":"loop","style":{"code":true}},{"type":"text","text":"\/"},{"type":"text","text":"recur","style":{"code":true}}]}]}],"user":"U7RJTCH6J","text":"if you have a scala\/python solution, it might translate better by just using `loop`\/`recur`"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759648.315700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3dfd5bc1-0b65-4a48-a8a4-8e86b7952904","blocks":[{"type":"rich_text","block_id":"aV4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"clojure lazy sequences are really elegant because they are almost invisible. this is a big advantage in my case as the algorithms look quite similar at least between clojure and scala."}]}]}],"user":"U010VP3UY9X","text":"clojure lazy sequences are really elegant because they are almost invisible. this is a big advantage in my case as the algorithms look quite similar at least between clojure and scala."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628759786.315900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c2313326-b45f-4cfa-8706-eb1d93f9706f","blocks":[{"type":"rich_text","block_id":"RDI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"furthermore,  it might very well be that making a huge refactoring to use transducers or some other drastic change WONT improve the performance at all.\nI think the performance is already very good thanks to memoization, which is another elegant clojure feature."}]}]}],"user":"U010VP3UY9X","text":"furthermore,  it might very well be that making a huge refactoring to use transducers or some other drastic change WONT improve the performance at all.\nI think the performance is already very good thanks to memoization, which is another elegant clojure feature."}
{"type":"message","thread_ts":"1628757245.305200","edited":{"user":"U010VP3UY9X","ts":"1628759896.000000"},"ts":"1628759859.316100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"d7f9c51c-0a87-4312-9337-c3cb08191744","blocks":[{"type":"rich_text","block_id":"Oun","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Back to my previous question.  Can I effectively generate a 1-chunked lazy sequence using "},{"type":"text","text":"lazy-seq","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"cons","style":{"code":true}},{"type":"text","text":" ?   I could use those operations to write my own "},{"type":"text","text":"1-chunked-map","style":{"code":true}},{"type":"text","text":" function."}]}]}],"user":"U010VP3UY9X","text":"Back to my previous question.  Can I effectively generate a 1-chunked lazy sequence using `lazy-seq` and `cons` ?   I could use those operations to write my own `1-chunked-map` function."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628763243.316500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c25b9282-c941-4277-ac0b-983bb51ffd43","blocks":[{"type":"rich_text","block_id":"6My","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have sent a link above that shows how to do that. And as I mentioned, there are many articles like that one."}]}]}],"user":"U2FRKM4TW","text":"I have sent a link above that shows how to do that. And as I mentioned, there are many articles like that one."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628766195.316800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5481e060-f216-45ad-a5a8-7f1d825a9fc6","blocks":[{"type":"rich_text","block_id":"YGw","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":" ahh thanks.  I opened up the article, but haven't read it yet.  I didn't realize it was related to "},{"type":"text","text":"1-chunked-map","style":{"code":true}}]}]}],"user":"U010VP3UY9X","text":"<@U2FRKM4TW> ahh thanks.  I opened up the article, but haven't read it yet.  I didn't realize it was related to `1-chunked-map`"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628766340.317000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"7ebd505c-874e-4a40-9c43-c61dbc3ba568","blocks":[{"type":"rich_text","block_id":"u3Dl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I got the idea from the first example on the lazy-seq page "},{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/lazy-seq"}]}]}],"user":"U010VP3UY9X","text":"I got the idea from the first example on the lazy-seq page <https:\/\/clojuredocs.org\/clojure.core\/lazy-seq>"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628767542.317200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"01c86c21-bc30-4082-ac08-c666d73ae651","blocks":[{"type":"rich_text","block_id":"QGkh","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":" do you understand the article you forwarded to me.   the author presents a function "},{"type":"text","text":"seq1","style":{"code":true}},{"type":"text","text":" and shows how to use it to wrap "},{"type":"text","text":"range","style":{"code":true}},{"type":"text","text":",  but as I understand it the result of calling "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" on an object returned by "},{"type":"text","text":"seq1","style":{"code":true}},{"type":"text","text":" no longer exhibits the "},{"type":"text","text":"1-chucked","style":{"code":true}},{"type":"text","text":" property.   do use that I'd need to somehow wrap the mapping functions like "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" and `mapcat` in `seq1` also.   However, I don't understand well enough what is happening.  Of course I don't want to have 32-chunks ex post facto converted to 1-chunks."}]}]}],"user":"U010VP3UY9X","text":"<@U2FRKM4TW> do you understand the article you forwarded to me.   the author presents a function `seq1` and shows how to use it to wrap `range`,  but as I understand it the result of calling `map` on an object returned by `seq1` no longer exhibits the `1-chucked` property.   do use that I'd need to somehow wrap the mapping functions like `map` and `mapcat` in `seq1` also.   However, I don't understand well enough what is happening.  Of course I don't want to have 32-chunks ex post facto converted to 1-chunks."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628768321.317400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3b5d9359-d7a5-43d9-943c-7db18bd0ac37","blocks":[{"type":"rich_text","block_id":"JWx","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" as I understand it the result of calling\u00a0"},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":"\u00a0on an object returned by\u00a0"},{"type":"text","text":"seq1","style":{"code":true}},{"type":"text","text":"\u00a0no longer exhibits the\u00a0"},{"type":"text","text":"1-chucked","style":{"code":true}},{"type":"text","text":"\u00a0property"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"How else would you explain this?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(take 1 (map gimme (seq1 (range 32))))\n;=> (.0)"}]}]}],"user":"U2FRKM4TW","text":"&gt;  as I understand it the result of calling\u00a0`map`\u00a0on an object returned by\u00a0`seq1`\u00a0no longer exhibits the\u00a0`1-chucked`\u00a0property\nHow else would you explain this?\n```(take 1 (map gimme (seq1 (range 32))))\n;=&gt; (.0)```"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628768375.317600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2596a9a4-a812-447e-b28d-eb8567b1d492","blocks":[{"type":"rich_text","block_id":"M6zg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The article is old and targets Clojure 1.2. I just tested it on Clojure 1.10.3, the result is the same:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"user=> (take 1 (map gimme (seq1 (range 32))))\n(.0)\nuser=> (take 2 (map gimme (seq1 (range 32))))\n(..0 1)\nuser=> (take 3 (map gimme (seq1 (range 32))))\n(..0 .1 2)"}]}]}],"user":"U2FRKM4TW","text":"The article is old and targets Clojure 1.2. I just tested it on Clojure 1.10.3, the result is the same:\n```user=&gt; (take 1 (map gimme (seq1 (range 32))))\n(.0)\nuser=&gt; (take 2 (map gimme (seq1 (range 32))))\n(..0 1)\nuser=&gt; (take 3 (map gimme (seq1 (range 32))))\n(..0 .1 2)```"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628768636.319600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"b15cad71-68d2-4913-9676-3707491e6f6c","blocks":[{"type":"rich_text","block_id":"KPTO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I freely admit that I cannot explain it.  I don't exactly understand.  But can you explain this?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"clojure-rte.rte-core> (take 1 (mapcat list (map gimme (seq1 (range 32)))))\n....(0)\nclojure-rte.rte-core> "}]}]}],"user":"U010VP3UY9X","text":"I freely admit that I cannot explain it.  I don't exactly understand.  But can you explain this?\n```clojure-rte.rte-core&gt; (take 1 (mapcat list (map gimme (seq1 (range 32)))))\n....(0)\nclojure-rte.rte-core&gt; ```"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628768686.320000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8fe8799c-b8b1-4acc-a233-d81e316e9704","blocks":[{"type":"rich_text","block_id":"TJg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"even if it take only 1, gimme is still called apparently 4 times"}]}]}],"user":"U010VP3UY9X","text":"even if it take only 1, gimme is still called apparently 4 times"}
{"type":"message","thread_ts":"1628757245.305200","edited":{"user":"U2FRKM4TW","ts":"1628769343.000000"},"ts":"1628768982.320200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"62649bc4-b78b-43a7-baa7-72c16ca10264","blocks":[{"type":"rich_text","block_id":"On7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That has something to do with how "},{"type":"text","text":"concat","style":{"code":true}},{"type":"text","text":" works. Not related to "},{"type":"text","text":"seq1","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"That has something to do with how `concat` works. Not related to `seq1`."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628769091.320600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8454a399-93e7-4bd8-8951-bbae2ddd1b34","blocks":[{"type":"rich_text","block_id":"jFH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Frankly, I'm surprised that it doesn't print out 20 dots - "},{"type":"text","text":"apply","style":{"code":true}},{"type":"text","text":" uses "},{"type":"text","text":"RT.boundedLength(arglist, 20)","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"Frankly, I'm surprised that it doesn't print out 20 dots - `apply` uses `RT.boundedLength(arglist, 20)`."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628770065.321500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"eb8c33fb-3410-412a-b46d-66f0702d0b7a","blocks":[{"type":"rich_text","block_id":"0mK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh perhaps "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":" has a hardcoded 4 somewhere ?"}]}]}],"user":"U010VP3UY9X","text":"oh perhaps `mapcat` has a hardcoded 4 somewhere ?"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628770164.322200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"498d56a7-5220-4d44-923a-e699a6cdd81e","blocks":[{"type":"rich_text","block_id":"t3wlc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not really. Or somewhere down its call stack, in a rather implicit way."}]}]}],"user":"U2FRKM4TW","text":"Not really. Or somewhere down its call stack, in a rather implicit way."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628770244.322600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e338fc3b-40e4-4693-a73d-72042ec0e64d","blocks":[{"type":"rich_text","block_id":"od\/2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"its easy (maybe inefficient) to write my own "},{"type":"text","text":"map1","style":{"code":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn map1 [f collection]\n  (if (empty? collection)\n    collection\n      (lazy-seq (cons (f (first collection))\n                      (map1 f (rest collection))))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I think I could write my own "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":" in a similar way.  I.e., a "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"mapcat","style":{"code":true}},{"type":"text","text":" which take a unary function and 1 sequence, rather than an n-ary function and n sequences."}]}]}],"user":"U010VP3UY9X","text":"its easy (maybe inefficient) to write my own `map1`\n```(defn map1 [f collection]\n  (if (empty? collection)\n    collection\n      (lazy-seq (cons (f (first collection))\n                      (map1 f (rest collection))))))```\nI think I could write my own `mapcat` in a similar way.  I.e., a `map` and `mapcat` which take a unary function and 1 sequence, rather than an n-ary function and n sequences."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628770434.322800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"b8795aa5-c442-4d49-81a5-7c790e918482","blocks":[{"type":"rich_text","block_id":"J3MP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea I don't see a hard coded 4 either in the concat code."}]}]}],"user":"U010VP3UY9X","text":"Yea I don't see a hard coded 4 either in the concat code."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628770494.323000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c20b3a2c-c5f1-4614-8e39-75a475c524de","blocks":[{"type":"rich_text","block_id":"RtW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I suspect lazy `mapcat` can be implemented without concat, rather just with lazy-seq and cons."}]}]}],"user":"U010VP3UY9X","text":"I suspect lazy `mapcat` can be implemented without concat, rather just with lazy-seq and cons."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628770634.323700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"82f9e54a-1eee-48d0-97e9-71c244916910","blocks":[{"type":"rich_text","block_id":"BEe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Should be possible, yeah."}]}]}],"user":"U2FRKM4TW","text":"Should be possible, yeah."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628770887.323900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"ef074812-874e-40e7-9052-a6defa52ff13","blocks":[{"type":"rich_text","block_id":"yKm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm.   trickier than I thought.  I had to also write "},{"type":"text","text":"concat1","style":{"code":true}},{"type":"text","text":" maybe there's a way to avoid it?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn concat1 [head tail]\n  (if (empty? head)\n    tail\n    (lazy-seq (cons (first head)\n                    (concat1 (rest head) tail)))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn mapcat1 [f collection]\n  (if (empty? collection)\n    collection\n    (let [head (f (first collection))]\n      (if (empty? head)\n        (mapcat1 f (rest collection))\n        (lazy-seq (concat1 head\n                           (mapcat1 f (rest collection))))))))"}]}]}],"user":"U010VP3UY9X","text":"hmm.   trickier than I thought.  I had to also write `concat1` maybe there's a way to avoid it?\n```(defn concat1 [head tail]\n  (if (empty? head)\n    tail\n    (lazy-seq (cons (first head)\n                    (concat1 (rest head) tail)))))```\nand\n```(defn mapcat1 [f collection]\n  (if (empty? collection)\n    collection\n    (let [head (f (first collection))]\n      (if (empty? head)\n        (mapcat1 f (rest collection))\n        (lazy-seq (concat1 head\n                           (mapcat1 f (rest collection))))))))```"}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628771112.324100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2e0f64a5-144e-4615-9549-5288508aa68e","blocks":[{"type":"rich_text","block_id":"xkJ","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"clojure-rte.rte-core> (take 1 (mapcat1 list (map1 gimme (seq1 (range 32)))))\n..(0)\nclojure-rte.rte-core> "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"hmmm still calls twice.   bizarre"}]}]}],"user":"U010VP3UY9X","text":"```clojure-rte.rte-core&gt; (take 1 (mapcat1 list (map1 gimme (seq1 (range 32)))))\n..(0)\nclojure-rte.rte-core&gt; ```\nhmmm still calls twice.   bizarre"}
{"type":"message","thread_ts":"1628757245.305200","edited":{"user":"U2FRKM4TW","ts":"1628771733.000000"},"ts":"1628771236.324300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"cd495784-a94f-4584-bfff-af06e0596c7c","blocks":[{"type":"rich_text","block_id":"WmC+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With how finicky it all is, I would try "},{"type":"text","text":"really","style":{"italic":true}},{"type":"text","text":" hard to avoid laziness altogether."}]}]}],"user":"U2FRKM4TW","text":"With how finicky it all is, I would try _really_ hard to avoid laziness altogether."}
{"type":"message","thread_ts":"1628757245.305200","ts":"1628771513.324500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5cef227c-b6c7-447c-9466-f9c8486dac11","blocks":[{"type":"rich_text","block_id":"L6u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I suspect my function have a bug somewhere, but yes it is finicky indeed."}]}]}],"user":"U010VP3UY9X","text":"I suspect my function have a bug somewhere, but yes it is finicky indeed."}
{"client_msg_id":"c516d629-cc10-44a6-bff7-06cdea33212e","type":"message","text":"does the data need to be that nested? is there some \"path\" that could be compiled to the zipper instructions? etc","user":"U064X3EF3","ts":"1628722736.299200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"8kQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does the data need to be that nested? is there some \"path\" that could be compiled to the zipper instructions? etc"}]}]}]}
{"client_msg_id":"9dffe7db-c867-4432-9442-83d911ed9cc8","type":"message","text":"this kind of code can't possibly be easy to maintain can it? I don't wanna like open a whole can of worms, but if I had this I'd be reconsidering how I got there","user":"U064X3EF3","ts":"1628722669.298700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"+A2Hb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this kind of code can't possibly be easy to maintain can it? I don't wanna like open a whole can of worms, but if I had this I'd be reconsidering how I got there"}]}]}],"reactions":[{"name":"heavy_plus_sign","users":["U050ECB92","U051MHSEK","U883WCP5Z","U4P4NREBY","UA2U3KW0L","U051SS2EU"],"count":6}]}
{"client_msg_id":"e2d21243-e479-4315-ba1d-8c64b5b7e9ca","type":"message","text":"not worth the cognitive overhead IMO. If you just want to reduce verbosity:\n```(require '[clojure.zip :refer [left right up down] :rename {left L, right R, up U, down D}])```\n...which almost lets you do the Konami code too","user":"U01R1SXCAUX","ts":"1628722454.297600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"UchIg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not worth the cognitive overhead IMO. If you just want to reduce verbosity:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(require '[clojure.zip :refer [left right up down] :rename {left L, right R, up U, down D}])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"...which almost lets you do the Konami code too"}]}]}],"reactions":[{"name":"heavy_plus_sign","users":["U45T93RA6"],"count":1}]}
{"client_msg_id":"cc73f91a-a758-4a3f-9aee-e45034c473d1","type":"message","text":"`(apply comp (repeat 9 z\/right))`","user":"U0NCTKEV8","ts":"1628720196.294900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"4Sex2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(apply comp (repeat 9 z\/right))","style":{"code":true}}]}]}],"reactions":[{"name":"+1","users":["U022T96EFV3"],"count":1},{"name":"bow","users":["U022T96EFV3"],"count":1}]}
{"client_msg_id":"3729014a-cda4-44a7-9e5e-eacd99e88fcc","type":"message","text":"Let's say you're using a zipper and one of the paths to a desired node looks like this :astonished:\n```(-&gt; zipper\n        z\/down\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/down\n        z\/right\n        z\/right\n        z\/node)```\nWhat would be a good strategy for reducing the redundant `z\/right` calls?","user":"U022T96EFV3","ts":"1628720139.294300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"oZEr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's say you're using a zipper and one of the paths to a desired node looks like this "},{"type":"emoji","name":"astonished"},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(-> zipper\n        z\/down\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/right\n        z\/down\n        z\/right\n        z\/right\n        z\/node)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nWhat would be a good strategy for reducing the redundant "},{"type":"text","text":"z\/right","style":{"code":true}},{"type":"text","text":" calls?"}]}]}]}
{"client_msg_id":"d054ef79-e0e8-48d0-9227-b0bac6843b87","type":"message","text":"but usually the ns is called similarly, e.g. `foo.cljs` and `foo.clj` for the macros, so you won't run into that in that case","user":"U04V15CAJ","ts":"1628716578.288600","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"BPp5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but usually the ns is called similarly, e.g. "},{"type":"text","text":"foo.cljs","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"foo.clj","style":{"code":true}},{"type":"text","text":" for the macros, so you won't run into that in that case"}]}]}]}
{"type":"message","edited":{"user":"U04V15CAJ","ts":"1628716446.000000"},"ts":"1628716422.287900","team":"T03RZGPFR","client_msg_id":"cc45f95f-8af3-47b5-9799-9b09b628be99","blocks":[{"type":"rich_text","block_id":"eTBUK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"actually for CLJS macros this might be an issue for namespaces that do exist in CLJS but not in CLJ, unless they are doing a different macro-expansion"}]}]}],"user":"U04V15CAJ","reactions":[{"name":"+1","users":["U09LZR36F"],"count":1}],"text":"actually for CLJS macros this might be an issue for namespaces that do exist in CLJS but not in CLJ, unless they are doing a different macro-expansion"}
{"client_msg_id":"2c2da497-366e-4b07-970d-1c66c82b0efc","type":"message","text":"yeah, sometimes it's useful to macroexpand code without actually having that namespace around, but the use case might be niche","user":"U04V15CAJ","ts":"1628716350.287400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"0hInM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, sometimes it's useful to macroexpand code without actually having that namespace around, but the use case might be niche"}]}]}]}
{"client_msg_id":"399e7a6b-6f7d-4826-8331-234d9dd01af8","type":"message","text":"the case being used there is when it's a namespaced symbol and the namespace does not exist, then the assumption is that it's a class? might be a case that could use a try\/catch\/do nothing, dunno.","user":"U064X3EF3","ts":"1628716310.286800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"noYE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the case being used there is when it's a namespaced symbol and the namespace does not exist, then the assumption is that it's a class? might be a case that could use a try\/catch\/do nothing, dunno."}]}]}]}
{"client_msg_id":"2a4fdada-4897-4278-8f83-fabfd127aab2","type":"message","text":"in general, dotted things are assumed to likely be classes in several places","user":"U064X3EF3","ts":"1628715915.285800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"qCK4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in general, dotted things are assumed to likely be classes in several places"}]}]}]}
{"client_msg_id":"7d6ea794-d933-4559-bd78-47348bced103","type":"message","text":"`(pst)` should give you trace","user":"U064X3EF3","ts":"1628715885.285300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"EfxI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(pst)","style":{"code":true}},{"type":"text","text":" should give you trace"}]}]}]}
{"client_msg_id":"3580d704-3458-4c2c-955e-293ecb7f7d68","type":"message","text":"Interesting behavior:\n```user=&gt; (defmacro foo [] `(foo\/bar 1))\n#'user\/foo\nuser=&gt; (macroexpand '(foo))\n(foo\/bar 1)\nuser=&gt; (defmacro foo [] `(foo.bar\/baz 1))\n#'user\/foo\nuser=&gt; (macroexpand '(foo))\nExecution error (ClassNotFoundException) at java.net.URLClassLoader\/findClass (URLClassLoader.java:382).\nfoo.bar```","user":"U04V15CAJ","ts":"1628715465.285000","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"GKE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting behavior:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"user=> (defmacro foo [] `(foo\/bar 1))\n#'user\/foo\nuser=> (macroexpand '(foo))\n(foo\/bar 1)\nuser=> (defmacro foo [] `(foo.bar\/baz 1))\n#'user\/foo\nuser=> (macroexpand '(foo))\nExecution error (ClassNotFoundException) at java.net.URLClassLoader\/findClass (URLClassLoader.java:382).\nfoo.bar"}]}]}]}
{"client_msg_id":"c81910c7-bba5-4072-a621-69c5e4b34a8d","type":"message","text":"I remember reading this comment at the time <https:\/\/news.ycombinator.com\/item?id=18346043> , some months later that system was OSSed <https:\/\/github.com\/Netflix\/mantis-mql\/> looks like it went a bit under the radar?\n\nSomeone might find it an interesting code read.","user":"U45T93RA6","ts":"1628713259.284700","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"SMQz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I remember reading this comment at the time "},{"type":"link","url":"https:\/\/news.ycombinator.com\/item?id=18346043"},{"type":"text","text":" , some months later that system was OSSed "},{"type":"link","url":"https:\/\/github.com\/Netflix\/mantis-mql\/"},{"type":"text","text":" looks like it went a bit under the radar?\n\nSomeone might find it an interesting code read."}]}]}]}
{"subscribed":false,"reply_users":["UK0810AQ2","U064X3EF3","U02AU95L3QV","U051SS2EU"],"type":"message","thread_ts":"1628709272.279800","reply_users_count":4,"ts":"1628709272.279800","team":"T03RZGPFR","client_msg_id":"30503cfe-7196-41f6-9d4f-c2efb92e25a3","blocks":[{"type":"rich_text","block_id":"VNPm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello all.  I'm new here but old to Clojure. I'm guessing this question has been answered many times but I can't find good answers. Is there a discussion somewhere on the web about the effects that JVM optimization over the years to improve Java performance has had on Clojure performance?  In particular, I'm looking for recent information about when Java interop should be preferred over Clojure alternatives when performance really matters.  Thanks."}]}]}],"is_locked":false,"user":"U02AU95L3QV","reply_count":16,"latest_reply":"1629131688.480700","text":"Hello all.  I'm new here but old to Clojure. I'm guessing this question has been answered many times but I can't find good answers. Is there a discussion somewhere on the web about the effects that JVM optimization over the years to improve Java performance has had on Clojure performance?  In particular, I'm looking for recent information about when Java interop should be preferred over Clojure alternatives when performance really matters.  Thanks."}
{"subscribed":false,"reply_users":["UK0810AQ2","U064X3EF3","U02AU95L3QV","U051SS2EU"],"type":"message","thread_ts":"1628709272.279800","reply_users_count":4,"ts":"1628709272.279800","team":"T03RZGPFR","client_msg_id":"30503cfe-7196-41f6-9d4f-c2efb92e25a3","blocks":[{"type":"rich_text","block_id":"VNPm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello all.  I'm new here but old to Clojure. I'm guessing this question has been answered many times but I can't find good answers. Is there a discussion somewhere on the web about the effects that JVM optimization over the years to improve Java performance has had on Clojure performance?  In particular, I'm looking for recent information about when Java interop should be preferred over Clojure alternatives when performance really matters.  Thanks."}]}]}],"is_locked":false,"user":"U02AU95L3QV","reply_count":16,"latest_reply":"1629131688.480700","text":"Hello all.  I'm new here but old to Clojure. I'm guessing this question has been answered many times but I can't find good answers. Is there a discussion somewhere on the web about the effects that JVM optimization over the years to improve Java performance has had on Clojure performance?  In particular, I'm looking for recent information about when Java interop should be preferred over Clojure alternatives when performance really matters.  Thanks."}
{"pinned_to":["C03S1KBA2"],"attachments":[{"color":"24292f","fallback":"joinr\/performancepaper","fields":[{"title":"Stars","value":"35","short":true},{"title":"Language","value":"Clojure","short":true}],"is_app_unfurl":true,"title":"joinr\/performancepaper","id":1,"app_unfurl_url":"https:\/\/github.com\/joinr\/performancepaper","text":"A reproducible, open examination of the paper \"A performance comparison of Clojure and Java\" by Gustav Krantz","bot_id":"B0213V66QKT"}],"type":"message","thread_ts":"1628709272.279800","ts":"1628709505.279900","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"cd3b6674-8ce2-44b1-b141-b9e56d68a582","blocks":[{"type":"rich_text","block_id":"V=L1+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can you be a bit more specific regarding your use case and performance budget?\nAlso, this is a good starting point\n"},{"type":"link","url":"https:\/\/github.com\/joinr\/performancepaper"}]}]}],"user":"UK0810AQ2","pinned_info":{"channel":"C03S1KBA2","pinned_by":"URBNXSM3L","pinned_ts":1628734663},"text":"can you be a bit more specific regarding your use case and performance budget?\nAlso, this is a good starting point\n<https:\/\/github.com\/joinr\/performancepaper>"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628709990.280300","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"a2247a3e-d39c-4e15-b0b9-8eb3caeff5f9","blocks":[{"type":"rich_text","block_id":"EFhc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in general, most things the JVM is trying to optimize are also things that benefit Clojure pretty directly, and Clojure has seen benefits over time from ongoing JVM optimizations"}]}]}],"user":"U064X3EF3","text":"in general, most things the JVM is trying to optimize are also things that benefit Clojure pretty directly, and Clojure has seen benefits over time from ongoing JVM optimizations"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628710231.280500","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"26cc0b35-e762-4f25-9593-329ba38f0595","blocks":[{"type":"rich_text","block_id":"WEQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(one notable place where Clojure can have different GC characteristics than a typical Java program is if you keep around a very long-lived stateful persistent collection - from an object perspective, you can have an object chain of \"mutations\" that is long back to a root object that is very old whereas in Java, you'd probably just reuse the same existing collection object. that said, newer collectors like Shenandoah work great with Clojure so not sure it matters.)"}]}]}],"user":"U064X3EF3","text":"(one notable place where Clojure can have different GC characteristics than a typical Java program is if you keep around a very long-lived stateful persistent collection - from an object perspective, you can have an object chain of \"mutations\" that is long back to a root object that is very old whereas in Java, you'd probably just reuse the same existing collection object. that said, newer collectors like Shenandoah work great with Clojure so not sure it matters.)"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628710262.280700","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"5f95e239-c30d-4d30-b456-90a242fd7f52","blocks":[{"type":"rich_text","block_id":"yDizG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for the link.  That has some useful info.\n\nNo specific use case, we are developing increasingly large streaming ML applications in Clojure.  The metaphor is natural, functional transformation of data streams, but performance ups and downs can be a mystery when those transformations are complex.  So I'm trying to pull together some guidelines when to resort to Java interop.\n\nMath operations are one place that Java interop seems to be a win and not too ugly.  This week a question arose whether performance is better if one accesses Mongo we use as an intermediate store sometimes via Java interop or Monger.  The same has come up with Kafka\/jackdaw.   Clearly profiling is the best way to determine for a particular case.  But generally it would be nice to have some best practices to start from when performance rather than Clojure purity matters most."}]}]}],"user":"U02AU95L3QV","text":"Thanks for the link.  That has some useful info.\n\nNo specific use case, we are developing increasingly large streaming ML applications in Clojure.  The metaphor is natural, functional transformation of data streams, but performance ups and downs can be a mystery when those transformations are complex.  So I'm trying to pull together some guidelines when to resort to Java interop.\n\nMath operations are one place that Java interop seems to be a win and not too ugly.  This week a question arose whether performance is better if one accesses Mongo we use as an intermediate store sometimes via Java interop or Monger.  The same has come up with Kafka\/jackdaw.   Clearly profiling is the best way to determine for a particular case.  But generally it would be nice to have some best practices to start from when performance rather than Clojure purity matters most."}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628710412.281000","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"7f5e43b7-7660-4294-aba8-89f64a882b71","blocks":[{"type":"rich_text","block_id":"+yR6x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in general, I am hesitant to give up on Clojure abstractions and make direct interop calls unless it is in the very hot path and really makes a difference. In which case, heck yeah. :) Math ops seem like a reasonable place to focus."}]}]}],"user":"U064X3EF3","text":"in general, I am hesitant to give up on Clojure abstractions and make direct interop calls unless it is in the very hot path and really makes a difference. In which case, heck yeah. :) Math ops seem like a reasonable place to focus."}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628710442.281200","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"3967ed60-f9e7-4858-a426-12ee192f3d32","blocks":[{"type":"rich_text","block_id":"F3M4U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You have some options in Clojure land, as well:\nfast primitive math: "},{"type":"link","url":"https:\/\/github.com\/generateme\/fastmath"},{"type":"text","text":"\nML is pretty matrix heavy, you might want to look at "},{"type":"link","url":"https:\/\/github.com\/uncomplicate\/neanderthal"},{"type":"text","text":" and "},{"type":"link","url":"https:\/\/github.com\/cnuernber\/dtype-next"}]}]}],"user":"UK0810AQ2","text":"You have some options in Clojure land, as well:\nfast primitive math: <https:\/\/github.com\/generateme\/fastmath>\nML is pretty matrix heavy, you might want to look at <https:\/\/github.com\/uncomplicate\/neanderthal> and <https:\/\/github.com\/cnuernber\/dtype-next>"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628710452.281400","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"c1183af5-3d01-4f74-848a-1440ff89e481","blocks":[{"type":"rich_text","block_id":"gztY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But profiling first is good"}]}]}],"user":"UK0810AQ2","text":"But profiling first is good"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628710535.281600","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"9546adb9-2bcf-4cfc-b811-6875aec086c7","blocks":[{"type":"rich_text","block_id":"7HC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I managed to reach throughputs deserializing JSON (in production environment, not just an experiment) where turning keys to keywords had a performance impact, but it's important to know if you're even there"}]}]}],"user":"UK0810AQ2","text":"I managed to reach throughputs deserializing JSON (in production environment, not just an experiment) where turning keys to keywords had a performance impact, but it's important to know if you're even there"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628710735.281900","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"8bf15168-a570-49ed-9c95-54cf09d47f95","blocks":[{"type":"rich_text","block_id":"tiN7K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can write a lot about it (and have already) but knowing where the problem is is the first step"}]}]}],"user":"UK0810AQ2","text":"I can write a lot about it (and have already) but knowing where the problem is is the first step"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628710842.282200","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"b11a3a78-3b42-441e-aae4-eb3fee7832ee","blocks":[{"type":"rich_text","block_id":"eEWdJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"use criterium, clj-async-profiler, to get an initial picture\nJMH to get accurate microbenchmarks if you need to\nVisualVM and JFR for a holistic picture\nAnd JITwatch if you must, but I doubt you will unless you're trying to do HFT, which you aren't"}]}]}],"user":"UK0810AQ2","text":"use criterium, clj-async-profiler, to get an initial picture\nJMH to get accurate microbenchmarks if you need to\nVisualVM and JFR for a holistic picture\nAnd JITwatch if you must, but I doubt you will unless you're trying to do HFT, which you aren't"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628711291.282400","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"5b22ae2e-6da9-4a45-bc0e-90f5851d340a","blocks":[{"type":"rich_text","block_id":"fUNF","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U064X3EF3"},{"type":"text","text":"  You've hit on a key issue.  In our cases we do have some very long-lived data objects that originate from clojure, but not kept as large collections of objects in clojure.  In those cases we don't use any type of clojure collection but effectively just flatten them and store them in a Mongo collection.\n\nIn other situations, we have very large unbounded sequences of data, which commonly originate from as many as thousands of Kafka streams. We consume, transform,, and produce 10s, 100s, or 1000s of Kafka streams.  So from this perspective, and this is where JSON ser-des is relevant that "},{"type":"user","user_id":"UK0810AQ2"},{"type":"text","text":" mentions, Kafka streams are really the large immutable collections we are manipulating.\n\nThis makes most of the Clojure hot in a sense because every single operation is repeated large numbers of times.\n\nThe profiling tools "},{"type":"user","user_id":"UK0810AQ2"},{"type":"text","text":" mentions could be quite helpful for us going forward."}]}]}],"user":"U02AU95L3QV","text":"<@U064X3EF3>  You've hit on a key issue.  In our cases we do have some very long-lived data objects that originate from clojure, but not kept as large collections of objects in clojure.  In those cases we don't use any type of clojure collection but effectively just flatten them and store them in a Mongo collection.\n\nIn other situations, we have very large unbounded sequences of data, which commonly originate from as many as thousands of Kafka streams. We consume, transform,, and produce 10s, 100s, or 1000s of Kafka streams.  So from this perspective, and this is where JSON ser-des is relevant that <@UK0810AQ2> mentions, Kafka streams are really the large immutable collections we are manipulating.\n\nThis makes most of the Clojure hot in a sense because every single operation is repeated large numbers of times.\n\nThe profiling tools <@UK0810AQ2> mentions could be quite helpful for us going forward."}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628712404.282600","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"fcda4b50-17dd-449d-be31-fcee0796bd34","blocks":[{"type":"rich_text","block_id":"hXRjq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I sometimes embed clj-async-profiler in an application and trigger it externally, gives you a very good profile of CPU activity.\nThere's a lot here depending on your level of abstraction. If it's all streams and KTables then you may not be holding large objects for long. Not enough information to give a more useful response. Profile first"}]}]}],"user":"UK0810AQ2","text":"I sometimes embed clj-async-profiler in an application and trigger it externally, gives you a very good profile of CPU activity.\nThere's a lot here depending on your level of abstraction. If it's all streams and KTables then you may not be holding large objects for long. Not enough information to give a more useful response. Profile first"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628712493.282800","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"650b2299-4f23-4d70-b4d4-5382b3d755bc","blocks":[{"type":"rich_text","block_id":"orB5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but always remember to solve the performance problems related to the platform, too, not just the language. Kafka can have performance pitfalls, so can kafka streams, make sure those are solved, too"}]}]}],"user":"UK0810AQ2","text":"but always remember to solve the performance problems related to the platform, too, not just the language. Kafka can have performance pitfalls, so can kafka streams, make sure those are solved, too"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628712507.283000","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"b8eb55cf-87e7-4443-a2f9-207171402ea8","blocks":[{"type":"rich_text","block_id":"HxchK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for example, if you're using compression, use zstd and not gzip"}]}]}],"user":"UK0810AQ2","text":"for example, if you're using compression, use zstd and not gzip"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1628721044.295200","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"e5f21262-9ebb-4428-b91f-8b47446aca01","blocks":[{"type":"rich_text","block_id":"mIuQw","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UK0810AQ2"},{"type":"text","text":" "},{"type":"user","user_id":"U064X3EF3"},{"type":"text","text":" Thanks for all the suggestions.  I'm going to pass all of this on the team"}]}]}],"user":"U02AU95L3QV","text":"<@UK0810AQ2> <@U064X3EF3> Thanks for all the suggestions.  I'm going to pass all of this on the team"}
{"type":"message","thread_ts":"1628709272.279800","ts":"1629131688.480700","parent_user_id":"U02AU95L3QV","team":"T03RZGPFR","client_msg_id":"915e4ecc-a8a1-4be9-a0af-776cb37bd4bc","blocks":[{"type":"rich_text","block_id":"agK","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"This week a question arose whether performance is better if one accesses Mongo we use as an intermediate store sometimes via Java interop or Monger.  The same has come up with Kafka\/jackdaw. "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"with \"wrappers\" there will never be a generic answer (about quality, performance, etc.) - some are simply better implemented than others, and all of them fail miserably when you leave the use cases that the wrapper author was considering\n\nfor example, I worked on jackdaw when I was employed at Funding Circle, and I would be suspicious of how well it handles your use case of very large numbers of streams - it might just happen to work, but that also wasn't a usage we were designing around. Of course it might be the case that our abstractions are minimal enough that the issue never comes up (jackdaw is lower level than most wrappers) but on the other hand the kinds of abstractions we chose might make your use case more complicated than the interop version would be"}]}]}],"user":"U051SS2EU","text":"&gt; This week a question arose whether performance is better if one accesses Mongo we use as an intermediate store sometimes via Java interop or Monger.  The same has come up with Kafka\/jackdaw. \nwith \"wrappers\" there will never be a generic answer (about quality, performance, etc.) - some are simply better implemented than others, and all of them fail miserably when you leave the use cases that the wrapper author was considering\n\nfor example, I worked on jackdaw when I was employed at Funding Circle, and I would be suspicious of how well it handles your use case of very large numbers of streams - it might just happen to work, but that also wasn't a usage we were designing around. Of course it might be the case that our abstractions are minimal enough that the issue never comes up (jackdaw is lower level than most wrappers) but on the other hand the kinds of abstractions we chose might make your use case more complicated than the interop version would be"}
{"subscribed":false,"reply_users":["U0232JK38BZ","U01EFUL1A8M","U8QBZBHGD"],"type":"message","thread_ts":"1628690409.262600","reply_users_count":3,"ts":"1628690409.262600","team":"T03RZGPFR","client_msg_id":"b479d373-7a44-4974-8d69-e25062b3ec8f","blocks":[{"type":"rich_text","block_id":"iyrm+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"result?"}]}]}],"is_locked":false,"user":"U01EFUL1A8M","reply_count":8,"latest_reply":"1628691652.268700","text":"result?"}
{"subscribed":false,"reply_users":["U0232JK38BZ","U01EFUL1A8M","U8QBZBHGD"],"type":"message","thread_ts":"1628690409.262600","reply_users_count":3,"ts":"1628690409.262600","team":"T03RZGPFR","client_msg_id":"b479d373-7a44-4974-8d69-e25062b3ec8f","blocks":[{"type":"rich_text","block_id":"iyrm+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"result?"}]}]}],"is_locked":false,"user":"U01EFUL1A8M","reply_count":8,"latest_reply":"1628691652.268700","text":"result?"}
{"type":"message","thread_ts":"1628690409.262600","ts":"1628690483.263100","parent_user_id":"U01EFUL1A8M","team":"T03RZGPFR","client_msg_id":"5fabded1-97ca-4b76-b00b-12f94131677b","blocks":[{"type":"rich_text","block_id":"mFs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I should have explained the context more: the variable describes whether output should be sent to stdout or stderr. The valid values it can have in the outputting library is "},{"type":"text","text":":err","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":":out","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U0232JK38BZ","text":"I should have explained the context more: the variable describes whether output should be sent to stdout or stderr. The valid values it can have in the outputting library is `:err` or `:out`."}
{"type":"message","thread_ts":"1628690409.262600","ts":"1628690654.263700","parent_user_id":"U01EFUL1A8M","team":"T03RZGPFR","client_msg_id":"543a0bc2-7eed-457d-b505-b04072f88a7f","blocks":[{"type":"rich_text","block_id":"d52gP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps "},{"type":"text","text":"process-stream","style":{"code":true}},{"type":"text","text":" or somethIng is better. Having the possible values (out\/err) in the name isn't good practice."}]}]}],"user":"U0232JK38BZ","text":"Perhaps `process-stream` or somethIng is better. Having the possible values (out\/err) in the name isn't good practice."}
{"type":"message","thread_ts":"1628690409.262600","ts":"1628690680.263900","parent_user_id":"U01EFUL1A8M","team":"T03RZGPFR","client_msg_id":"628106cf-39ae-44ca-a219-7566b72e709f","blocks":[{"type":"rich_text","block_id":"KbVw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree"}]}]}],"user":"U01EFUL1A8M","reactions":[{"name":"+1","users":["U0232JK38BZ"],"count":1}],"text":"I agree"}
{"type":"message","thread_ts":"1628690409.262600","ts":"1628690705.264200","parent_user_id":"U01EFUL1A8M","team":"T03RZGPFR","client_msg_id":"83399fcc-b10b-4b99-a0b9-6d4a8ca08080","blocks":[{"type":"rich_text","block_id":"TUj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don\u2019t like "},{"type":"text","text":"process-stream","style":{"code":true}},{"type":"text","text":" though, because a stream would be something else typically"}]}]}],"user":"U01EFUL1A8M","text":"I don\u2019t like `process-stream` though, because a stream would be something else typically"}
{"type":"message","thread_ts":"1628690409.262600","ts":"1628690732.264600","parent_user_id":"U01EFUL1A8M","team":"T03RZGPFR","client_msg_id":"e69d8d12-9b5d-465a-bdef-bb413f2db61c","blocks":[{"type":"rich_text","block_id":"FgO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but it\u2019s definitely better than err-or-out"}]}]}],"user":"U01EFUL1A8M","text":"but it\u2019s definitely better than err-or-out"}
{"type":"message","thread_ts":"1628690409.262600","ts":"1628690763.265000","parent_user_id":"U01EFUL1A8M","team":"T03RZGPFR","client_msg_id":"670a0fde-70ad-41e8-96c4-d7fadddb6c91","blocks":[{"type":"rich_text","block_id":"=VXBz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would call it "},{"type":"text","text":"write-to","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"write-target","style":{"code":true}},{"type":"text","text":" or something along those lines maybe."}]}]}],"user":"U01EFUL1A8M","reactions":[{"name":"+1","users":["U0232JK38BZ"],"count":1}],"text":"I would call it `write-to` or `write-target` or something along those lines maybe."}
{"type":"message","thread_ts":"1628690409.262600","ts":"1628690791.265200","parent_user_id":"U01EFUL1A8M","team":"T03RZGPFR","client_msg_id":"87b26a7c-e429-4c24-888b-1a9bcfb085e9","blocks":[{"type":"rich_text","block_id":"4gp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I\u2019m not a naming expert, just what I personally like."}]}]}],"user":"U01EFUL1A8M","text":"But I\u2019m not a naming expert, just what I personally like."}
{"type":"message","thread_ts":"1628690409.262600","ts":"1628691652.268700","parent_user_id":"U01EFUL1A8M","team":"T03RZGPFR","client_msg_id":"dfbfafd2-bd8b-4586-bfe3-24cfc5c9b913","blocks":[{"type":"rich_text","block_id":"Z0fxy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"output-to with :stdout or :stderr imo"}]}]}],"user":"U8QBZBHGD","reactions":[{"name":"+1","users":["U0232JK38BZ"],"count":1}],"text":"output-to with :stdout or :stderr imo"}
{"client_msg_id":"d83d618f-199f-4b61-8cd2-f67c764447fb","type":"message","text":"I've tried reading naming guides, but I cannot find help in the guides for the cases where a variable can have one out of two values:\n\n```(def err-or-out :out) ;; can also be :err```\nBetter suggestions welcome.","user":"U0232JK38BZ","ts":"1628690312.262200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"2Br","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've tried reading naming guides, but I cannot find help in the guides for the cases where a variable can have one out of two values:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(def err-or-out :out) ;; can also be :err"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nBetter suggestions welcome."}]}]}]}
{"subscribed":false,"reply_users":["U064X3EF3","U4GEXTNGZ"],"type":"message","thread_ts":"1628688881.254900","reply_users_count":2,"ts":"1628688881.254900","team":"T03RZGPFR","client_msg_id":"e497d6f2-0a0b-45ff-88b9-25618e9d8733","blocks":[{"type":"rich_text","block_id":"LIb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyone knows a good way to check if currently running compiled in jar or not? Need to do some debug-printlns..."}]}]}],"is_locked":false,"user":"U4GEXTNGZ","reply_count":5,"latest_reply":"1628751711.301500","text":"Anyone knows a good way to check if currently running compiled in jar or not? Need to do some debug-printlns..."}
{"subscribed":false,"reply_users":["U064X3EF3","U4GEXTNGZ"],"type":"message","thread_ts":"1628688881.254900","reply_users_count":2,"ts":"1628688881.254900","team":"T03RZGPFR","client_msg_id":"e497d6f2-0a0b-45ff-88b9-25618e9d8733","blocks":[{"type":"rich_text","block_id":"LIb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyone knows a good way to check if currently running compiled in jar or not? Need to do some debug-printlns..."}]}]}],"is_locked":false,"user":"U4GEXTNGZ","reply_count":5,"latest_reply":"1628751711.301500","text":"Anyone knows a good way to check if currently running compiled in jar or not? Need to do some debug-printlns..."}
{"type":"message","thread_ts":"1628688881.254900","ts":"1628690217.260400","parent_user_id":"U4GEXTNGZ","team":"T03RZGPFR","client_msg_id":"efd74394-5b49-49df-aa5d-648d1dd7384f","blocks":[{"type":"rich_text","block_id":"7Ea6c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you convert the namespace to a class resource, and that resource can be loaded, then you're using compiled code"}]}]}],"user":"U064X3EF3","text":"if you convert the namespace to a class resource, and that resource can be loaded, then you're using compiled code"}
{"type":"message","thread_ts":"1628688881.254900","ts":"1628690424.262700","parent_user_id":"U4GEXTNGZ","team":"T03RZGPFR","client_msg_id":"9160db25-5a1b-4712-bd95-4e28997be32e","blocks":[{"type":"rich_text","block_id":"0n2hO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there is not a good public function to give you that resource name unfortunately. but it's:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"replace - with _"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"replace . with \/"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"append \"__init.class\""}]}],"style":"bullet","indent":0,"border":0}]}],"user":"U064X3EF3","text":"there is not a good public function to give you that resource name unfortunately. but it's:\n\u2022 replace - with _\n\u2022 replace . with \/\n\u2022 append \"__init.class\""}
{"type":"message","thread_ts":"1628688881.254900","ts":"1628694150.273400","parent_user_id":"U4GEXTNGZ","team":"T03RZGPFR","client_msg_id":"6343aeb3-7686-451a-bd08-d501865ce1d0","blocks":[{"type":"rich_text","block_id":"5BSF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I tried "},{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/load","text":"load"},{"type":"text","text":" but had no success with it. It tells me\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Could not locate clojure\/test_tool\/ui__init.class, clojure\/test_tool\/ui.clj or clojure\/test_tool\/ui.cljc on classpath."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but it is not under clojure\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(ns test-tool.ui\n  (:gen-class))\n(load \"test_tool\/ui\")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"How would you 'load' the resource?"}]}]}],"user":"U4GEXTNGZ","text":"I tried <https:\/\/clojuredocs.org\/clojure.core\/load|load> but had no success with it. It tells me\n```Could not locate clojure\/test_tool\/ui__init.class, clojure\/test_tool\/ui.clj or clojure\/test_tool\/ui.cljc on classpath.```\nbut it is not under clojure\n```(ns test-tool.ui\n  (:gen-class))\n(load \"test_tool\/ui\")```\nHow would you 'load' the resource?"}
{"type":"message","thread_ts":"1628688881.254900","ts":"1628698749.278000","parent_user_id":"U4GEXTNGZ","team":"T03RZGPFR","client_msg_id":"3FCA3171-C1C8-48E6-A7E6-4BD38B14741F","blocks":[{"type":"rich_text","block_id":"yEIp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Use clojure.java\/resource to check whether the test_tool\/ui__init.class resource exists"}]}]}],"user":"U064X3EF3","reactions":[{"name":"white_check_mark","users":["U4GEXTNGZ"],"count":1}],"text":"Use clojure.java\/resource to check whether the test_tool\/ui__init.class resource exists"}
{"type":"message","thread_ts":"1628688881.254900","ts":"1628751711.301500","parent_user_id":"U4GEXTNGZ","team":"T03RZGPFR","client_msg_id":"ff940530-c6f0-4d13-8c02-c65187864f5c","blocks":[{"type":"rich_text","block_id":"Y\/t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you! Will try!"}]}]}],"user":"U4GEXTNGZ","text":"Thank you! Will try!"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U010VP3UY9X","U11BV7MTK","U01EFUL1A8M"],"type":"message","thread_ts":"1628688773.254100","reply_users_count":4,"ts":"1628688773.254100","team":"T03RZGPFR","client_msg_id":"b3da1ae0-6ec3-4e55-8c50-e2b06349c468","blocks":[{"type":"rich_text","block_id":"huU5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is this an anaphoric version?"}]}]}],"is_locked":false,"user":"U11BV7MTK","reply_count":31,"latest_reply":"1628692319.272300","text":"is this an anaphoric version?"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U010VP3UY9X","U11BV7MTK","U01EFUL1A8M"],"type":"message","thread_ts":"1628688773.254100","reply_users_count":4,"ts":"1628688773.254100","team":"T03RZGPFR","client_msg_id":"b3da1ae0-6ec3-4e55-8c50-e2b06349c468","blocks":[{"type":"rich_text","block_id":"huU5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is this an anaphoric version?"}]}]}],"is_locked":false,"user":"U11BV7MTK","reply_count":31,"latest_reply":"1628692319.272300","text":"is this an anaphoric version?"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628688938.255900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"7cbdf73d-5e07-4e35-81c8-9e6d3fdfe0b9","blocks":[{"type":"rich_text","block_id":"1wd5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"foo","style":{"code":true}},{"type":"text","text":" above is not anaphoric. "},{"type":"text","text":"clojure.core\/for","style":{"code":true}},{"type":"text","text":" is anaphoric, but doesn't use "},{"type":"text","text":"[~x]","style":{"code":true}},{"type":"text","text":" in that context, as far as I can tell."}]}]}],"user":"U2FRKM4TW","text":"`foo` above is not anaphoric. `clojure.core\/for` is anaphoric, but doesn't use `[~x]` in that context, as far as I can tell."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628688968.256300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"239499f6-966d-4bdc-8913-0b9665fbbe89","blocks":[{"type":"rich_text","block_id":"B7Ov","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, wait, "},{"type":"text","text":"foo","style":{"code":true}},{"type":"text","text":" actually is anaphoric, my bad."}]}]}],"user":"U2FRKM4TW","text":"Oh, wait, `foo` actually is anaphoric, my bad."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689288.256600","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"4ace9e78-4e60-4dcc-ac9f-a452a7ad56ba","blocks":[{"type":"rich_text","block_id":"UDob","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how is it anaphoric.   the caller provides a variable name, and the macro expects that the caller references that variable in the given body."}]}]}],"user":"U010VP3UY9X","text":"how is it anaphoric.   the caller provides a variable name, and the macro expects that the caller references that variable in the given body."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689321.256800","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"6bd9afe5-9fae-4178-ae11-c8a5c5be2817","blocks":[{"type":"rich_text","block_id":"vVKpv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe I misunderstand "},{"type":"text","text":"anaphoric","style":{"bold":true}}]}]}],"user":"U010VP3UY9X","text":"maybe I misunderstand *anaphoric*"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689384.257000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"043766bb-dd0a-42e5-91a3-410a175c2054","blocks":[{"type":"rich_text","block_id":"PYqac","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It captures the name and allows you to use that name later in the body. At least, that's my understanding of the concept."}]}]}],"user":"U2FRKM4TW","text":"It captures the name and allows you to use that name later in the body. At least, that's my understanding of the concept."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689404.257200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"2b26b6b6-f339-4551-9750-16179e1d72d9","blocks":[{"type":"rich_text","block_id":"H\/lYm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From Wiki:\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":" An\u00a0"},{"type":"text","text":"anaphoric macro","style":{"bold":true}},{"type":"text","text":"\u00a0is a type of\u00a0"},{"type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Macro_(computer_science)","text":"programming macro"},{"type":"text","text":"\u00a0that deliberately captures some form supplied to the macro which may be referred to by an\u00a0"},{"type":"text","text":"anaphor","style":{"italic":true}},{"type":"text","text":"\u00a0(an expression referring to another)"}]}]}],"user":"U2FRKM4TW","text":"From Wiki:\n&gt;  An\u00a0*anaphoric macro*\u00a0is a type of\u00a0<https:\/\/en.wikipedia.org\/wiki\/Macro_(computer_science)|programming macro>\u00a0that deliberately captures some form supplied to the macro which may be referred to by an\u00a0_anaphor_\u00a0(an expression referring to another)"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689431.257400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"f356e8f0-5125-4070-8cda-ff3ebd0c9f7c","blocks":[{"type":"rich_text","block_id":"mx8GG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ahhh. hmmm. indeed.  that's not the intent.  the intent is simply to allow the profiler to use the name fn-exists-some rather than fn- followed by some cryptic number."}]}]}],"user":"U010VP3UY9X","text":"ahhh. hmmm. indeed.  that's not the intent.  the intent is simply to allow the profiler to use the name fn-exists-some rather than fn- followed by some cryptic number."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689456.257800","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"ffe4b533-4d7f-47fd-8bfa-ccd54a6f0dff","blocks":[{"type":"rich_text","block_id":"67eZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but yes you are right, if the user knows the name he can use it. "},{"type":"emoji","name":"disappointed"}]}]}],"user":"U010VP3UY9X","text":"but yes you are right, if the user knows the name he can use it. :disappointed:"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689479.258000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"e1aa6c2b-d5f5-4848-a8b0-292a26a88521","blocks":[{"type":"rich_text","block_id":"8Oe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nah, it's about the name of the "},{"type":"text","text":"var","style":{"code":true}},{"type":"text","text":", not the name of the function."}]}]}],"user":"U2FRKM4TW","text":"Nah, it's about the name of the `var`, not the name of the function."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689498.258200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"55305bbd-37f2-4754-af72-40344681af87","blocks":[{"type":"rich_text","block_id":"cPMT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That "},{"type":"text","text":"[~var]","style":{"code":true}},{"type":"text","text":" makes it possible to both define and use some particular name in that "},{"type":"text","text":"~@body","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"That `[~var]` makes it possible to both define and use some particular name in that `~@body`."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689519.258400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"0c71192a-abe6-4990-9cdd-609ea37bcd59","blocks":[{"type":"rich_text","block_id":"FzVw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Similar to how you can use "},{"type":"text","text":":let","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"Similar to how you can use `:let` in `for`."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689521.258600","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"8d1cb51e-c070-49f0-854e-27a4e11268c7","blocks":[{"type":"rich_text","block_id":"XRyGP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the example: "},{"type":"text","text":"(foo [x '(1 2 3)] (even? x))","style":{"code":true}}]}]}],"user":"U010VP3UY9X","text":"the example: `(foo [x '(1 2 3)] (even? x))`"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689544.258800","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"50f94ea5-0f1e-4b4b-86c8-423bc3dba66b","blocks":[{"type":"rich_text","block_id":"TasK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the user provides "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" and he provides a body which references "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" ... is that anaphoric?"}]}]}],"user":"U010VP3UY9X","text":"the user provides `x` and he provides a body which references `x` ... is that anaphoric?"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689565.259000","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"e9612c6d-17b6-4807-b11f-a042d23bbc51","blocks":[{"type":"rich_text","block_id":"Gjblr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought anaphoric meant that the macro decided "},{"type":"text","text":"var","style":{"code":true}}]}]}],"user":"U010VP3UY9X","text":"I thought anaphoric meant that the macro decided `var`"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689626.259200","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"03e27093-ae07-44fe-8d91-69b05947ca9e","blocks":[{"type":"rich_text","block_id":"tvcmv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looking at the actual examples - seems like you're indeed correct and my initial understanding was wrong."}]}]}],"user":"U2FRKM4TW","text":"Looking at the actual examples - seems like you're indeed correct and my initial understanding was wrong."}
{"type":"message","thread_ts":"1628688773.254100","edited":{"user":"U010VP3UY9X","ts":"1628689734.000000"},"ts":"1628689724.259400","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"3a856210-5216-4b23-bf12-6c851aa5ec02","blocks":[{"type":"rich_text","block_id":"Fyg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I find that sometimes a form like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(exists [x some-input] (or (even? x) (prime? x)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"reads easily.  Does there exist an x in some-input such that either x is even or prime?"}]}]}],"user":"U010VP3UY9X","text":"I find that sometimes a form like\n```(exists [x some-input] (or (even? x) (prime? x)))```\nreads easily.  Does there exist an x in some-input such that either x is even or prime?"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689771.259700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"b1b3167c-6dbe-422b-a1b6-167e1e859682","blocks":[{"type":"rich_text","block_id":"c8OD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but obviously it is syntax-mappable to a call to "},{"type":"text","text":"some","style":{"code":true}},{"type":"text","text":" with a "},{"type":"text","text":"(fn ..)","style":{"code":true}},{"type":"text","text":" which uses the given variable name."}]}]}],"user":"U010VP3UY9X","text":"but obviously it is syntax-mappable to a call to `some` with a `(fn ..)` which uses the given variable name."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628689835.259900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"28fb6277-bbc5-4fec-84c0-95e8d18e04eb","blocks":[{"type":"rich_text","block_id":"tBb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah you are right i think. you control the binding, rather than the macro introducing some symbol it thinks is appropriate"}]}]}],"user":"U11BV7MTK","text":"yeah you are right i think. you control the binding, rather than the macro introducing some symbol it thinks is appropriate"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628690259.261300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"35201cb0-ceb1-4542-ace8-16a1e76af98f","blocks":[{"type":"rich_text","block_id":"Zfek","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What I don\u2019t get is why you are collecting the body as a variadic parameter. What would happen if I put in more predicates?"}]}]}],"user":"U01EFUL1A8M","text":"What I don\u2019t get is why you are collecting the body as a variadic parameter. What would happen if I put in more predicates?"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628691572.267900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"3f432848-b1ae-4c64-9118-4512674d6b49","blocks":[{"type":"rich_text","block_id":"ea4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"collecting the body?"}]}]}],"user":"U010VP3UY9X","text":"collecting the body?"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628691725.268900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"399f238f-00be-4e7e-9871-824d5e3250fc","blocks":[{"type":"rich_text","block_id":"tBFbF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can replace "},{"type":"text","text":"& body","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"body","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"~@body","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"~body","style":{"code":true}},{"type":"text","text":" - this will allow only one expression.\nWith the "},{"type":"text","text":"&","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"@","style":{"code":true}},{"type":"text","text":" there, you allow multiple expressions, and the results of all but the last one will be ignored - just like in a regular "},{"type":"text","text":"fn","style":{"code":true}},{"type":"text","text":" body."}]}]}],"user":"U2FRKM4TW","text":"You can replace `&amp; body` with `body` and `~@body` with `~body` - this will allow only one expression.\nWith the `&amp;` and `@` there, you allow multiple expressions, and the results of all but the last one will be ignored - just like in a regular `fn` body."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628691758.269300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"6dfe53a8-b76e-4069-8742-5b15389cac32","blocks":[{"type":"rich_text","block_id":"PPK5k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or you can combine such multiple expressions within e.g. "},{"type":"text","text":"(and ...)","style":{"code":true}},{"type":"text","text":". A matter of preference, I suppose. HoneySQL does that, at least v1."}]}]}],"user":"U2FRKM4TW","text":"Or you can combine such multiple expressions within e.g. `(and ...)`. A matter of preference, I suppose. HoneySQL does that, at least v1."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628691955.269900","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"b933cf2d-1242-445c-a59c-f065e1b8edb6","blocks":[{"type":"rich_text","block_id":"huj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what about "},{"type":"text","text":"(exists [x some-seq] (prn [:x x]) (even? x))","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"user":"U010VP3UY9X","text":"what about `(exists [x some-seq] (prn [:x x]) (even? x))` ?"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628692024.270100","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"832d0b1a-ff07-4735-beca-29c4d9ea8b2f","blocks":[{"type":"rich_text","block_id":"xQzwR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure if leaving room for such statements is a good thing. You can always wrap something in a "},{"type":"text","text":"do","style":{"code":true}},{"type":"text","text":" to help with debugging. But making an explicit place for it is just asking for potential errors."}]}]}],"user":"U2FRKM4TW","text":"I'm not sure if leaving room for such statements is a good thing. You can always wrap something in a `do` to help with debugging. But making an explicit place for it is just asking for potential errors."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628692025.270300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"29c918c1-cc95-424b-a8c5-bacf9b022bb1","blocks":[{"type":"rich_text","block_id":"2Rh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and of course "},{"type":"text","text":"(exists [x some-seq] (and (even? x) (prime? (inc x))))","style":{"code":true}}]}]}],"user":"U010VP3UY9X","text":"and of course `(exists [x some-seq] (and (even? x) (prime? (inc x))))`"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628692043.270500","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"3812fdc9-a7cd-485c-b89a-f8acef14ee96","blocks":[{"type":"rich_text","block_id":"4f8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"^ that will work in either approaches."}]}]}],"user":"U2FRKM4TW","text":"^ that will work in either approaches."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628692060.270700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"2882b9df-6515-4cb3-92ec-99ff421b8436","blocks":[{"type":"rich_text","block_id":"lfo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what kind of potential errors are you referring to?"}]}]}],"user":"U010VP3UY9X","text":"what kind of potential errors are you referring to?"}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628692136.271100","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"adf52566-0ec5-4308-8785-3d5e7a745786","blocks":[{"type":"rich_text","block_id":"MW0Q4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(exists [x some-seq] (even? x) (prime? (inc x)))","style":{"code":true}},{"type":"text","text":" - where you forget "},{"type":"text","text":"and","style":{"code":true}},{"type":"text","text":" . Or not you but someone else could think that there's an implicit "},{"type":"text","text":"and","style":{"code":true}},{"type":"text","text":" . There will be no error message, just a silent ignore of "},{"type":"text","text":"(even? x)","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"`(exists [x some-seq] (even? x) (prime? (inc x)))` - where you forget `and` . Or not you but someone else could think that there's an implicit `and` . There will be no error message, just a silent ignore of `(even? x)`."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628692205.271700","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"55ea4cd0-64aa-4e50-85c8-2fdb76b922b4","blocks":[{"type":"rich_text","block_id":"V2ah","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ahh.  but I would never do that, so I don't consider it as potential.   interesting that someone might think that is a reasonable thing to do."}]}]}],"user":"U010VP3UY9X","text":"ahh.  but I would never do that, so I don't consider it as potential.   interesting that someone might think that is a reasonable thing to do."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628692273.272100","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"fc0e0456-e4d0-4706-8fdc-72a29ca8fe50","blocks":[{"type":"rich_text","block_id":"XOXSA","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" I would never do that"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Famous last words. ;)\n\nAs I mentioned - "},{"type":"text","text":"where","style":{"code":true}},{"type":"text","text":" in HoneySQL does just that. "},{"type":"text","text":"(hh\/where [:= :a 1] [:= :b 2])","style":{"code":true}},{"type":"text","text":" will end up in "},{"type":"text","text":"(\"a\" = 1) AND (\"b\" = 2)","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"stuck_out_tongue_winking_eye","users":["U010VP3UY9X"],"count":1}],"text":"&gt;  I would never do that\nFamous last words. ;)\n\nAs I mentioned - `where` in HoneySQL does just that. `(hh\/where [:= :a 1] [:= :b 2])` will end up in `(\"a\" = 1) AND (\"b\" = 2)`."}
{"type":"message","thread_ts":"1628688773.254100","ts":"1628692319.272300","parent_user_id":"U11BV7MTK","team":"T03RZGPFR","client_msg_id":"de7b4af3-948d-4b7d-ac55-34602143a238","blocks":[{"type":"rich_text","block_id":"SOp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well these are macros I've used for 20 years, so it is hard for me to think about seeing them the first time."}]}]}],"user":"U010VP3UY9X","text":"well these are macros I've used for 20 years, so it is hard for me to think about seeing them the first time."}
{"client_msg_id":"4f9b15b9-e956-40c6-91f0-e3d44a61de6b","type":"message","text":"Not weird at all. Check out e.g. the implementation of `for`.","user":"U2FRKM4TW","ts":"1628688745.253800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"4Gb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not weird at all. Check out e.g. the implementation of "},{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":"."}]}]}]}
{"client_msg_id":"7d9ed769-128f-4448-875f-bebc86b036f0","type":"message","text":"why?","user":"U04V4KLKC","ts":"1628688685.253300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"0EP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why?"}]}]}]}
{"client_msg_id":"5afae827-97b9-45c0-a2f8-4c8e12dd4102","type":"message","text":"very","user":"U01EFUL1A8M","ts":"1628688684.253200","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"p1R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"very"}]}]}]}
{"client_msg_id":"0d4534fc-be38-4a92-b55e-f5a12f62d401","type":"message","text":"yes","user":"U01EFUL1A8M","ts":"1628688683.253100","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"DjV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]}
{"client_msg_id":"b3cc92ec-8c3b-4051-b978-9b40efb79577","type":"message","text":"does `[~var]` seem weird to anyone else?","user":"U11BV7MTK","ts":"1628688576.252300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"kRU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does "},{"type":"text","text":"[~var]","style":{"code":true}},{"type":"text","text":" seem weird to anyone else?"}]}]}]}
{"client_msg_id":"43d807a6-adae-4143-94f4-be739e9863dc","type":"message","text":"sometimes clojure macros can be uglier than they need to be.  grumble","user":"U010VP3UY9X","ts":"1628688460.251700","team":"T03RZGPFR","edited":{"user":"U010VP3UY9X","ts":"1628688475.000000"},"blocks":[{"type":"rich_text","block_id":"19S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sometimes clojure macros can be uglier than they need to be.  grumble"}]}]}]}
{"client_msg_id":"6c48dc10-758b-4546-bd21-bbbc7d89e262","type":"message","text":"`~'exists-some`","user":"U04V4KLKC","ts":"1628688307.250500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"k2L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"~'exists-some","style":{"code":true}}]}]}],"reactions":[{"name":"heavy_check_mark","users":["U010VP3UY9X"],"count":1}]}
{"client_msg_id":"f43a8d4f-6053-47ff-87df-78a1a10bdad5","type":"message","text":"yep, the syntax quote is fully namespacing `exists-some`","user":"UGRJKK74Y","ts":"1628688305.250400","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"RDg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yep, the syntax quote is fully namespacing "},{"type":"text","text":"exists-some","style":{"code":true}}]}]}],"reactions":[{"name":"heavy_check_mark","users":["U010VP3UY9X"],"count":1}]}
{"client_msg_id":"fb76e826-e813-42fb-9d84-e9c80f2cdcdd","type":"message","text":"I suspect it has something to do with the namespace of `exists-some`","user":"U010VP3UY9X","ts":"1628688284.249900","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"cPTEv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I suspect it has something to do with the namespace of "},{"type":"text","text":"exists-some","style":{"code":true}}]}]}]}
{"subscribed":false,"reply_users":["U2FRKM4TW"],"type":"message","thread_ts":"1628688177.249200","reply_users_count":1,"ts":"1628688177.249200","team":"T03RZGPFR","client_msg_id":"9019842c-f63e-4e89-b2df-0afce1634462","blocks":[{"type":"rich_text","block_id":"IXZjv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if I remove the "},{"type":"text","text":"exists-some","style":{"code":true}},{"type":"text","text":" symbol it works fine."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":1,"latest_reply":"1628688283.249700","text":"if I remove the `exists-some` symbol it works fine."}
{"subscribed":false,"reply_users":["U2FRKM4TW"],"type":"message","thread_ts":"1628688177.249200","reply_users_count":1,"ts":"1628688177.249200","team":"T03RZGPFR","client_msg_id":"9019842c-f63e-4e89-b2df-0afce1634462","blocks":[{"type":"rich_text","block_id":"IXZjv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if I remove the "},{"type":"text","text":"exists-some","style":{"code":true}},{"type":"text","text":" symbol it works fine."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":1,"latest_reply":"1628688283.249700","text":"if I remove the `exists-some` symbol it works fine."}
{"type":"message","thread_ts":"1628688177.249200","ts":"1628688283.249700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"cbeaba1e-c407-4a57-9403-49f7ad709bf6","blocks":[{"type":"rich_text","block_id":"Gds6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Replace it with "},{"type":"text","text":"~'exists-some","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"heavy_check_mark","users":["U010VP3UY9X"],"count":1}],"text":"Replace it with `~'exists-some`."}
{"subscribed":false,"reply_users":["U050ECB92","U010VP3UY9X"],"type":"message","thread_ts":"1628688159.248900","reply_users_count":2,"ts":"1628688159.248900","team":"T03RZGPFR","client_msg_id":"f7e4da7b-81b4-4c48-9baa-6061714d0b1e","blocks":[{"type":"rich_text","block_id":"KlKty","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can someone help me understand what's wrong with this macro?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmacro foo\n  \"Test whether there exists an element of a sequence which matches a condition.\"\n  [[var seq] & body]\n  `(some (fn exists-some [~var]\n           ~@body) ~seq))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"When I call the macro\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(foo [x '(1 2 3)] (even? x))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I get an error from spec\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Syntax error macroexpanding clojure.core\/fn at (clojure-rte:localhost:54898(clj)*:1311:23).\nclojure-rte.rte-core\/exists-some - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha\/param-list\nclojure-rte.rte-core\/exists-some - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n] spec: :clojure.core.specs.alpha\/params+body"}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":6,"latest_reply":"1628756304.302000","text":"Can someone help me understand what's wrong with this macro?\n```(defmacro foo\n  \"Test whether there exists an element of a sequence which matches a condition.\"\n  [[var seq] &amp; body]\n  `(some (fn exists-some [~var]\n           ~@body) ~seq))```\nWhen I call the macro\n```(foo [x '(1 2 3)] (even? x))```\nI get an error from spec\n```Syntax error macroexpanding clojure.core\/fn at (clojure-rte:localhost:54898(clj)*:1311:23).\nclojure-rte.rte-core\/exists-some - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha\/param-list\nclojure-rte.rte-core\/exists-some - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n] spec: :clojure.core.specs.alpha\/params+body```"}
{"subscribed":false,"reply_users":["U050ECB92","U010VP3UY9X"],"type":"message","thread_ts":"1628688159.248900","reply_users_count":2,"ts":"1628688159.248900","team":"T03RZGPFR","client_msg_id":"f7e4da7b-81b4-4c48-9baa-6061714d0b1e","blocks":[{"type":"rich_text","block_id":"KlKty","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can someone help me understand what's wrong with this macro?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmacro foo\n  \"Test whether there exists an element of a sequence which matches a condition.\"\n  [[var seq] & body]\n  `(some (fn exists-some [~var]\n           ~@body) ~seq))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"When I call the macro\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(foo [x '(1 2 3)] (even? x))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I get an error from spec\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Syntax error macroexpanding clojure.core\/fn at (clojure-rte:localhost:54898(clj)*:1311:23).\nclojure-rte.rte-core\/exists-some - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha\/param-list\nclojure-rte.rte-core\/exists-some - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n] spec: :clojure.core.specs.alpha\/params+body"}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":6,"latest_reply":"1628756304.302000","text":"Can someone help me understand what's wrong with this macro?\n```(defmacro foo\n  \"Test whether there exists an element of a sequence which matches a condition.\"\n  [[var seq] &amp; body]\n  `(some (fn exists-some [~var]\n           ~@body) ~seq))```\nWhen I call the macro\n```(foo [x '(1 2 3)] (even? x))```\nI get an error from spec\n```Syntax error macroexpanding clojure.core\/fn at (clojure-rte:localhost:54898(clj)*:1311:23).\nclojure-rte.rte-core\/exists-some - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha\/param-list\nclojure-rte.rte-core\/exists-some - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n] spec: :clojure.core.specs.alpha\/params+body```"}
{"type":"message","thread_ts":"1628688159.248900","ts":"1628688966.256100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"0d752d57-9997-4327-a8db-ed1aa3cf6387","blocks":[{"type":"rich_text","block_id":"D8H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"use "},{"type":"text","text":"macroexpand","style":{"code":true}},{"type":"text","text":" on your form and see what pops out"}]}]}],"user":"U050ECB92","text":"use `macroexpand` on your form and see what pops out"}
{"type":"message","thread_ts":"1628688159.248900","ts":"1628691488.267800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"da382a7d-c4e0-425b-b1a9-451d91afe756","blocks":[{"type":"rich_text","block_id":"Tgj0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think macroexpand fails."}]}]}],"user":"U010VP3UY9X","text":"I think macroexpand fails."}
{"type":"message","thread_ts":"1628688159.248900","ts":"1628691594.268100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"22b91717-d6cd-42af-b54d-08d846719e75","blocks":[{"type":"rich_text","block_id":"PgE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why guess when you can check?"}]}]}],"user":"U050ECB92","text":"why guess when you can check?"}
{"type":"message","thread_ts":"1628688159.248900","ts":"1628691609.268300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"b1789e46-c6c3-4493-93d8-0eb108c80ed2","blocks":[{"type":"rich_text","block_id":"g2bAM","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Clojure 1.10.3\nuser=> (defmacro foo\n  \"Test whether there exists an element of a sequence which matches a condition.\"\n  [[var seq] & body]\n  `(some (fn exists-some [~var]\n           ~@body) ~seq))\n#'user\/foo\nuser=> (macroexpand '(foo [x '(1 2 3)] (even? x)))\n(clojure.core\/some (clojure.core\/fn user\/exists-some [x] (even? x)) (quote (1 2 3)))\nuser=>"}]},{"type":"rich_text_section","elements":[]}]}],"user":"U050ECB92","text":"```Clojure 1.10.3\nuser=&gt; (defmacro foo\n  \"Test whether there exists an element of a sequence which matches a condition.\"\n  [[var seq] &amp; body]\n  `(some (fn exists-some [~var]\n           ~@body) ~seq))\n#'user\/foo\nuser=&gt; (macroexpand '(foo [x '(1 2 3)] (even? x)))\n(clojure.core\/some (clojure.core\/fn user\/exists-some [x] (even? x)) (quote (1 2 3)))\nuser=&gt;```\n"}
{"type":"message","thread_ts":"1628688159.248900","ts":"1628691727.269100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2ba079c1-b458-44d3-924e-e34657f830ca","blocks":[{"type":"rich_text","block_id":"xFU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so that fn form needs to be fixed"}]}]}],"user":"U050ECB92","text":"so that fn form needs to be fixed"}
{"type":"message","thread_ts":"1628688159.248900","ts":"1628756304.302000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f00c1e71-dde2-4fe8-9ae1-a7c7f672dee2","blocks":[{"type":"rich_text","block_id":"yglWd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes I really don't understand clojure symbol resolution well enough to understand why I need "},{"type":"text","text":"~'","style":{"code":true}},{"type":"text","text":" before the "},{"type":"text","text":"exists-some","style":{"code":true}},{"type":"text","text":" symbol in the macro definition.  But that fixed it.  Several people suggested the same thing."}]}]}],"user":"U010VP3UY9X","text":"yes I really don't understand clojure symbol resolution well enough to understand why I need `~'` before the `exists-some` symbol in the macro definition.  But that fixed it.  Several people suggested the same thing."}
{"client_msg_id":"2677ebba-e63f-423a-ad48-2cd436922367","type":"message","text":"what I'm currently doing is generating all the pairs that start with the first element, and concating that with the pairs generated from the tail.\nHowever, this will never finish if the input is infinite.\n\nHonestly, I really don't care about infiniteness, I just want to realize as few as possible from the input sequence.","user":"U010VP3UY9X","ts":"1628686060.241800","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"MGB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what I'm currently doing is generating all the pairs that start with the first element, and concating that with the pairs generated from the tail.\nHowever, this will never finish if the input is infinite.\n\nHonestly, I really don't care about infiniteness, I just want to realize as few as possible from the input sequence."}]}]}]}
{"subscribed":false,"reply_users":["U04V4KLKC","U010VP3UY9X","U064X3EF3","U2FRKM4TW","U0178V2SLAY"],"type":"message","thread_ts":"1628685975.240300","reply_users_count":5,"edited":{"user":"U010VP3UY9X","ts":"1628686113.000000"},"ts":"1628685975.240300","team":"T03RZGPFR","client_msg_id":"3975a010-dee6-4adc-9fbc-0544236d6d69","blocks":[{"type":"rich_text","block_id":"boE9\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does anyone have a clever algorithm to generate a (possibly infinite) lazy sequence of pairs "},{"type":"text","text":"(a b)","style":{"code":true}},{"type":"text","text":"  or "},{"type":"text","text":"[a b]","style":{"code":true}},{"type":"text","text":" given another possibly infinite lazy sequence which has the property that if "},{"type":"text","text":"(a b)","style":{"code":true}},{"type":"text","text":" is in the generated sequence then "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" strictly precedes "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" in the input sequence?   For example given "},{"type":"text","text":"(1 2 3)","style":{"code":true}},{"type":"text","text":" I want to generate "},{"type":"text","text":"((1 2) (1 3) (2 3))","style":{"code":true}},{"type":"text","text":" ."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":51,"latest_reply":"1628692660.273000","text":"does anyone have a clever algorithm to generate a (possibly infinite) lazy sequence of pairs `(a b)`  or `[a b]` given another possibly infinite lazy sequence which has the property that if `(a b)` is in the generated sequence then `a` strictly precedes `b` in the input sequence?   For example given `(1 2 3)` I want to generate `((1 2) (1 3) (2 3))` ."}
{"subscribed":false,"reply_users":["U04V4KLKC","U010VP3UY9X","U064X3EF3","U2FRKM4TW","U0178V2SLAY"],"type":"message","thread_ts":"1628685975.240300","reply_users_count":5,"edited":{"user":"U010VP3UY9X","ts":"1628686113.000000"},"ts":"1628685975.240300","team":"T03RZGPFR","client_msg_id":"3975a010-dee6-4adc-9fbc-0544236d6d69","blocks":[{"type":"rich_text","block_id":"boE9\/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does anyone have a clever algorithm to generate a (possibly infinite) lazy sequence of pairs "},{"type":"text","text":"(a b)","style":{"code":true}},{"type":"text","text":"  or "},{"type":"text","text":"[a b]","style":{"code":true}},{"type":"text","text":" given another possibly infinite lazy sequence which has the property that if "},{"type":"text","text":"(a b)","style":{"code":true}},{"type":"text","text":" is in the generated sequence then "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" strictly precedes "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" in the input sequence?   For example given "},{"type":"text","text":"(1 2 3)","style":{"code":true}},{"type":"text","text":" I want to generate "},{"type":"text","text":"((1 2) (1 3) (2 3))","style":{"code":true}},{"type":"text","text":" ."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":51,"latest_reply":"1628692660.273000","text":"does anyone have a clever algorithm to generate a (possibly infinite) lazy sequence of pairs `(a b)`  or `[a b]` given another possibly infinite lazy sequence which has the property that if `(a b)` is in the generated sequence then `a` strictly precedes `b` in the input sequence?   For example given `(1 2 3)` I want to generate `((1 2) (1 3) (2 3))` ."}
{"type":"message","thread_ts":"1628685975.240300","edited":{"user":"U04V4KLKC","ts":"1628686409.000000"},"ts":"1628686381.242300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5194c8d6-9c21-4937-b410-131f3a3bb4b4","blocks":[{"type":"rich_text","block_id":"bkFYv","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [xs '(1 2 3)]\n  (for [x xs\n        y xs\n        :when (< x y)]\n    [x y]))"}]}]}],"user":"U04V4KLKC","text":"```(let [xs '(1 2 3)]\n  (for [x xs\n        y xs\n        :when (&lt; x y)]\n    [x y]))```"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686626.242600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"d858dadb-9eaf-4dec-9a10-00a221b57364","blocks":[{"type":"rich_text","block_id":"F6zH2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"doesn't work for\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [xs '(3 2 1)]\n  (for [x xs\n        y xs\n        :when (< x y)]\n    [x y]))"}]}]}],"user":"U010VP3UY9X","text":"doesn't work for\n```(let [xs '(3 2 1)]\n  (for [x xs\n        y xs\n        :when (&lt; x y)]\n    [x y]))```"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686671.242800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"258a89be-9b92-4ddf-bb89-86833b9adb94","blocks":[{"type":"rich_text","block_id":"6n1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also doesn't work if "},{"type":"text","text":"xs","style":{"code":true}},{"type":"text","text":" is infinite."}]}]}],"user":"U010VP3UY9X","text":"also doesn't work if `xs` is infinite."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686693.243000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"72565253-a2b5-40f5-9b84-6df11075f51c","blocks":[{"type":"rich_text","block_id":"emWi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because the first loop will never finish, and y will never take on the 2nd value."}]}]}],"user":"U010VP3UY9X","text":"because the first loop will never finish, and y will never take on the 2nd value."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686761.243200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"67201387-e8b9-4e10-8c1b-3da10c5b65b6","blocks":[{"type":"rich_text","block_id":"\/QLW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"my feeling is it is not possible without consuming a huge amount of memory.  maybe I'm wrong"}]}]}],"user":"U010VP3UY9X","text":"my feeling is it is not possible without consuming a huge amount of memory.  maybe I'm wrong"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686822.243400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"02f4d887-3a33-4ebc-9dc0-68d299509fd0","blocks":[{"type":"rich_text","block_id":"Vu7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"math.combinatorics lib may have stuff like this"}]}]}],"user":"U064X3EF3","text":"math.combinatorics lib may have stuff like this"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686826.243600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"f6f30dc4-130e-4fc5-adb3-6875977f71fd","blocks":[{"type":"rich_text","block_id":"IvS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it does work in both cases.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [xs '(3 2 1)]\n  (for [x xs\n        y xs\n        :when (< x y)]\n    [x y])) ;; => ([2 3] [1 3] [1 2])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and an example with infinite input\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(first\n  (let [xs (range)]\n    (for [x xs\n          y xs\n          :when (< x y)]\n      [x y]))) ;; => [0 1]"}]},{"type":"rich_text_section","elements":[]}]}],"user":"U04V4KLKC","text":"it does work in both cases.\n```(let [xs '(3 2 1)]\n  (for [x xs\n        y xs\n        :when (&lt; x y)]\n    [x y])) ;; =&gt; ([2 3] [1 3] [1 2])```\nand an example with infinite input\n```(first\n  (let [xs (range)]\n    (for [x xs\n          y xs\n          :when (&lt; x y)]\n      [x y]))) ;; =&gt; [0 1]```\n"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686875.243800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9be42b03-6c37-4c1b-8290-988a5b026d9c","blocks":[{"type":"rich_text","block_id":"r9FLp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if the input is "},{"type":"text","text":"'(a b c d e f g)","style":{"code":true}},{"type":"text","text":" I want to generate (for example) all the pairs not containing "},{"type":"text","text":"d","style":{"code":true}},{"type":"text","text":" before generating any which contain "},{"type":"text","text":"d","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U010VP3UY9X","text":"if the input is `'(a b c d e f g)` I want to generate (for example) all the pairs not containing `d` before generating any which contain `d`."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686918.244000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3208013a-2723-412b-abf2-d36fa0258dcf","blocks":[{"type":"rich_text","block_id":"x5F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but won't all the elements of your second suggestion be "},{"type":"text","text":"[n 1]","style":{"code":true}},{"type":"text","text":" for some n?  when does y advance to the 2nd value?"}]}]}],"user":"U010VP3UY9X","text":"but won't all the elements of your second suggestion be `[n 1]` for some n?  when does y advance to the 2nd value?"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686945.244200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"990d627c-9ef0-49fa-9e45-7fc2e43165d3","blocks":[{"type":"rich_text","block_id":"u=m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, I should try it before commenting."}]}]}],"user":"U010VP3UY9X","text":"OK, I should try it before commenting."}
{"type":"message","thread_ts":"1628685975.240300","edited":{"user":"U04V4KLKC","ts":"1628686960.000000"},"ts":"1628686953.244400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1126810b-4bb5-44b9-b90f-beea641b6de4","blocks":[{"type":"rich_text","block_id":"FcK06","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the all will be "},{"type":"text","text":"[0 n]","style":{"code":true}}]}]}],"user":"U04V4KLKC","text":"the all will be `[0 n]`"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628686975.244700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"00d00ab6-f200-48ca-91cb-9d21c0fd8720","blocks":[{"type":"rich_text","block_id":"1vUlK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"clojure-rte.rte-core> (take 10\n  (let [xs (range)]\n    (for [x xs\n          y xs\n          :when (< x y)]\n      [x y])))\n([0 1] [0 2] [0 3] [0 4] [0 5] [0 6] [0 7] [0 8] [0 9] [0 10])\nclojure-rte.rte-core>"}]}]}],"user":"U010VP3UY9X","text":"clojure-rte.rte-core&gt; (take 10\n  (let [xs (range)]\n    (for [x xs\n          y xs\n          :when (&lt; x y)]\n      [x y])))\n([0 1] [0 2] [0 3] [0 4] [0 5] [0 6] [0 7] [0 8] [0 9] [0 10])\nclojure-rte.rte-core&gt;"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687124.244900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"b8b82498-f700-4d10-a769-4592305e777f","blocks":[{"type":"rich_text","block_id":"jaBC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"indeed so the sequence doesn't contain all the pairs "},{"type":"emoji","name":"disappointed"}]}]}],"user":"U010VP3UY9X","text":"indeed so the sequence doesn't contain all the pairs :disappointed:"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687194.245100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"babcc1a8-2d3c-47c4-8924-d3ca7f449016","blocks":[{"type":"rich_text","block_id":"jJq8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, but because input is infinite it can\u2019t output finite result without extra conditions"}]}]}],"user":"U04V4KLKC","text":"right, but because input is infinite it can\u2019t output finite result without extra conditions"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687211.245300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"2a0d7ba2-473d-405d-995a-b7256245acdc","blocks":[{"type":"rich_text","block_id":"8O2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"perhaps it is obvious what my goal is, but I'm trying to find the first pair "},{"type":"text","text":"(a b)","style":{"code":true}},{"type":"text","text":" which matches a given predicate, but realising as little as possible from the input sequence."}]}]}],"user":"U010VP3UY9X","text":"perhaps it is obvious what my goal is, but I'm trying to find the first pair `(a b)` which matches a given predicate, but realising as little as possible from the input sequence."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687382.245500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9015c3d3-1a1b-4263-880e-ba66863b74f6","blocks":[{"type":"rich_text","block_id":"sz5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes but it can generate an infinite sequence of ALL the pairs.  your suggestion fails to do that.\nfor example it could generate\n[0 1] [0 2] [0 3] [1 2] [0 4] [1 3] [0 5] [1 4] [2 3] [0 6] [1 5] [2 4] ....\ni.e., first all the pairs which sum to 1, then all the pairs which sum to two, then all the pairs which sum to 3 ...."}]}]}],"user":"U010VP3UY9X","text":"yes but it can generate an infinite sequence of ALL the pairs.  your suggestion fails to do that.\nfor example it could generate\n[0 1] [0 2] [0 3] [1 2] [0 4] [1 3] [0 5] [1 4] [2 3] [0 6] [1 5] [2 4] ....\ni.e., first all the pairs which sum to 1, then all the pairs which sum to two, then all the pairs which sum to 3 ...."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687393.245700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8a1548e3-aad7-4cc1-84f7-af0818ff4d30","blocks":[{"type":"rich_text","block_id":"ibE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that would contain all the pairs, not just the ones starting with 0"}]}]}],"user":"U010VP3UY9X","text":"that would contain all the pairs, not just the ones starting with 0"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687408.245900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"99d0c541-d826-41f1-b962-c884495e58df","blocks":[{"type":"rich_text","block_id":"qPBR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe that's my solution......"}]}]}],"user":"U010VP3UY9X","text":"maybe that's my solution......"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687489.246100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1603a085-7c60-4f01-a16b-6b6528e3d75c","blocks":[{"type":"rich_text","block_id":"3E3M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"however, it would be great if [1 2] were generated before [0 3] as that would mean in some cases we would never have to realize the 3rd element of the input sequence."}]}]}],"user":"U010VP3UY9X","text":"however, it would be great if [1 2] were generated before [0 3] as that would mean in some cases we would never have to realize the 3rd element of the input sequence."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687511.246300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"619deff2-3462-4ddb-add2-af399acbf60e","blocks":[{"type":"rich_text","block_id":"ReL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"strictly speaking it will generate ALL the pairs. But to materialize ALL of them you will need to wait infinite time"}]}]}],"user":"U04V4KLKC","text":"strictly speaking it will generate ALL the pairs. But to materialize ALL of them you will need to wait infinite time"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687532.246500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"75184366-fae3-4429-8385-be2607cee1e7","blocks":[{"type":"rich_text","block_id":"AS8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, you're algorithm will never generate [1 2]"}]}]}],"user":"U010VP3UY9X","text":"no, you're algorithm will never generate [1 2]"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687573.246900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e7cc3b24-4922-4b3d-98fa-141d6df448f0","blocks":[{"type":"rich_text","block_id":"Aks","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would like an algorithm that will generate any pair after some finite time."}]}]}],"user":"U010VP3UY9X","text":"I would like an algorithm that will generate any pair after some finite time."}
{"type":"message","thread_ts":"1628685975.240300","edited":{"user":"U010VP3UY9X","ts":"1628687928.000000"},"ts":"1628687878.247100","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"bf0ac8a1-a29d-4d4c-b815-b7daec052925","blocks":[{"type":"rich_text","block_id":"6=lG","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U064X3EF3"},{"type":"text","text":" with regard to math.combinatorics and similar libraries.   I don't understand how to find the documentation?  it is expected that perspective users read the source code to find all the functions?  or am I missing something obvious?  I see the examples. but not the list of functions and their explanations"}]}]}],"user":"U010VP3UY9X","text":"<@U064X3EF3> with regard to math.combinatorics and similar libraries.   I don't understand how to find the documentation?  it is expected that perspective users read the source code to find all the functions?  or am I missing something obvious?  I see the examples. but not the list of functions and their explanations"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687898.247300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"9e833170-17fc-444b-903f-6a9c852f72f7","blocks":[{"type":"rich_text","block_id":"awM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"math.combinatorics","style":{"code":true}},{"type":"text","text":" has combinations, but it doesn't work with infinite inputs."}]}]}],"user":"U2FRKM4TW","text":"`math.combinatorics` has combinations, but it doesn't work with infinite inputs."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687918.247500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"613a249b-acf4-48a8-a279-4da62cc2b36e","blocks":[{"type":"rich_text","block_id":"BFxz","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https:\/\/clojure.github.io\/math.combinatorics\/"}]}]}],"user":"U04V4KLKC","text":"<https:\/\/clojure.github.io\/math.combinatorics\/>"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628687918.247700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"56e0fc8d-e926-4b42-8cc4-b4b322777ea1","blocks":[{"type":"rich_text","block_id":"I8aQ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U010VP3UY9X"},{"type":"text","text":" "},{"type":"link","url":"https:\/\/clojure.github.io\/math.combinatorics\/"}]}]}],"user":"U2FRKM4TW","text":"<@U010VP3UY9X> <https:\/\/clojure.github.io\/math.combinatorics\/>"}
{"attachments":[{"fallback":"200x200px image","image_url":"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/4\/43\/JPEG_ZigZag.svg\/200px-JPEG_ZigZag.svg.png","image_width":200,"image_height":200,"image_bytes":24226,"from_url":"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/4\/43\/JPEG_ZigZag.svg\/200px-JPEG_ZigZag.svg.png","id":1,"original_url":"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/4\/43\/JPEG_ZigZag.svg\/200px-JPEG_ZigZag.svg.png"}],"type":"message","thread_ts":"1628685975.240300","ts":"1628688309.250600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"055b5087-1944-4a8a-9ff8-42754b1209f3","blocks":[{"type":"rich_text","block_id":"a1KF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if I'm not mistaken, the algorithm you're looking for sounds a lot like \"zigzag ordering\" (not sure what's the official name), which traverses an array like this: "},{"type":"link","url":"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/4\/43\/JPEG_ZigZag.svg\/200px-JPEG_ZigZag.svg.png"},{"type":"text","text":". the example is a finite array, but i'd guess you could generate an infinite sequence of indecis"}]}]}],"user":"U0178V2SLAY","text":"if I'm not mistaken, the algorithm you're looking for sounds a lot like \"zigzag ordering\" (not sure what's the official name), which traverses an array like this: <https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/4\/43\/JPEG_ZigZag.svg\/200px-JPEG_ZigZag.svg.png>. the example is a finite array, but i'd guess you could generate an infinite sequence of indecis"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628688380.251200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e224d94b-f6e3-4bbd-8a34-2246d5835983","blocks":[{"type":"rich_text","block_id":"tU\/b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Similar, but not exactly like this. Zigzag won't mach all pairs."}]}]}],"user":"U2FRKM4TW","text":"Similar, but not exactly like this. Zigzag won't mach all pairs."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628688637.252400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1f93aa24-54f1-455a-8563-09fc35eb9472","blocks":[{"type":"rich_text","block_id":"8rCE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Something like this? "},{"type":"user","user_id":"U010VP3UY9X"},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn lazy-combinations\n  ([coll]\n   (lazy-combinations [(first coll)] (next coll)))\n  ([seen coll]\n   (when (seq coll)\n     (lazy-seq\n       (let [x (first coll)]\n         (concat (map (fn [s]\n                        [s x])\n                      seen)\n                 (lazy-combinations (conj seen x) (next coll))))))))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(take 10 (lazy-combinations (range)))\n=> ([0 1] [0 2] [1 2] [0 3] [1 3] [2 3] [0 4] [1 4] [2 4] [3 4])\n(some #(= [100 200] %) (lazy-combinations (range)))\n=> true\n(vec (lazy-combinations (range 5)))\n=> [[0 1] [0 2] [1 2] [0 3] [1 3] [2 3] [0 4] [1 4] [2 4] [3 4]]"}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"tada","users":["U010VP3UY9X"],"count":1}],"text":"Something like this? <@U010VP3UY9X>\n```(defn lazy-combinations\n  ([coll]\n   (lazy-combinations [(first coll)] (next coll)))\n  ([seen coll]\n   (when (seq coll)\n     (lazy-seq\n       (let [x (first coll)]\n         (concat (map (fn [s]\n                        [s x])\n                      seen)\n                 (lazy-combinations (conj seen x) (next coll))))))))```\n```(take 10 (lazy-combinations (range)))\n=&gt; ([0 1] [0 2] [1 2] [0 3] [1 3] [2 3] [0 4] [1 4] [2 4] [3 4])\n(some #(= [100 200] %) (lazy-combinations (range)))\n=&gt; true\n(vec (lazy-combinations (range 5)))\n=&gt; [[0 1] [0 2] [1 2] [0 3] [1 3] [2 3] [0 4] [1 4] [2 4] [3 4]]```"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628688666.252600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"0ec84816-4cd3-439b-afe3-cbaee65cbf44","blocks":[{"type":"rich_text","block_id":"icb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"First time ever I had to use "},{"type":"text","text":"lazy-seq","style":{"code":true}},{"type":"text","text":", heh."}]}]}],"user":"U2FRKM4TW","text":"First time ever I had to use `lazy-seq`, heh."}
{"type":"message","thread_ts":"1628685975.240300","edited":{"user":"U010VP3UY9X","ts":"1628690491.000000"},"ts":"1628690442.262900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"cf4e74fd-3479-48c5-a222-bbd512c9830d","blocks":[{"type":"rich_text","block_id":"v1g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here is my attempt which won't work because "},{"type":"text","text":"(into [] seq)","style":{"code":true}},{"type":"text","text":" will never finish.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn lazy-pairs-2\n  [seq]\n  (cond (empty? seq)\n        ()\n\n        :else\n        (let [vec (into [] seq)]\n          (for [i (range (count vec))\n                j (range i)]\n            [(vec j) (vec i)]))))"}]}]}],"user":"U010VP3UY9X","text":"Here is my attempt which won't work because `(into [] seq)` will never finish.\n```(defn lazy-pairs-2\n  [seq]\n  (cond (empty? seq)\n        ()\n\n        :else\n        (let [vec (into [] seq)]\n          (for [i (range (count vec))\n                j (range i)]\n            [(vec j) (vec i)]))))```"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628690652.263500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"5e16c4c9-4c7c-4b95-aaa7-0d0df2e7fcae","blocks":[{"type":"rich_text","block_id":"gep","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there something wrong with my version or are you simply trying to come up with your own algorithm?"}]}]}],"user":"U2FRKM4TW","text":"Is there something wrong with my version or are you simply trying to come up with your own algorithm?"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628690723.264400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c90aeb09-600d-42c6-93db-a64c1b561a2b","blocks":[{"type":"rich_text","block_id":"WKj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, I think you're algorithm produces the same as mine.   I think I'll use it.  I was wondering whether it could be done without recursion."}]}]}],"user":"U010VP3UY9X","text":"no, I think you're algorithm produces the same as mine.   I think I'll use it.  I was wondering whether it could be done without recursion."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628690741.264800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"02df90a9-f221-417f-b6a0-3659ecf8e8f7","blocks":[{"type":"rich_text","block_id":"TDSN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it can't be done with "},{"type":"text","text":"loop\/recur","style":{"code":true}},{"type":"text","text":" because the recursion is not tail-recursion."}]}]}],"user":"U010VP3UY9X","text":"it can't be done with `loop\/recur` because the recursion is not tail-recursion."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628690867.265600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"8897fa26-d41a-4a19-bbd6-87d472602dd3","blocks":[{"type":"rich_text","block_id":"TEiai","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Mine doesn't use recursion, at least not in a way that consumes the stack."}]}]}],"user":"U2FRKM4TW","text":"Mine doesn't use recursion, at least not in a way that consumes the stack."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628690873.265800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"7922acde-7d8f-48d5-af8b-ce0e9790a979","blocks":[{"type":"rich_text","block_id":"1HUx4","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0178V2SLAY","style":{"bold":true}},{"type":"text","text":" yes that's the idea except that it too greedily realizes the input sequence.  For example, it realizes [0 3] before [1 2]."}]}]}],"user":"U010VP3UY9X","text":"*<@U0178V2SLAY>* yes that's the idea except that it too greedily realizes the input sequence.  For example, it realizes [0 3] before [1 2]."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628690963.266000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"86bc9478-3821-45fd-a7ab-d68e0a59b3c5","blocks":[{"type":"rich_text","block_id":"oiaB","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U2FRKM4TW"},{"type":"text","text":" is that true?  I didn't realize that subtlety ."}]}]}],"user":"U010VP3UY9X","text":"<@U2FRKM4TW> is that true?  I didn't realize that subtlety ."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628690967.266200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"63dd5901-b2ab-45f2-9ef0-9f2a7599ffdb","blocks":[{"type":"rich_text","block_id":"LQ0f1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As a demonstration:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(first (drop 100000000 (lazy-combinations (range))))\n=> [8989 14142]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"A recursive version that consumes the stack would've definitely exploded there."}]}]}],"user":"U2FRKM4TW","text":"As a demonstration:\n```(first (drop 100000000 (lazy-combinations (range))))\n=&gt; [8989 14142]```\nA recursive version that consumes the stack would've definitely exploded there."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628690995.266400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6e924e7a-c44c-43b2-82fa-966525d29ec6","blocks":[{"type":"rich_text","block_id":"9PKI0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lazy-seq","style":{"code":true}},{"type":"text","text":" creates a closure. See the top example here: "},{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/lazy-seq"}]}]}],"user":"U2FRKM4TW","text":"`lazy-seq` creates a closure. See the top example here: <https:\/\/clojuredocs.org\/clojure.core\/lazy-seq>"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628691067.266600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"cb2ce753-0a4f-4449-b91f-22c73aba320e","blocks":[{"type":"rich_text","block_id":"Ju9ft","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess "},{"type":"text","text":"concat","style":{"code":true}},{"type":"text","text":" , "},{"type":"text","text":"lazy-seq","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"lazy-combinations","style":{"code":true}},{"type":"text","text":" really do return before the otherwise recursive call to "},{"type":"text","text":"lazy-combinations","style":{"code":true}},{"type":"text","text":" happens, right?"}]}]}],"user":"U010VP3UY9X","text":"I guess `concat` , `lazy-seq`, and `lazy-combinations` really do return before the otherwise recursive call to `lazy-combinations` happens, right?"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628691108.266800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"619caa9c-8b0a-4e68-b466-1dc080ef661a","blocks":[{"type":"rich_text","block_id":"=2A7E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Great.  I think I'll use your code if you don't mind.  and I'll put a comment with you as the author."}]}]}],"user":"U010VP3UY9X","text":"Great.  I think I'll use your code if you don't mind.  and I'll put a comment with you as the author."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628691229.267000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"aae5a95b-fad8-4ebc-92ba-46b4b70e68fd","blocks":[{"type":"rich_text","block_id":"7LW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right. Well, except for the only truly recursive call due to the additional arity.\n\nSure, go ahead! :) Happy to help."}]}]}],"user":"U2FRKM4TW","text":"Right. Well, except for the only truly recursive call due to the additional arity.\n\nSure, go ahead! :) Happy to help."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628691246.267200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"35f4470d-260b-4e4c-8318-2ddea6129e47","blocks":[{"type":"rich_text","block_id":"Qm0I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW you use a vector as "},{"type":"text","text":"seen","style":{"code":true}},{"type":"text","text":".  why?  why not a list?"}]}]}],"user":"U010VP3UY9X","text":"BTW you use a vector as `seen`.  why?  why not a list?"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628691270.267400","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"de82ab3c-d65c-4d91-9eba-db721966a62b","blocks":[{"type":"rich_text","block_id":"ZV35","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cons onto list is faster than conj onto vector, right?"}]}]}],"user":"U010VP3UY9X","text":"cons onto list is faster than conj onto vector, right?"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628691352.267600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1241fd2b-71b1-4cdd-aba0-d1b82ac32f2b","blocks":[{"type":"rich_text","block_id":"cjOZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sorry if that's a stupid question;."}]}]}],"user":"U010VP3UY9X","text":"sorry if that's a stupid question;."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628691617.268500","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"438d33a4-bdca-4645-ae98-b77a6b6b2d77","blocks":[{"type":"rich_text","block_id":"mHt00","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And since it's my first usage of "},{"type":"text","text":"lazy-seq","style":{"code":true}},{"type":"text","text":", perhaps it could be improved - may be worth asking a separate question in the main channel.\n\nNot stupid at all! Perhaps a list with "},{"type":"text","text":"cons","style":{"code":true}},{"type":"text","text":" is better. But you'd have to measure really carefully. And it's O(1) either way.\nBesides, using a list with "},{"type":"text","text":"cons","style":{"code":true}},{"type":"text","text":" will change the order of the pairs. No idea if that matters in your case, but I find the vector-based result more intuitive."}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"heavy_check_mark","users":["U010VP3UY9X"],"count":1}],"text":"And since it's my first usage of `lazy-seq`, perhaps it could be improved - may be worth asking a separate question in the main channel.\n\nNot stupid at all! Perhaps a list with `cons` is better. But you'd have to measure really carefully. And it's O(1) either way.\nBesides, using a list with `cons` will change the order of the pairs. No idea if that matters in your case, but I find the vector-based result more intuitive."}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628691866.269700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3e226a55-a78f-4564-9506-5a75ba10f280","blocks":[{"type":"rich_text","block_id":"5Z1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cons onto list is faster than conj onto vector"}]}]}],"user":"U064X3EF3","text":"cons onto list is faster than conj onto vector"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628692075.270900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"728989f5-4ea5-4f8b-9735-ae44463b56fc","blocks":[{"type":"rich_text","block_id":"+wwS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But we also iterate over it after each "},{"type":"text","text":"cons","style":{"code":true}},{"type":"text","text":"\/"},{"type":"text","text":"conj","style":{"code":true}},{"type":"text","text":". A list would still be faster?"}]}]}],"user":"U2FRKM4TW","text":"But we also iterate over it after each `cons`\/`conj`. A list would still be faster?"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628692224.271900","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"6bdf9d82-0e14-47b9-9267-a10d5b226262","blocks":[{"type":"rich_text","block_id":"A+6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe so, yes (but iterating is going to be the same time complexity either way)"}]}]}],"user":"U064X3EF3","reactions":[{"name":"+1","users":["U2FRKM4TW"],"count":1}],"text":"I believe so, yes (but iterating is going to be the same time complexity either way)"}
{"type":"message","thread_ts":"1628685975.240300","edited":{"user":"U064X3EF3","ts":"1628692457.000000"},"ts":"1628692400.272700","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"66c4fa0b-ce8e-4b4b-9fcf-8a33258f6ff0","blocks":[{"type":"rich_text","block_id":"T7Zb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with vectors, conj is not really O(1). if there's room in the tail (best\/average case) then you add it to the tail. but in the worst case, the tail is full and you're (potentially) making 1 or more new tree nodes"}]}]}],"user":"U064X3EF3","text":"with vectors, conj is not really O(1). if there's room in the tail (best\/average case) then you add it to the tail. but in the worst case, the tail is full and you're (potentially) making 1 or more new tree nodes"}
{"type":"message","thread_ts":"1628685975.240300","ts":"1628692660.273000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"c630d911-08fd-4dc4-a438-d2cc2b564608","blocks":[{"type":"rich_text","block_id":"i3S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! Makes sense."}]}]}],"user":"U2FRKM4TW","text":"Thanks! Makes sense."}
{"subscribed":false,"reply_users":["U0DTSCAUU"],"type":"message","thread_ts":"1628684681.236700","reply_users_count":1,"ts":"1628684681.236700","team":"T03RZGPFR","client_msg_id":"a240d1f4-baad-4c93-be1b-3442413a7b11","blocks":[{"type":"rich_text","block_id":"sh0Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am working on a web app, which has services organised into a system using stuart sierra component. Throughout the app, we import functions from the namespace, and pass the corresponding service as the first argument. This allows the function to operate on that service, and also to gain access to other dependent services in a reasonable way. I am wondering though, whether it would be better during the application bootup to create partials of the functions we generally import through the namespace, binding them to the services they need. My thinking is that as soon as we have the service initialised, we can bind it once, then all the consumers of the newly made partial don't have to worry about the services required etc... they can just call with arguments relevant to their own business logic, and also could be passed more specific functions rather than passing the whole service. I would appreciate any feedback on what the tradeoffs might be, and if there is a convention of some kind where could I find what that is?"}]}]}],"is_locked":false,"user":"U020B04QPGC","reply_count":1,"latest_reply":"1628690836.265400","text":"I am working on a web app, which has services organised into a system using stuart sierra component. Throughout the app, we import functions from the namespace, and pass the corresponding service as the first argument. This allows the function to operate on that service, and also to gain access to other dependent services in a reasonable way. I am wondering though, whether it would be better during the application bootup to create partials of the functions we generally import through the namespace, binding them to the services they need. My thinking is that as soon as we have the service initialised, we can bind it once, then all the consumers of the newly made partial don't have to worry about the services required etc... they can just call with arguments relevant to their own business logic, and also could be passed more specific functions rather than passing the whole service. I would appreciate any feedback on what the tradeoffs might be, and if there is a convention of some kind where could I find what that is?"}
{"subscribed":false,"reply_users":["U0DTSCAUU"],"type":"message","thread_ts":"1628684681.236700","reply_users_count":1,"ts":"1628684681.236700","team":"T03RZGPFR","client_msg_id":"a240d1f4-baad-4c93-be1b-3442413a7b11","blocks":[{"type":"rich_text","block_id":"sh0Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am working on a web app, which has services organised into a system using stuart sierra component. Throughout the app, we import functions from the namespace, and pass the corresponding service as the first argument. This allows the function to operate on that service, and also to gain access to other dependent services in a reasonable way. I am wondering though, whether it would be better during the application bootup to create partials of the functions we generally import through the namespace, binding them to the services they need. My thinking is that as soon as we have the service initialised, we can bind it once, then all the consumers of the newly made partial don't have to worry about the services required etc... they can just call with arguments relevant to their own business logic, and also could be passed more specific functions rather than passing the whole service. I would appreciate any feedback on what the tradeoffs might be, and if there is a convention of some kind where could I find what that is?"}]}]}],"is_locked":false,"user":"U020B04QPGC","reply_count":1,"latest_reply":"1628690836.265400","text":"I am working on a web app, which has services organised into a system using stuart sierra component. Throughout the app, we import functions from the namespace, and pass the corresponding service as the first argument. This allows the function to operate on that service, and also to gain access to other dependent services in a reasonable way. I am wondering though, whether it would be better during the application bootup to create partials of the functions we generally import through the namespace, binding them to the services they need. My thinking is that as soon as we have the service initialised, we can bind it once, then all the consumers of the newly made partial don't have to worry about the services required etc... they can just call with arguments relevant to their own business logic, and also could be passed more specific functions rather than passing the whole service. I would appreciate any feedback on what the tradeoffs might be, and if there is a convention of some kind where could I find what that is?"}
{"type":"message","thread_ts":"1628684681.236700","ts":"1628690836.265400","parent_user_id":"U020B04QPGC","team":"T03RZGPFR","client_msg_id":"848fe4a1-7d04-40bb-aba5-174a27a61ebd","blocks":[{"type":"rich_text","block_id":"\/qx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don\u2019t think that would be a great approach. Typically, services managed by Component are stateful things you need to start and stop like DB connection pools, and any function that uses one of them is not pure. That pain you feel passing them around is good. It should encourage you to separate your business logic out into pure functions and to keep the ones that touch stateful components simple and shallow."}]}]}],"user":"U0DTSCAUU","text":"I don\u2019t think that would be a great approach. Typically, services managed by Component are stateful things you need to start and stop like DB connection pools, and any function that uses one of them is not pure. That pain you feel passing them around is good. It should encourage you to separate your business logic out into pure functions and to keep the ones that touch stateful components simple and shallow."}
{"subscribed":false,"reply_users":["U2FRKM4TW","U4P4NREBY"],"type":"message","thread_ts":"1628683626.233600","reply_users_count":2,"ts":"1628683626.233600","team":"T03RZGPFR","client_msg_id":"ae0aa2e3-0229-4d7d-bc9d-2ff73455f750","blocks":[{"type":"rich_text","block_id":"vGvO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I\u2019ve been using "},{"type":"text","text":"#(some some? %)","style":{"code":true}},{"type":"text","text":" to check that a sequence contains some content (and not just nils), but is there a less awkward way of doing this?"}]}]}],"is_locked":false,"user":"U4P4NREBY","reply_count":6,"latest_reply":"1628684142.234700","text":"I\u2019ve been using `#(some some? %)` to check that a sequence contains some content (and not just nils), but is there a less awkward way of doing this?"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U4P4NREBY"],"type":"message","thread_ts":"1628683626.233600","reply_users_count":2,"ts":"1628683626.233600","team":"T03RZGPFR","client_msg_id":"ae0aa2e3-0229-4d7d-bc9d-2ff73455f750","blocks":[{"type":"rich_text","block_id":"vGvO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I\u2019ve been using "},{"type":"text","text":"#(some some? %)","style":{"code":true}},{"type":"text","text":" to check that a sequence contains some content (and not just nils), but is there a less awkward way of doing this?"}]}]}],"is_locked":false,"user":"U4P4NREBY","reply_count":6,"latest_reply":"1628684142.234700","text":"I\u2019ve been using `#(some some? %)` to check that a sequence contains some content (and not just nils), but is there a less awkward way of doing this?"}
{"type":"message","thread_ts":"1628683626.233600","ts":"1628683775.233700","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"a40bb287-4269-4234-8e81-e84c95d8ea1b","blocks":[{"type":"rich_text","block_id":"pwY7f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Depends on what \"awkward\" means. Maybe "},{"type":"text","text":"#(not (every? nil? %))","style":{"code":true}},{"type":"text","text":" is better."}]}]}],"user":"U2FRKM4TW","text":"Depends on what \"awkward\" means. Maybe `#(not (every? nil? %))` is better."}
{"type":"message","thread_ts":"1628683626.233600","ts":"1628683883.233900","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"55ac3d28-cde5-4737-9b5c-11ee0a97fead","blocks":[{"type":"rich_text","block_id":"Br0pO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess to me the double \u201csome some\u201d is a bit awkward and doesn\u2019t communicate its meaning strongly."}]}]}],"user":"U4P4NREBY","text":"I guess to me the double \u201csome some\u201d is a bit awkward and doesn\u2019t communicate its meaning strongly."}
{"type":"message","thread_ts":"1628683626.233600","ts":"1628683984.234100","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"5b041f1a-e8db-4e93-9d16-dae3b83ba77d","blocks":[{"type":"rich_text","block_id":"G5ihk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess "},{"type":"text","text":"#(not-every? nil? %)","style":{"code":true}},{"type":"text","text":" is more clear in its intent."}]}]}],"user":"U4P4NREBY","text":"I guess `#(not-every? nil? %)` is more clear in its intent."}
{"type":"message","thread_ts":"1628683626.233600","ts":"1628683989.234300","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"4af2ad8a-6edc-4d43-8661-b446a6b34738","blocks":[{"type":"rich_text","block_id":"5No","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To communicate the meaning strongly, just use a name:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn has-some-content? [coll]\n  (some some? coll))"}]}]}],"user":"U2FRKM4TW","text":"To communicate the meaning strongly, just use a name:\n```(defn has-some-content? [coll]\n  (some some? coll))```"}
{"type":"message","thread_ts":"1628683626.233600","ts":"1628684006.234500","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"ad3dd3b3-0bd2-4c75-ac2a-f4a8c6498046","blocks":[{"type":"rich_text","block_id":"3\/ub","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, right, there's also "},{"type":"text","text":"not-every?","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U2FRKM4TW","text":"Oh, right, there's also `not-every?`."}
{"type":"message","thread_ts":"1628683626.233600","ts":"1628684142.234700","parent_user_id":"U4P4NREBY","team":"T03RZGPFR","client_msg_id":"e4911559-c22e-4813-8fd4-40fc3a9f6267","blocks":[{"type":"rich_text","block_id":"mdXB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, I keep forgetting about the "},{"type":"text","text":"not-","style":{"code":true}},{"type":"text","text":"  versions of most of the core functions too, but your reply reminded me of it "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U4P4NREBY","text":"yeah, I keep forgetting about the `not-`  versions of most of the core functions too, but your reply reminded me of it :slightly_smiling_face:"}
{"subscribed":false,"reply_users":["UCYS6T599","U066TMAKS","U020B04QPGC"],"type":"message","thread_ts":"1628676658.229300","reply_users_count":3,"edited":{"user":"U066TMAKS","ts":"1628676812.000000"},"ts":"1628676658.229300","team":"T03RZGPFR","client_msg_id":"5f53a8fa-5032-485e-8fc6-62251ef119c6","blocks":[{"type":"rich_text","block_id":"JMiC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"algorithm question for you guys, let's say i have 15 of each type of playing card\u00a0(15 ace of spades, 15 two of hearts, ... etc) and I want to make packs of 3 without any pack having repeating cards. in general, i want to take a collection of collections of varying length and return a collection of collection of length N where the inner collections are non-repeating combinations of the cards. normally I'd just "},{"type":"text","text":"(->> card-types (map (partial repeat 15)) shuffle (partition 3))","style":{"code":true}},{"type":"text","text":" and call it a day but the non-repeating requirement makes it more complicated."}]}]}],"is_locked":false,"user":"U066TMAKS","reply_count":9,"latest_reply":"1628718779.289700","text":"algorithm question for you guys, let's say i have 15 of each type of playing card\u00a0(15 ace of spades, 15 two of hearts, ... etc) and I want to make packs of 3 without any pack having repeating cards. in general, i want to take a collection of collections of varying length and return a collection of collection of length N where the inner collections are non-repeating combinations of the cards. normally I'd just `(-&gt;&gt; card-types (map (partial repeat 15)) shuffle (partition 3))` and call it a day but the non-repeating requirement makes it more complicated."}
{"subscribed":false,"reply_users":["UCYS6T599","U066TMAKS","U020B04QPGC"],"type":"message","thread_ts":"1628676658.229300","reply_users_count":3,"edited":{"user":"U066TMAKS","ts":"1628676812.000000"},"ts":"1628676658.229300","team":"T03RZGPFR","client_msg_id":"5f53a8fa-5032-485e-8fc6-62251ef119c6","blocks":[{"type":"rich_text","block_id":"JMiC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"algorithm question for you guys, let's say i have 15 of each type of playing card\u00a0(15 ace of spades, 15 two of hearts, ... etc) and I want to make packs of 3 without any pack having repeating cards. in general, i want to take a collection of collections of varying length and return a collection of collection of length N where the inner collections are non-repeating combinations of the cards. normally I'd just "},{"type":"text","text":"(->> card-types (map (partial repeat 15)) shuffle (partition 3))","style":{"code":true}},{"type":"text","text":" and call it a day but the non-repeating requirement makes it more complicated."}]}]}],"is_locked":false,"user":"U066TMAKS","reply_count":9,"latest_reply":"1628718779.289700","text":"algorithm question for you guys, let's say i have 15 of each type of playing card\u00a0(15 ace of spades, 15 two of hearts, ... etc) and I want to make packs of 3 without any pack having repeating cards. in general, i want to take a collection of collections of varying length and return a collection of collection of length N where the inner collections are non-repeating combinations of the cards. normally I'd just `(-&gt;&gt; card-types (map (partial repeat 15)) shuffle (partition 3))` and call it a day but the non-repeating requirement makes it more complicated."}
{"type":"message","thread_ts":"1628676658.229300","ts":"1628677633.230400","parent_user_id":"U066TMAKS","team":"T03RZGPFR","client_msg_id":"e7b6bdaa-1dbe-4b60-90e4-7b0ffafbc8d8","blocks":[{"type":"rich_text","block_id":"zs\/T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps take a look at "},{"type":"text","text":"clojure.math.combinatorics\/combinations","style":{"code":true}},{"type":"text","text":" or perhaps other functions from that library."}]}]}],"user":"UCYS6T599","text":"Perhaps take a look at `clojure.math.combinatorics\/combinations` or perhaps other functions from that library."}
{"type":"message","thread_ts":"1628676658.229300","ts":"1628677828.230800","parent_user_id":"U066TMAKS","team":"T03RZGPFR","client_msg_id":"1b034e0f-3b32-4e13-98f3-db7e2b8609db","blocks":[{"type":"rich_text","block_id":"lAjY7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure if you can just generate all the combinations and then shuffle those - depends on the parameters to your problem."}]}]}],"user":"UCYS6T599","text":"Not sure if you can just generate all the combinations and then shuffle those - depends on the parameters to your problem."}
{"type":"message","thread_ts":"1628676658.229300","ts":"1628678003.231000","parent_user_id":"U066TMAKS","team":"T03RZGPFR","client_msg_id":"906e7139-0910-4b64-8066-a0c53b0dfdce","blocks":[{"type":"rich_text","block_id":"IQx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps something like the following could work:"}]}]}],"user":"UCYS6T599","text":"Perhaps something like the following could work:"}
{"type":"message","thread_ts":"1628676658.229300","ts":"1628678225.231200","parent_user_id":"U066TMAKS","team":"T03RZGPFR","client_msg_id":"5ff3286f-0692-4dd5-8629-3ed344c217f9","blocks":[{"type":"rich_text","block_id":"z0TbT","elements":[{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pick a random combination of cards (that you still have in reserve)."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Return the hand, do whatever book keeping is necessary: decrease counts of cards in the chosen hand etc."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Loop if more hands need to be chosen."}]}],"style":"ordered","indent":0,"offset":0}]}],"user":"UCYS6T599","text":"1. Pick a random combination of cards (that you still have in reserve).\n2. Return the hand, do whatever book keeping is necessary: decrease counts of cards in the chosen hand etc.\n3. Loop if more hands need to be chosen."}
{"type":"message","thread_ts":"1628676658.229300","ts":"1628678958.231500","parent_user_id":"U066TMAKS","team":"T03RZGPFR","client_msg_id":"5466bb9b-3e9b-4374-a57c-c1f59d347c4e","blocks":[{"type":"rich_text","block_id":"+lrW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks! I have an iterative solution that's similar to what you suggested but it doesn't always result in a solution if you end up with one bucket full and the others empty. my hack is to retry until it runs. wondering if there's a more elegant way to solve it, perhaps framing it as a graph traversal problem?"}]}]}],"user":"U066TMAKS","text":"thanks! I have an iterative solution that's similar to what you suggested but it doesn't always result in a solution if you end up with one bucket full and the others empty. my hack is to retry until it runs. wondering if there's a more elegant way to solve it, perhaps framing it as a graph traversal problem?"}
{"type":"message","thread_ts":"1628676658.229300","ts":"1628682548.231700","parent_user_id":"U066TMAKS","team":"T03RZGPFR","client_msg_id":"a2079563-5350-4d64-bf4a-fff4a51b6b7e","blocks":[{"type":"rich_text","block_id":"fGYp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps create empty packs first, then deal all your aces to random packs that still need cards, then all the twos etc... when you are dealing, you ensure you don't deal two aces to the same pack."}]}]}],"user":"U020B04QPGC","text":"Perhaps create empty packs first, then deal all your aces to random packs that still need cards, then all the twos etc... when you are dealing, you ensure you don't deal two aces to the same pack."}
{"type":"message","thread_ts":"1628676658.229300","ts":"1628687533.246700","parent_user_id":"U066TMAKS","team":"T03RZGPFR","client_msg_id":"a7cde433-286a-4375-ac3a-11d6732777ce","blocks":[{"type":"rich_text","block_id":"hKS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, that's a great idea! reversal of what I've been doing"}]}]}],"user":"U066TMAKS","text":"oh, that's a great idea! reversal of what I've been doing"}
{"type":"message","thread_ts":"1628676658.229300","ts":"1628718292.289500","parent_user_id":"U066TMAKS","team":"T03RZGPFR","client_msg_id":"c1b1c9c8-f04e-4e9d-bb2b-fa8cf1db712c","blocks":[{"type":"rich_text","block_id":"55AR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just to follow up, here's what I ended up with "},{"type":"link","url":"https:\/\/gist.github.com\/yayitswei\/d44ae8cba31544532285bf49295b5950"}]}]}],"user":"U066TMAKS","text":"just to follow up, here's what I ended up with <https:\/\/gist.github.com\/yayitswei\/d44ae8cba31544532285bf49295b5950>"}
{"type":"message","thread_ts":"1628676658.229300","ts":"1628718779.289700","parent_user_id":"U066TMAKS","team":"T03RZGPFR","client_msg_id":"3df629b8-d841-44a0-a4a8-1137f64814df","blocks":[{"type":"rich_text","block_id":"oX+2r","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn deal-hands [n decks]\n  (loop [left (mapv shuffle decks)\n         results []]\n    (if (empty? left) results\n        (recur (->> (map pop left) (remove empty?))\n               (concat results (->> (map peek left) shuffle (partition n)))))))"}]}]}],"user":"U066TMAKS","text":"```(defn deal-hands [n decks]\n  (loop [left (mapv shuffle decks)\n         results []]\n    (if (empty? left) results\n        (recur (-&gt;&gt; (map pop left) (remove empty?))\n               (concat results (-&gt;&gt; (map peek left) shuffle (partition n)))))))```"}
{"subscribed":false,"reply_users":["U2FRKM4TW","U010VP3UY9X"],"type":"message","display_as_bot":false,"thread_ts":"1628673390.227600","reply_users_count":2,"edited":{"user":"U010VP3UY9X","ts":"1628673563.000000"},"ts":"1628673390.227600","files":[{"thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B7GD0LRF-60ad4350f3\/screenshot_2021-08-11_at_11.15.34_80.png","thumb_360_h":269,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B7GD0LRF-60ad4350f3\/screenshot_2021-08-11_at_11.15.34_160.png","original_w":462,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02B7GD0LRF\/download\/screenshot_2021-08-11_at_11.15.34.png","name":"Screenshot 2021-08-11 at 11.15.34.png","permalink":"https:\/\/clojurians.slack.com\/files\/U010VP3UY9X\/F02B7GD0LRF\/screenshot_2021-08-11_at_11.15.34.png","username":"","mode":"hosted","created":1628673380,"display_as_bot":false,"mimetype":"image\/png","size":110566,"title":"Screenshot 2021-08-11 at 11.15.34.png","media_display_type":"unknown","is_public":true,"id":"F02B7GD0LRF","original_h":345,"external_type":"","thumb_360_w":360,"thumb_tiny":"AwAjADC2eppKD1NFTZCHDNFN5pRRZALRRRRZANPU0UHqaKLAKP8APNHFA5paLAFFFFFgEPU0lKepoFK4BilxRRRcAxRRRRcD\/9k=","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B7GD0LRF-60ad4350f3\/screenshot_2021-08-11_at_11.15.34_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02B7GD0LRF\/screenshot_2021-08-11_at_11.15.34.png","pretty_type":"PNG","has_rich_preview":false,"timestamp":1628673380,"user":"U010VP3UY9X","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B7GD0LRF-60ad4350f3\/screenshot_2021-08-11_at_11.15.34_64.png","permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02B7GD0LRF-a699539aa3"}],"blocks":[{"type":"rich_text","block_id":"gFHF","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U04V4KLKC"},{"type":"text","text":" I used your trick of naming methods like the following so that the profiler will include the name rather than just fn-some-random-number\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmethod -canonicalize-type 'and method-canonicalize-type-and\n  [type-designator nf]\n  (find-simplifier type-designator\n                   (combination-simplifiers nf)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It works well.  Thanks for the good advise.\nI wonder whether you might have a trick for the following case.\nI have some globally defined functions, and I have an array of them.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn combination-simplifiers [nf]\n  [conversion-C1\n   conversion-C2\n   conversion-C3\n   conversion-C4\n   conversion-C5\n   conversion-C6\n   (fn conversion-C7-nf [td] (conversion-C7 td nf))\n   conversion-C9\n   conversion-C11\n   conversion-C12\n   conversion-C13\n   conversion-C14\n   conversion-C15\n   conversion-C16\n   conversion-D1\n   conversion-D3\n   conversion-C8\n   conversion-C10\n   conversion-C98\n   (fn conversion-C99-nf [td] (conversion-C99 td nf))])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"find-simplifier","style":{"code":true}},{"type":"text","text":" ( "},{"type":"link","url":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/1126a85b16dcff55824f50840e8c43c80af93a7a\/src\/clojure_rte\/util.clj#L201","text":"link here"},{"type":"text","text":") is just a function which iterates over the array given as second argument and calls the functions until some application-specific condition is met.  Unfortunately, these functions seem to appear in the profiling as "},{"type":"text","text":"fn-","style":{"code":true}},{"type":"text","text":" followed by some random number.  That's bizarre as the function have real names."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":5,"upload":false,"latest_reply":"1628756569.302300","text":"<@U04V4KLKC> I used your trick of naming methods like the following so that the profiler will include the name rather than just fn-some-random-number\n```(defmethod -canonicalize-type 'and method-canonicalize-type-and\n  [type-designator nf]\n  (find-simplifier type-designator\n                   (combination-simplifiers nf)))```\nIt works well.  Thanks for the good advise.\nI wonder whether you might have a trick for the following case.\nI have some globally defined functions, and I have an array of them.\n```(defn combination-simplifiers [nf]\n  [conversion-C1\n   conversion-C2\n   conversion-C3\n   conversion-C4\n   conversion-C5\n   conversion-C6\n   (fn conversion-C7-nf [td] (conversion-C7 td nf))\n   conversion-C9\n   conversion-C11\n   conversion-C12\n   conversion-C13\n   conversion-C14\n   conversion-C15\n   conversion-C16\n   conversion-D1\n   conversion-D3\n   conversion-C8\n   conversion-C10\n   conversion-C98\n   (fn conversion-C99-nf [td] (conversion-C99 td nf))])```\n`find-simplifier` ( <https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/1126a85b16dcff55824f50840e8c43c80af93a7a\/src\/clojure_rte\/util.clj#L201|link here>) is just a function which iterates over the array given as second argument and calls the functions until some application-specific condition is met.  Unfortunately, these functions seem to appear in the profiling as `fn-` followed by some random number.  That's bizarre as the function have real names."}
{"subscribed":false,"reply_users":["U2FRKM4TW","U010VP3UY9X"],"type":"message","display_as_bot":false,"thread_ts":"1628673390.227600","reply_users_count":2,"edited":{"user":"U010VP3UY9X","ts":"1628673563.000000"},"ts":"1628673390.227600","files":[{"thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B7GD0LRF-60ad4350f3\/screenshot_2021-08-11_at_11.15.34_80.png","thumb_360_h":269,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B7GD0LRF-60ad4350f3\/screenshot_2021-08-11_at_11.15.34_160.png","original_w":462,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02B7GD0LRF\/download\/screenshot_2021-08-11_at_11.15.34.png","name":"Screenshot 2021-08-11 at 11.15.34.png","permalink":"https:\/\/clojurians.slack.com\/files\/U010VP3UY9X\/F02B7GD0LRF\/screenshot_2021-08-11_at_11.15.34.png","username":"","mode":"hosted","created":1628673380,"display_as_bot":false,"mimetype":"image\/png","size":110566,"title":"Screenshot 2021-08-11 at 11.15.34.png","media_display_type":"unknown","is_public":true,"id":"F02B7GD0LRF","original_h":345,"external_type":"","thumb_360_w":360,"thumb_tiny":"AwAjADC2eppKD1NFTZCHDNFN5pRRZALRRRRZANPU0UHqaKLAKP8APNHFA5paLAFFFFFgEPU0lKepoFK4BilxRRRcAxRRRRcD\/9k=","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B7GD0LRF-60ad4350f3\/screenshot_2021-08-11_at_11.15.34_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02B7GD0LRF\/screenshot_2021-08-11_at_11.15.34.png","pretty_type":"PNG","has_rich_preview":false,"timestamp":1628673380,"user":"U010VP3UY9X","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02B7GD0LRF-60ad4350f3\/screenshot_2021-08-11_at_11.15.34_64.png","permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02B7GD0LRF-a699539aa3"}],"blocks":[{"type":"rich_text","block_id":"gFHF","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U04V4KLKC"},{"type":"text","text":" I used your trick of naming methods like the following so that the profiler will include the name rather than just fn-some-random-number\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defmethod -canonicalize-type 'and method-canonicalize-type-and\n  [type-designator nf]\n  (find-simplifier type-designator\n                   (combination-simplifiers nf)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It works well.  Thanks for the good advise.\nI wonder whether you might have a trick for the following case.\nI have some globally defined functions, and I have an array of them.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(defn combination-simplifiers [nf]\n  [conversion-C1\n   conversion-C2\n   conversion-C3\n   conversion-C4\n   conversion-C5\n   conversion-C6\n   (fn conversion-C7-nf [td] (conversion-C7 td nf))\n   conversion-C9\n   conversion-C11\n   conversion-C12\n   conversion-C13\n   conversion-C14\n   conversion-C15\n   conversion-C16\n   conversion-D1\n   conversion-D3\n   conversion-C8\n   conversion-C10\n   conversion-C98\n   (fn conversion-C99-nf [td] (conversion-C99 td nf))])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"find-simplifier","style":{"code":true}},{"type":"text","text":" ( "},{"type":"link","url":"https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/1126a85b16dcff55824f50840e8c43c80af93a7a\/src\/clojure_rte\/util.clj#L201","text":"link here"},{"type":"text","text":") is just a function which iterates over the array given as second argument and calls the functions until some application-specific condition is met.  Unfortunately, these functions seem to appear in the profiling as "},{"type":"text","text":"fn-","style":{"code":true}},{"type":"text","text":" followed by some random number.  That's bizarre as the function have real names."}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":5,"upload":false,"latest_reply":"1628756569.302300","text":"<@U04V4KLKC> I used your trick of naming methods like the following so that the profiler will include the name rather than just fn-some-random-number\n```(defmethod -canonicalize-type 'and method-canonicalize-type-and\n  [type-designator nf]\n  (find-simplifier type-designator\n                   (combination-simplifiers nf)))```\nIt works well.  Thanks for the good advise.\nI wonder whether you might have a trick for the following case.\nI have some globally defined functions, and I have an array of them.\n```(defn combination-simplifiers [nf]\n  [conversion-C1\n   conversion-C2\n   conversion-C3\n   conversion-C4\n   conversion-C5\n   conversion-C6\n   (fn conversion-C7-nf [td] (conversion-C7 td nf))\n   conversion-C9\n   conversion-C11\n   conversion-C12\n   conversion-C13\n   conversion-C14\n   conversion-C15\n   conversion-C16\n   conversion-D1\n   conversion-D3\n   conversion-C8\n   conversion-C10\n   conversion-C98\n   (fn conversion-C99-nf [td] (conversion-C99 td nf))])```\n`find-simplifier` ( <https:\/\/gitlab.lrde.epita.fr\/jnewton\/clojure-rte\/-\/blob\/1126a85b16dcff55824f50840e8c43c80af93a7a\/src\/clojure_rte\/util.clj#L201|link here>) is just a function which iterates over the array given as second argument and calls the functions until some application-specific condition is met.  Unfortunately, these functions seem to appear in the profiling as `fn-` followed by some random number.  That's bizarre as the function have real names."}
{"type":"message","thread_ts":"1628673390.227600","ts":"1628677649.230600","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a4514075-49d4-4931-b89d-3016440419c0","blocks":[{"type":"rich_text","block_id":"ugdHt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your "},{"type":"text","text":"conversion-*","style":{"code":true}},{"type":"text","text":" functions seem to also be multimethods. Is the same naming approach used on them, like "},{"type":"text","text":"(defmethod conversion-D1 'and method-conversion-D1-and ...)","style":{"code":true}},{"type":"text","text":"?"}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"+1::skin-tone-2","users":["U010VP3UY9X"],"count":1}],"text":"Your `conversion-*` functions seem to also be multimethods. Is the same naming approach used on them, like `(defmethod conversion-D1 'and method-conversion-D1-and ...)`?"}
{"type":"message","thread_ts":"1628673390.227600","ts":"1628685167.236800","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"1e210670-e650-488b-a61a-97a75f193f0a","blocks":[{"type":"rich_text","block_id":"BHaH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"good catch.  indeed some but not all my conversion-* functions are methods.  most are defined with "},{"type":"text","text":"defn","style":{"code":true}},{"type":"text","text":"."}]}]}],"user":"U010VP3UY9X","text":"good catch.  indeed some but not all my conversion-* functions are methods.  most are defined with `defn`."}
{"type":"message","thread_ts":"1628673390.227600","ts":"1628685183.237000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"e1cd5482-c811-4b8f-8567-3d36ae84f859","blocks":[{"type":"rich_text","block_id":"BfG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"anyway, I'll apply the naming to those that are methods and see what happens."}]}]}],"user":"U010VP3UY9X","text":"anyway, I'll apply the naming to those that are methods and see what happens."}
{"type":"message","display_as_bot":false,"thread_ts":"1628673390.227600","ts":"1628685473.237200","parent_user_id":"U010VP3UY9X","files":[{"thumb_80":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02ANPDR6SJ-7229b921bc\/screenshot_2021-08-11_at_14.37.34_80.png","thumb_360_h":191,"editable":false,"is_external":false,"thumb_160":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02ANPDR6SJ-7229b921bc\/screenshot_2021-08-11_at_14.37.34_160.png","original_w":434,"is_starred":false,"url_private_download":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02ANPDR6SJ\/download\/screenshot_2021-08-11_at_14.37.34.png","name":"Screenshot 2021-08-11 at 14.37.34.png","permalink":"https:\/\/clojurians.slack.com\/files\/U010VP3UY9X\/F02ANPDR6SJ\/screenshot_2021-08-11_at_14.37.34.png","username":"","mode":"hosted","created":1628685464,"display_as_bot":false,"mimetype":"image\/png","size":80425,"title":"Screenshot 2021-08-11 at 14.37.34.png","media_display_type":"unknown","is_public":true,"id":"F02ANPDR6SJ","original_h":230,"external_type":"","thumb_360_w":360,"thumb_tiny":"AwAZADC2fvGkpT940lTZiF\/D9aPw\/Wj8qM+4oswFopM+4peaLMBD940lKfvGkpXAUUufrSClo5vIAz9aM0UUc3kB\/9k=","public_url_shared":false,"thumb_360":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02ANPDR6SJ-7229b921bc\/screenshot_2021-08-11_at_14.37.34_360.png","filetype":"png","url_private":"https:\/\/files.slack.com\/files-pri\/T03RZGPFR-F02ANPDR6SJ\/screenshot_2021-08-11_at_14.37.34.png","pretty_type":"PNG","has_rich_preview":false,"timestamp":1628685464,"user":"U010VP3UY9X","thumb_64":"https:\/\/files.slack.com\/files-tmb\/T03RZGPFR-F02ANPDR6SJ-7229b921bc\/screenshot_2021-08-11_at_14.37.34_64.png","permalink_public":"https:\/\/slack-files.com\/T03RZGPFR-F02ANPDR6SJ-97fe9fb3cc"}],"blocks":[{"type":"rich_text","block_id":"baUcY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yup, that's an improvement"}]}]}],"user":"U010VP3UY9X","reactions":[{"name":"+1","users":["U2FRKM4TW"],"count":1}],"upload":false,"text":"yup, that's an improvement"}
{"type":"message","thread_ts":"1628673390.227600","ts":"1628756569.302300","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"17c39a60-6695-44f1-adf4-b5e81a123f62","blocks":[{"type":"rich_text","block_id":"RGr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW I discovered that I can indeed profile allocation.  Just use "},{"type":"text","text":"(prof\/start {:event :alloc})","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"(prof\/start {})","style":{"code":true}},{"type":"text","text":".   Some other tricks "},{"type":"link","url":"http:\/\/clojure-goes-fast.com\/blog\/clj-async-profiler-tips\/","text":"can be found here"},{"type":"text","text":"."}]}]}],"user":"U010VP3UY9X","text":"BTW I discovered that I can indeed profile allocation.  Just use `(prof\/start {:event :alloc})` instead of `(prof\/start {})`.   Some other tricks <http:\/\/clojure-goes-fast.com\/blog\/clj-async-profiler-tips\/|can be found here>."}
{"subscribed":false,"reply_users":["U2FRKM4TW"],"type":"message","thread_ts":"1628671967.224100","reply_users_count":1,"ts":"1628671967.224100","team":"T03RZGPFR","client_msg_id":"09f579c3-c857-43a1-b4d6-bc97af7d64f9","blocks":[{"type":"rich_text","block_id":"bw7W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What I'd really like to do is return the value of finally, but that doesn't appear to be a feature of "},{"type":"text","text":"try","style":{"code":true}}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":2,"latest_reply":"1628677166.230200","text":"What I'd really like to do is return the value of finally, but that doesn't appear to be a feature of `try`"}
{"subscribed":false,"reply_users":["U2FRKM4TW"],"type":"message","thread_ts":"1628671967.224100","reply_users_count":1,"ts":"1628671967.224100","team":"T03RZGPFR","client_msg_id":"09f579c3-c857-43a1-b4d6-bc97af7d64f9","blocks":[{"type":"rich_text","block_id":"bw7W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What I'd really like to do is return the value of finally, but that doesn't appear to be a feature of "},{"type":"text","text":"try","style":{"code":true}}]}]}],"is_locked":false,"user":"U010VP3UY9X","reply_count":2,"latest_reply":"1628677166.230200","text":"What I'd really like to do is return the value of finally, but that doesn't appear to be a feature of `try`"}
{"type":"message","thread_ts":"1628671967.224100","ts":"1628677110.230000","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"3e3a7fad-3174-4fbe-99fd-8039055b3d6b","blocks":[{"type":"rich_text","block_id":"rxP9+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A proper documentation for "},{"type":"text","text":"try","style":{"code":true}},{"type":"text","text":": "},{"type":"link","url":"https:\/\/clojure.org\/reference\/special_forms#try"}]}]}],"user":"U2FRKM4TW","reactions":[{"name":"+1::skin-tone-2","users":["U010VP3UY9X"],"count":1}],"text":"A proper documentation for `try`: <https:\/\/clojure.org\/reference\/special_forms#try>"}
{"type":"message","thread_ts":"1628671967.224100","ts":"1628677166.230200","parent_user_id":"U010VP3UY9X","team":"T03RZGPFR","client_msg_id":"a97931ae-5cbe-47a4-aa08-2e039e73f49c","blocks":[{"type":"rich_text","block_id":"Ttoi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And you're correct, you can return something only from "},{"type":"text","text":"try","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"catch","style":{"code":true}},{"type":"text","text":".\nyAnd you're correct,"}]}]}],"user":"U2FRKM4TW","text":"And you're correct, you can return something only from `try` or `catch`.\nyAnd you're correct,"}
{"client_msg_id":"8aa8fe59-0299-4974-b85c-5947f95645eb","type":"message","text":"question about `try\/catch\/finally`.  The <https:\/\/clojuredocs.org\/clojure.core\/try|documentation of try> seems to be missing a word in the first sentence.: What does \"the value of the last is returned\" ?","user":"U010VP3UY9X","ts":"1628671935.223500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"6oFJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"question about "},{"type":"text","text":"try\/catch\/finally","style":{"code":true}},{"type":"text","text":".  The "},{"type":"link","url":"https:\/\/clojuredocs.org\/clojure.core\/try","text":"documentation of try"},{"type":"text","text":" seems to be missing a word in the first sentence.: What does \"the value of the last is returned\" ?"}]}]}]}
{"client_msg_id":"c327496c-74f6-48e9-bfa4-1f1f6ed9f6cc","type":"message","text":"it should be possible with the help of _specter selected? fn_\n```(let [apath (spec-form-&gt;apath (s\/form myspec))]\n    (specter\/select apath\n                    mydata))```","user":"U02954X0GM8","ts":"1628643237.209900","team":"T03RZGPFR","edited":{"user":"U02954X0GM8","ts":"1628643441.000000"},"blocks":[{"type":"rich_text","block_id":"Zz33W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it should be possible with the help of "},{"type":"text","text":"specter selected? fn","style":{"italic":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(let [apath (spec-form->apath (s\/form myspec))]\n    (specter\/select apath\n                    mydata))"}]}]}]}
{"client_msg_id":"be3c8be5-daff-4db8-a6cb-b052448aab67","type":"message","text":"i'm not sure if it makes sense","user":"U02954X0GM8","ts":"1628640243.208500","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"4Po","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i'm not sure if it makes sense"}]}]}]}
{"client_msg_id":"e2ec6913-4f57-4138-b423-c2ccf9614b17","type":"message","text":"no i meant in a more general form, where match would walk the data and either keep or drop that point based on conformity to spec in a greedy manner","user":"U02954X0GM8","ts":"1628640047.208300","team":"T03RZGPFR","blocks":[{"type":"rich_text","block_id":"7dHs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no i meant in a more general form, where match would walk the data and either keep or drop that point based on conformity to spec in a greedy manner"}]}]}]}
